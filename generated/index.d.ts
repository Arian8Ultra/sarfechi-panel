
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model admins
 * 
 */
export type admins = $Result.DefaultSelection<Prisma.$adminsPayload>
/**
 * Model cache
 * 
 */
export type cache = $Result.DefaultSelection<Prisma.$cachePayload>
/**
 * Model cache_locks
 * 
 */
export type cache_locks = $Result.DefaultSelection<Prisma.$cache_locksPayload>
/**
 * Model customer_subscriptions
 * 
 */
export type customer_subscriptions = $Result.DefaultSelection<Prisma.$customer_subscriptionsPayload>
/**
 * Model customers
 * 
 */
export type customers = $Result.DefaultSelection<Prisma.$customersPayload>
/**
 * Model failed_jobs
 * 
 */
export type failed_jobs = $Result.DefaultSelection<Prisma.$failed_jobsPayload>
/**
 * Model job_batches
 * 
 */
export type job_batches = $Result.DefaultSelection<Prisma.$job_batchesPayload>
/**
 * Model jobs
 * 
 */
export type jobs = $Result.DefaultSelection<Prisma.$jobsPayload>
/**
 * Model migrations
 * 
 */
export type migrations = $Result.DefaultSelection<Prisma.$migrationsPayload>
/**
 * Model model_has_permissions
 * 
 */
export type model_has_permissions = $Result.DefaultSelection<Prisma.$model_has_permissionsPayload>
/**
 * Model model_has_roles
 * 
 */
export type model_has_roles = $Result.DefaultSelection<Prisma.$model_has_rolesPayload>
/**
 * Model oauth_access_tokens
 * 
 */
export type oauth_access_tokens = $Result.DefaultSelection<Prisma.$oauth_access_tokensPayload>
/**
 * Model oauth_auth_codes
 * 
 */
export type oauth_auth_codes = $Result.DefaultSelection<Prisma.$oauth_auth_codesPayload>
/**
 * Model oauth_clients
 * 
 */
export type oauth_clients = $Result.DefaultSelection<Prisma.$oauth_clientsPayload>
/**
 * Model oauth_personal_access_clients
 * 
 */
export type oauth_personal_access_clients = $Result.DefaultSelection<Prisma.$oauth_personal_access_clientsPayload>
/**
 * Model oauth_refresh_tokens
 * 
 */
export type oauth_refresh_tokens = $Result.DefaultSelection<Prisma.$oauth_refresh_tokensPayload>
/**
 * Model offer_categories
 * 
 */
export type offer_categories = $Result.DefaultSelection<Prisma.$offer_categoriesPayload>
/**
 * Model offers
 * 
 */
export type offers = $Result.DefaultSelection<Prisma.$offersPayload>
/**
 * Model orders
 * 
 */
export type orders = $Result.DefaultSelection<Prisma.$ordersPayload>
/**
 * Model otps
 * 
 */
export type otps = $Result.DefaultSelection<Prisma.$otpsPayload>
/**
 * Model payments
 * 
 */
export type payments = $Result.DefaultSelection<Prisma.$paymentsPayload>
/**
 * Model permissions
 * 
 */
export type permissions = $Result.DefaultSelection<Prisma.$permissionsPayload>
/**
 * Model personal_access_tokens
 * 
 */
export type personal_access_tokens = $Result.DefaultSelection<Prisma.$personal_access_tokensPayload>
/**
 * Model provider_agents
 * 
 */
export type provider_agents = $Result.DefaultSelection<Prisma.$provider_agentsPayload>
/**
 * Model provider_offers
 * 
 */
export type provider_offers = $Result.DefaultSelection<Prisma.$provider_offersPayload>
/**
 * Model providers
 * 
 */
export type providers = $Result.DefaultSelection<Prisma.$providersPayload>
/**
 * Model provider_menu
 * 
 */
export type provider_menu = $Result.DefaultSelection<Prisma.$provider_menuPayload>
/**
 * Model provider_menu_items
 * 
 */
export type provider_menu_items = $Result.DefaultSelection<Prisma.$provider_menu_itemsPayload>
/**
 * Model provider_menu_categories
 * 
 */
export type provider_menu_categories = $Result.DefaultSelection<Prisma.$provider_menu_categoriesPayload>
/**
 * Model role_has_permissions
 * 
 */
export type role_has_permissions = $Result.DefaultSelection<Prisma.$role_has_permissionsPayload>
/**
 * Model roles
 * 
 */
export type roles = $Result.DefaultSelection<Prisma.$rolesPayload>
/**
 * Model subscription_plan_offers
 * 
 */
export type subscription_plan_offers = $Result.DefaultSelection<Prisma.$subscription_plan_offersPayload>
/**
 * Model subscription_plans
 * 
 */
export type subscription_plans = $Result.DefaultSelection<Prisma.$subscription_plansPayload>
/**
 * Model subscription_usages
 * 
 */
export type subscription_usages = $Result.DefaultSelection<Prisma.$subscription_usagesPayload>

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Admins
 * const admins = await prisma.admins.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Admins
   * const admins = await prisma.admins.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.admins`: Exposes CRUD operations for the **admins** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Admins
    * const admins = await prisma.admins.findMany()
    * ```
    */
  get admins(): Prisma.adminsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.cache`: Exposes CRUD operations for the **cache** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Caches
    * const caches = await prisma.cache.findMany()
    * ```
    */
  get cache(): Prisma.cacheDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.cache_locks`: Exposes CRUD operations for the **cache_locks** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Cache_locks
    * const cache_locks = await prisma.cache_locks.findMany()
    * ```
    */
  get cache_locks(): Prisma.cache_locksDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.customer_subscriptions`: Exposes CRUD operations for the **customer_subscriptions** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Customer_subscriptions
    * const customer_subscriptions = await prisma.customer_subscriptions.findMany()
    * ```
    */
  get customer_subscriptions(): Prisma.customer_subscriptionsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.customers`: Exposes CRUD operations for the **customers** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Customers
    * const customers = await prisma.customers.findMany()
    * ```
    */
  get customers(): Prisma.customersDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.failed_jobs`: Exposes CRUD operations for the **failed_jobs** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Failed_jobs
    * const failed_jobs = await prisma.failed_jobs.findMany()
    * ```
    */
  get failed_jobs(): Prisma.failed_jobsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.job_batches`: Exposes CRUD operations for the **job_batches** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Job_batches
    * const job_batches = await prisma.job_batches.findMany()
    * ```
    */
  get job_batches(): Prisma.job_batchesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.jobs`: Exposes CRUD operations for the **jobs** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Jobs
    * const jobs = await prisma.jobs.findMany()
    * ```
    */
  get jobs(): Prisma.jobsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.migrations`: Exposes CRUD operations for the **migrations** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Migrations
    * const migrations = await prisma.migrations.findMany()
    * ```
    */
  get migrations(): Prisma.migrationsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.model_has_permissions`: Exposes CRUD operations for the **model_has_permissions** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Model_has_permissions
    * const model_has_permissions = await prisma.model_has_permissions.findMany()
    * ```
    */
  get model_has_permissions(): Prisma.model_has_permissionsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.model_has_roles`: Exposes CRUD operations for the **model_has_roles** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Model_has_roles
    * const model_has_roles = await prisma.model_has_roles.findMany()
    * ```
    */
  get model_has_roles(): Prisma.model_has_rolesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.oauth_access_tokens`: Exposes CRUD operations for the **oauth_access_tokens** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Oauth_access_tokens
    * const oauth_access_tokens = await prisma.oauth_access_tokens.findMany()
    * ```
    */
  get oauth_access_tokens(): Prisma.oauth_access_tokensDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.oauth_auth_codes`: Exposes CRUD operations for the **oauth_auth_codes** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Oauth_auth_codes
    * const oauth_auth_codes = await prisma.oauth_auth_codes.findMany()
    * ```
    */
  get oauth_auth_codes(): Prisma.oauth_auth_codesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.oauth_clients`: Exposes CRUD operations for the **oauth_clients** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Oauth_clients
    * const oauth_clients = await prisma.oauth_clients.findMany()
    * ```
    */
  get oauth_clients(): Prisma.oauth_clientsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.oauth_personal_access_clients`: Exposes CRUD operations for the **oauth_personal_access_clients** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Oauth_personal_access_clients
    * const oauth_personal_access_clients = await prisma.oauth_personal_access_clients.findMany()
    * ```
    */
  get oauth_personal_access_clients(): Prisma.oauth_personal_access_clientsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.oauth_refresh_tokens`: Exposes CRUD operations for the **oauth_refresh_tokens** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Oauth_refresh_tokens
    * const oauth_refresh_tokens = await prisma.oauth_refresh_tokens.findMany()
    * ```
    */
  get oauth_refresh_tokens(): Prisma.oauth_refresh_tokensDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.offer_categories`: Exposes CRUD operations for the **offer_categories** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Offer_categories
    * const offer_categories = await prisma.offer_categories.findMany()
    * ```
    */
  get offer_categories(): Prisma.offer_categoriesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.offers`: Exposes CRUD operations for the **offers** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Offers
    * const offers = await prisma.offers.findMany()
    * ```
    */
  get offers(): Prisma.offersDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.orders`: Exposes CRUD operations for the **orders** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Orders
    * const orders = await prisma.orders.findMany()
    * ```
    */
  get orders(): Prisma.ordersDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.otps`: Exposes CRUD operations for the **otps** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Otps
    * const otps = await prisma.otps.findMany()
    * ```
    */
  get otps(): Prisma.otpsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.payments`: Exposes CRUD operations for the **payments** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Payments
    * const payments = await prisma.payments.findMany()
    * ```
    */
  get payments(): Prisma.paymentsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.permissions`: Exposes CRUD operations for the **permissions** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Permissions
    * const permissions = await prisma.permissions.findMany()
    * ```
    */
  get permissions(): Prisma.permissionsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.personal_access_tokens`: Exposes CRUD operations for the **personal_access_tokens** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Personal_access_tokens
    * const personal_access_tokens = await prisma.personal_access_tokens.findMany()
    * ```
    */
  get personal_access_tokens(): Prisma.personal_access_tokensDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.provider_agents`: Exposes CRUD operations for the **provider_agents** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Provider_agents
    * const provider_agents = await prisma.provider_agents.findMany()
    * ```
    */
  get provider_agents(): Prisma.provider_agentsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.provider_offers`: Exposes CRUD operations for the **provider_offers** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Provider_offers
    * const provider_offers = await prisma.provider_offers.findMany()
    * ```
    */
  get provider_offers(): Prisma.provider_offersDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.providers`: Exposes CRUD operations for the **providers** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Providers
    * const providers = await prisma.providers.findMany()
    * ```
    */
  get providers(): Prisma.providersDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.provider_menu`: Exposes CRUD operations for the **provider_menu** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Provider_menus
    * const provider_menus = await prisma.provider_menu.findMany()
    * ```
    */
  get provider_menu(): Prisma.provider_menuDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.provider_menu_items`: Exposes CRUD operations for the **provider_menu_items** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Provider_menu_items
    * const provider_menu_items = await prisma.provider_menu_items.findMany()
    * ```
    */
  get provider_menu_items(): Prisma.provider_menu_itemsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.provider_menu_categories`: Exposes CRUD operations for the **provider_menu_categories** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Provider_menu_categories
    * const provider_menu_categories = await prisma.provider_menu_categories.findMany()
    * ```
    */
  get provider_menu_categories(): Prisma.provider_menu_categoriesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.role_has_permissions`: Exposes CRUD operations for the **role_has_permissions** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Role_has_permissions
    * const role_has_permissions = await prisma.role_has_permissions.findMany()
    * ```
    */
  get role_has_permissions(): Prisma.role_has_permissionsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.roles`: Exposes CRUD operations for the **roles** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Roles
    * const roles = await prisma.roles.findMany()
    * ```
    */
  get roles(): Prisma.rolesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.subscription_plan_offers`: Exposes CRUD operations for the **subscription_plan_offers** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Subscription_plan_offers
    * const subscription_plan_offers = await prisma.subscription_plan_offers.findMany()
    * ```
    */
  get subscription_plan_offers(): Prisma.subscription_plan_offersDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.subscription_plans`: Exposes CRUD operations for the **subscription_plans** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Subscription_plans
    * const subscription_plans = await prisma.subscription_plans.findMany()
    * ```
    */
  get subscription_plans(): Prisma.subscription_plansDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.subscription_usages`: Exposes CRUD operations for the **subscription_usages** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Subscription_usages
    * const subscription_usages = await prisma.subscription_usages.findMany()
    * ```
    */
  get subscription_usages(): Prisma.subscription_usagesDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.5.0
   * Query Engine version: 173f8d54f8d52e692c7e27e72a88314ec7aeff60
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    admins: 'admins',
    cache: 'cache',
    cache_locks: 'cache_locks',
    customer_subscriptions: 'customer_subscriptions',
    customers: 'customers',
    failed_jobs: 'failed_jobs',
    job_batches: 'job_batches',
    jobs: 'jobs',
    migrations: 'migrations',
    model_has_permissions: 'model_has_permissions',
    model_has_roles: 'model_has_roles',
    oauth_access_tokens: 'oauth_access_tokens',
    oauth_auth_codes: 'oauth_auth_codes',
    oauth_clients: 'oauth_clients',
    oauth_personal_access_clients: 'oauth_personal_access_clients',
    oauth_refresh_tokens: 'oauth_refresh_tokens',
    offer_categories: 'offer_categories',
    offers: 'offers',
    orders: 'orders',
    otps: 'otps',
    payments: 'payments',
    permissions: 'permissions',
    personal_access_tokens: 'personal_access_tokens',
    provider_agents: 'provider_agents',
    provider_offers: 'provider_offers',
    providers: 'providers',
    provider_menu: 'provider_menu',
    provider_menu_items: 'provider_menu_items',
    provider_menu_categories: 'provider_menu_categories',
    role_has_permissions: 'role_has_permissions',
    roles: 'roles',
    subscription_plan_offers: 'subscription_plan_offers',
    subscription_plans: 'subscription_plans',
    subscription_usages: 'subscription_usages'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "admins" | "cache" | "cache_locks" | "customer_subscriptions" | "customers" | "failed_jobs" | "job_batches" | "jobs" | "migrations" | "model_has_permissions" | "model_has_roles" | "oauth_access_tokens" | "oauth_auth_codes" | "oauth_clients" | "oauth_personal_access_clients" | "oauth_refresh_tokens" | "offer_categories" | "offers" | "orders" | "otps" | "payments" | "permissions" | "personal_access_tokens" | "provider_agents" | "provider_offers" | "providers" | "provider_menu" | "provider_menu_items" | "provider_menu_categories" | "role_has_permissions" | "roles" | "subscription_plan_offers" | "subscription_plans" | "subscription_usages"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      admins: {
        payload: Prisma.$adminsPayload<ExtArgs>
        fields: Prisma.adminsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.adminsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$adminsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.adminsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$adminsPayload>
          }
          findFirst: {
            args: Prisma.adminsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$adminsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.adminsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$adminsPayload>
          }
          findMany: {
            args: Prisma.adminsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$adminsPayload>[]
          }
          create: {
            args: Prisma.adminsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$adminsPayload>
          }
          createMany: {
            args: Prisma.adminsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.adminsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$adminsPayload>[]
          }
          delete: {
            args: Prisma.adminsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$adminsPayload>
          }
          update: {
            args: Prisma.adminsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$adminsPayload>
          }
          deleteMany: {
            args: Prisma.adminsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.adminsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.adminsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$adminsPayload>[]
          }
          upsert: {
            args: Prisma.adminsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$adminsPayload>
          }
          aggregate: {
            args: Prisma.AdminsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAdmins>
          }
          groupBy: {
            args: Prisma.adminsGroupByArgs<ExtArgs>
            result: $Utils.Optional<AdminsGroupByOutputType>[]
          }
          count: {
            args: Prisma.adminsCountArgs<ExtArgs>
            result: $Utils.Optional<AdminsCountAggregateOutputType> | number
          }
        }
      }
      cache: {
        payload: Prisma.$cachePayload<ExtArgs>
        fields: Prisma.cacheFieldRefs
        operations: {
          findUnique: {
            args: Prisma.cacheFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cachePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.cacheFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cachePayload>
          }
          findFirst: {
            args: Prisma.cacheFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cachePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.cacheFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cachePayload>
          }
          findMany: {
            args: Prisma.cacheFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cachePayload>[]
          }
          create: {
            args: Prisma.cacheCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cachePayload>
          }
          createMany: {
            args: Prisma.cacheCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.cacheCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cachePayload>[]
          }
          delete: {
            args: Prisma.cacheDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cachePayload>
          }
          update: {
            args: Prisma.cacheUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cachePayload>
          }
          deleteMany: {
            args: Prisma.cacheDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.cacheUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.cacheUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cachePayload>[]
          }
          upsert: {
            args: Prisma.cacheUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cachePayload>
          }
          aggregate: {
            args: Prisma.CacheAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCache>
          }
          groupBy: {
            args: Prisma.cacheGroupByArgs<ExtArgs>
            result: $Utils.Optional<CacheGroupByOutputType>[]
          }
          count: {
            args: Prisma.cacheCountArgs<ExtArgs>
            result: $Utils.Optional<CacheCountAggregateOutputType> | number
          }
        }
      }
      cache_locks: {
        payload: Prisma.$cache_locksPayload<ExtArgs>
        fields: Prisma.cache_locksFieldRefs
        operations: {
          findUnique: {
            args: Prisma.cache_locksFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cache_locksPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.cache_locksFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cache_locksPayload>
          }
          findFirst: {
            args: Prisma.cache_locksFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cache_locksPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.cache_locksFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cache_locksPayload>
          }
          findMany: {
            args: Prisma.cache_locksFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cache_locksPayload>[]
          }
          create: {
            args: Prisma.cache_locksCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cache_locksPayload>
          }
          createMany: {
            args: Prisma.cache_locksCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.cache_locksCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cache_locksPayload>[]
          }
          delete: {
            args: Prisma.cache_locksDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cache_locksPayload>
          }
          update: {
            args: Prisma.cache_locksUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cache_locksPayload>
          }
          deleteMany: {
            args: Prisma.cache_locksDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.cache_locksUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.cache_locksUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cache_locksPayload>[]
          }
          upsert: {
            args: Prisma.cache_locksUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cache_locksPayload>
          }
          aggregate: {
            args: Prisma.Cache_locksAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCache_locks>
          }
          groupBy: {
            args: Prisma.cache_locksGroupByArgs<ExtArgs>
            result: $Utils.Optional<Cache_locksGroupByOutputType>[]
          }
          count: {
            args: Prisma.cache_locksCountArgs<ExtArgs>
            result: $Utils.Optional<Cache_locksCountAggregateOutputType> | number
          }
        }
      }
      customer_subscriptions: {
        payload: Prisma.$customer_subscriptionsPayload<ExtArgs>
        fields: Prisma.customer_subscriptionsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.customer_subscriptionsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$customer_subscriptionsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.customer_subscriptionsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$customer_subscriptionsPayload>
          }
          findFirst: {
            args: Prisma.customer_subscriptionsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$customer_subscriptionsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.customer_subscriptionsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$customer_subscriptionsPayload>
          }
          findMany: {
            args: Prisma.customer_subscriptionsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$customer_subscriptionsPayload>[]
          }
          create: {
            args: Prisma.customer_subscriptionsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$customer_subscriptionsPayload>
          }
          createMany: {
            args: Prisma.customer_subscriptionsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.customer_subscriptionsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$customer_subscriptionsPayload>[]
          }
          delete: {
            args: Prisma.customer_subscriptionsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$customer_subscriptionsPayload>
          }
          update: {
            args: Prisma.customer_subscriptionsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$customer_subscriptionsPayload>
          }
          deleteMany: {
            args: Prisma.customer_subscriptionsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.customer_subscriptionsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.customer_subscriptionsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$customer_subscriptionsPayload>[]
          }
          upsert: {
            args: Prisma.customer_subscriptionsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$customer_subscriptionsPayload>
          }
          aggregate: {
            args: Prisma.Customer_subscriptionsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCustomer_subscriptions>
          }
          groupBy: {
            args: Prisma.customer_subscriptionsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Customer_subscriptionsGroupByOutputType>[]
          }
          count: {
            args: Prisma.customer_subscriptionsCountArgs<ExtArgs>
            result: $Utils.Optional<Customer_subscriptionsCountAggregateOutputType> | number
          }
        }
      }
      customers: {
        payload: Prisma.$customersPayload<ExtArgs>
        fields: Prisma.customersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.customersFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$customersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.customersFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$customersPayload>
          }
          findFirst: {
            args: Prisma.customersFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$customersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.customersFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$customersPayload>
          }
          findMany: {
            args: Prisma.customersFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$customersPayload>[]
          }
          create: {
            args: Prisma.customersCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$customersPayload>
          }
          createMany: {
            args: Prisma.customersCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.customersCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$customersPayload>[]
          }
          delete: {
            args: Prisma.customersDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$customersPayload>
          }
          update: {
            args: Prisma.customersUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$customersPayload>
          }
          deleteMany: {
            args: Prisma.customersDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.customersUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.customersUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$customersPayload>[]
          }
          upsert: {
            args: Prisma.customersUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$customersPayload>
          }
          aggregate: {
            args: Prisma.CustomersAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCustomers>
          }
          groupBy: {
            args: Prisma.customersGroupByArgs<ExtArgs>
            result: $Utils.Optional<CustomersGroupByOutputType>[]
          }
          count: {
            args: Prisma.customersCountArgs<ExtArgs>
            result: $Utils.Optional<CustomersCountAggregateOutputType> | number
          }
        }
      }
      failed_jobs: {
        payload: Prisma.$failed_jobsPayload<ExtArgs>
        fields: Prisma.failed_jobsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.failed_jobsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$failed_jobsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.failed_jobsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$failed_jobsPayload>
          }
          findFirst: {
            args: Prisma.failed_jobsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$failed_jobsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.failed_jobsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$failed_jobsPayload>
          }
          findMany: {
            args: Prisma.failed_jobsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$failed_jobsPayload>[]
          }
          create: {
            args: Prisma.failed_jobsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$failed_jobsPayload>
          }
          createMany: {
            args: Prisma.failed_jobsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.failed_jobsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$failed_jobsPayload>[]
          }
          delete: {
            args: Prisma.failed_jobsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$failed_jobsPayload>
          }
          update: {
            args: Prisma.failed_jobsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$failed_jobsPayload>
          }
          deleteMany: {
            args: Prisma.failed_jobsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.failed_jobsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.failed_jobsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$failed_jobsPayload>[]
          }
          upsert: {
            args: Prisma.failed_jobsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$failed_jobsPayload>
          }
          aggregate: {
            args: Prisma.Failed_jobsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFailed_jobs>
          }
          groupBy: {
            args: Prisma.failed_jobsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Failed_jobsGroupByOutputType>[]
          }
          count: {
            args: Prisma.failed_jobsCountArgs<ExtArgs>
            result: $Utils.Optional<Failed_jobsCountAggregateOutputType> | number
          }
        }
      }
      job_batches: {
        payload: Prisma.$job_batchesPayload<ExtArgs>
        fields: Prisma.job_batchesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.job_batchesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$job_batchesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.job_batchesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$job_batchesPayload>
          }
          findFirst: {
            args: Prisma.job_batchesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$job_batchesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.job_batchesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$job_batchesPayload>
          }
          findMany: {
            args: Prisma.job_batchesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$job_batchesPayload>[]
          }
          create: {
            args: Prisma.job_batchesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$job_batchesPayload>
          }
          createMany: {
            args: Prisma.job_batchesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.job_batchesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$job_batchesPayload>[]
          }
          delete: {
            args: Prisma.job_batchesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$job_batchesPayload>
          }
          update: {
            args: Prisma.job_batchesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$job_batchesPayload>
          }
          deleteMany: {
            args: Prisma.job_batchesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.job_batchesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.job_batchesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$job_batchesPayload>[]
          }
          upsert: {
            args: Prisma.job_batchesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$job_batchesPayload>
          }
          aggregate: {
            args: Prisma.Job_batchesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateJob_batches>
          }
          groupBy: {
            args: Prisma.job_batchesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Job_batchesGroupByOutputType>[]
          }
          count: {
            args: Prisma.job_batchesCountArgs<ExtArgs>
            result: $Utils.Optional<Job_batchesCountAggregateOutputType> | number
          }
        }
      }
      jobs: {
        payload: Prisma.$jobsPayload<ExtArgs>
        fields: Prisma.jobsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.jobsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$jobsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.jobsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$jobsPayload>
          }
          findFirst: {
            args: Prisma.jobsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$jobsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.jobsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$jobsPayload>
          }
          findMany: {
            args: Prisma.jobsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$jobsPayload>[]
          }
          create: {
            args: Prisma.jobsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$jobsPayload>
          }
          createMany: {
            args: Prisma.jobsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.jobsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$jobsPayload>[]
          }
          delete: {
            args: Prisma.jobsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$jobsPayload>
          }
          update: {
            args: Prisma.jobsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$jobsPayload>
          }
          deleteMany: {
            args: Prisma.jobsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.jobsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.jobsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$jobsPayload>[]
          }
          upsert: {
            args: Prisma.jobsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$jobsPayload>
          }
          aggregate: {
            args: Prisma.JobsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateJobs>
          }
          groupBy: {
            args: Prisma.jobsGroupByArgs<ExtArgs>
            result: $Utils.Optional<JobsGroupByOutputType>[]
          }
          count: {
            args: Prisma.jobsCountArgs<ExtArgs>
            result: $Utils.Optional<JobsCountAggregateOutputType> | number
          }
        }
      }
      migrations: {
        payload: Prisma.$migrationsPayload<ExtArgs>
        fields: Prisma.migrationsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.migrationsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$migrationsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.migrationsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$migrationsPayload>
          }
          findFirst: {
            args: Prisma.migrationsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$migrationsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.migrationsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$migrationsPayload>
          }
          findMany: {
            args: Prisma.migrationsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$migrationsPayload>[]
          }
          create: {
            args: Prisma.migrationsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$migrationsPayload>
          }
          createMany: {
            args: Prisma.migrationsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.migrationsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$migrationsPayload>[]
          }
          delete: {
            args: Prisma.migrationsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$migrationsPayload>
          }
          update: {
            args: Prisma.migrationsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$migrationsPayload>
          }
          deleteMany: {
            args: Prisma.migrationsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.migrationsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.migrationsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$migrationsPayload>[]
          }
          upsert: {
            args: Prisma.migrationsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$migrationsPayload>
          }
          aggregate: {
            args: Prisma.MigrationsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMigrations>
          }
          groupBy: {
            args: Prisma.migrationsGroupByArgs<ExtArgs>
            result: $Utils.Optional<MigrationsGroupByOutputType>[]
          }
          count: {
            args: Prisma.migrationsCountArgs<ExtArgs>
            result: $Utils.Optional<MigrationsCountAggregateOutputType> | number
          }
        }
      }
      model_has_permissions: {
        payload: Prisma.$model_has_permissionsPayload<ExtArgs>
        fields: Prisma.model_has_permissionsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.model_has_permissionsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$model_has_permissionsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.model_has_permissionsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$model_has_permissionsPayload>
          }
          findFirst: {
            args: Prisma.model_has_permissionsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$model_has_permissionsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.model_has_permissionsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$model_has_permissionsPayload>
          }
          findMany: {
            args: Prisma.model_has_permissionsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$model_has_permissionsPayload>[]
          }
          create: {
            args: Prisma.model_has_permissionsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$model_has_permissionsPayload>
          }
          createMany: {
            args: Prisma.model_has_permissionsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.model_has_permissionsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$model_has_permissionsPayload>[]
          }
          delete: {
            args: Prisma.model_has_permissionsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$model_has_permissionsPayload>
          }
          update: {
            args: Prisma.model_has_permissionsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$model_has_permissionsPayload>
          }
          deleteMany: {
            args: Prisma.model_has_permissionsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.model_has_permissionsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.model_has_permissionsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$model_has_permissionsPayload>[]
          }
          upsert: {
            args: Prisma.model_has_permissionsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$model_has_permissionsPayload>
          }
          aggregate: {
            args: Prisma.Model_has_permissionsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateModel_has_permissions>
          }
          groupBy: {
            args: Prisma.model_has_permissionsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Model_has_permissionsGroupByOutputType>[]
          }
          count: {
            args: Prisma.model_has_permissionsCountArgs<ExtArgs>
            result: $Utils.Optional<Model_has_permissionsCountAggregateOutputType> | number
          }
        }
      }
      model_has_roles: {
        payload: Prisma.$model_has_rolesPayload<ExtArgs>
        fields: Prisma.model_has_rolesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.model_has_rolesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$model_has_rolesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.model_has_rolesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$model_has_rolesPayload>
          }
          findFirst: {
            args: Prisma.model_has_rolesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$model_has_rolesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.model_has_rolesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$model_has_rolesPayload>
          }
          findMany: {
            args: Prisma.model_has_rolesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$model_has_rolesPayload>[]
          }
          create: {
            args: Prisma.model_has_rolesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$model_has_rolesPayload>
          }
          createMany: {
            args: Prisma.model_has_rolesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.model_has_rolesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$model_has_rolesPayload>[]
          }
          delete: {
            args: Prisma.model_has_rolesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$model_has_rolesPayload>
          }
          update: {
            args: Prisma.model_has_rolesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$model_has_rolesPayload>
          }
          deleteMany: {
            args: Prisma.model_has_rolesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.model_has_rolesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.model_has_rolesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$model_has_rolesPayload>[]
          }
          upsert: {
            args: Prisma.model_has_rolesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$model_has_rolesPayload>
          }
          aggregate: {
            args: Prisma.Model_has_rolesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateModel_has_roles>
          }
          groupBy: {
            args: Prisma.model_has_rolesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Model_has_rolesGroupByOutputType>[]
          }
          count: {
            args: Prisma.model_has_rolesCountArgs<ExtArgs>
            result: $Utils.Optional<Model_has_rolesCountAggregateOutputType> | number
          }
        }
      }
      oauth_access_tokens: {
        payload: Prisma.$oauth_access_tokensPayload<ExtArgs>
        fields: Prisma.oauth_access_tokensFieldRefs
        operations: {
          findUnique: {
            args: Prisma.oauth_access_tokensFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$oauth_access_tokensPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.oauth_access_tokensFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$oauth_access_tokensPayload>
          }
          findFirst: {
            args: Prisma.oauth_access_tokensFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$oauth_access_tokensPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.oauth_access_tokensFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$oauth_access_tokensPayload>
          }
          findMany: {
            args: Prisma.oauth_access_tokensFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$oauth_access_tokensPayload>[]
          }
          create: {
            args: Prisma.oauth_access_tokensCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$oauth_access_tokensPayload>
          }
          createMany: {
            args: Prisma.oauth_access_tokensCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.oauth_access_tokensCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$oauth_access_tokensPayload>[]
          }
          delete: {
            args: Prisma.oauth_access_tokensDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$oauth_access_tokensPayload>
          }
          update: {
            args: Prisma.oauth_access_tokensUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$oauth_access_tokensPayload>
          }
          deleteMany: {
            args: Prisma.oauth_access_tokensDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.oauth_access_tokensUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.oauth_access_tokensUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$oauth_access_tokensPayload>[]
          }
          upsert: {
            args: Prisma.oauth_access_tokensUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$oauth_access_tokensPayload>
          }
          aggregate: {
            args: Prisma.Oauth_access_tokensAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOauth_access_tokens>
          }
          groupBy: {
            args: Prisma.oauth_access_tokensGroupByArgs<ExtArgs>
            result: $Utils.Optional<Oauth_access_tokensGroupByOutputType>[]
          }
          count: {
            args: Prisma.oauth_access_tokensCountArgs<ExtArgs>
            result: $Utils.Optional<Oauth_access_tokensCountAggregateOutputType> | number
          }
        }
      }
      oauth_auth_codes: {
        payload: Prisma.$oauth_auth_codesPayload<ExtArgs>
        fields: Prisma.oauth_auth_codesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.oauth_auth_codesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$oauth_auth_codesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.oauth_auth_codesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$oauth_auth_codesPayload>
          }
          findFirst: {
            args: Prisma.oauth_auth_codesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$oauth_auth_codesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.oauth_auth_codesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$oauth_auth_codesPayload>
          }
          findMany: {
            args: Prisma.oauth_auth_codesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$oauth_auth_codesPayload>[]
          }
          create: {
            args: Prisma.oauth_auth_codesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$oauth_auth_codesPayload>
          }
          createMany: {
            args: Prisma.oauth_auth_codesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.oauth_auth_codesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$oauth_auth_codesPayload>[]
          }
          delete: {
            args: Prisma.oauth_auth_codesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$oauth_auth_codesPayload>
          }
          update: {
            args: Prisma.oauth_auth_codesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$oauth_auth_codesPayload>
          }
          deleteMany: {
            args: Prisma.oauth_auth_codesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.oauth_auth_codesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.oauth_auth_codesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$oauth_auth_codesPayload>[]
          }
          upsert: {
            args: Prisma.oauth_auth_codesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$oauth_auth_codesPayload>
          }
          aggregate: {
            args: Prisma.Oauth_auth_codesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOauth_auth_codes>
          }
          groupBy: {
            args: Prisma.oauth_auth_codesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Oauth_auth_codesGroupByOutputType>[]
          }
          count: {
            args: Prisma.oauth_auth_codesCountArgs<ExtArgs>
            result: $Utils.Optional<Oauth_auth_codesCountAggregateOutputType> | number
          }
        }
      }
      oauth_clients: {
        payload: Prisma.$oauth_clientsPayload<ExtArgs>
        fields: Prisma.oauth_clientsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.oauth_clientsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$oauth_clientsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.oauth_clientsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$oauth_clientsPayload>
          }
          findFirst: {
            args: Prisma.oauth_clientsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$oauth_clientsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.oauth_clientsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$oauth_clientsPayload>
          }
          findMany: {
            args: Prisma.oauth_clientsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$oauth_clientsPayload>[]
          }
          create: {
            args: Prisma.oauth_clientsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$oauth_clientsPayload>
          }
          createMany: {
            args: Prisma.oauth_clientsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.oauth_clientsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$oauth_clientsPayload>[]
          }
          delete: {
            args: Prisma.oauth_clientsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$oauth_clientsPayload>
          }
          update: {
            args: Prisma.oauth_clientsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$oauth_clientsPayload>
          }
          deleteMany: {
            args: Prisma.oauth_clientsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.oauth_clientsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.oauth_clientsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$oauth_clientsPayload>[]
          }
          upsert: {
            args: Prisma.oauth_clientsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$oauth_clientsPayload>
          }
          aggregate: {
            args: Prisma.Oauth_clientsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOauth_clients>
          }
          groupBy: {
            args: Prisma.oauth_clientsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Oauth_clientsGroupByOutputType>[]
          }
          count: {
            args: Prisma.oauth_clientsCountArgs<ExtArgs>
            result: $Utils.Optional<Oauth_clientsCountAggregateOutputType> | number
          }
        }
      }
      oauth_personal_access_clients: {
        payload: Prisma.$oauth_personal_access_clientsPayload<ExtArgs>
        fields: Prisma.oauth_personal_access_clientsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.oauth_personal_access_clientsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$oauth_personal_access_clientsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.oauth_personal_access_clientsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$oauth_personal_access_clientsPayload>
          }
          findFirst: {
            args: Prisma.oauth_personal_access_clientsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$oauth_personal_access_clientsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.oauth_personal_access_clientsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$oauth_personal_access_clientsPayload>
          }
          findMany: {
            args: Prisma.oauth_personal_access_clientsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$oauth_personal_access_clientsPayload>[]
          }
          create: {
            args: Prisma.oauth_personal_access_clientsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$oauth_personal_access_clientsPayload>
          }
          createMany: {
            args: Prisma.oauth_personal_access_clientsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.oauth_personal_access_clientsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$oauth_personal_access_clientsPayload>[]
          }
          delete: {
            args: Prisma.oauth_personal_access_clientsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$oauth_personal_access_clientsPayload>
          }
          update: {
            args: Prisma.oauth_personal_access_clientsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$oauth_personal_access_clientsPayload>
          }
          deleteMany: {
            args: Prisma.oauth_personal_access_clientsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.oauth_personal_access_clientsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.oauth_personal_access_clientsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$oauth_personal_access_clientsPayload>[]
          }
          upsert: {
            args: Prisma.oauth_personal_access_clientsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$oauth_personal_access_clientsPayload>
          }
          aggregate: {
            args: Prisma.Oauth_personal_access_clientsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOauth_personal_access_clients>
          }
          groupBy: {
            args: Prisma.oauth_personal_access_clientsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Oauth_personal_access_clientsGroupByOutputType>[]
          }
          count: {
            args: Prisma.oauth_personal_access_clientsCountArgs<ExtArgs>
            result: $Utils.Optional<Oauth_personal_access_clientsCountAggregateOutputType> | number
          }
        }
      }
      oauth_refresh_tokens: {
        payload: Prisma.$oauth_refresh_tokensPayload<ExtArgs>
        fields: Prisma.oauth_refresh_tokensFieldRefs
        operations: {
          findUnique: {
            args: Prisma.oauth_refresh_tokensFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$oauth_refresh_tokensPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.oauth_refresh_tokensFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$oauth_refresh_tokensPayload>
          }
          findFirst: {
            args: Prisma.oauth_refresh_tokensFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$oauth_refresh_tokensPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.oauth_refresh_tokensFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$oauth_refresh_tokensPayload>
          }
          findMany: {
            args: Prisma.oauth_refresh_tokensFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$oauth_refresh_tokensPayload>[]
          }
          create: {
            args: Prisma.oauth_refresh_tokensCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$oauth_refresh_tokensPayload>
          }
          createMany: {
            args: Prisma.oauth_refresh_tokensCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.oauth_refresh_tokensCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$oauth_refresh_tokensPayload>[]
          }
          delete: {
            args: Prisma.oauth_refresh_tokensDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$oauth_refresh_tokensPayload>
          }
          update: {
            args: Prisma.oauth_refresh_tokensUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$oauth_refresh_tokensPayload>
          }
          deleteMany: {
            args: Prisma.oauth_refresh_tokensDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.oauth_refresh_tokensUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.oauth_refresh_tokensUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$oauth_refresh_tokensPayload>[]
          }
          upsert: {
            args: Prisma.oauth_refresh_tokensUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$oauth_refresh_tokensPayload>
          }
          aggregate: {
            args: Prisma.Oauth_refresh_tokensAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOauth_refresh_tokens>
          }
          groupBy: {
            args: Prisma.oauth_refresh_tokensGroupByArgs<ExtArgs>
            result: $Utils.Optional<Oauth_refresh_tokensGroupByOutputType>[]
          }
          count: {
            args: Prisma.oauth_refresh_tokensCountArgs<ExtArgs>
            result: $Utils.Optional<Oauth_refresh_tokensCountAggregateOutputType> | number
          }
        }
      }
      offer_categories: {
        payload: Prisma.$offer_categoriesPayload<ExtArgs>
        fields: Prisma.offer_categoriesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.offer_categoriesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$offer_categoriesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.offer_categoriesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$offer_categoriesPayload>
          }
          findFirst: {
            args: Prisma.offer_categoriesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$offer_categoriesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.offer_categoriesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$offer_categoriesPayload>
          }
          findMany: {
            args: Prisma.offer_categoriesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$offer_categoriesPayload>[]
          }
          create: {
            args: Prisma.offer_categoriesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$offer_categoriesPayload>
          }
          createMany: {
            args: Prisma.offer_categoriesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.offer_categoriesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$offer_categoriesPayload>[]
          }
          delete: {
            args: Prisma.offer_categoriesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$offer_categoriesPayload>
          }
          update: {
            args: Prisma.offer_categoriesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$offer_categoriesPayload>
          }
          deleteMany: {
            args: Prisma.offer_categoriesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.offer_categoriesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.offer_categoriesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$offer_categoriesPayload>[]
          }
          upsert: {
            args: Prisma.offer_categoriesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$offer_categoriesPayload>
          }
          aggregate: {
            args: Prisma.Offer_categoriesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOffer_categories>
          }
          groupBy: {
            args: Prisma.offer_categoriesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Offer_categoriesGroupByOutputType>[]
          }
          count: {
            args: Prisma.offer_categoriesCountArgs<ExtArgs>
            result: $Utils.Optional<Offer_categoriesCountAggregateOutputType> | number
          }
        }
      }
      offers: {
        payload: Prisma.$offersPayload<ExtArgs>
        fields: Prisma.offersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.offersFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$offersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.offersFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$offersPayload>
          }
          findFirst: {
            args: Prisma.offersFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$offersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.offersFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$offersPayload>
          }
          findMany: {
            args: Prisma.offersFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$offersPayload>[]
          }
          create: {
            args: Prisma.offersCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$offersPayload>
          }
          createMany: {
            args: Prisma.offersCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.offersCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$offersPayload>[]
          }
          delete: {
            args: Prisma.offersDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$offersPayload>
          }
          update: {
            args: Prisma.offersUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$offersPayload>
          }
          deleteMany: {
            args: Prisma.offersDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.offersUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.offersUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$offersPayload>[]
          }
          upsert: {
            args: Prisma.offersUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$offersPayload>
          }
          aggregate: {
            args: Prisma.OffersAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOffers>
          }
          groupBy: {
            args: Prisma.offersGroupByArgs<ExtArgs>
            result: $Utils.Optional<OffersGroupByOutputType>[]
          }
          count: {
            args: Prisma.offersCountArgs<ExtArgs>
            result: $Utils.Optional<OffersCountAggregateOutputType> | number
          }
        }
      }
      orders: {
        payload: Prisma.$ordersPayload<ExtArgs>
        fields: Prisma.ordersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ordersFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ordersFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordersPayload>
          }
          findFirst: {
            args: Prisma.ordersFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ordersFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordersPayload>
          }
          findMany: {
            args: Prisma.ordersFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordersPayload>[]
          }
          create: {
            args: Prisma.ordersCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordersPayload>
          }
          createMany: {
            args: Prisma.ordersCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ordersCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordersPayload>[]
          }
          delete: {
            args: Prisma.ordersDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordersPayload>
          }
          update: {
            args: Prisma.ordersUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordersPayload>
          }
          deleteMany: {
            args: Prisma.ordersDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ordersUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ordersUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordersPayload>[]
          }
          upsert: {
            args: Prisma.ordersUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordersPayload>
          }
          aggregate: {
            args: Prisma.OrdersAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOrders>
          }
          groupBy: {
            args: Prisma.ordersGroupByArgs<ExtArgs>
            result: $Utils.Optional<OrdersGroupByOutputType>[]
          }
          count: {
            args: Prisma.ordersCountArgs<ExtArgs>
            result: $Utils.Optional<OrdersCountAggregateOutputType> | number
          }
        }
      }
      otps: {
        payload: Prisma.$otpsPayload<ExtArgs>
        fields: Prisma.otpsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.otpsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$otpsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.otpsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$otpsPayload>
          }
          findFirst: {
            args: Prisma.otpsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$otpsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.otpsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$otpsPayload>
          }
          findMany: {
            args: Prisma.otpsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$otpsPayload>[]
          }
          create: {
            args: Prisma.otpsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$otpsPayload>
          }
          createMany: {
            args: Prisma.otpsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.otpsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$otpsPayload>[]
          }
          delete: {
            args: Prisma.otpsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$otpsPayload>
          }
          update: {
            args: Prisma.otpsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$otpsPayload>
          }
          deleteMany: {
            args: Prisma.otpsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.otpsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.otpsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$otpsPayload>[]
          }
          upsert: {
            args: Prisma.otpsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$otpsPayload>
          }
          aggregate: {
            args: Prisma.OtpsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOtps>
          }
          groupBy: {
            args: Prisma.otpsGroupByArgs<ExtArgs>
            result: $Utils.Optional<OtpsGroupByOutputType>[]
          }
          count: {
            args: Prisma.otpsCountArgs<ExtArgs>
            result: $Utils.Optional<OtpsCountAggregateOutputType> | number
          }
        }
      }
      payments: {
        payload: Prisma.$paymentsPayload<ExtArgs>
        fields: Prisma.paymentsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.paymentsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$paymentsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.paymentsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$paymentsPayload>
          }
          findFirst: {
            args: Prisma.paymentsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$paymentsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.paymentsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$paymentsPayload>
          }
          findMany: {
            args: Prisma.paymentsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$paymentsPayload>[]
          }
          create: {
            args: Prisma.paymentsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$paymentsPayload>
          }
          createMany: {
            args: Prisma.paymentsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.paymentsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$paymentsPayload>[]
          }
          delete: {
            args: Prisma.paymentsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$paymentsPayload>
          }
          update: {
            args: Prisma.paymentsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$paymentsPayload>
          }
          deleteMany: {
            args: Prisma.paymentsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.paymentsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.paymentsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$paymentsPayload>[]
          }
          upsert: {
            args: Prisma.paymentsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$paymentsPayload>
          }
          aggregate: {
            args: Prisma.PaymentsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePayments>
          }
          groupBy: {
            args: Prisma.paymentsGroupByArgs<ExtArgs>
            result: $Utils.Optional<PaymentsGroupByOutputType>[]
          }
          count: {
            args: Prisma.paymentsCountArgs<ExtArgs>
            result: $Utils.Optional<PaymentsCountAggregateOutputType> | number
          }
        }
      }
      permissions: {
        payload: Prisma.$permissionsPayload<ExtArgs>
        fields: Prisma.permissionsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.permissionsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$permissionsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.permissionsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$permissionsPayload>
          }
          findFirst: {
            args: Prisma.permissionsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$permissionsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.permissionsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$permissionsPayload>
          }
          findMany: {
            args: Prisma.permissionsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$permissionsPayload>[]
          }
          create: {
            args: Prisma.permissionsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$permissionsPayload>
          }
          createMany: {
            args: Prisma.permissionsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.permissionsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$permissionsPayload>[]
          }
          delete: {
            args: Prisma.permissionsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$permissionsPayload>
          }
          update: {
            args: Prisma.permissionsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$permissionsPayload>
          }
          deleteMany: {
            args: Prisma.permissionsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.permissionsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.permissionsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$permissionsPayload>[]
          }
          upsert: {
            args: Prisma.permissionsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$permissionsPayload>
          }
          aggregate: {
            args: Prisma.PermissionsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePermissions>
          }
          groupBy: {
            args: Prisma.permissionsGroupByArgs<ExtArgs>
            result: $Utils.Optional<PermissionsGroupByOutputType>[]
          }
          count: {
            args: Prisma.permissionsCountArgs<ExtArgs>
            result: $Utils.Optional<PermissionsCountAggregateOutputType> | number
          }
        }
      }
      personal_access_tokens: {
        payload: Prisma.$personal_access_tokensPayload<ExtArgs>
        fields: Prisma.personal_access_tokensFieldRefs
        operations: {
          findUnique: {
            args: Prisma.personal_access_tokensFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$personal_access_tokensPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.personal_access_tokensFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$personal_access_tokensPayload>
          }
          findFirst: {
            args: Prisma.personal_access_tokensFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$personal_access_tokensPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.personal_access_tokensFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$personal_access_tokensPayload>
          }
          findMany: {
            args: Prisma.personal_access_tokensFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$personal_access_tokensPayload>[]
          }
          create: {
            args: Prisma.personal_access_tokensCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$personal_access_tokensPayload>
          }
          createMany: {
            args: Prisma.personal_access_tokensCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.personal_access_tokensCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$personal_access_tokensPayload>[]
          }
          delete: {
            args: Prisma.personal_access_tokensDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$personal_access_tokensPayload>
          }
          update: {
            args: Prisma.personal_access_tokensUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$personal_access_tokensPayload>
          }
          deleteMany: {
            args: Prisma.personal_access_tokensDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.personal_access_tokensUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.personal_access_tokensUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$personal_access_tokensPayload>[]
          }
          upsert: {
            args: Prisma.personal_access_tokensUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$personal_access_tokensPayload>
          }
          aggregate: {
            args: Prisma.Personal_access_tokensAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePersonal_access_tokens>
          }
          groupBy: {
            args: Prisma.personal_access_tokensGroupByArgs<ExtArgs>
            result: $Utils.Optional<Personal_access_tokensGroupByOutputType>[]
          }
          count: {
            args: Prisma.personal_access_tokensCountArgs<ExtArgs>
            result: $Utils.Optional<Personal_access_tokensCountAggregateOutputType> | number
          }
        }
      }
      provider_agents: {
        payload: Prisma.$provider_agentsPayload<ExtArgs>
        fields: Prisma.provider_agentsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.provider_agentsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$provider_agentsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.provider_agentsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$provider_agentsPayload>
          }
          findFirst: {
            args: Prisma.provider_agentsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$provider_agentsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.provider_agentsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$provider_agentsPayload>
          }
          findMany: {
            args: Prisma.provider_agentsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$provider_agentsPayload>[]
          }
          create: {
            args: Prisma.provider_agentsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$provider_agentsPayload>
          }
          createMany: {
            args: Prisma.provider_agentsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.provider_agentsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$provider_agentsPayload>[]
          }
          delete: {
            args: Prisma.provider_agentsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$provider_agentsPayload>
          }
          update: {
            args: Prisma.provider_agentsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$provider_agentsPayload>
          }
          deleteMany: {
            args: Prisma.provider_agentsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.provider_agentsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.provider_agentsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$provider_agentsPayload>[]
          }
          upsert: {
            args: Prisma.provider_agentsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$provider_agentsPayload>
          }
          aggregate: {
            args: Prisma.Provider_agentsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProvider_agents>
          }
          groupBy: {
            args: Prisma.provider_agentsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Provider_agentsGroupByOutputType>[]
          }
          count: {
            args: Prisma.provider_agentsCountArgs<ExtArgs>
            result: $Utils.Optional<Provider_agentsCountAggregateOutputType> | number
          }
        }
      }
      provider_offers: {
        payload: Prisma.$provider_offersPayload<ExtArgs>
        fields: Prisma.provider_offersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.provider_offersFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$provider_offersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.provider_offersFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$provider_offersPayload>
          }
          findFirst: {
            args: Prisma.provider_offersFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$provider_offersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.provider_offersFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$provider_offersPayload>
          }
          findMany: {
            args: Prisma.provider_offersFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$provider_offersPayload>[]
          }
          create: {
            args: Prisma.provider_offersCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$provider_offersPayload>
          }
          createMany: {
            args: Prisma.provider_offersCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.provider_offersCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$provider_offersPayload>[]
          }
          delete: {
            args: Prisma.provider_offersDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$provider_offersPayload>
          }
          update: {
            args: Prisma.provider_offersUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$provider_offersPayload>
          }
          deleteMany: {
            args: Prisma.provider_offersDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.provider_offersUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.provider_offersUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$provider_offersPayload>[]
          }
          upsert: {
            args: Prisma.provider_offersUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$provider_offersPayload>
          }
          aggregate: {
            args: Prisma.Provider_offersAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProvider_offers>
          }
          groupBy: {
            args: Prisma.provider_offersGroupByArgs<ExtArgs>
            result: $Utils.Optional<Provider_offersGroupByOutputType>[]
          }
          count: {
            args: Prisma.provider_offersCountArgs<ExtArgs>
            result: $Utils.Optional<Provider_offersCountAggregateOutputType> | number
          }
        }
      }
      providers: {
        payload: Prisma.$providersPayload<ExtArgs>
        fields: Prisma.providersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.providersFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$providersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.providersFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$providersPayload>
          }
          findFirst: {
            args: Prisma.providersFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$providersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.providersFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$providersPayload>
          }
          findMany: {
            args: Prisma.providersFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$providersPayload>[]
          }
          create: {
            args: Prisma.providersCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$providersPayload>
          }
          createMany: {
            args: Prisma.providersCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.providersCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$providersPayload>[]
          }
          delete: {
            args: Prisma.providersDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$providersPayload>
          }
          update: {
            args: Prisma.providersUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$providersPayload>
          }
          deleteMany: {
            args: Prisma.providersDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.providersUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.providersUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$providersPayload>[]
          }
          upsert: {
            args: Prisma.providersUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$providersPayload>
          }
          aggregate: {
            args: Prisma.ProvidersAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProviders>
          }
          groupBy: {
            args: Prisma.providersGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProvidersGroupByOutputType>[]
          }
          count: {
            args: Prisma.providersCountArgs<ExtArgs>
            result: $Utils.Optional<ProvidersCountAggregateOutputType> | number
          }
        }
      }
      provider_menu: {
        payload: Prisma.$provider_menuPayload<ExtArgs>
        fields: Prisma.provider_menuFieldRefs
        operations: {
          findUnique: {
            args: Prisma.provider_menuFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$provider_menuPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.provider_menuFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$provider_menuPayload>
          }
          findFirst: {
            args: Prisma.provider_menuFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$provider_menuPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.provider_menuFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$provider_menuPayload>
          }
          findMany: {
            args: Prisma.provider_menuFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$provider_menuPayload>[]
          }
          create: {
            args: Prisma.provider_menuCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$provider_menuPayload>
          }
          createMany: {
            args: Prisma.provider_menuCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.provider_menuCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$provider_menuPayload>[]
          }
          delete: {
            args: Prisma.provider_menuDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$provider_menuPayload>
          }
          update: {
            args: Prisma.provider_menuUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$provider_menuPayload>
          }
          deleteMany: {
            args: Prisma.provider_menuDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.provider_menuUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.provider_menuUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$provider_menuPayload>[]
          }
          upsert: {
            args: Prisma.provider_menuUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$provider_menuPayload>
          }
          aggregate: {
            args: Prisma.Provider_menuAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProvider_menu>
          }
          groupBy: {
            args: Prisma.provider_menuGroupByArgs<ExtArgs>
            result: $Utils.Optional<Provider_menuGroupByOutputType>[]
          }
          count: {
            args: Prisma.provider_menuCountArgs<ExtArgs>
            result: $Utils.Optional<Provider_menuCountAggregateOutputType> | number
          }
        }
      }
      provider_menu_items: {
        payload: Prisma.$provider_menu_itemsPayload<ExtArgs>
        fields: Prisma.provider_menu_itemsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.provider_menu_itemsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$provider_menu_itemsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.provider_menu_itemsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$provider_menu_itemsPayload>
          }
          findFirst: {
            args: Prisma.provider_menu_itemsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$provider_menu_itemsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.provider_menu_itemsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$provider_menu_itemsPayload>
          }
          findMany: {
            args: Prisma.provider_menu_itemsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$provider_menu_itemsPayload>[]
          }
          create: {
            args: Prisma.provider_menu_itemsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$provider_menu_itemsPayload>
          }
          createMany: {
            args: Prisma.provider_menu_itemsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.provider_menu_itemsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$provider_menu_itemsPayload>[]
          }
          delete: {
            args: Prisma.provider_menu_itemsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$provider_menu_itemsPayload>
          }
          update: {
            args: Prisma.provider_menu_itemsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$provider_menu_itemsPayload>
          }
          deleteMany: {
            args: Prisma.provider_menu_itemsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.provider_menu_itemsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.provider_menu_itemsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$provider_menu_itemsPayload>[]
          }
          upsert: {
            args: Prisma.provider_menu_itemsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$provider_menu_itemsPayload>
          }
          aggregate: {
            args: Prisma.Provider_menu_itemsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProvider_menu_items>
          }
          groupBy: {
            args: Prisma.provider_menu_itemsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Provider_menu_itemsGroupByOutputType>[]
          }
          count: {
            args: Prisma.provider_menu_itemsCountArgs<ExtArgs>
            result: $Utils.Optional<Provider_menu_itemsCountAggregateOutputType> | number
          }
        }
      }
      provider_menu_categories: {
        payload: Prisma.$provider_menu_categoriesPayload<ExtArgs>
        fields: Prisma.provider_menu_categoriesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.provider_menu_categoriesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$provider_menu_categoriesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.provider_menu_categoriesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$provider_menu_categoriesPayload>
          }
          findFirst: {
            args: Prisma.provider_menu_categoriesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$provider_menu_categoriesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.provider_menu_categoriesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$provider_menu_categoriesPayload>
          }
          findMany: {
            args: Prisma.provider_menu_categoriesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$provider_menu_categoriesPayload>[]
          }
          create: {
            args: Prisma.provider_menu_categoriesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$provider_menu_categoriesPayload>
          }
          createMany: {
            args: Prisma.provider_menu_categoriesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.provider_menu_categoriesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$provider_menu_categoriesPayload>[]
          }
          delete: {
            args: Prisma.provider_menu_categoriesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$provider_menu_categoriesPayload>
          }
          update: {
            args: Prisma.provider_menu_categoriesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$provider_menu_categoriesPayload>
          }
          deleteMany: {
            args: Prisma.provider_menu_categoriesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.provider_menu_categoriesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.provider_menu_categoriesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$provider_menu_categoriesPayload>[]
          }
          upsert: {
            args: Prisma.provider_menu_categoriesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$provider_menu_categoriesPayload>
          }
          aggregate: {
            args: Prisma.Provider_menu_categoriesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProvider_menu_categories>
          }
          groupBy: {
            args: Prisma.provider_menu_categoriesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Provider_menu_categoriesGroupByOutputType>[]
          }
          count: {
            args: Prisma.provider_menu_categoriesCountArgs<ExtArgs>
            result: $Utils.Optional<Provider_menu_categoriesCountAggregateOutputType> | number
          }
        }
      }
      role_has_permissions: {
        payload: Prisma.$role_has_permissionsPayload<ExtArgs>
        fields: Prisma.role_has_permissionsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.role_has_permissionsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$role_has_permissionsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.role_has_permissionsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$role_has_permissionsPayload>
          }
          findFirst: {
            args: Prisma.role_has_permissionsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$role_has_permissionsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.role_has_permissionsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$role_has_permissionsPayload>
          }
          findMany: {
            args: Prisma.role_has_permissionsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$role_has_permissionsPayload>[]
          }
          create: {
            args: Prisma.role_has_permissionsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$role_has_permissionsPayload>
          }
          createMany: {
            args: Prisma.role_has_permissionsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.role_has_permissionsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$role_has_permissionsPayload>[]
          }
          delete: {
            args: Prisma.role_has_permissionsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$role_has_permissionsPayload>
          }
          update: {
            args: Prisma.role_has_permissionsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$role_has_permissionsPayload>
          }
          deleteMany: {
            args: Prisma.role_has_permissionsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.role_has_permissionsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.role_has_permissionsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$role_has_permissionsPayload>[]
          }
          upsert: {
            args: Prisma.role_has_permissionsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$role_has_permissionsPayload>
          }
          aggregate: {
            args: Prisma.Role_has_permissionsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRole_has_permissions>
          }
          groupBy: {
            args: Prisma.role_has_permissionsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Role_has_permissionsGroupByOutputType>[]
          }
          count: {
            args: Prisma.role_has_permissionsCountArgs<ExtArgs>
            result: $Utils.Optional<Role_has_permissionsCountAggregateOutputType> | number
          }
        }
      }
      roles: {
        payload: Prisma.$rolesPayload<ExtArgs>
        fields: Prisma.rolesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.rolesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.rolesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolesPayload>
          }
          findFirst: {
            args: Prisma.rolesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.rolesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolesPayload>
          }
          findMany: {
            args: Prisma.rolesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolesPayload>[]
          }
          create: {
            args: Prisma.rolesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolesPayload>
          }
          createMany: {
            args: Prisma.rolesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.rolesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolesPayload>[]
          }
          delete: {
            args: Prisma.rolesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolesPayload>
          }
          update: {
            args: Prisma.rolesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolesPayload>
          }
          deleteMany: {
            args: Prisma.rolesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.rolesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.rolesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolesPayload>[]
          }
          upsert: {
            args: Prisma.rolesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolesPayload>
          }
          aggregate: {
            args: Prisma.RolesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRoles>
          }
          groupBy: {
            args: Prisma.rolesGroupByArgs<ExtArgs>
            result: $Utils.Optional<RolesGroupByOutputType>[]
          }
          count: {
            args: Prisma.rolesCountArgs<ExtArgs>
            result: $Utils.Optional<RolesCountAggregateOutputType> | number
          }
        }
      }
      subscription_plan_offers: {
        payload: Prisma.$subscription_plan_offersPayload<ExtArgs>
        fields: Prisma.subscription_plan_offersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.subscription_plan_offersFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$subscription_plan_offersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.subscription_plan_offersFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$subscription_plan_offersPayload>
          }
          findFirst: {
            args: Prisma.subscription_plan_offersFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$subscription_plan_offersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.subscription_plan_offersFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$subscription_plan_offersPayload>
          }
          findMany: {
            args: Prisma.subscription_plan_offersFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$subscription_plan_offersPayload>[]
          }
          create: {
            args: Prisma.subscription_plan_offersCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$subscription_plan_offersPayload>
          }
          createMany: {
            args: Prisma.subscription_plan_offersCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.subscription_plan_offersCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$subscription_plan_offersPayload>[]
          }
          delete: {
            args: Prisma.subscription_plan_offersDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$subscription_plan_offersPayload>
          }
          update: {
            args: Prisma.subscription_plan_offersUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$subscription_plan_offersPayload>
          }
          deleteMany: {
            args: Prisma.subscription_plan_offersDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.subscription_plan_offersUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.subscription_plan_offersUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$subscription_plan_offersPayload>[]
          }
          upsert: {
            args: Prisma.subscription_plan_offersUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$subscription_plan_offersPayload>
          }
          aggregate: {
            args: Prisma.Subscription_plan_offersAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSubscription_plan_offers>
          }
          groupBy: {
            args: Prisma.subscription_plan_offersGroupByArgs<ExtArgs>
            result: $Utils.Optional<Subscription_plan_offersGroupByOutputType>[]
          }
          count: {
            args: Prisma.subscription_plan_offersCountArgs<ExtArgs>
            result: $Utils.Optional<Subscription_plan_offersCountAggregateOutputType> | number
          }
        }
      }
      subscription_plans: {
        payload: Prisma.$subscription_plansPayload<ExtArgs>
        fields: Prisma.subscription_plansFieldRefs
        operations: {
          findUnique: {
            args: Prisma.subscription_plansFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$subscription_plansPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.subscription_plansFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$subscription_plansPayload>
          }
          findFirst: {
            args: Prisma.subscription_plansFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$subscription_plansPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.subscription_plansFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$subscription_plansPayload>
          }
          findMany: {
            args: Prisma.subscription_plansFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$subscription_plansPayload>[]
          }
          create: {
            args: Prisma.subscription_plansCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$subscription_plansPayload>
          }
          createMany: {
            args: Prisma.subscription_plansCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.subscription_plansCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$subscription_plansPayload>[]
          }
          delete: {
            args: Prisma.subscription_plansDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$subscription_plansPayload>
          }
          update: {
            args: Prisma.subscription_plansUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$subscription_plansPayload>
          }
          deleteMany: {
            args: Prisma.subscription_plansDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.subscription_plansUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.subscription_plansUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$subscription_plansPayload>[]
          }
          upsert: {
            args: Prisma.subscription_plansUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$subscription_plansPayload>
          }
          aggregate: {
            args: Prisma.Subscription_plansAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSubscription_plans>
          }
          groupBy: {
            args: Prisma.subscription_plansGroupByArgs<ExtArgs>
            result: $Utils.Optional<Subscription_plansGroupByOutputType>[]
          }
          count: {
            args: Prisma.subscription_plansCountArgs<ExtArgs>
            result: $Utils.Optional<Subscription_plansCountAggregateOutputType> | number
          }
        }
      }
      subscription_usages: {
        payload: Prisma.$subscription_usagesPayload<ExtArgs>
        fields: Prisma.subscription_usagesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.subscription_usagesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$subscription_usagesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.subscription_usagesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$subscription_usagesPayload>
          }
          findFirst: {
            args: Prisma.subscription_usagesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$subscription_usagesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.subscription_usagesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$subscription_usagesPayload>
          }
          findMany: {
            args: Prisma.subscription_usagesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$subscription_usagesPayload>[]
          }
          create: {
            args: Prisma.subscription_usagesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$subscription_usagesPayload>
          }
          createMany: {
            args: Prisma.subscription_usagesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.subscription_usagesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$subscription_usagesPayload>[]
          }
          delete: {
            args: Prisma.subscription_usagesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$subscription_usagesPayload>
          }
          update: {
            args: Prisma.subscription_usagesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$subscription_usagesPayload>
          }
          deleteMany: {
            args: Prisma.subscription_usagesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.subscription_usagesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.subscription_usagesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$subscription_usagesPayload>[]
          }
          upsert: {
            args: Prisma.subscription_usagesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$subscription_usagesPayload>
          }
          aggregate: {
            args: Prisma.Subscription_usagesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSubscription_usages>
          }
          groupBy: {
            args: Prisma.subscription_usagesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Subscription_usagesGroupByOutputType>[]
          }
          count: {
            args: Prisma.subscription_usagesCountArgs<ExtArgs>
            result: $Utils.Optional<Subscription_usagesCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    admins?: adminsOmit
    cache?: cacheOmit
    cache_locks?: cache_locksOmit
    customer_subscriptions?: customer_subscriptionsOmit
    customers?: customersOmit
    failed_jobs?: failed_jobsOmit
    job_batches?: job_batchesOmit
    jobs?: jobsOmit
    migrations?: migrationsOmit
    model_has_permissions?: model_has_permissionsOmit
    model_has_roles?: model_has_rolesOmit
    oauth_access_tokens?: oauth_access_tokensOmit
    oauth_auth_codes?: oauth_auth_codesOmit
    oauth_clients?: oauth_clientsOmit
    oauth_personal_access_clients?: oauth_personal_access_clientsOmit
    oauth_refresh_tokens?: oauth_refresh_tokensOmit
    offer_categories?: offer_categoriesOmit
    offers?: offersOmit
    orders?: ordersOmit
    otps?: otpsOmit
    payments?: paymentsOmit
    permissions?: permissionsOmit
    personal_access_tokens?: personal_access_tokensOmit
    provider_agents?: provider_agentsOmit
    provider_offers?: provider_offersOmit
    providers?: providersOmit
    provider_menu?: provider_menuOmit
    provider_menu_items?: provider_menu_itemsOmit
    provider_menu_categories?: provider_menu_categoriesOmit
    role_has_permissions?: role_has_permissionsOmit
    roles?: rolesOmit
    subscription_plan_offers?: subscription_plan_offersOmit
    subscription_plans?: subscription_plansOmit
    subscription_usages?: subscription_usagesOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type AdminsCountOutputType
   */

  export type AdminsCountOutputType = {
    provider_agents: number
  }

  export type AdminsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    provider_agents?: boolean | AdminsCountOutputTypeCountProvider_agentsArgs
  }

  // Custom InputTypes
  /**
   * AdminsCountOutputType without action
   */
  export type AdminsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdminsCountOutputType
     */
    select?: AdminsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * AdminsCountOutputType without action
   */
  export type AdminsCountOutputTypeCountProvider_agentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: provider_agentsWhereInput
  }


  /**
   * Count Type Customer_subscriptionsCountOutputType
   */

  export type Customer_subscriptionsCountOutputType = {
    subscription_usages: number
  }

  export type Customer_subscriptionsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    subscription_usages?: boolean | Customer_subscriptionsCountOutputTypeCountSubscription_usagesArgs
  }

  // Custom InputTypes
  /**
   * Customer_subscriptionsCountOutputType without action
   */
  export type Customer_subscriptionsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer_subscriptionsCountOutputType
     */
    select?: Customer_subscriptionsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Customer_subscriptionsCountOutputType without action
   */
  export type Customer_subscriptionsCountOutputTypeCountSubscription_usagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: subscription_usagesWhereInput
  }


  /**
   * Count Type CustomersCountOutputType
   */

  export type CustomersCountOutputType = {
    customer_subscriptions: number
    subscription_usages: number
  }

  export type CustomersCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    customer_subscriptions?: boolean | CustomersCountOutputTypeCountCustomer_subscriptionsArgs
    subscription_usages?: boolean | CustomersCountOutputTypeCountSubscription_usagesArgs
  }

  // Custom InputTypes
  /**
   * CustomersCountOutputType without action
   */
  export type CustomersCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomersCountOutputType
     */
    select?: CustomersCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CustomersCountOutputType without action
   */
  export type CustomersCountOutputTypeCountCustomer_subscriptionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: customer_subscriptionsWhereInput
  }

  /**
   * CustomersCountOutputType without action
   */
  export type CustomersCountOutputTypeCountSubscription_usagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: subscription_usagesWhereInput
  }


  /**
   * Count Type Offer_categoriesCountOutputType
   */

  export type Offer_categoriesCountOutputType = {
    offers: number
    providers: number
  }

  export type Offer_categoriesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    offers?: boolean | Offer_categoriesCountOutputTypeCountOffersArgs
    providers?: boolean | Offer_categoriesCountOutputTypeCountProvidersArgs
  }

  // Custom InputTypes
  /**
   * Offer_categoriesCountOutputType without action
   */
  export type Offer_categoriesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Offer_categoriesCountOutputType
     */
    select?: Offer_categoriesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Offer_categoriesCountOutputType without action
   */
  export type Offer_categoriesCountOutputTypeCountOffersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: offersWhereInput
  }

  /**
   * Offer_categoriesCountOutputType without action
   */
  export type Offer_categoriesCountOutputTypeCountProvidersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: providersWhereInput
  }


  /**
   * Count Type OffersCountOutputType
   */

  export type OffersCountOutputType = {
    provider_offers: number
    subscription_plan_offers: number
    subscription_usages: number
  }

  export type OffersCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    provider_offers?: boolean | OffersCountOutputTypeCountProvider_offersArgs
    subscription_plan_offers?: boolean | OffersCountOutputTypeCountSubscription_plan_offersArgs
    subscription_usages?: boolean | OffersCountOutputTypeCountSubscription_usagesArgs
  }

  // Custom InputTypes
  /**
   * OffersCountOutputType without action
   */
  export type OffersCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OffersCountOutputType
     */
    select?: OffersCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * OffersCountOutputType without action
   */
  export type OffersCountOutputTypeCountProvider_offersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: provider_offersWhereInput
  }

  /**
   * OffersCountOutputType without action
   */
  export type OffersCountOutputTypeCountSubscription_plan_offersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: subscription_plan_offersWhereInput
  }

  /**
   * OffersCountOutputType without action
   */
  export type OffersCountOutputTypeCountSubscription_usagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: subscription_usagesWhereInput
  }


  /**
   * Count Type OrdersCountOutputType
   */

  export type OrdersCountOutputType = {
    payments: number
  }

  export type OrdersCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    payments?: boolean | OrdersCountOutputTypeCountPaymentsArgs
  }

  // Custom InputTypes
  /**
   * OrdersCountOutputType without action
   */
  export type OrdersCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrdersCountOutputType
     */
    select?: OrdersCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * OrdersCountOutputType without action
   */
  export type OrdersCountOutputTypeCountPaymentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: paymentsWhereInput
  }


  /**
   * Count Type PermissionsCountOutputType
   */

  export type PermissionsCountOutputType = {
    model_has_permissions: number
    role_has_permissions: number
  }

  export type PermissionsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    model_has_permissions?: boolean | PermissionsCountOutputTypeCountModel_has_permissionsArgs
    role_has_permissions?: boolean | PermissionsCountOutputTypeCountRole_has_permissionsArgs
  }

  // Custom InputTypes
  /**
   * PermissionsCountOutputType without action
   */
  export type PermissionsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PermissionsCountOutputType
     */
    select?: PermissionsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PermissionsCountOutputType without action
   */
  export type PermissionsCountOutputTypeCountModel_has_permissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: model_has_permissionsWhereInput
  }

  /**
   * PermissionsCountOutputType without action
   */
  export type PermissionsCountOutputTypeCountRole_has_permissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: role_has_permissionsWhereInput
  }


  /**
   * Count Type Provider_agentsCountOutputType
   */

  export type Provider_agentsCountOutputType = {
    subscription_usages: number
  }

  export type Provider_agentsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    subscription_usages?: boolean | Provider_agentsCountOutputTypeCountSubscription_usagesArgs
  }

  // Custom InputTypes
  /**
   * Provider_agentsCountOutputType without action
   */
  export type Provider_agentsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Provider_agentsCountOutputType
     */
    select?: Provider_agentsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Provider_agentsCountOutputType without action
   */
  export type Provider_agentsCountOutputTypeCountSubscription_usagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: subscription_usagesWhereInput
  }


  /**
   * Count Type ProvidersCountOutputType
   */

  export type ProvidersCountOutputType = {
    provider_agents: number
    provider_offers: number
    subscription_usages: number
  }

  export type ProvidersCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    provider_agents?: boolean | ProvidersCountOutputTypeCountProvider_agentsArgs
    provider_offers?: boolean | ProvidersCountOutputTypeCountProvider_offersArgs
    subscription_usages?: boolean | ProvidersCountOutputTypeCountSubscription_usagesArgs
  }

  // Custom InputTypes
  /**
   * ProvidersCountOutputType without action
   */
  export type ProvidersCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProvidersCountOutputType
     */
    select?: ProvidersCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProvidersCountOutputType without action
   */
  export type ProvidersCountOutputTypeCountProvider_agentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: provider_agentsWhereInput
  }

  /**
   * ProvidersCountOutputType without action
   */
  export type ProvidersCountOutputTypeCountProvider_offersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: provider_offersWhereInput
  }

  /**
   * ProvidersCountOutputType without action
   */
  export type ProvidersCountOutputTypeCountSubscription_usagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: subscription_usagesWhereInput
  }


  /**
   * Count Type Provider_menuCountOutputType
   */

  export type Provider_menuCountOutputType = {
    provider_menu_items: number
    provider_menu_categories: number
  }

  export type Provider_menuCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    provider_menu_items?: boolean | Provider_menuCountOutputTypeCountProvider_menu_itemsArgs
    provider_menu_categories?: boolean | Provider_menuCountOutputTypeCountProvider_menu_categoriesArgs
  }

  // Custom InputTypes
  /**
   * Provider_menuCountOutputType without action
   */
  export type Provider_menuCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Provider_menuCountOutputType
     */
    select?: Provider_menuCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Provider_menuCountOutputType without action
   */
  export type Provider_menuCountOutputTypeCountProvider_menu_itemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: provider_menu_itemsWhereInput
  }

  /**
   * Provider_menuCountOutputType without action
   */
  export type Provider_menuCountOutputTypeCountProvider_menu_categoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: provider_menu_categoriesWhereInput
  }


  /**
   * Count Type Provider_menu_categoriesCountOutputType
   */

  export type Provider_menu_categoriesCountOutputType = {
    provider_menu_items: number
  }

  export type Provider_menu_categoriesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    provider_menu_items?: boolean | Provider_menu_categoriesCountOutputTypeCountProvider_menu_itemsArgs
  }

  // Custom InputTypes
  /**
   * Provider_menu_categoriesCountOutputType without action
   */
  export type Provider_menu_categoriesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Provider_menu_categoriesCountOutputType
     */
    select?: Provider_menu_categoriesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Provider_menu_categoriesCountOutputType without action
   */
  export type Provider_menu_categoriesCountOutputTypeCountProvider_menu_itemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: provider_menu_itemsWhereInput
  }


  /**
   * Count Type RolesCountOutputType
   */

  export type RolesCountOutputType = {
    model_has_roles: number
    role_has_permissions: number
  }

  export type RolesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    model_has_roles?: boolean | RolesCountOutputTypeCountModel_has_rolesArgs
    role_has_permissions?: boolean | RolesCountOutputTypeCountRole_has_permissionsArgs
  }

  // Custom InputTypes
  /**
   * RolesCountOutputType without action
   */
  export type RolesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolesCountOutputType
     */
    select?: RolesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * RolesCountOutputType without action
   */
  export type RolesCountOutputTypeCountModel_has_rolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: model_has_rolesWhereInput
  }

  /**
   * RolesCountOutputType without action
   */
  export type RolesCountOutputTypeCountRole_has_permissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: role_has_permissionsWhereInput
  }


  /**
   * Count Type Subscription_plansCountOutputType
   */

  export type Subscription_plansCountOutputType = {
    customer_subscriptions: number
    subscription_plan_offers: number
  }

  export type Subscription_plansCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    customer_subscriptions?: boolean | Subscription_plansCountOutputTypeCountCustomer_subscriptionsArgs
    subscription_plan_offers?: boolean | Subscription_plansCountOutputTypeCountSubscription_plan_offersArgs
  }

  // Custom InputTypes
  /**
   * Subscription_plansCountOutputType without action
   */
  export type Subscription_plansCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscription_plansCountOutputType
     */
    select?: Subscription_plansCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Subscription_plansCountOutputType without action
   */
  export type Subscription_plansCountOutputTypeCountCustomer_subscriptionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: customer_subscriptionsWhereInput
  }

  /**
   * Subscription_plansCountOutputType without action
   */
  export type Subscription_plansCountOutputTypeCountSubscription_plan_offersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: subscription_plan_offersWhereInput
  }


  /**
   * Models
   */

  /**
   * Model admins
   */

  export type AggregateAdmins = {
    _count: AdminsCountAggregateOutputType | null
    _avg: AdminsAvgAggregateOutputType | null
    _sum: AdminsSumAggregateOutputType | null
    _min: AdminsMinAggregateOutputType | null
    _max: AdminsMaxAggregateOutputType | null
  }

  export type AdminsAvgAggregateOutputType = {
    id: number | null
    status: number | null
  }

  export type AdminsSumAggregateOutputType = {
    id: bigint | null
    status: number | null
  }

  export type AdminsMinAggregateOutputType = {
    id: bigint | null
    first_name: string | null
    last_name: string | null
    gender: string | null
    email: string | null
    mobile_number: string | null
    password: string | null
    birthdate: Date | null
    ssn: string | null
    otp_secret: string | null
    status: number | null
    is_verified: boolean | null
    deleted_at: Date | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type AdminsMaxAggregateOutputType = {
    id: bigint | null
    first_name: string | null
    last_name: string | null
    gender: string | null
    email: string | null
    mobile_number: string | null
    password: string | null
    birthdate: Date | null
    ssn: string | null
    otp_secret: string | null
    status: number | null
    is_verified: boolean | null
    deleted_at: Date | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type AdminsCountAggregateOutputType = {
    id: number
    first_name: number
    last_name: number
    gender: number
    email: number
    mobile_number: number
    password: number
    birthdate: number
    ssn: number
    otp_secret: number
    status: number
    is_verified: number
    deleted_at: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type AdminsAvgAggregateInputType = {
    id?: true
    status?: true
  }

  export type AdminsSumAggregateInputType = {
    id?: true
    status?: true
  }

  export type AdminsMinAggregateInputType = {
    id?: true
    first_name?: true
    last_name?: true
    gender?: true
    email?: true
    mobile_number?: true
    password?: true
    birthdate?: true
    ssn?: true
    otp_secret?: true
    status?: true
    is_verified?: true
    deleted_at?: true
    created_at?: true
    updated_at?: true
  }

  export type AdminsMaxAggregateInputType = {
    id?: true
    first_name?: true
    last_name?: true
    gender?: true
    email?: true
    mobile_number?: true
    password?: true
    birthdate?: true
    ssn?: true
    otp_secret?: true
    status?: true
    is_verified?: true
    deleted_at?: true
    created_at?: true
    updated_at?: true
  }

  export type AdminsCountAggregateInputType = {
    id?: true
    first_name?: true
    last_name?: true
    gender?: true
    email?: true
    mobile_number?: true
    password?: true
    birthdate?: true
    ssn?: true
    otp_secret?: true
    status?: true
    is_verified?: true
    deleted_at?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type AdminsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which admins to aggregate.
     */
    where?: adminsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of admins to fetch.
     */
    orderBy?: adminsOrderByWithRelationInput | adminsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: adminsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` admins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` admins.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned admins
    **/
    _count?: true | AdminsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AdminsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AdminsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AdminsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AdminsMaxAggregateInputType
  }

  export type GetAdminsAggregateType<T extends AdminsAggregateArgs> = {
        [P in keyof T & keyof AggregateAdmins]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAdmins[P]>
      : GetScalarType<T[P], AggregateAdmins[P]>
  }




  export type adminsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: adminsWhereInput
    orderBy?: adminsOrderByWithAggregationInput | adminsOrderByWithAggregationInput[]
    by: AdminsScalarFieldEnum[] | AdminsScalarFieldEnum
    having?: adminsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AdminsCountAggregateInputType | true
    _avg?: AdminsAvgAggregateInputType
    _sum?: AdminsSumAggregateInputType
    _min?: AdminsMinAggregateInputType
    _max?: AdminsMaxAggregateInputType
  }

  export type AdminsGroupByOutputType = {
    id: bigint
    first_name: string | null
    last_name: string | null
    gender: string | null
    email: string | null
    mobile_number: string
    password: string | null
    birthdate: Date | null
    ssn: string | null
    otp_secret: string | null
    status: number
    is_verified: boolean
    deleted_at: Date | null
    created_at: Date | null
    updated_at: Date | null
    _count: AdminsCountAggregateOutputType | null
    _avg: AdminsAvgAggregateOutputType | null
    _sum: AdminsSumAggregateOutputType | null
    _min: AdminsMinAggregateOutputType | null
    _max: AdminsMaxAggregateOutputType | null
  }

  type GetAdminsGroupByPayload<T extends adminsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AdminsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AdminsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AdminsGroupByOutputType[P]>
            : GetScalarType<T[P], AdminsGroupByOutputType[P]>
        }
      >
    >


  export type adminsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    first_name?: boolean
    last_name?: boolean
    gender?: boolean
    email?: boolean
    mobile_number?: boolean
    password?: boolean
    birthdate?: boolean
    ssn?: boolean
    otp_secret?: boolean
    status?: boolean
    is_verified?: boolean
    deleted_at?: boolean
    created_at?: boolean
    updated_at?: boolean
    provider_agents?: boolean | admins$provider_agentsArgs<ExtArgs>
    _count?: boolean | AdminsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["admins"]>

  export type adminsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    first_name?: boolean
    last_name?: boolean
    gender?: boolean
    email?: boolean
    mobile_number?: boolean
    password?: boolean
    birthdate?: boolean
    ssn?: boolean
    otp_secret?: boolean
    status?: boolean
    is_verified?: boolean
    deleted_at?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["admins"]>

  export type adminsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    first_name?: boolean
    last_name?: boolean
    gender?: boolean
    email?: boolean
    mobile_number?: boolean
    password?: boolean
    birthdate?: boolean
    ssn?: boolean
    otp_secret?: boolean
    status?: boolean
    is_verified?: boolean
    deleted_at?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["admins"]>

  export type adminsSelectScalar = {
    id?: boolean
    first_name?: boolean
    last_name?: boolean
    gender?: boolean
    email?: boolean
    mobile_number?: boolean
    password?: boolean
    birthdate?: boolean
    ssn?: boolean
    otp_secret?: boolean
    status?: boolean
    is_verified?: boolean
    deleted_at?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type adminsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "first_name" | "last_name" | "gender" | "email" | "mobile_number" | "password" | "birthdate" | "ssn" | "otp_secret" | "status" | "is_verified" | "deleted_at" | "created_at" | "updated_at", ExtArgs["result"]["admins"]>
  export type adminsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    provider_agents?: boolean | admins$provider_agentsArgs<ExtArgs>
    _count?: boolean | AdminsCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type adminsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type adminsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $adminsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "admins"
    objects: {
      provider_agents: Prisma.$provider_agentsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      first_name: string | null
      last_name: string | null
      gender: string | null
      email: string | null
      mobile_number: string
      password: string | null
      birthdate: Date | null
      ssn: string | null
      otp_secret: string | null
      status: number
      is_verified: boolean
      deleted_at: Date | null
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["admins"]>
    composites: {}
  }

  type adminsGetPayload<S extends boolean | null | undefined | adminsDefaultArgs> = $Result.GetResult<Prisma.$adminsPayload, S>

  type adminsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<adminsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit' | 'relationLoadStrategy'> & {
      select?: AdminsCountAggregateInputType | true
    }

  export interface adminsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['admins'], meta: { name: 'admins' } }
    /**
     * Find zero or one Admins that matches the filter.
     * @param {adminsFindUniqueArgs} args - Arguments to find a Admins
     * @example
     * // Get one Admins
     * const admins = await prisma.admins.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends adminsFindUniqueArgs>(args: SelectSubset<T, adminsFindUniqueArgs<ExtArgs>>): Prisma__adminsClient<$Result.GetResult<Prisma.$adminsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Admins that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {adminsFindUniqueOrThrowArgs} args - Arguments to find a Admins
     * @example
     * // Get one Admins
     * const admins = await prisma.admins.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends adminsFindUniqueOrThrowArgs>(args: SelectSubset<T, adminsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__adminsClient<$Result.GetResult<Prisma.$adminsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Admins that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {adminsFindFirstArgs} args - Arguments to find a Admins
     * @example
     * // Get one Admins
     * const admins = await prisma.admins.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends adminsFindFirstArgs>(args?: SelectSubset<T, adminsFindFirstArgs<ExtArgs>>): Prisma__adminsClient<$Result.GetResult<Prisma.$adminsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Admins that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {adminsFindFirstOrThrowArgs} args - Arguments to find a Admins
     * @example
     * // Get one Admins
     * const admins = await prisma.admins.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends adminsFindFirstOrThrowArgs>(args?: SelectSubset<T, adminsFindFirstOrThrowArgs<ExtArgs>>): Prisma__adminsClient<$Result.GetResult<Prisma.$adminsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Admins that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {adminsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Admins
     * const admins = await prisma.admins.findMany()
     * 
     * // Get first 10 Admins
     * const admins = await prisma.admins.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const adminsWithIdOnly = await prisma.admins.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends adminsFindManyArgs>(args?: SelectSubset<T, adminsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$adminsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Admins.
     * @param {adminsCreateArgs} args - Arguments to create a Admins.
     * @example
     * // Create one Admins
     * const Admins = await prisma.admins.create({
     *   data: {
     *     // ... data to create a Admins
     *   }
     * })
     * 
     */
    create<T extends adminsCreateArgs>(args: SelectSubset<T, adminsCreateArgs<ExtArgs>>): Prisma__adminsClient<$Result.GetResult<Prisma.$adminsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Admins.
     * @param {adminsCreateManyArgs} args - Arguments to create many Admins.
     * @example
     * // Create many Admins
     * const admins = await prisma.admins.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends adminsCreateManyArgs>(args?: SelectSubset<T, adminsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Admins and returns the data saved in the database.
     * @param {adminsCreateManyAndReturnArgs} args - Arguments to create many Admins.
     * @example
     * // Create many Admins
     * const admins = await prisma.admins.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Admins and only return the `id`
     * const adminsWithIdOnly = await prisma.admins.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends adminsCreateManyAndReturnArgs>(args?: SelectSubset<T, adminsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$adminsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Admins.
     * @param {adminsDeleteArgs} args - Arguments to delete one Admins.
     * @example
     * // Delete one Admins
     * const Admins = await prisma.admins.delete({
     *   where: {
     *     // ... filter to delete one Admins
     *   }
     * })
     * 
     */
    delete<T extends adminsDeleteArgs>(args: SelectSubset<T, adminsDeleteArgs<ExtArgs>>): Prisma__adminsClient<$Result.GetResult<Prisma.$adminsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Admins.
     * @param {adminsUpdateArgs} args - Arguments to update one Admins.
     * @example
     * // Update one Admins
     * const admins = await prisma.admins.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends adminsUpdateArgs>(args: SelectSubset<T, adminsUpdateArgs<ExtArgs>>): Prisma__adminsClient<$Result.GetResult<Prisma.$adminsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Admins.
     * @param {adminsDeleteManyArgs} args - Arguments to filter Admins to delete.
     * @example
     * // Delete a few Admins
     * const { count } = await prisma.admins.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends adminsDeleteManyArgs>(args?: SelectSubset<T, adminsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Admins.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {adminsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Admins
     * const admins = await prisma.admins.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends adminsUpdateManyArgs>(args: SelectSubset<T, adminsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Admins and returns the data updated in the database.
     * @param {adminsUpdateManyAndReturnArgs} args - Arguments to update many Admins.
     * @example
     * // Update many Admins
     * const admins = await prisma.admins.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Admins and only return the `id`
     * const adminsWithIdOnly = await prisma.admins.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends adminsUpdateManyAndReturnArgs>(args: SelectSubset<T, adminsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$adminsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Admins.
     * @param {adminsUpsertArgs} args - Arguments to update or create a Admins.
     * @example
     * // Update or create a Admins
     * const admins = await prisma.admins.upsert({
     *   create: {
     *     // ... data to create a Admins
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Admins we want to update
     *   }
     * })
     */
    upsert<T extends adminsUpsertArgs>(args: SelectSubset<T, adminsUpsertArgs<ExtArgs>>): Prisma__adminsClient<$Result.GetResult<Prisma.$adminsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Admins.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {adminsCountArgs} args - Arguments to filter Admins to count.
     * @example
     * // Count the number of Admins
     * const count = await prisma.admins.count({
     *   where: {
     *     // ... the filter for the Admins we want to count
     *   }
     * })
    **/
    count<T extends adminsCountArgs>(
      args?: Subset<T, adminsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AdminsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Admins.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AdminsAggregateArgs>(args: Subset<T, AdminsAggregateArgs>): Prisma.PrismaPromise<GetAdminsAggregateType<T>>

    /**
     * Group by Admins.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {adminsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends adminsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: adminsGroupByArgs['orderBy'] }
        : { orderBy?: adminsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, adminsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAdminsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the admins model
   */
  readonly fields: adminsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for admins.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__adminsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    provider_agents<T extends admins$provider_agentsArgs<ExtArgs> = {}>(args?: Subset<T, admins$provider_agentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$provider_agentsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the admins model
   */ 
  interface adminsFieldRefs {
    readonly id: FieldRef<"admins", 'BigInt'>
    readonly first_name: FieldRef<"admins", 'String'>
    readonly last_name: FieldRef<"admins", 'String'>
    readonly gender: FieldRef<"admins", 'String'>
    readonly email: FieldRef<"admins", 'String'>
    readonly mobile_number: FieldRef<"admins", 'String'>
    readonly password: FieldRef<"admins", 'String'>
    readonly birthdate: FieldRef<"admins", 'DateTime'>
    readonly ssn: FieldRef<"admins", 'String'>
    readonly otp_secret: FieldRef<"admins", 'String'>
    readonly status: FieldRef<"admins", 'Int'>
    readonly is_verified: FieldRef<"admins", 'Boolean'>
    readonly deleted_at: FieldRef<"admins", 'DateTime'>
    readonly created_at: FieldRef<"admins", 'DateTime'>
    readonly updated_at: FieldRef<"admins", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * admins findUnique
   */
  export type adminsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admins
     */
    select?: adminsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the admins
     */
    omit?: adminsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: adminsInclude<ExtArgs> | null
    /**
     * Filter, which admins to fetch.
     */
    where: adminsWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * admins findUniqueOrThrow
   */
  export type adminsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admins
     */
    select?: adminsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the admins
     */
    omit?: adminsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: adminsInclude<ExtArgs> | null
    /**
     * Filter, which admins to fetch.
     */
    where: adminsWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * admins findFirst
   */
  export type adminsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admins
     */
    select?: adminsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the admins
     */
    omit?: adminsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: adminsInclude<ExtArgs> | null
    /**
     * Filter, which admins to fetch.
     */
    where?: adminsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of admins to fetch.
     */
    orderBy?: adminsOrderByWithRelationInput | adminsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for admins.
     */
    cursor?: adminsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` admins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` admins.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of admins.
     */
    distinct?: AdminsScalarFieldEnum | AdminsScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * admins findFirstOrThrow
   */
  export type adminsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admins
     */
    select?: adminsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the admins
     */
    omit?: adminsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: adminsInclude<ExtArgs> | null
    /**
     * Filter, which admins to fetch.
     */
    where?: adminsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of admins to fetch.
     */
    orderBy?: adminsOrderByWithRelationInput | adminsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for admins.
     */
    cursor?: adminsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` admins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` admins.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of admins.
     */
    distinct?: AdminsScalarFieldEnum | AdminsScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * admins findMany
   */
  export type adminsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admins
     */
    select?: adminsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the admins
     */
    omit?: adminsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: adminsInclude<ExtArgs> | null
    /**
     * Filter, which admins to fetch.
     */
    where?: adminsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of admins to fetch.
     */
    orderBy?: adminsOrderByWithRelationInput | adminsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing admins.
     */
    cursor?: adminsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` admins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` admins.
     */
    skip?: number
    distinct?: AdminsScalarFieldEnum | AdminsScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * admins create
   */
  export type adminsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admins
     */
    select?: adminsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the admins
     */
    omit?: adminsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: adminsInclude<ExtArgs> | null
    /**
     * The data needed to create a admins.
     */
    data: XOR<adminsCreateInput, adminsUncheckedCreateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * admins createMany
   */
  export type adminsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many admins.
     */
    data: adminsCreateManyInput | adminsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * admins createManyAndReturn
   */
  export type adminsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admins
     */
    select?: adminsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the admins
     */
    omit?: adminsOmit<ExtArgs> | null
    /**
     * The data used to create many admins.
     */
    data: adminsCreateManyInput | adminsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * admins update
   */
  export type adminsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admins
     */
    select?: adminsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the admins
     */
    omit?: adminsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: adminsInclude<ExtArgs> | null
    /**
     * The data needed to update a admins.
     */
    data: XOR<adminsUpdateInput, adminsUncheckedUpdateInput>
    /**
     * Choose, which admins to update.
     */
    where: adminsWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * admins updateMany
   */
  export type adminsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update admins.
     */
    data: XOR<adminsUpdateManyMutationInput, adminsUncheckedUpdateManyInput>
    /**
     * Filter which admins to update
     */
    where?: adminsWhereInput
    /**
     * Limit how many admins to update.
     */
    limit?: number
  }

  /**
   * admins updateManyAndReturn
   */
  export type adminsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admins
     */
    select?: adminsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the admins
     */
    omit?: adminsOmit<ExtArgs> | null
    /**
     * The data used to update admins.
     */
    data: XOR<adminsUpdateManyMutationInput, adminsUncheckedUpdateManyInput>
    /**
     * Filter which admins to update
     */
    where?: adminsWhereInput
    /**
     * Limit how many admins to update.
     */
    limit?: number
  }

  /**
   * admins upsert
   */
  export type adminsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admins
     */
    select?: adminsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the admins
     */
    omit?: adminsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: adminsInclude<ExtArgs> | null
    /**
     * The filter to search for the admins to update in case it exists.
     */
    where: adminsWhereUniqueInput
    /**
     * In case the admins found by the `where` argument doesn't exist, create a new admins with this data.
     */
    create: XOR<adminsCreateInput, adminsUncheckedCreateInput>
    /**
     * In case the admins was found with the provided `where` argument, update it with this data.
     */
    update: XOR<adminsUpdateInput, adminsUncheckedUpdateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * admins delete
   */
  export type adminsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admins
     */
    select?: adminsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the admins
     */
    omit?: adminsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: adminsInclude<ExtArgs> | null
    /**
     * Filter which admins to delete.
     */
    where: adminsWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * admins deleteMany
   */
  export type adminsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which admins to delete
     */
    where?: adminsWhereInput
    /**
     * Limit how many admins to delete.
     */
    limit?: number
  }

  /**
   * admins.provider_agents
   */
  export type admins$provider_agentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the provider_agents
     */
    select?: provider_agentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the provider_agents
     */
    omit?: provider_agentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: provider_agentsInclude<ExtArgs> | null
    where?: provider_agentsWhereInput
    orderBy?: provider_agentsOrderByWithRelationInput | provider_agentsOrderByWithRelationInput[]
    cursor?: provider_agentsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Provider_agentsScalarFieldEnum | Provider_agentsScalarFieldEnum[]
  }

  /**
   * admins without action
   */
  export type adminsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admins
     */
    select?: adminsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the admins
     */
    omit?: adminsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: adminsInclude<ExtArgs> | null
  }


  /**
   * Model cache
   */

  export type AggregateCache = {
    _count: CacheCountAggregateOutputType | null
    _avg: CacheAvgAggregateOutputType | null
    _sum: CacheSumAggregateOutputType | null
    _min: CacheMinAggregateOutputType | null
    _max: CacheMaxAggregateOutputType | null
  }

  export type CacheAvgAggregateOutputType = {
    expiration: number | null
  }

  export type CacheSumAggregateOutputType = {
    expiration: number | null
  }

  export type CacheMinAggregateOutputType = {
    key: string | null
    value: string | null
    expiration: number | null
  }

  export type CacheMaxAggregateOutputType = {
    key: string | null
    value: string | null
    expiration: number | null
  }

  export type CacheCountAggregateOutputType = {
    key: number
    value: number
    expiration: number
    _all: number
  }


  export type CacheAvgAggregateInputType = {
    expiration?: true
  }

  export type CacheSumAggregateInputType = {
    expiration?: true
  }

  export type CacheMinAggregateInputType = {
    key?: true
    value?: true
    expiration?: true
  }

  export type CacheMaxAggregateInputType = {
    key?: true
    value?: true
    expiration?: true
  }

  export type CacheCountAggregateInputType = {
    key?: true
    value?: true
    expiration?: true
    _all?: true
  }

  export type CacheAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which cache to aggregate.
     */
    where?: cacheWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of caches to fetch.
     */
    orderBy?: cacheOrderByWithRelationInput | cacheOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: cacheWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` caches from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` caches.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned caches
    **/
    _count?: true | CacheCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CacheAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CacheSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CacheMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CacheMaxAggregateInputType
  }

  export type GetCacheAggregateType<T extends CacheAggregateArgs> = {
        [P in keyof T & keyof AggregateCache]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCache[P]>
      : GetScalarType<T[P], AggregateCache[P]>
  }




  export type cacheGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: cacheWhereInput
    orderBy?: cacheOrderByWithAggregationInput | cacheOrderByWithAggregationInput[]
    by: CacheScalarFieldEnum[] | CacheScalarFieldEnum
    having?: cacheScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CacheCountAggregateInputType | true
    _avg?: CacheAvgAggregateInputType
    _sum?: CacheSumAggregateInputType
    _min?: CacheMinAggregateInputType
    _max?: CacheMaxAggregateInputType
  }

  export type CacheGroupByOutputType = {
    key: string
    value: string
    expiration: number
    _count: CacheCountAggregateOutputType | null
    _avg: CacheAvgAggregateOutputType | null
    _sum: CacheSumAggregateOutputType | null
    _min: CacheMinAggregateOutputType | null
    _max: CacheMaxAggregateOutputType | null
  }

  type GetCacheGroupByPayload<T extends cacheGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CacheGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CacheGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CacheGroupByOutputType[P]>
            : GetScalarType<T[P], CacheGroupByOutputType[P]>
        }
      >
    >


  export type cacheSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    key?: boolean
    value?: boolean
    expiration?: boolean
  }, ExtArgs["result"]["cache"]>

  export type cacheSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    key?: boolean
    value?: boolean
    expiration?: boolean
  }, ExtArgs["result"]["cache"]>

  export type cacheSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    key?: boolean
    value?: boolean
    expiration?: boolean
  }, ExtArgs["result"]["cache"]>

  export type cacheSelectScalar = {
    key?: boolean
    value?: boolean
    expiration?: boolean
  }

  export type cacheOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"key" | "value" | "expiration", ExtArgs["result"]["cache"]>

  export type $cachePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "cache"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      key: string
      value: string
      expiration: number
    }, ExtArgs["result"]["cache"]>
    composites: {}
  }

  type cacheGetPayload<S extends boolean | null | undefined | cacheDefaultArgs> = $Result.GetResult<Prisma.$cachePayload, S>

  type cacheCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<cacheFindManyArgs, 'select' | 'include' | 'distinct' | 'omit' | 'relationLoadStrategy'> & {
      select?: CacheCountAggregateInputType | true
    }

  export interface cacheDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['cache'], meta: { name: 'cache' } }
    /**
     * Find zero or one Cache that matches the filter.
     * @param {cacheFindUniqueArgs} args - Arguments to find a Cache
     * @example
     * // Get one Cache
     * const cache = await prisma.cache.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends cacheFindUniqueArgs>(args: SelectSubset<T, cacheFindUniqueArgs<ExtArgs>>): Prisma__cacheClient<$Result.GetResult<Prisma.$cachePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Cache that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {cacheFindUniqueOrThrowArgs} args - Arguments to find a Cache
     * @example
     * // Get one Cache
     * const cache = await prisma.cache.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends cacheFindUniqueOrThrowArgs>(args: SelectSubset<T, cacheFindUniqueOrThrowArgs<ExtArgs>>): Prisma__cacheClient<$Result.GetResult<Prisma.$cachePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Cache that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cacheFindFirstArgs} args - Arguments to find a Cache
     * @example
     * // Get one Cache
     * const cache = await prisma.cache.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends cacheFindFirstArgs>(args?: SelectSubset<T, cacheFindFirstArgs<ExtArgs>>): Prisma__cacheClient<$Result.GetResult<Prisma.$cachePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Cache that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cacheFindFirstOrThrowArgs} args - Arguments to find a Cache
     * @example
     * // Get one Cache
     * const cache = await prisma.cache.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends cacheFindFirstOrThrowArgs>(args?: SelectSubset<T, cacheFindFirstOrThrowArgs<ExtArgs>>): Prisma__cacheClient<$Result.GetResult<Prisma.$cachePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Caches that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cacheFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Caches
     * const caches = await prisma.cache.findMany()
     * 
     * // Get first 10 Caches
     * const caches = await prisma.cache.findMany({ take: 10 })
     * 
     * // Only select the `key`
     * const cacheWithKeyOnly = await prisma.cache.findMany({ select: { key: true } })
     * 
     */
    findMany<T extends cacheFindManyArgs>(args?: SelectSubset<T, cacheFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cachePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Cache.
     * @param {cacheCreateArgs} args - Arguments to create a Cache.
     * @example
     * // Create one Cache
     * const Cache = await prisma.cache.create({
     *   data: {
     *     // ... data to create a Cache
     *   }
     * })
     * 
     */
    create<T extends cacheCreateArgs>(args: SelectSubset<T, cacheCreateArgs<ExtArgs>>): Prisma__cacheClient<$Result.GetResult<Prisma.$cachePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Caches.
     * @param {cacheCreateManyArgs} args - Arguments to create many Caches.
     * @example
     * // Create many Caches
     * const cache = await prisma.cache.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends cacheCreateManyArgs>(args?: SelectSubset<T, cacheCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Caches and returns the data saved in the database.
     * @param {cacheCreateManyAndReturnArgs} args - Arguments to create many Caches.
     * @example
     * // Create many Caches
     * const cache = await prisma.cache.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Caches and only return the `key`
     * const cacheWithKeyOnly = await prisma.cache.createManyAndReturn({
     *   select: { key: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends cacheCreateManyAndReturnArgs>(args?: SelectSubset<T, cacheCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cachePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Cache.
     * @param {cacheDeleteArgs} args - Arguments to delete one Cache.
     * @example
     * // Delete one Cache
     * const Cache = await prisma.cache.delete({
     *   where: {
     *     // ... filter to delete one Cache
     *   }
     * })
     * 
     */
    delete<T extends cacheDeleteArgs>(args: SelectSubset<T, cacheDeleteArgs<ExtArgs>>): Prisma__cacheClient<$Result.GetResult<Prisma.$cachePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Cache.
     * @param {cacheUpdateArgs} args - Arguments to update one Cache.
     * @example
     * // Update one Cache
     * const cache = await prisma.cache.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends cacheUpdateArgs>(args: SelectSubset<T, cacheUpdateArgs<ExtArgs>>): Prisma__cacheClient<$Result.GetResult<Prisma.$cachePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Caches.
     * @param {cacheDeleteManyArgs} args - Arguments to filter Caches to delete.
     * @example
     * // Delete a few Caches
     * const { count } = await prisma.cache.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends cacheDeleteManyArgs>(args?: SelectSubset<T, cacheDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Caches.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cacheUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Caches
     * const cache = await prisma.cache.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends cacheUpdateManyArgs>(args: SelectSubset<T, cacheUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Caches and returns the data updated in the database.
     * @param {cacheUpdateManyAndReturnArgs} args - Arguments to update many Caches.
     * @example
     * // Update many Caches
     * const cache = await prisma.cache.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Caches and only return the `key`
     * const cacheWithKeyOnly = await prisma.cache.updateManyAndReturn({
     *   select: { key: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends cacheUpdateManyAndReturnArgs>(args: SelectSubset<T, cacheUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cachePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Cache.
     * @param {cacheUpsertArgs} args - Arguments to update or create a Cache.
     * @example
     * // Update or create a Cache
     * const cache = await prisma.cache.upsert({
     *   create: {
     *     // ... data to create a Cache
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Cache we want to update
     *   }
     * })
     */
    upsert<T extends cacheUpsertArgs>(args: SelectSubset<T, cacheUpsertArgs<ExtArgs>>): Prisma__cacheClient<$Result.GetResult<Prisma.$cachePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Caches.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cacheCountArgs} args - Arguments to filter Caches to count.
     * @example
     * // Count the number of Caches
     * const count = await prisma.cache.count({
     *   where: {
     *     // ... the filter for the Caches we want to count
     *   }
     * })
    **/
    count<T extends cacheCountArgs>(
      args?: Subset<T, cacheCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CacheCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Cache.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CacheAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CacheAggregateArgs>(args: Subset<T, CacheAggregateArgs>): Prisma.PrismaPromise<GetCacheAggregateType<T>>

    /**
     * Group by Cache.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cacheGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends cacheGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: cacheGroupByArgs['orderBy'] }
        : { orderBy?: cacheGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, cacheGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCacheGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the cache model
   */
  readonly fields: cacheFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for cache.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__cacheClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the cache model
   */ 
  interface cacheFieldRefs {
    readonly key: FieldRef<"cache", 'String'>
    readonly value: FieldRef<"cache", 'String'>
    readonly expiration: FieldRef<"cache", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * cache findUnique
   */
  export type cacheFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cache
     */
    select?: cacheSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cache
     */
    omit?: cacheOmit<ExtArgs> | null
    /**
     * Filter, which cache to fetch.
     */
    where: cacheWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * cache findUniqueOrThrow
   */
  export type cacheFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cache
     */
    select?: cacheSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cache
     */
    omit?: cacheOmit<ExtArgs> | null
    /**
     * Filter, which cache to fetch.
     */
    where: cacheWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * cache findFirst
   */
  export type cacheFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cache
     */
    select?: cacheSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cache
     */
    omit?: cacheOmit<ExtArgs> | null
    /**
     * Filter, which cache to fetch.
     */
    where?: cacheWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of caches to fetch.
     */
    orderBy?: cacheOrderByWithRelationInput | cacheOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for caches.
     */
    cursor?: cacheWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` caches from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` caches.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of caches.
     */
    distinct?: CacheScalarFieldEnum | CacheScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * cache findFirstOrThrow
   */
  export type cacheFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cache
     */
    select?: cacheSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cache
     */
    omit?: cacheOmit<ExtArgs> | null
    /**
     * Filter, which cache to fetch.
     */
    where?: cacheWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of caches to fetch.
     */
    orderBy?: cacheOrderByWithRelationInput | cacheOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for caches.
     */
    cursor?: cacheWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` caches from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` caches.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of caches.
     */
    distinct?: CacheScalarFieldEnum | CacheScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * cache findMany
   */
  export type cacheFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cache
     */
    select?: cacheSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cache
     */
    omit?: cacheOmit<ExtArgs> | null
    /**
     * Filter, which caches to fetch.
     */
    where?: cacheWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of caches to fetch.
     */
    orderBy?: cacheOrderByWithRelationInput | cacheOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing caches.
     */
    cursor?: cacheWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` caches from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` caches.
     */
    skip?: number
    distinct?: CacheScalarFieldEnum | CacheScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * cache create
   */
  export type cacheCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cache
     */
    select?: cacheSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cache
     */
    omit?: cacheOmit<ExtArgs> | null
    /**
     * The data needed to create a cache.
     */
    data: XOR<cacheCreateInput, cacheUncheckedCreateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * cache createMany
   */
  export type cacheCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many caches.
     */
    data: cacheCreateManyInput | cacheCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * cache createManyAndReturn
   */
  export type cacheCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cache
     */
    select?: cacheSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the cache
     */
    omit?: cacheOmit<ExtArgs> | null
    /**
     * The data used to create many caches.
     */
    data: cacheCreateManyInput | cacheCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * cache update
   */
  export type cacheUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cache
     */
    select?: cacheSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cache
     */
    omit?: cacheOmit<ExtArgs> | null
    /**
     * The data needed to update a cache.
     */
    data: XOR<cacheUpdateInput, cacheUncheckedUpdateInput>
    /**
     * Choose, which cache to update.
     */
    where: cacheWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * cache updateMany
   */
  export type cacheUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update caches.
     */
    data: XOR<cacheUpdateManyMutationInput, cacheUncheckedUpdateManyInput>
    /**
     * Filter which caches to update
     */
    where?: cacheWhereInput
    /**
     * Limit how many caches to update.
     */
    limit?: number
  }

  /**
   * cache updateManyAndReturn
   */
  export type cacheUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cache
     */
    select?: cacheSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the cache
     */
    omit?: cacheOmit<ExtArgs> | null
    /**
     * The data used to update caches.
     */
    data: XOR<cacheUpdateManyMutationInput, cacheUncheckedUpdateManyInput>
    /**
     * Filter which caches to update
     */
    where?: cacheWhereInput
    /**
     * Limit how many caches to update.
     */
    limit?: number
  }

  /**
   * cache upsert
   */
  export type cacheUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cache
     */
    select?: cacheSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cache
     */
    omit?: cacheOmit<ExtArgs> | null
    /**
     * The filter to search for the cache to update in case it exists.
     */
    where: cacheWhereUniqueInput
    /**
     * In case the cache found by the `where` argument doesn't exist, create a new cache with this data.
     */
    create: XOR<cacheCreateInput, cacheUncheckedCreateInput>
    /**
     * In case the cache was found with the provided `where` argument, update it with this data.
     */
    update: XOR<cacheUpdateInput, cacheUncheckedUpdateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * cache delete
   */
  export type cacheDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cache
     */
    select?: cacheSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cache
     */
    omit?: cacheOmit<ExtArgs> | null
    /**
     * Filter which cache to delete.
     */
    where: cacheWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * cache deleteMany
   */
  export type cacheDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which caches to delete
     */
    where?: cacheWhereInput
    /**
     * Limit how many caches to delete.
     */
    limit?: number
  }

  /**
   * cache without action
   */
  export type cacheDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cache
     */
    select?: cacheSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cache
     */
    omit?: cacheOmit<ExtArgs> | null
  }


  /**
   * Model cache_locks
   */

  export type AggregateCache_locks = {
    _count: Cache_locksCountAggregateOutputType | null
    _avg: Cache_locksAvgAggregateOutputType | null
    _sum: Cache_locksSumAggregateOutputType | null
    _min: Cache_locksMinAggregateOutputType | null
    _max: Cache_locksMaxAggregateOutputType | null
  }

  export type Cache_locksAvgAggregateOutputType = {
    expiration: number | null
  }

  export type Cache_locksSumAggregateOutputType = {
    expiration: number | null
  }

  export type Cache_locksMinAggregateOutputType = {
    key: string | null
    owner: string | null
    expiration: number | null
  }

  export type Cache_locksMaxAggregateOutputType = {
    key: string | null
    owner: string | null
    expiration: number | null
  }

  export type Cache_locksCountAggregateOutputType = {
    key: number
    owner: number
    expiration: number
    _all: number
  }


  export type Cache_locksAvgAggregateInputType = {
    expiration?: true
  }

  export type Cache_locksSumAggregateInputType = {
    expiration?: true
  }

  export type Cache_locksMinAggregateInputType = {
    key?: true
    owner?: true
    expiration?: true
  }

  export type Cache_locksMaxAggregateInputType = {
    key?: true
    owner?: true
    expiration?: true
  }

  export type Cache_locksCountAggregateInputType = {
    key?: true
    owner?: true
    expiration?: true
    _all?: true
  }

  export type Cache_locksAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which cache_locks to aggregate.
     */
    where?: cache_locksWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cache_locks to fetch.
     */
    orderBy?: cache_locksOrderByWithRelationInput | cache_locksOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: cache_locksWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cache_locks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cache_locks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned cache_locks
    **/
    _count?: true | Cache_locksCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Cache_locksAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Cache_locksSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Cache_locksMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Cache_locksMaxAggregateInputType
  }

  export type GetCache_locksAggregateType<T extends Cache_locksAggregateArgs> = {
        [P in keyof T & keyof AggregateCache_locks]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCache_locks[P]>
      : GetScalarType<T[P], AggregateCache_locks[P]>
  }




  export type cache_locksGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: cache_locksWhereInput
    orderBy?: cache_locksOrderByWithAggregationInput | cache_locksOrderByWithAggregationInput[]
    by: Cache_locksScalarFieldEnum[] | Cache_locksScalarFieldEnum
    having?: cache_locksScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Cache_locksCountAggregateInputType | true
    _avg?: Cache_locksAvgAggregateInputType
    _sum?: Cache_locksSumAggregateInputType
    _min?: Cache_locksMinAggregateInputType
    _max?: Cache_locksMaxAggregateInputType
  }

  export type Cache_locksGroupByOutputType = {
    key: string
    owner: string
    expiration: number
    _count: Cache_locksCountAggregateOutputType | null
    _avg: Cache_locksAvgAggregateOutputType | null
    _sum: Cache_locksSumAggregateOutputType | null
    _min: Cache_locksMinAggregateOutputType | null
    _max: Cache_locksMaxAggregateOutputType | null
  }

  type GetCache_locksGroupByPayload<T extends cache_locksGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Cache_locksGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Cache_locksGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Cache_locksGroupByOutputType[P]>
            : GetScalarType<T[P], Cache_locksGroupByOutputType[P]>
        }
      >
    >


  export type cache_locksSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    key?: boolean
    owner?: boolean
    expiration?: boolean
  }, ExtArgs["result"]["cache_locks"]>

  export type cache_locksSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    key?: boolean
    owner?: boolean
    expiration?: boolean
  }, ExtArgs["result"]["cache_locks"]>

  export type cache_locksSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    key?: boolean
    owner?: boolean
    expiration?: boolean
  }, ExtArgs["result"]["cache_locks"]>

  export type cache_locksSelectScalar = {
    key?: boolean
    owner?: boolean
    expiration?: boolean
  }

  export type cache_locksOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"key" | "owner" | "expiration", ExtArgs["result"]["cache_locks"]>

  export type $cache_locksPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "cache_locks"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      key: string
      owner: string
      expiration: number
    }, ExtArgs["result"]["cache_locks"]>
    composites: {}
  }

  type cache_locksGetPayload<S extends boolean | null | undefined | cache_locksDefaultArgs> = $Result.GetResult<Prisma.$cache_locksPayload, S>

  type cache_locksCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<cache_locksFindManyArgs, 'select' | 'include' | 'distinct' | 'omit' | 'relationLoadStrategy'> & {
      select?: Cache_locksCountAggregateInputType | true
    }

  export interface cache_locksDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['cache_locks'], meta: { name: 'cache_locks' } }
    /**
     * Find zero or one Cache_locks that matches the filter.
     * @param {cache_locksFindUniqueArgs} args - Arguments to find a Cache_locks
     * @example
     * // Get one Cache_locks
     * const cache_locks = await prisma.cache_locks.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends cache_locksFindUniqueArgs>(args: SelectSubset<T, cache_locksFindUniqueArgs<ExtArgs>>): Prisma__cache_locksClient<$Result.GetResult<Prisma.$cache_locksPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Cache_locks that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {cache_locksFindUniqueOrThrowArgs} args - Arguments to find a Cache_locks
     * @example
     * // Get one Cache_locks
     * const cache_locks = await prisma.cache_locks.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends cache_locksFindUniqueOrThrowArgs>(args: SelectSubset<T, cache_locksFindUniqueOrThrowArgs<ExtArgs>>): Prisma__cache_locksClient<$Result.GetResult<Prisma.$cache_locksPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Cache_locks that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cache_locksFindFirstArgs} args - Arguments to find a Cache_locks
     * @example
     * // Get one Cache_locks
     * const cache_locks = await prisma.cache_locks.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends cache_locksFindFirstArgs>(args?: SelectSubset<T, cache_locksFindFirstArgs<ExtArgs>>): Prisma__cache_locksClient<$Result.GetResult<Prisma.$cache_locksPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Cache_locks that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cache_locksFindFirstOrThrowArgs} args - Arguments to find a Cache_locks
     * @example
     * // Get one Cache_locks
     * const cache_locks = await prisma.cache_locks.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends cache_locksFindFirstOrThrowArgs>(args?: SelectSubset<T, cache_locksFindFirstOrThrowArgs<ExtArgs>>): Prisma__cache_locksClient<$Result.GetResult<Prisma.$cache_locksPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Cache_locks that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cache_locksFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Cache_locks
     * const cache_locks = await prisma.cache_locks.findMany()
     * 
     * // Get first 10 Cache_locks
     * const cache_locks = await prisma.cache_locks.findMany({ take: 10 })
     * 
     * // Only select the `key`
     * const cache_locksWithKeyOnly = await prisma.cache_locks.findMany({ select: { key: true } })
     * 
     */
    findMany<T extends cache_locksFindManyArgs>(args?: SelectSubset<T, cache_locksFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cache_locksPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Cache_locks.
     * @param {cache_locksCreateArgs} args - Arguments to create a Cache_locks.
     * @example
     * // Create one Cache_locks
     * const Cache_locks = await prisma.cache_locks.create({
     *   data: {
     *     // ... data to create a Cache_locks
     *   }
     * })
     * 
     */
    create<T extends cache_locksCreateArgs>(args: SelectSubset<T, cache_locksCreateArgs<ExtArgs>>): Prisma__cache_locksClient<$Result.GetResult<Prisma.$cache_locksPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Cache_locks.
     * @param {cache_locksCreateManyArgs} args - Arguments to create many Cache_locks.
     * @example
     * // Create many Cache_locks
     * const cache_locks = await prisma.cache_locks.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends cache_locksCreateManyArgs>(args?: SelectSubset<T, cache_locksCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Cache_locks and returns the data saved in the database.
     * @param {cache_locksCreateManyAndReturnArgs} args - Arguments to create many Cache_locks.
     * @example
     * // Create many Cache_locks
     * const cache_locks = await prisma.cache_locks.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Cache_locks and only return the `key`
     * const cache_locksWithKeyOnly = await prisma.cache_locks.createManyAndReturn({
     *   select: { key: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends cache_locksCreateManyAndReturnArgs>(args?: SelectSubset<T, cache_locksCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cache_locksPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Cache_locks.
     * @param {cache_locksDeleteArgs} args - Arguments to delete one Cache_locks.
     * @example
     * // Delete one Cache_locks
     * const Cache_locks = await prisma.cache_locks.delete({
     *   where: {
     *     // ... filter to delete one Cache_locks
     *   }
     * })
     * 
     */
    delete<T extends cache_locksDeleteArgs>(args: SelectSubset<T, cache_locksDeleteArgs<ExtArgs>>): Prisma__cache_locksClient<$Result.GetResult<Prisma.$cache_locksPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Cache_locks.
     * @param {cache_locksUpdateArgs} args - Arguments to update one Cache_locks.
     * @example
     * // Update one Cache_locks
     * const cache_locks = await prisma.cache_locks.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends cache_locksUpdateArgs>(args: SelectSubset<T, cache_locksUpdateArgs<ExtArgs>>): Prisma__cache_locksClient<$Result.GetResult<Prisma.$cache_locksPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Cache_locks.
     * @param {cache_locksDeleteManyArgs} args - Arguments to filter Cache_locks to delete.
     * @example
     * // Delete a few Cache_locks
     * const { count } = await prisma.cache_locks.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends cache_locksDeleteManyArgs>(args?: SelectSubset<T, cache_locksDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Cache_locks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cache_locksUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Cache_locks
     * const cache_locks = await prisma.cache_locks.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends cache_locksUpdateManyArgs>(args: SelectSubset<T, cache_locksUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Cache_locks and returns the data updated in the database.
     * @param {cache_locksUpdateManyAndReturnArgs} args - Arguments to update many Cache_locks.
     * @example
     * // Update many Cache_locks
     * const cache_locks = await prisma.cache_locks.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Cache_locks and only return the `key`
     * const cache_locksWithKeyOnly = await prisma.cache_locks.updateManyAndReturn({
     *   select: { key: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends cache_locksUpdateManyAndReturnArgs>(args: SelectSubset<T, cache_locksUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cache_locksPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Cache_locks.
     * @param {cache_locksUpsertArgs} args - Arguments to update or create a Cache_locks.
     * @example
     * // Update or create a Cache_locks
     * const cache_locks = await prisma.cache_locks.upsert({
     *   create: {
     *     // ... data to create a Cache_locks
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Cache_locks we want to update
     *   }
     * })
     */
    upsert<T extends cache_locksUpsertArgs>(args: SelectSubset<T, cache_locksUpsertArgs<ExtArgs>>): Prisma__cache_locksClient<$Result.GetResult<Prisma.$cache_locksPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Cache_locks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cache_locksCountArgs} args - Arguments to filter Cache_locks to count.
     * @example
     * // Count the number of Cache_locks
     * const count = await prisma.cache_locks.count({
     *   where: {
     *     // ... the filter for the Cache_locks we want to count
     *   }
     * })
    **/
    count<T extends cache_locksCountArgs>(
      args?: Subset<T, cache_locksCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Cache_locksCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Cache_locks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Cache_locksAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Cache_locksAggregateArgs>(args: Subset<T, Cache_locksAggregateArgs>): Prisma.PrismaPromise<GetCache_locksAggregateType<T>>

    /**
     * Group by Cache_locks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cache_locksGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends cache_locksGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: cache_locksGroupByArgs['orderBy'] }
        : { orderBy?: cache_locksGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, cache_locksGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCache_locksGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the cache_locks model
   */
  readonly fields: cache_locksFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for cache_locks.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__cache_locksClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the cache_locks model
   */ 
  interface cache_locksFieldRefs {
    readonly key: FieldRef<"cache_locks", 'String'>
    readonly owner: FieldRef<"cache_locks", 'String'>
    readonly expiration: FieldRef<"cache_locks", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * cache_locks findUnique
   */
  export type cache_locksFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cache_locks
     */
    select?: cache_locksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cache_locks
     */
    omit?: cache_locksOmit<ExtArgs> | null
    /**
     * Filter, which cache_locks to fetch.
     */
    where: cache_locksWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * cache_locks findUniqueOrThrow
   */
  export type cache_locksFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cache_locks
     */
    select?: cache_locksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cache_locks
     */
    omit?: cache_locksOmit<ExtArgs> | null
    /**
     * Filter, which cache_locks to fetch.
     */
    where: cache_locksWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * cache_locks findFirst
   */
  export type cache_locksFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cache_locks
     */
    select?: cache_locksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cache_locks
     */
    omit?: cache_locksOmit<ExtArgs> | null
    /**
     * Filter, which cache_locks to fetch.
     */
    where?: cache_locksWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cache_locks to fetch.
     */
    orderBy?: cache_locksOrderByWithRelationInput | cache_locksOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for cache_locks.
     */
    cursor?: cache_locksWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cache_locks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cache_locks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of cache_locks.
     */
    distinct?: Cache_locksScalarFieldEnum | Cache_locksScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * cache_locks findFirstOrThrow
   */
  export type cache_locksFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cache_locks
     */
    select?: cache_locksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cache_locks
     */
    omit?: cache_locksOmit<ExtArgs> | null
    /**
     * Filter, which cache_locks to fetch.
     */
    where?: cache_locksWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cache_locks to fetch.
     */
    orderBy?: cache_locksOrderByWithRelationInput | cache_locksOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for cache_locks.
     */
    cursor?: cache_locksWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cache_locks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cache_locks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of cache_locks.
     */
    distinct?: Cache_locksScalarFieldEnum | Cache_locksScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * cache_locks findMany
   */
  export type cache_locksFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cache_locks
     */
    select?: cache_locksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cache_locks
     */
    omit?: cache_locksOmit<ExtArgs> | null
    /**
     * Filter, which cache_locks to fetch.
     */
    where?: cache_locksWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cache_locks to fetch.
     */
    orderBy?: cache_locksOrderByWithRelationInput | cache_locksOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing cache_locks.
     */
    cursor?: cache_locksWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cache_locks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cache_locks.
     */
    skip?: number
    distinct?: Cache_locksScalarFieldEnum | Cache_locksScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * cache_locks create
   */
  export type cache_locksCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cache_locks
     */
    select?: cache_locksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cache_locks
     */
    omit?: cache_locksOmit<ExtArgs> | null
    /**
     * The data needed to create a cache_locks.
     */
    data: XOR<cache_locksCreateInput, cache_locksUncheckedCreateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * cache_locks createMany
   */
  export type cache_locksCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many cache_locks.
     */
    data: cache_locksCreateManyInput | cache_locksCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * cache_locks createManyAndReturn
   */
  export type cache_locksCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cache_locks
     */
    select?: cache_locksSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the cache_locks
     */
    omit?: cache_locksOmit<ExtArgs> | null
    /**
     * The data used to create many cache_locks.
     */
    data: cache_locksCreateManyInput | cache_locksCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * cache_locks update
   */
  export type cache_locksUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cache_locks
     */
    select?: cache_locksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cache_locks
     */
    omit?: cache_locksOmit<ExtArgs> | null
    /**
     * The data needed to update a cache_locks.
     */
    data: XOR<cache_locksUpdateInput, cache_locksUncheckedUpdateInput>
    /**
     * Choose, which cache_locks to update.
     */
    where: cache_locksWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * cache_locks updateMany
   */
  export type cache_locksUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update cache_locks.
     */
    data: XOR<cache_locksUpdateManyMutationInput, cache_locksUncheckedUpdateManyInput>
    /**
     * Filter which cache_locks to update
     */
    where?: cache_locksWhereInput
    /**
     * Limit how many cache_locks to update.
     */
    limit?: number
  }

  /**
   * cache_locks updateManyAndReturn
   */
  export type cache_locksUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cache_locks
     */
    select?: cache_locksSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the cache_locks
     */
    omit?: cache_locksOmit<ExtArgs> | null
    /**
     * The data used to update cache_locks.
     */
    data: XOR<cache_locksUpdateManyMutationInput, cache_locksUncheckedUpdateManyInput>
    /**
     * Filter which cache_locks to update
     */
    where?: cache_locksWhereInput
    /**
     * Limit how many cache_locks to update.
     */
    limit?: number
  }

  /**
   * cache_locks upsert
   */
  export type cache_locksUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cache_locks
     */
    select?: cache_locksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cache_locks
     */
    omit?: cache_locksOmit<ExtArgs> | null
    /**
     * The filter to search for the cache_locks to update in case it exists.
     */
    where: cache_locksWhereUniqueInput
    /**
     * In case the cache_locks found by the `where` argument doesn't exist, create a new cache_locks with this data.
     */
    create: XOR<cache_locksCreateInput, cache_locksUncheckedCreateInput>
    /**
     * In case the cache_locks was found with the provided `where` argument, update it with this data.
     */
    update: XOR<cache_locksUpdateInput, cache_locksUncheckedUpdateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * cache_locks delete
   */
  export type cache_locksDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cache_locks
     */
    select?: cache_locksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cache_locks
     */
    omit?: cache_locksOmit<ExtArgs> | null
    /**
     * Filter which cache_locks to delete.
     */
    where: cache_locksWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * cache_locks deleteMany
   */
  export type cache_locksDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which cache_locks to delete
     */
    where?: cache_locksWhereInput
    /**
     * Limit how many cache_locks to delete.
     */
    limit?: number
  }

  /**
   * cache_locks without action
   */
  export type cache_locksDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cache_locks
     */
    select?: cache_locksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cache_locks
     */
    omit?: cache_locksOmit<ExtArgs> | null
  }


  /**
   * Model customer_subscriptions
   */

  export type AggregateCustomer_subscriptions = {
    _count: Customer_subscriptionsCountAggregateOutputType | null
    _avg: Customer_subscriptionsAvgAggregateOutputType | null
    _sum: Customer_subscriptionsSumAggregateOutputType | null
    _min: Customer_subscriptionsMinAggregateOutputType | null
    _max: Customer_subscriptionsMaxAggregateOutputType | null
  }

  export type Customer_subscriptionsAvgAggregateOutputType = {
    id: number | null
    customer_id: number | null
    subscription_plan_id: number | null
    order_id: number | null
    status: number | null
  }

  export type Customer_subscriptionsSumAggregateOutputType = {
    id: bigint | null
    customer_id: bigint | null
    subscription_plan_id: bigint | null
    order_id: bigint | null
    status: number | null
  }

  export type Customer_subscriptionsMinAggregateOutputType = {
    id: bigint | null
    customer_id: bigint | null
    subscription_plan_id: bigint | null
    order_id: bigint | null
    start_date: Date | null
    end_date: Date | null
    status: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Customer_subscriptionsMaxAggregateOutputType = {
    id: bigint | null
    customer_id: bigint | null
    subscription_plan_id: bigint | null
    order_id: bigint | null
    start_date: Date | null
    end_date: Date | null
    status: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Customer_subscriptionsCountAggregateOutputType = {
    id: number
    customer_id: number
    subscription_plan_id: number
    order_id: number
    start_date: number
    end_date: number
    status: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Customer_subscriptionsAvgAggregateInputType = {
    id?: true
    customer_id?: true
    subscription_plan_id?: true
    order_id?: true
    status?: true
  }

  export type Customer_subscriptionsSumAggregateInputType = {
    id?: true
    customer_id?: true
    subscription_plan_id?: true
    order_id?: true
    status?: true
  }

  export type Customer_subscriptionsMinAggregateInputType = {
    id?: true
    customer_id?: true
    subscription_plan_id?: true
    order_id?: true
    start_date?: true
    end_date?: true
    status?: true
    created_at?: true
    updated_at?: true
  }

  export type Customer_subscriptionsMaxAggregateInputType = {
    id?: true
    customer_id?: true
    subscription_plan_id?: true
    order_id?: true
    start_date?: true
    end_date?: true
    status?: true
    created_at?: true
    updated_at?: true
  }

  export type Customer_subscriptionsCountAggregateInputType = {
    id?: true
    customer_id?: true
    subscription_plan_id?: true
    order_id?: true
    start_date?: true
    end_date?: true
    status?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Customer_subscriptionsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which customer_subscriptions to aggregate.
     */
    where?: customer_subscriptionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of customer_subscriptions to fetch.
     */
    orderBy?: customer_subscriptionsOrderByWithRelationInput | customer_subscriptionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: customer_subscriptionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` customer_subscriptions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` customer_subscriptions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned customer_subscriptions
    **/
    _count?: true | Customer_subscriptionsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Customer_subscriptionsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Customer_subscriptionsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Customer_subscriptionsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Customer_subscriptionsMaxAggregateInputType
  }

  export type GetCustomer_subscriptionsAggregateType<T extends Customer_subscriptionsAggregateArgs> = {
        [P in keyof T & keyof AggregateCustomer_subscriptions]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCustomer_subscriptions[P]>
      : GetScalarType<T[P], AggregateCustomer_subscriptions[P]>
  }




  export type customer_subscriptionsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: customer_subscriptionsWhereInput
    orderBy?: customer_subscriptionsOrderByWithAggregationInput | customer_subscriptionsOrderByWithAggregationInput[]
    by: Customer_subscriptionsScalarFieldEnum[] | Customer_subscriptionsScalarFieldEnum
    having?: customer_subscriptionsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Customer_subscriptionsCountAggregateInputType | true
    _avg?: Customer_subscriptionsAvgAggregateInputType
    _sum?: Customer_subscriptionsSumAggregateInputType
    _min?: Customer_subscriptionsMinAggregateInputType
    _max?: Customer_subscriptionsMaxAggregateInputType
  }

  export type Customer_subscriptionsGroupByOutputType = {
    id: bigint
    customer_id: bigint
    subscription_plan_id: bigint
    order_id: bigint
    start_date: Date
    end_date: Date
    status: number
    created_at: Date | null
    updated_at: Date | null
    _count: Customer_subscriptionsCountAggregateOutputType | null
    _avg: Customer_subscriptionsAvgAggregateOutputType | null
    _sum: Customer_subscriptionsSumAggregateOutputType | null
    _min: Customer_subscriptionsMinAggregateOutputType | null
    _max: Customer_subscriptionsMaxAggregateOutputType | null
  }

  type GetCustomer_subscriptionsGroupByPayload<T extends customer_subscriptionsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Customer_subscriptionsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Customer_subscriptionsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Customer_subscriptionsGroupByOutputType[P]>
            : GetScalarType<T[P], Customer_subscriptionsGroupByOutputType[P]>
        }
      >
    >


  export type customer_subscriptionsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    customer_id?: boolean
    subscription_plan_id?: boolean
    order_id?: boolean
    start_date?: boolean
    end_date?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
    customers?: boolean | customersDefaultArgs<ExtArgs>
    orders?: boolean | ordersDefaultArgs<ExtArgs>
    subscription_plans?: boolean | subscription_plansDefaultArgs<ExtArgs>
    subscription_usages?: boolean | customer_subscriptions$subscription_usagesArgs<ExtArgs>
    _count?: boolean | Customer_subscriptionsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["customer_subscriptions"]>

  export type customer_subscriptionsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    customer_id?: boolean
    subscription_plan_id?: boolean
    order_id?: boolean
    start_date?: boolean
    end_date?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
    customers?: boolean | customersDefaultArgs<ExtArgs>
    orders?: boolean | ordersDefaultArgs<ExtArgs>
    subscription_plans?: boolean | subscription_plansDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["customer_subscriptions"]>

  export type customer_subscriptionsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    customer_id?: boolean
    subscription_plan_id?: boolean
    order_id?: boolean
    start_date?: boolean
    end_date?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
    customers?: boolean | customersDefaultArgs<ExtArgs>
    orders?: boolean | ordersDefaultArgs<ExtArgs>
    subscription_plans?: boolean | subscription_plansDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["customer_subscriptions"]>

  export type customer_subscriptionsSelectScalar = {
    id?: boolean
    customer_id?: boolean
    subscription_plan_id?: boolean
    order_id?: boolean
    start_date?: boolean
    end_date?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type customer_subscriptionsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "customer_id" | "subscription_plan_id" | "order_id" | "start_date" | "end_date" | "status" | "created_at" | "updated_at", ExtArgs["result"]["customer_subscriptions"]>
  export type customer_subscriptionsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    customers?: boolean | customersDefaultArgs<ExtArgs>
    orders?: boolean | ordersDefaultArgs<ExtArgs>
    subscription_plans?: boolean | subscription_plansDefaultArgs<ExtArgs>
    subscription_usages?: boolean | customer_subscriptions$subscription_usagesArgs<ExtArgs>
    _count?: boolean | Customer_subscriptionsCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type customer_subscriptionsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    customers?: boolean | customersDefaultArgs<ExtArgs>
    orders?: boolean | ordersDefaultArgs<ExtArgs>
    subscription_plans?: boolean | subscription_plansDefaultArgs<ExtArgs>
  }
  export type customer_subscriptionsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    customers?: boolean | customersDefaultArgs<ExtArgs>
    orders?: boolean | ordersDefaultArgs<ExtArgs>
    subscription_plans?: boolean | subscription_plansDefaultArgs<ExtArgs>
  }

  export type $customer_subscriptionsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "customer_subscriptions"
    objects: {
      customers: Prisma.$customersPayload<ExtArgs>
      orders: Prisma.$ordersPayload<ExtArgs>
      subscription_plans: Prisma.$subscription_plansPayload<ExtArgs>
      subscription_usages: Prisma.$subscription_usagesPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      customer_id: bigint
      subscription_plan_id: bigint
      order_id: bigint
      start_date: Date
      end_date: Date
      status: number
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["customer_subscriptions"]>
    composites: {}
  }

  type customer_subscriptionsGetPayload<S extends boolean | null | undefined | customer_subscriptionsDefaultArgs> = $Result.GetResult<Prisma.$customer_subscriptionsPayload, S>

  type customer_subscriptionsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<customer_subscriptionsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit' | 'relationLoadStrategy'> & {
      select?: Customer_subscriptionsCountAggregateInputType | true
    }

  export interface customer_subscriptionsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['customer_subscriptions'], meta: { name: 'customer_subscriptions' } }
    /**
     * Find zero or one Customer_subscriptions that matches the filter.
     * @param {customer_subscriptionsFindUniqueArgs} args - Arguments to find a Customer_subscriptions
     * @example
     * // Get one Customer_subscriptions
     * const customer_subscriptions = await prisma.customer_subscriptions.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends customer_subscriptionsFindUniqueArgs>(args: SelectSubset<T, customer_subscriptionsFindUniqueArgs<ExtArgs>>): Prisma__customer_subscriptionsClient<$Result.GetResult<Prisma.$customer_subscriptionsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Customer_subscriptions that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {customer_subscriptionsFindUniqueOrThrowArgs} args - Arguments to find a Customer_subscriptions
     * @example
     * // Get one Customer_subscriptions
     * const customer_subscriptions = await prisma.customer_subscriptions.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends customer_subscriptionsFindUniqueOrThrowArgs>(args: SelectSubset<T, customer_subscriptionsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__customer_subscriptionsClient<$Result.GetResult<Prisma.$customer_subscriptionsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Customer_subscriptions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {customer_subscriptionsFindFirstArgs} args - Arguments to find a Customer_subscriptions
     * @example
     * // Get one Customer_subscriptions
     * const customer_subscriptions = await prisma.customer_subscriptions.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends customer_subscriptionsFindFirstArgs>(args?: SelectSubset<T, customer_subscriptionsFindFirstArgs<ExtArgs>>): Prisma__customer_subscriptionsClient<$Result.GetResult<Prisma.$customer_subscriptionsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Customer_subscriptions that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {customer_subscriptionsFindFirstOrThrowArgs} args - Arguments to find a Customer_subscriptions
     * @example
     * // Get one Customer_subscriptions
     * const customer_subscriptions = await prisma.customer_subscriptions.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends customer_subscriptionsFindFirstOrThrowArgs>(args?: SelectSubset<T, customer_subscriptionsFindFirstOrThrowArgs<ExtArgs>>): Prisma__customer_subscriptionsClient<$Result.GetResult<Prisma.$customer_subscriptionsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Customer_subscriptions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {customer_subscriptionsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Customer_subscriptions
     * const customer_subscriptions = await prisma.customer_subscriptions.findMany()
     * 
     * // Get first 10 Customer_subscriptions
     * const customer_subscriptions = await prisma.customer_subscriptions.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const customer_subscriptionsWithIdOnly = await prisma.customer_subscriptions.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends customer_subscriptionsFindManyArgs>(args?: SelectSubset<T, customer_subscriptionsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$customer_subscriptionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Customer_subscriptions.
     * @param {customer_subscriptionsCreateArgs} args - Arguments to create a Customer_subscriptions.
     * @example
     * // Create one Customer_subscriptions
     * const Customer_subscriptions = await prisma.customer_subscriptions.create({
     *   data: {
     *     // ... data to create a Customer_subscriptions
     *   }
     * })
     * 
     */
    create<T extends customer_subscriptionsCreateArgs>(args: SelectSubset<T, customer_subscriptionsCreateArgs<ExtArgs>>): Prisma__customer_subscriptionsClient<$Result.GetResult<Prisma.$customer_subscriptionsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Customer_subscriptions.
     * @param {customer_subscriptionsCreateManyArgs} args - Arguments to create many Customer_subscriptions.
     * @example
     * // Create many Customer_subscriptions
     * const customer_subscriptions = await prisma.customer_subscriptions.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends customer_subscriptionsCreateManyArgs>(args?: SelectSubset<T, customer_subscriptionsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Customer_subscriptions and returns the data saved in the database.
     * @param {customer_subscriptionsCreateManyAndReturnArgs} args - Arguments to create many Customer_subscriptions.
     * @example
     * // Create many Customer_subscriptions
     * const customer_subscriptions = await prisma.customer_subscriptions.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Customer_subscriptions and only return the `id`
     * const customer_subscriptionsWithIdOnly = await prisma.customer_subscriptions.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends customer_subscriptionsCreateManyAndReturnArgs>(args?: SelectSubset<T, customer_subscriptionsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$customer_subscriptionsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Customer_subscriptions.
     * @param {customer_subscriptionsDeleteArgs} args - Arguments to delete one Customer_subscriptions.
     * @example
     * // Delete one Customer_subscriptions
     * const Customer_subscriptions = await prisma.customer_subscriptions.delete({
     *   where: {
     *     // ... filter to delete one Customer_subscriptions
     *   }
     * })
     * 
     */
    delete<T extends customer_subscriptionsDeleteArgs>(args: SelectSubset<T, customer_subscriptionsDeleteArgs<ExtArgs>>): Prisma__customer_subscriptionsClient<$Result.GetResult<Prisma.$customer_subscriptionsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Customer_subscriptions.
     * @param {customer_subscriptionsUpdateArgs} args - Arguments to update one Customer_subscriptions.
     * @example
     * // Update one Customer_subscriptions
     * const customer_subscriptions = await prisma.customer_subscriptions.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends customer_subscriptionsUpdateArgs>(args: SelectSubset<T, customer_subscriptionsUpdateArgs<ExtArgs>>): Prisma__customer_subscriptionsClient<$Result.GetResult<Prisma.$customer_subscriptionsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Customer_subscriptions.
     * @param {customer_subscriptionsDeleteManyArgs} args - Arguments to filter Customer_subscriptions to delete.
     * @example
     * // Delete a few Customer_subscriptions
     * const { count } = await prisma.customer_subscriptions.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends customer_subscriptionsDeleteManyArgs>(args?: SelectSubset<T, customer_subscriptionsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Customer_subscriptions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {customer_subscriptionsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Customer_subscriptions
     * const customer_subscriptions = await prisma.customer_subscriptions.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends customer_subscriptionsUpdateManyArgs>(args: SelectSubset<T, customer_subscriptionsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Customer_subscriptions and returns the data updated in the database.
     * @param {customer_subscriptionsUpdateManyAndReturnArgs} args - Arguments to update many Customer_subscriptions.
     * @example
     * // Update many Customer_subscriptions
     * const customer_subscriptions = await prisma.customer_subscriptions.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Customer_subscriptions and only return the `id`
     * const customer_subscriptionsWithIdOnly = await prisma.customer_subscriptions.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends customer_subscriptionsUpdateManyAndReturnArgs>(args: SelectSubset<T, customer_subscriptionsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$customer_subscriptionsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Customer_subscriptions.
     * @param {customer_subscriptionsUpsertArgs} args - Arguments to update or create a Customer_subscriptions.
     * @example
     * // Update or create a Customer_subscriptions
     * const customer_subscriptions = await prisma.customer_subscriptions.upsert({
     *   create: {
     *     // ... data to create a Customer_subscriptions
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Customer_subscriptions we want to update
     *   }
     * })
     */
    upsert<T extends customer_subscriptionsUpsertArgs>(args: SelectSubset<T, customer_subscriptionsUpsertArgs<ExtArgs>>): Prisma__customer_subscriptionsClient<$Result.GetResult<Prisma.$customer_subscriptionsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Customer_subscriptions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {customer_subscriptionsCountArgs} args - Arguments to filter Customer_subscriptions to count.
     * @example
     * // Count the number of Customer_subscriptions
     * const count = await prisma.customer_subscriptions.count({
     *   where: {
     *     // ... the filter for the Customer_subscriptions we want to count
     *   }
     * })
    **/
    count<T extends customer_subscriptionsCountArgs>(
      args?: Subset<T, customer_subscriptionsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Customer_subscriptionsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Customer_subscriptions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Customer_subscriptionsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Customer_subscriptionsAggregateArgs>(args: Subset<T, Customer_subscriptionsAggregateArgs>): Prisma.PrismaPromise<GetCustomer_subscriptionsAggregateType<T>>

    /**
     * Group by Customer_subscriptions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {customer_subscriptionsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends customer_subscriptionsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: customer_subscriptionsGroupByArgs['orderBy'] }
        : { orderBy?: customer_subscriptionsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, customer_subscriptionsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCustomer_subscriptionsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the customer_subscriptions model
   */
  readonly fields: customer_subscriptionsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for customer_subscriptions.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__customer_subscriptionsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    customers<T extends customersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, customersDefaultArgs<ExtArgs>>): Prisma__customersClient<$Result.GetResult<Prisma.$customersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    orders<T extends ordersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ordersDefaultArgs<ExtArgs>>): Prisma__ordersClient<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    subscription_plans<T extends subscription_plansDefaultArgs<ExtArgs> = {}>(args?: Subset<T, subscription_plansDefaultArgs<ExtArgs>>): Prisma__subscription_plansClient<$Result.GetResult<Prisma.$subscription_plansPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    subscription_usages<T extends customer_subscriptions$subscription_usagesArgs<ExtArgs> = {}>(args?: Subset<T, customer_subscriptions$subscription_usagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$subscription_usagesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the customer_subscriptions model
   */ 
  interface customer_subscriptionsFieldRefs {
    readonly id: FieldRef<"customer_subscriptions", 'BigInt'>
    readonly customer_id: FieldRef<"customer_subscriptions", 'BigInt'>
    readonly subscription_plan_id: FieldRef<"customer_subscriptions", 'BigInt'>
    readonly order_id: FieldRef<"customer_subscriptions", 'BigInt'>
    readonly start_date: FieldRef<"customer_subscriptions", 'DateTime'>
    readonly end_date: FieldRef<"customer_subscriptions", 'DateTime'>
    readonly status: FieldRef<"customer_subscriptions", 'Int'>
    readonly created_at: FieldRef<"customer_subscriptions", 'DateTime'>
    readonly updated_at: FieldRef<"customer_subscriptions", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * customer_subscriptions findUnique
   */
  export type customer_subscriptionsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the customer_subscriptions
     */
    select?: customer_subscriptionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the customer_subscriptions
     */
    omit?: customer_subscriptionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: customer_subscriptionsInclude<ExtArgs> | null
    /**
     * Filter, which customer_subscriptions to fetch.
     */
    where: customer_subscriptionsWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * customer_subscriptions findUniqueOrThrow
   */
  export type customer_subscriptionsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the customer_subscriptions
     */
    select?: customer_subscriptionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the customer_subscriptions
     */
    omit?: customer_subscriptionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: customer_subscriptionsInclude<ExtArgs> | null
    /**
     * Filter, which customer_subscriptions to fetch.
     */
    where: customer_subscriptionsWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * customer_subscriptions findFirst
   */
  export type customer_subscriptionsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the customer_subscriptions
     */
    select?: customer_subscriptionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the customer_subscriptions
     */
    omit?: customer_subscriptionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: customer_subscriptionsInclude<ExtArgs> | null
    /**
     * Filter, which customer_subscriptions to fetch.
     */
    where?: customer_subscriptionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of customer_subscriptions to fetch.
     */
    orderBy?: customer_subscriptionsOrderByWithRelationInput | customer_subscriptionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for customer_subscriptions.
     */
    cursor?: customer_subscriptionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` customer_subscriptions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` customer_subscriptions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of customer_subscriptions.
     */
    distinct?: Customer_subscriptionsScalarFieldEnum | Customer_subscriptionsScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * customer_subscriptions findFirstOrThrow
   */
  export type customer_subscriptionsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the customer_subscriptions
     */
    select?: customer_subscriptionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the customer_subscriptions
     */
    omit?: customer_subscriptionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: customer_subscriptionsInclude<ExtArgs> | null
    /**
     * Filter, which customer_subscriptions to fetch.
     */
    where?: customer_subscriptionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of customer_subscriptions to fetch.
     */
    orderBy?: customer_subscriptionsOrderByWithRelationInput | customer_subscriptionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for customer_subscriptions.
     */
    cursor?: customer_subscriptionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` customer_subscriptions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` customer_subscriptions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of customer_subscriptions.
     */
    distinct?: Customer_subscriptionsScalarFieldEnum | Customer_subscriptionsScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * customer_subscriptions findMany
   */
  export type customer_subscriptionsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the customer_subscriptions
     */
    select?: customer_subscriptionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the customer_subscriptions
     */
    omit?: customer_subscriptionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: customer_subscriptionsInclude<ExtArgs> | null
    /**
     * Filter, which customer_subscriptions to fetch.
     */
    where?: customer_subscriptionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of customer_subscriptions to fetch.
     */
    orderBy?: customer_subscriptionsOrderByWithRelationInput | customer_subscriptionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing customer_subscriptions.
     */
    cursor?: customer_subscriptionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` customer_subscriptions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` customer_subscriptions.
     */
    skip?: number
    distinct?: Customer_subscriptionsScalarFieldEnum | Customer_subscriptionsScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * customer_subscriptions create
   */
  export type customer_subscriptionsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the customer_subscriptions
     */
    select?: customer_subscriptionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the customer_subscriptions
     */
    omit?: customer_subscriptionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: customer_subscriptionsInclude<ExtArgs> | null
    /**
     * The data needed to create a customer_subscriptions.
     */
    data: XOR<customer_subscriptionsCreateInput, customer_subscriptionsUncheckedCreateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * customer_subscriptions createMany
   */
  export type customer_subscriptionsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many customer_subscriptions.
     */
    data: customer_subscriptionsCreateManyInput | customer_subscriptionsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * customer_subscriptions createManyAndReturn
   */
  export type customer_subscriptionsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the customer_subscriptions
     */
    select?: customer_subscriptionsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the customer_subscriptions
     */
    omit?: customer_subscriptionsOmit<ExtArgs> | null
    /**
     * The data used to create many customer_subscriptions.
     */
    data: customer_subscriptionsCreateManyInput | customer_subscriptionsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: customer_subscriptionsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * customer_subscriptions update
   */
  export type customer_subscriptionsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the customer_subscriptions
     */
    select?: customer_subscriptionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the customer_subscriptions
     */
    omit?: customer_subscriptionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: customer_subscriptionsInclude<ExtArgs> | null
    /**
     * The data needed to update a customer_subscriptions.
     */
    data: XOR<customer_subscriptionsUpdateInput, customer_subscriptionsUncheckedUpdateInput>
    /**
     * Choose, which customer_subscriptions to update.
     */
    where: customer_subscriptionsWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * customer_subscriptions updateMany
   */
  export type customer_subscriptionsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update customer_subscriptions.
     */
    data: XOR<customer_subscriptionsUpdateManyMutationInput, customer_subscriptionsUncheckedUpdateManyInput>
    /**
     * Filter which customer_subscriptions to update
     */
    where?: customer_subscriptionsWhereInput
    /**
     * Limit how many customer_subscriptions to update.
     */
    limit?: number
  }

  /**
   * customer_subscriptions updateManyAndReturn
   */
  export type customer_subscriptionsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the customer_subscriptions
     */
    select?: customer_subscriptionsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the customer_subscriptions
     */
    omit?: customer_subscriptionsOmit<ExtArgs> | null
    /**
     * The data used to update customer_subscriptions.
     */
    data: XOR<customer_subscriptionsUpdateManyMutationInput, customer_subscriptionsUncheckedUpdateManyInput>
    /**
     * Filter which customer_subscriptions to update
     */
    where?: customer_subscriptionsWhereInput
    /**
     * Limit how many customer_subscriptions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: customer_subscriptionsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * customer_subscriptions upsert
   */
  export type customer_subscriptionsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the customer_subscriptions
     */
    select?: customer_subscriptionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the customer_subscriptions
     */
    omit?: customer_subscriptionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: customer_subscriptionsInclude<ExtArgs> | null
    /**
     * The filter to search for the customer_subscriptions to update in case it exists.
     */
    where: customer_subscriptionsWhereUniqueInput
    /**
     * In case the customer_subscriptions found by the `where` argument doesn't exist, create a new customer_subscriptions with this data.
     */
    create: XOR<customer_subscriptionsCreateInput, customer_subscriptionsUncheckedCreateInput>
    /**
     * In case the customer_subscriptions was found with the provided `where` argument, update it with this data.
     */
    update: XOR<customer_subscriptionsUpdateInput, customer_subscriptionsUncheckedUpdateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * customer_subscriptions delete
   */
  export type customer_subscriptionsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the customer_subscriptions
     */
    select?: customer_subscriptionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the customer_subscriptions
     */
    omit?: customer_subscriptionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: customer_subscriptionsInclude<ExtArgs> | null
    /**
     * Filter which customer_subscriptions to delete.
     */
    where: customer_subscriptionsWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * customer_subscriptions deleteMany
   */
  export type customer_subscriptionsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which customer_subscriptions to delete
     */
    where?: customer_subscriptionsWhereInput
    /**
     * Limit how many customer_subscriptions to delete.
     */
    limit?: number
  }

  /**
   * customer_subscriptions.subscription_usages
   */
  export type customer_subscriptions$subscription_usagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscription_usages
     */
    select?: subscription_usagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subscription_usages
     */
    omit?: subscription_usagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subscription_usagesInclude<ExtArgs> | null
    where?: subscription_usagesWhereInput
    orderBy?: subscription_usagesOrderByWithRelationInput | subscription_usagesOrderByWithRelationInput[]
    cursor?: subscription_usagesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Subscription_usagesScalarFieldEnum | Subscription_usagesScalarFieldEnum[]
  }

  /**
   * customer_subscriptions without action
   */
  export type customer_subscriptionsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the customer_subscriptions
     */
    select?: customer_subscriptionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the customer_subscriptions
     */
    omit?: customer_subscriptionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: customer_subscriptionsInclude<ExtArgs> | null
  }


  /**
   * Model customers
   */

  export type AggregateCustomers = {
    _count: CustomersCountAggregateOutputType | null
    _avg: CustomersAvgAggregateOutputType | null
    _sum: CustomersSumAggregateOutputType | null
    _min: CustomersMinAggregateOutputType | null
    _max: CustomersMaxAggregateOutputType | null
  }

  export type CustomersAvgAggregateOutputType = {
    id: number | null
    status: number | null
  }

  export type CustomersSumAggregateOutputType = {
    id: bigint | null
    status: number | null
  }

  export type CustomersMinAggregateOutputType = {
    id: bigint | null
    first_name: string | null
    last_name: string | null
    gender: string | null
    email: string | null
    mobile_number: string | null
    password: string | null
    birthdate: Date | null
    ssn: string | null
    otp_secret: string | null
    status: number | null
    is_verified: boolean | null
    deleted_at: Date | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type CustomersMaxAggregateOutputType = {
    id: bigint | null
    first_name: string | null
    last_name: string | null
    gender: string | null
    email: string | null
    mobile_number: string | null
    password: string | null
    birthdate: Date | null
    ssn: string | null
    otp_secret: string | null
    status: number | null
    is_verified: boolean | null
    deleted_at: Date | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type CustomersCountAggregateOutputType = {
    id: number
    first_name: number
    last_name: number
    gender: number
    email: number
    mobile_number: number
    password: number
    birthdate: number
    ssn: number
    otp_secret: number
    status: number
    is_verified: number
    deleted_at: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type CustomersAvgAggregateInputType = {
    id?: true
    status?: true
  }

  export type CustomersSumAggregateInputType = {
    id?: true
    status?: true
  }

  export type CustomersMinAggregateInputType = {
    id?: true
    first_name?: true
    last_name?: true
    gender?: true
    email?: true
    mobile_number?: true
    password?: true
    birthdate?: true
    ssn?: true
    otp_secret?: true
    status?: true
    is_verified?: true
    deleted_at?: true
    created_at?: true
    updated_at?: true
  }

  export type CustomersMaxAggregateInputType = {
    id?: true
    first_name?: true
    last_name?: true
    gender?: true
    email?: true
    mobile_number?: true
    password?: true
    birthdate?: true
    ssn?: true
    otp_secret?: true
    status?: true
    is_verified?: true
    deleted_at?: true
    created_at?: true
    updated_at?: true
  }

  export type CustomersCountAggregateInputType = {
    id?: true
    first_name?: true
    last_name?: true
    gender?: true
    email?: true
    mobile_number?: true
    password?: true
    birthdate?: true
    ssn?: true
    otp_secret?: true
    status?: true
    is_verified?: true
    deleted_at?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type CustomersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which customers to aggregate.
     */
    where?: customersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of customers to fetch.
     */
    orderBy?: customersOrderByWithRelationInput | customersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: customersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` customers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` customers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned customers
    **/
    _count?: true | CustomersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CustomersAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CustomersSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CustomersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CustomersMaxAggregateInputType
  }

  export type GetCustomersAggregateType<T extends CustomersAggregateArgs> = {
        [P in keyof T & keyof AggregateCustomers]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCustomers[P]>
      : GetScalarType<T[P], AggregateCustomers[P]>
  }




  export type customersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: customersWhereInput
    orderBy?: customersOrderByWithAggregationInput | customersOrderByWithAggregationInput[]
    by: CustomersScalarFieldEnum[] | CustomersScalarFieldEnum
    having?: customersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CustomersCountAggregateInputType | true
    _avg?: CustomersAvgAggregateInputType
    _sum?: CustomersSumAggregateInputType
    _min?: CustomersMinAggregateInputType
    _max?: CustomersMaxAggregateInputType
  }

  export type CustomersGroupByOutputType = {
    id: bigint
    first_name: string | null
    last_name: string | null
    gender: string | null
    email: string | null
    mobile_number: string
    password: string | null
    birthdate: Date | null
    ssn: string | null
    otp_secret: string | null
    status: number
    is_verified: boolean
    deleted_at: Date | null
    created_at: Date | null
    updated_at: Date | null
    _count: CustomersCountAggregateOutputType | null
    _avg: CustomersAvgAggregateOutputType | null
    _sum: CustomersSumAggregateOutputType | null
    _min: CustomersMinAggregateOutputType | null
    _max: CustomersMaxAggregateOutputType | null
  }

  type GetCustomersGroupByPayload<T extends customersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CustomersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CustomersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CustomersGroupByOutputType[P]>
            : GetScalarType<T[P], CustomersGroupByOutputType[P]>
        }
      >
    >


  export type customersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    first_name?: boolean
    last_name?: boolean
    gender?: boolean
    email?: boolean
    mobile_number?: boolean
    password?: boolean
    birthdate?: boolean
    ssn?: boolean
    otp_secret?: boolean
    status?: boolean
    is_verified?: boolean
    deleted_at?: boolean
    created_at?: boolean
    updated_at?: boolean
    customer_subscriptions?: boolean | customers$customer_subscriptionsArgs<ExtArgs>
    subscription_usages?: boolean | customers$subscription_usagesArgs<ExtArgs>
    _count?: boolean | CustomersCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["customers"]>

  export type customersSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    first_name?: boolean
    last_name?: boolean
    gender?: boolean
    email?: boolean
    mobile_number?: boolean
    password?: boolean
    birthdate?: boolean
    ssn?: boolean
    otp_secret?: boolean
    status?: boolean
    is_verified?: boolean
    deleted_at?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["customers"]>

  export type customersSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    first_name?: boolean
    last_name?: boolean
    gender?: boolean
    email?: boolean
    mobile_number?: boolean
    password?: boolean
    birthdate?: boolean
    ssn?: boolean
    otp_secret?: boolean
    status?: boolean
    is_verified?: boolean
    deleted_at?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["customers"]>

  export type customersSelectScalar = {
    id?: boolean
    first_name?: boolean
    last_name?: boolean
    gender?: boolean
    email?: boolean
    mobile_number?: boolean
    password?: boolean
    birthdate?: boolean
    ssn?: boolean
    otp_secret?: boolean
    status?: boolean
    is_verified?: boolean
    deleted_at?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type customersOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "first_name" | "last_name" | "gender" | "email" | "mobile_number" | "password" | "birthdate" | "ssn" | "otp_secret" | "status" | "is_verified" | "deleted_at" | "created_at" | "updated_at", ExtArgs["result"]["customers"]>
  export type customersInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    customer_subscriptions?: boolean | customers$customer_subscriptionsArgs<ExtArgs>
    subscription_usages?: boolean | customers$subscription_usagesArgs<ExtArgs>
    _count?: boolean | CustomersCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type customersIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type customersIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $customersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "customers"
    objects: {
      customer_subscriptions: Prisma.$customer_subscriptionsPayload<ExtArgs>[]
      subscription_usages: Prisma.$subscription_usagesPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      first_name: string | null
      last_name: string | null
      gender: string | null
      email: string | null
      mobile_number: string
      password: string | null
      birthdate: Date | null
      ssn: string | null
      otp_secret: string | null
      status: number
      is_verified: boolean
      deleted_at: Date | null
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["customers"]>
    composites: {}
  }

  type customersGetPayload<S extends boolean | null | undefined | customersDefaultArgs> = $Result.GetResult<Prisma.$customersPayload, S>

  type customersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<customersFindManyArgs, 'select' | 'include' | 'distinct' | 'omit' | 'relationLoadStrategy'> & {
      select?: CustomersCountAggregateInputType | true
    }

  export interface customersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['customers'], meta: { name: 'customers' } }
    /**
     * Find zero or one Customers that matches the filter.
     * @param {customersFindUniqueArgs} args - Arguments to find a Customers
     * @example
     * // Get one Customers
     * const customers = await prisma.customers.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends customersFindUniqueArgs>(args: SelectSubset<T, customersFindUniqueArgs<ExtArgs>>): Prisma__customersClient<$Result.GetResult<Prisma.$customersPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Customers that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {customersFindUniqueOrThrowArgs} args - Arguments to find a Customers
     * @example
     * // Get one Customers
     * const customers = await prisma.customers.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends customersFindUniqueOrThrowArgs>(args: SelectSubset<T, customersFindUniqueOrThrowArgs<ExtArgs>>): Prisma__customersClient<$Result.GetResult<Prisma.$customersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Customers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {customersFindFirstArgs} args - Arguments to find a Customers
     * @example
     * // Get one Customers
     * const customers = await prisma.customers.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends customersFindFirstArgs>(args?: SelectSubset<T, customersFindFirstArgs<ExtArgs>>): Prisma__customersClient<$Result.GetResult<Prisma.$customersPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Customers that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {customersFindFirstOrThrowArgs} args - Arguments to find a Customers
     * @example
     * // Get one Customers
     * const customers = await prisma.customers.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends customersFindFirstOrThrowArgs>(args?: SelectSubset<T, customersFindFirstOrThrowArgs<ExtArgs>>): Prisma__customersClient<$Result.GetResult<Prisma.$customersPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Customers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {customersFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Customers
     * const customers = await prisma.customers.findMany()
     * 
     * // Get first 10 Customers
     * const customers = await prisma.customers.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const customersWithIdOnly = await prisma.customers.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends customersFindManyArgs>(args?: SelectSubset<T, customersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$customersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Customers.
     * @param {customersCreateArgs} args - Arguments to create a Customers.
     * @example
     * // Create one Customers
     * const Customers = await prisma.customers.create({
     *   data: {
     *     // ... data to create a Customers
     *   }
     * })
     * 
     */
    create<T extends customersCreateArgs>(args: SelectSubset<T, customersCreateArgs<ExtArgs>>): Prisma__customersClient<$Result.GetResult<Prisma.$customersPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Customers.
     * @param {customersCreateManyArgs} args - Arguments to create many Customers.
     * @example
     * // Create many Customers
     * const customers = await prisma.customers.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends customersCreateManyArgs>(args?: SelectSubset<T, customersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Customers and returns the data saved in the database.
     * @param {customersCreateManyAndReturnArgs} args - Arguments to create many Customers.
     * @example
     * // Create many Customers
     * const customers = await prisma.customers.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Customers and only return the `id`
     * const customersWithIdOnly = await prisma.customers.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends customersCreateManyAndReturnArgs>(args?: SelectSubset<T, customersCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$customersPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Customers.
     * @param {customersDeleteArgs} args - Arguments to delete one Customers.
     * @example
     * // Delete one Customers
     * const Customers = await prisma.customers.delete({
     *   where: {
     *     // ... filter to delete one Customers
     *   }
     * })
     * 
     */
    delete<T extends customersDeleteArgs>(args: SelectSubset<T, customersDeleteArgs<ExtArgs>>): Prisma__customersClient<$Result.GetResult<Prisma.$customersPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Customers.
     * @param {customersUpdateArgs} args - Arguments to update one Customers.
     * @example
     * // Update one Customers
     * const customers = await prisma.customers.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends customersUpdateArgs>(args: SelectSubset<T, customersUpdateArgs<ExtArgs>>): Prisma__customersClient<$Result.GetResult<Prisma.$customersPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Customers.
     * @param {customersDeleteManyArgs} args - Arguments to filter Customers to delete.
     * @example
     * // Delete a few Customers
     * const { count } = await prisma.customers.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends customersDeleteManyArgs>(args?: SelectSubset<T, customersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Customers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {customersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Customers
     * const customers = await prisma.customers.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends customersUpdateManyArgs>(args: SelectSubset<T, customersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Customers and returns the data updated in the database.
     * @param {customersUpdateManyAndReturnArgs} args - Arguments to update many Customers.
     * @example
     * // Update many Customers
     * const customers = await prisma.customers.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Customers and only return the `id`
     * const customersWithIdOnly = await prisma.customers.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends customersUpdateManyAndReturnArgs>(args: SelectSubset<T, customersUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$customersPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Customers.
     * @param {customersUpsertArgs} args - Arguments to update or create a Customers.
     * @example
     * // Update or create a Customers
     * const customers = await prisma.customers.upsert({
     *   create: {
     *     // ... data to create a Customers
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Customers we want to update
     *   }
     * })
     */
    upsert<T extends customersUpsertArgs>(args: SelectSubset<T, customersUpsertArgs<ExtArgs>>): Prisma__customersClient<$Result.GetResult<Prisma.$customersPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Customers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {customersCountArgs} args - Arguments to filter Customers to count.
     * @example
     * // Count the number of Customers
     * const count = await prisma.customers.count({
     *   where: {
     *     // ... the filter for the Customers we want to count
     *   }
     * })
    **/
    count<T extends customersCountArgs>(
      args?: Subset<T, customersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CustomersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Customers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CustomersAggregateArgs>(args: Subset<T, CustomersAggregateArgs>): Prisma.PrismaPromise<GetCustomersAggregateType<T>>

    /**
     * Group by Customers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {customersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends customersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: customersGroupByArgs['orderBy'] }
        : { orderBy?: customersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, customersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCustomersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the customers model
   */
  readonly fields: customersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for customers.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__customersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    customer_subscriptions<T extends customers$customer_subscriptionsArgs<ExtArgs> = {}>(args?: Subset<T, customers$customer_subscriptionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$customer_subscriptionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    subscription_usages<T extends customers$subscription_usagesArgs<ExtArgs> = {}>(args?: Subset<T, customers$subscription_usagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$subscription_usagesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the customers model
   */ 
  interface customersFieldRefs {
    readonly id: FieldRef<"customers", 'BigInt'>
    readonly first_name: FieldRef<"customers", 'String'>
    readonly last_name: FieldRef<"customers", 'String'>
    readonly gender: FieldRef<"customers", 'String'>
    readonly email: FieldRef<"customers", 'String'>
    readonly mobile_number: FieldRef<"customers", 'String'>
    readonly password: FieldRef<"customers", 'String'>
    readonly birthdate: FieldRef<"customers", 'DateTime'>
    readonly ssn: FieldRef<"customers", 'String'>
    readonly otp_secret: FieldRef<"customers", 'String'>
    readonly status: FieldRef<"customers", 'Int'>
    readonly is_verified: FieldRef<"customers", 'Boolean'>
    readonly deleted_at: FieldRef<"customers", 'DateTime'>
    readonly created_at: FieldRef<"customers", 'DateTime'>
    readonly updated_at: FieldRef<"customers", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * customers findUnique
   */
  export type customersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the customers
     */
    select?: customersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the customers
     */
    omit?: customersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: customersInclude<ExtArgs> | null
    /**
     * Filter, which customers to fetch.
     */
    where: customersWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * customers findUniqueOrThrow
   */
  export type customersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the customers
     */
    select?: customersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the customers
     */
    omit?: customersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: customersInclude<ExtArgs> | null
    /**
     * Filter, which customers to fetch.
     */
    where: customersWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * customers findFirst
   */
  export type customersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the customers
     */
    select?: customersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the customers
     */
    omit?: customersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: customersInclude<ExtArgs> | null
    /**
     * Filter, which customers to fetch.
     */
    where?: customersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of customers to fetch.
     */
    orderBy?: customersOrderByWithRelationInput | customersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for customers.
     */
    cursor?: customersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` customers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` customers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of customers.
     */
    distinct?: CustomersScalarFieldEnum | CustomersScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * customers findFirstOrThrow
   */
  export type customersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the customers
     */
    select?: customersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the customers
     */
    omit?: customersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: customersInclude<ExtArgs> | null
    /**
     * Filter, which customers to fetch.
     */
    where?: customersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of customers to fetch.
     */
    orderBy?: customersOrderByWithRelationInput | customersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for customers.
     */
    cursor?: customersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` customers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` customers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of customers.
     */
    distinct?: CustomersScalarFieldEnum | CustomersScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * customers findMany
   */
  export type customersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the customers
     */
    select?: customersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the customers
     */
    omit?: customersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: customersInclude<ExtArgs> | null
    /**
     * Filter, which customers to fetch.
     */
    where?: customersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of customers to fetch.
     */
    orderBy?: customersOrderByWithRelationInput | customersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing customers.
     */
    cursor?: customersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` customers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` customers.
     */
    skip?: number
    distinct?: CustomersScalarFieldEnum | CustomersScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * customers create
   */
  export type customersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the customers
     */
    select?: customersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the customers
     */
    omit?: customersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: customersInclude<ExtArgs> | null
    /**
     * The data needed to create a customers.
     */
    data: XOR<customersCreateInput, customersUncheckedCreateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * customers createMany
   */
  export type customersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many customers.
     */
    data: customersCreateManyInput | customersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * customers createManyAndReturn
   */
  export type customersCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the customers
     */
    select?: customersSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the customers
     */
    omit?: customersOmit<ExtArgs> | null
    /**
     * The data used to create many customers.
     */
    data: customersCreateManyInput | customersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * customers update
   */
  export type customersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the customers
     */
    select?: customersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the customers
     */
    omit?: customersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: customersInclude<ExtArgs> | null
    /**
     * The data needed to update a customers.
     */
    data: XOR<customersUpdateInput, customersUncheckedUpdateInput>
    /**
     * Choose, which customers to update.
     */
    where: customersWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * customers updateMany
   */
  export type customersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update customers.
     */
    data: XOR<customersUpdateManyMutationInput, customersUncheckedUpdateManyInput>
    /**
     * Filter which customers to update
     */
    where?: customersWhereInput
    /**
     * Limit how many customers to update.
     */
    limit?: number
  }

  /**
   * customers updateManyAndReturn
   */
  export type customersUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the customers
     */
    select?: customersSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the customers
     */
    omit?: customersOmit<ExtArgs> | null
    /**
     * The data used to update customers.
     */
    data: XOR<customersUpdateManyMutationInput, customersUncheckedUpdateManyInput>
    /**
     * Filter which customers to update
     */
    where?: customersWhereInput
    /**
     * Limit how many customers to update.
     */
    limit?: number
  }

  /**
   * customers upsert
   */
  export type customersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the customers
     */
    select?: customersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the customers
     */
    omit?: customersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: customersInclude<ExtArgs> | null
    /**
     * The filter to search for the customers to update in case it exists.
     */
    where: customersWhereUniqueInput
    /**
     * In case the customers found by the `where` argument doesn't exist, create a new customers with this data.
     */
    create: XOR<customersCreateInput, customersUncheckedCreateInput>
    /**
     * In case the customers was found with the provided `where` argument, update it with this data.
     */
    update: XOR<customersUpdateInput, customersUncheckedUpdateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * customers delete
   */
  export type customersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the customers
     */
    select?: customersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the customers
     */
    omit?: customersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: customersInclude<ExtArgs> | null
    /**
     * Filter which customers to delete.
     */
    where: customersWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * customers deleteMany
   */
  export type customersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which customers to delete
     */
    where?: customersWhereInput
    /**
     * Limit how many customers to delete.
     */
    limit?: number
  }

  /**
   * customers.customer_subscriptions
   */
  export type customers$customer_subscriptionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the customer_subscriptions
     */
    select?: customer_subscriptionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the customer_subscriptions
     */
    omit?: customer_subscriptionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: customer_subscriptionsInclude<ExtArgs> | null
    where?: customer_subscriptionsWhereInput
    orderBy?: customer_subscriptionsOrderByWithRelationInput | customer_subscriptionsOrderByWithRelationInput[]
    cursor?: customer_subscriptionsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Customer_subscriptionsScalarFieldEnum | Customer_subscriptionsScalarFieldEnum[]
  }

  /**
   * customers.subscription_usages
   */
  export type customers$subscription_usagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscription_usages
     */
    select?: subscription_usagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subscription_usages
     */
    omit?: subscription_usagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subscription_usagesInclude<ExtArgs> | null
    where?: subscription_usagesWhereInput
    orderBy?: subscription_usagesOrderByWithRelationInput | subscription_usagesOrderByWithRelationInput[]
    cursor?: subscription_usagesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Subscription_usagesScalarFieldEnum | Subscription_usagesScalarFieldEnum[]
  }

  /**
   * customers without action
   */
  export type customersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the customers
     */
    select?: customersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the customers
     */
    omit?: customersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: customersInclude<ExtArgs> | null
  }


  /**
   * Model failed_jobs
   */

  export type AggregateFailed_jobs = {
    _count: Failed_jobsCountAggregateOutputType | null
    _avg: Failed_jobsAvgAggregateOutputType | null
    _sum: Failed_jobsSumAggregateOutputType | null
    _min: Failed_jobsMinAggregateOutputType | null
    _max: Failed_jobsMaxAggregateOutputType | null
  }

  export type Failed_jobsAvgAggregateOutputType = {
    id: number | null
  }

  export type Failed_jobsSumAggregateOutputType = {
    id: bigint | null
  }

  export type Failed_jobsMinAggregateOutputType = {
    id: bigint | null
    uuid: string | null
    connection: string | null
    queue: string | null
    payload: string | null
    exception: string | null
    failed_at: Date | null
  }

  export type Failed_jobsMaxAggregateOutputType = {
    id: bigint | null
    uuid: string | null
    connection: string | null
    queue: string | null
    payload: string | null
    exception: string | null
    failed_at: Date | null
  }

  export type Failed_jobsCountAggregateOutputType = {
    id: number
    uuid: number
    connection: number
    queue: number
    payload: number
    exception: number
    failed_at: number
    _all: number
  }


  export type Failed_jobsAvgAggregateInputType = {
    id?: true
  }

  export type Failed_jobsSumAggregateInputType = {
    id?: true
  }

  export type Failed_jobsMinAggregateInputType = {
    id?: true
    uuid?: true
    connection?: true
    queue?: true
    payload?: true
    exception?: true
    failed_at?: true
  }

  export type Failed_jobsMaxAggregateInputType = {
    id?: true
    uuid?: true
    connection?: true
    queue?: true
    payload?: true
    exception?: true
    failed_at?: true
  }

  export type Failed_jobsCountAggregateInputType = {
    id?: true
    uuid?: true
    connection?: true
    queue?: true
    payload?: true
    exception?: true
    failed_at?: true
    _all?: true
  }

  export type Failed_jobsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which failed_jobs to aggregate.
     */
    where?: failed_jobsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of failed_jobs to fetch.
     */
    orderBy?: failed_jobsOrderByWithRelationInput | failed_jobsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: failed_jobsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` failed_jobs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` failed_jobs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned failed_jobs
    **/
    _count?: true | Failed_jobsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Failed_jobsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Failed_jobsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Failed_jobsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Failed_jobsMaxAggregateInputType
  }

  export type GetFailed_jobsAggregateType<T extends Failed_jobsAggregateArgs> = {
        [P in keyof T & keyof AggregateFailed_jobs]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFailed_jobs[P]>
      : GetScalarType<T[P], AggregateFailed_jobs[P]>
  }




  export type failed_jobsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: failed_jobsWhereInput
    orderBy?: failed_jobsOrderByWithAggregationInput | failed_jobsOrderByWithAggregationInput[]
    by: Failed_jobsScalarFieldEnum[] | Failed_jobsScalarFieldEnum
    having?: failed_jobsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Failed_jobsCountAggregateInputType | true
    _avg?: Failed_jobsAvgAggregateInputType
    _sum?: Failed_jobsSumAggregateInputType
    _min?: Failed_jobsMinAggregateInputType
    _max?: Failed_jobsMaxAggregateInputType
  }

  export type Failed_jobsGroupByOutputType = {
    id: bigint
    uuid: string
    connection: string
    queue: string
    payload: string
    exception: string
    failed_at: Date
    _count: Failed_jobsCountAggregateOutputType | null
    _avg: Failed_jobsAvgAggregateOutputType | null
    _sum: Failed_jobsSumAggregateOutputType | null
    _min: Failed_jobsMinAggregateOutputType | null
    _max: Failed_jobsMaxAggregateOutputType | null
  }

  type GetFailed_jobsGroupByPayload<T extends failed_jobsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Failed_jobsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Failed_jobsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Failed_jobsGroupByOutputType[P]>
            : GetScalarType<T[P], Failed_jobsGroupByOutputType[P]>
        }
      >
    >


  export type failed_jobsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    uuid?: boolean
    connection?: boolean
    queue?: boolean
    payload?: boolean
    exception?: boolean
    failed_at?: boolean
  }, ExtArgs["result"]["failed_jobs"]>

  export type failed_jobsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    uuid?: boolean
    connection?: boolean
    queue?: boolean
    payload?: boolean
    exception?: boolean
    failed_at?: boolean
  }, ExtArgs["result"]["failed_jobs"]>

  export type failed_jobsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    uuid?: boolean
    connection?: boolean
    queue?: boolean
    payload?: boolean
    exception?: boolean
    failed_at?: boolean
  }, ExtArgs["result"]["failed_jobs"]>

  export type failed_jobsSelectScalar = {
    id?: boolean
    uuid?: boolean
    connection?: boolean
    queue?: boolean
    payload?: boolean
    exception?: boolean
    failed_at?: boolean
  }

  export type failed_jobsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "uuid" | "connection" | "queue" | "payload" | "exception" | "failed_at", ExtArgs["result"]["failed_jobs"]>

  export type $failed_jobsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "failed_jobs"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      uuid: string
      connection: string
      queue: string
      payload: string
      exception: string
      failed_at: Date
    }, ExtArgs["result"]["failed_jobs"]>
    composites: {}
  }

  type failed_jobsGetPayload<S extends boolean | null | undefined | failed_jobsDefaultArgs> = $Result.GetResult<Prisma.$failed_jobsPayload, S>

  type failed_jobsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<failed_jobsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit' | 'relationLoadStrategy'> & {
      select?: Failed_jobsCountAggregateInputType | true
    }

  export interface failed_jobsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['failed_jobs'], meta: { name: 'failed_jobs' } }
    /**
     * Find zero or one Failed_jobs that matches the filter.
     * @param {failed_jobsFindUniqueArgs} args - Arguments to find a Failed_jobs
     * @example
     * // Get one Failed_jobs
     * const failed_jobs = await prisma.failed_jobs.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends failed_jobsFindUniqueArgs>(args: SelectSubset<T, failed_jobsFindUniqueArgs<ExtArgs>>): Prisma__failed_jobsClient<$Result.GetResult<Prisma.$failed_jobsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Failed_jobs that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {failed_jobsFindUniqueOrThrowArgs} args - Arguments to find a Failed_jobs
     * @example
     * // Get one Failed_jobs
     * const failed_jobs = await prisma.failed_jobs.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends failed_jobsFindUniqueOrThrowArgs>(args: SelectSubset<T, failed_jobsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__failed_jobsClient<$Result.GetResult<Prisma.$failed_jobsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Failed_jobs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {failed_jobsFindFirstArgs} args - Arguments to find a Failed_jobs
     * @example
     * // Get one Failed_jobs
     * const failed_jobs = await prisma.failed_jobs.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends failed_jobsFindFirstArgs>(args?: SelectSubset<T, failed_jobsFindFirstArgs<ExtArgs>>): Prisma__failed_jobsClient<$Result.GetResult<Prisma.$failed_jobsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Failed_jobs that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {failed_jobsFindFirstOrThrowArgs} args - Arguments to find a Failed_jobs
     * @example
     * // Get one Failed_jobs
     * const failed_jobs = await prisma.failed_jobs.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends failed_jobsFindFirstOrThrowArgs>(args?: SelectSubset<T, failed_jobsFindFirstOrThrowArgs<ExtArgs>>): Prisma__failed_jobsClient<$Result.GetResult<Prisma.$failed_jobsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Failed_jobs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {failed_jobsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Failed_jobs
     * const failed_jobs = await prisma.failed_jobs.findMany()
     * 
     * // Get first 10 Failed_jobs
     * const failed_jobs = await prisma.failed_jobs.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const failed_jobsWithIdOnly = await prisma.failed_jobs.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends failed_jobsFindManyArgs>(args?: SelectSubset<T, failed_jobsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$failed_jobsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Failed_jobs.
     * @param {failed_jobsCreateArgs} args - Arguments to create a Failed_jobs.
     * @example
     * // Create one Failed_jobs
     * const Failed_jobs = await prisma.failed_jobs.create({
     *   data: {
     *     // ... data to create a Failed_jobs
     *   }
     * })
     * 
     */
    create<T extends failed_jobsCreateArgs>(args: SelectSubset<T, failed_jobsCreateArgs<ExtArgs>>): Prisma__failed_jobsClient<$Result.GetResult<Prisma.$failed_jobsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Failed_jobs.
     * @param {failed_jobsCreateManyArgs} args - Arguments to create many Failed_jobs.
     * @example
     * // Create many Failed_jobs
     * const failed_jobs = await prisma.failed_jobs.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends failed_jobsCreateManyArgs>(args?: SelectSubset<T, failed_jobsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Failed_jobs and returns the data saved in the database.
     * @param {failed_jobsCreateManyAndReturnArgs} args - Arguments to create many Failed_jobs.
     * @example
     * // Create many Failed_jobs
     * const failed_jobs = await prisma.failed_jobs.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Failed_jobs and only return the `id`
     * const failed_jobsWithIdOnly = await prisma.failed_jobs.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends failed_jobsCreateManyAndReturnArgs>(args?: SelectSubset<T, failed_jobsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$failed_jobsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Failed_jobs.
     * @param {failed_jobsDeleteArgs} args - Arguments to delete one Failed_jobs.
     * @example
     * // Delete one Failed_jobs
     * const Failed_jobs = await prisma.failed_jobs.delete({
     *   where: {
     *     // ... filter to delete one Failed_jobs
     *   }
     * })
     * 
     */
    delete<T extends failed_jobsDeleteArgs>(args: SelectSubset<T, failed_jobsDeleteArgs<ExtArgs>>): Prisma__failed_jobsClient<$Result.GetResult<Prisma.$failed_jobsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Failed_jobs.
     * @param {failed_jobsUpdateArgs} args - Arguments to update one Failed_jobs.
     * @example
     * // Update one Failed_jobs
     * const failed_jobs = await prisma.failed_jobs.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends failed_jobsUpdateArgs>(args: SelectSubset<T, failed_jobsUpdateArgs<ExtArgs>>): Prisma__failed_jobsClient<$Result.GetResult<Prisma.$failed_jobsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Failed_jobs.
     * @param {failed_jobsDeleteManyArgs} args - Arguments to filter Failed_jobs to delete.
     * @example
     * // Delete a few Failed_jobs
     * const { count } = await prisma.failed_jobs.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends failed_jobsDeleteManyArgs>(args?: SelectSubset<T, failed_jobsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Failed_jobs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {failed_jobsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Failed_jobs
     * const failed_jobs = await prisma.failed_jobs.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends failed_jobsUpdateManyArgs>(args: SelectSubset<T, failed_jobsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Failed_jobs and returns the data updated in the database.
     * @param {failed_jobsUpdateManyAndReturnArgs} args - Arguments to update many Failed_jobs.
     * @example
     * // Update many Failed_jobs
     * const failed_jobs = await prisma.failed_jobs.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Failed_jobs and only return the `id`
     * const failed_jobsWithIdOnly = await prisma.failed_jobs.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends failed_jobsUpdateManyAndReturnArgs>(args: SelectSubset<T, failed_jobsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$failed_jobsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Failed_jobs.
     * @param {failed_jobsUpsertArgs} args - Arguments to update or create a Failed_jobs.
     * @example
     * // Update or create a Failed_jobs
     * const failed_jobs = await prisma.failed_jobs.upsert({
     *   create: {
     *     // ... data to create a Failed_jobs
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Failed_jobs we want to update
     *   }
     * })
     */
    upsert<T extends failed_jobsUpsertArgs>(args: SelectSubset<T, failed_jobsUpsertArgs<ExtArgs>>): Prisma__failed_jobsClient<$Result.GetResult<Prisma.$failed_jobsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Failed_jobs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {failed_jobsCountArgs} args - Arguments to filter Failed_jobs to count.
     * @example
     * // Count the number of Failed_jobs
     * const count = await prisma.failed_jobs.count({
     *   where: {
     *     // ... the filter for the Failed_jobs we want to count
     *   }
     * })
    **/
    count<T extends failed_jobsCountArgs>(
      args?: Subset<T, failed_jobsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Failed_jobsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Failed_jobs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Failed_jobsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Failed_jobsAggregateArgs>(args: Subset<T, Failed_jobsAggregateArgs>): Prisma.PrismaPromise<GetFailed_jobsAggregateType<T>>

    /**
     * Group by Failed_jobs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {failed_jobsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends failed_jobsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: failed_jobsGroupByArgs['orderBy'] }
        : { orderBy?: failed_jobsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, failed_jobsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFailed_jobsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the failed_jobs model
   */
  readonly fields: failed_jobsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for failed_jobs.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__failed_jobsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the failed_jobs model
   */ 
  interface failed_jobsFieldRefs {
    readonly id: FieldRef<"failed_jobs", 'BigInt'>
    readonly uuid: FieldRef<"failed_jobs", 'String'>
    readonly connection: FieldRef<"failed_jobs", 'String'>
    readonly queue: FieldRef<"failed_jobs", 'String'>
    readonly payload: FieldRef<"failed_jobs", 'String'>
    readonly exception: FieldRef<"failed_jobs", 'String'>
    readonly failed_at: FieldRef<"failed_jobs", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * failed_jobs findUnique
   */
  export type failed_jobsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the failed_jobs
     */
    select?: failed_jobsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the failed_jobs
     */
    omit?: failed_jobsOmit<ExtArgs> | null
    /**
     * Filter, which failed_jobs to fetch.
     */
    where: failed_jobsWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * failed_jobs findUniqueOrThrow
   */
  export type failed_jobsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the failed_jobs
     */
    select?: failed_jobsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the failed_jobs
     */
    omit?: failed_jobsOmit<ExtArgs> | null
    /**
     * Filter, which failed_jobs to fetch.
     */
    where: failed_jobsWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * failed_jobs findFirst
   */
  export type failed_jobsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the failed_jobs
     */
    select?: failed_jobsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the failed_jobs
     */
    omit?: failed_jobsOmit<ExtArgs> | null
    /**
     * Filter, which failed_jobs to fetch.
     */
    where?: failed_jobsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of failed_jobs to fetch.
     */
    orderBy?: failed_jobsOrderByWithRelationInput | failed_jobsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for failed_jobs.
     */
    cursor?: failed_jobsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` failed_jobs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` failed_jobs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of failed_jobs.
     */
    distinct?: Failed_jobsScalarFieldEnum | Failed_jobsScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * failed_jobs findFirstOrThrow
   */
  export type failed_jobsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the failed_jobs
     */
    select?: failed_jobsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the failed_jobs
     */
    omit?: failed_jobsOmit<ExtArgs> | null
    /**
     * Filter, which failed_jobs to fetch.
     */
    where?: failed_jobsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of failed_jobs to fetch.
     */
    orderBy?: failed_jobsOrderByWithRelationInput | failed_jobsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for failed_jobs.
     */
    cursor?: failed_jobsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` failed_jobs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` failed_jobs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of failed_jobs.
     */
    distinct?: Failed_jobsScalarFieldEnum | Failed_jobsScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * failed_jobs findMany
   */
  export type failed_jobsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the failed_jobs
     */
    select?: failed_jobsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the failed_jobs
     */
    omit?: failed_jobsOmit<ExtArgs> | null
    /**
     * Filter, which failed_jobs to fetch.
     */
    where?: failed_jobsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of failed_jobs to fetch.
     */
    orderBy?: failed_jobsOrderByWithRelationInput | failed_jobsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing failed_jobs.
     */
    cursor?: failed_jobsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` failed_jobs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` failed_jobs.
     */
    skip?: number
    distinct?: Failed_jobsScalarFieldEnum | Failed_jobsScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * failed_jobs create
   */
  export type failed_jobsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the failed_jobs
     */
    select?: failed_jobsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the failed_jobs
     */
    omit?: failed_jobsOmit<ExtArgs> | null
    /**
     * The data needed to create a failed_jobs.
     */
    data: XOR<failed_jobsCreateInput, failed_jobsUncheckedCreateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * failed_jobs createMany
   */
  export type failed_jobsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many failed_jobs.
     */
    data: failed_jobsCreateManyInput | failed_jobsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * failed_jobs createManyAndReturn
   */
  export type failed_jobsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the failed_jobs
     */
    select?: failed_jobsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the failed_jobs
     */
    omit?: failed_jobsOmit<ExtArgs> | null
    /**
     * The data used to create many failed_jobs.
     */
    data: failed_jobsCreateManyInput | failed_jobsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * failed_jobs update
   */
  export type failed_jobsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the failed_jobs
     */
    select?: failed_jobsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the failed_jobs
     */
    omit?: failed_jobsOmit<ExtArgs> | null
    /**
     * The data needed to update a failed_jobs.
     */
    data: XOR<failed_jobsUpdateInput, failed_jobsUncheckedUpdateInput>
    /**
     * Choose, which failed_jobs to update.
     */
    where: failed_jobsWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * failed_jobs updateMany
   */
  export type failed_jobsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update failed_jobs.
     */
    data: XOR<failed_jobsUpdateManyMutationInput, failed_jobsUncheckedUpdateManyInput>
    /**
     * Filter which failed_jobs to update
     */
    where?: failed_jobsWhereInput
    /**
     * Limit how many failed_jobs to update.
     */
    limit?: number
  }

  /**
   * failed_jobs updateManyAndReturn
   */
  export type failed_jobsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the failed_jobs
     */
    select?: failed_jobsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the failed_jobs
     */
    omit?: failed_jobsOmit<ExtArgs> | null
    /**
     * The data used to update failed_jobs.
     */
    data: XOR<failed_jobsUpdateManyMutationInput, failed_jobsUncheckedUpdateManyInput>
    /**
     * Filter which failed_jobs to update
     */
    where?: failed_jobsWhereInput
    /**
     * Limit how many failed_jobs to update.
     */
    limit?: number
  }

  /**
   * failed_jobs upsert
   */
  export type failed_jobsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the failed_jobs
     */
    select?: failed_jobsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the failed_jobs
     */
    omit?: failed_jobsOmit<ExtArgs> | null
    /**
     * The filter to search for the failed_jobs to update in case it exists.
     */
    where: failed_jobsWhereUniqueInput
    /**
     * In case the failed_jobs found by the `where` argument doesn't exist, create a new failed_jobs with this data.
     */
    create: XOR<failed_jobsCreateInput, failed_jobsUncheckedCreateInput>
    /**
     * In case the failed_jobs was found with the provided `where` argument, update it with this data.
     */
    update: XOR<failed_jobsUpdateInput, failed_jobsUncheckedUpdateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * failed_jobs delete
   */
  export type failed_jobsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the failed_jobs
     */
    select?: failed_jobsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the failed_jobs
     */
    omit?: failed_jobsOmit<ExtArgs> | null
    /**
     * Filter which failed_jobs to delete.
     */
    where: failed_jobsWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * failed_jobs deleteMany
   */
  export type failed_jobsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which failed_jobs to delete
     */
    where?: failed_jobsWhereInput
    /**
     * Limit how many failed_jobs to delete.
     */
    limit?: number
  }

  /**
   * failed_jobs without action
   */
  export type failed_jobsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the failed_jobs
     */
    select?: failed_jobsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the failed_jobs
     */
    omit?: failed_jobsOmit<ExtArgs> | null
  }


  /**
   * Model job_batches
   */

  export type AggregateJob_batches = {
    _count: Job_batchesCountAggregateOutputType | null
    _avg: Job_batchesAvgAggregateOutputType | null
    _sum: Job_batchesSumAggregateOutputType | null
    _min: Job_batchesMinAggregateOutputType | null
    _max: Job_batchesMaxAggregateOutputType | null
  }

  export type Job_batchesAvgAggregateOutputType = {
    total_jobs: number | null
    pending_jobs: number | null
    failed_jobs: number | null
    cancelled_at: number | null
    created_at: number | null
    finished_at: number | null
  }

  export type Job_batchesSumAggregateOutputType = {
    total_jobs: number | null
    pending_jobs: number | null
    failed_jobs: number | null
    cancelled_at: number | null
    created_at: number | null
    finished_at: number | null
  }

  export type Job_batchesMinAggregateOutputType = {
    id: string | null
    name: string | null
    total_jobs: number | null
    pending_jobs: number | null
    failed_jobs: number | null
    failed_job_ids: string | null
    options: string | null
    cancelled_at: number | null
    created_at: number | null
    finished_at: number | null
  }

  export type Job_batchesMaxAggregateOutputType = {
    id: string | null
    name: string | null
    total_jobs: number | null
    pending_jobs: number | null
    failed_jobs: number | null
    failed_job_ids: string | null
    options: string | null
    cancelled_at: number | null
    created_at: number | null
    finished_at: number | null
  }

  export type Job_batchesCountAggregateOutputType = {
    id: number
    name: number
    total_jobs: number
    pending_jobs: number
    failed_jobs: number
    failed_job_ids: number
    options: number
    cancelled_at: number
    created_at: number
    finished_at: number
    _all: number
  }


  export type Job_batchesAvgAggregateInputType = {
    total_jobs?: true
    pending_jobs?: true
    failed_jobs?: true
    cancelled_at?: true
    created_at?: true
    finished_at?: true
  }

  export type Job_batchesSumAggregateInputType = {
    total_jobs?: true
    pending_jobs?: true
    failed_jobs?: true
    cancelled_at?: true
    created_at?: true
    finished_at?: true
  }

  export type Job_batchesMinAggregateInputType = {
    id?: true
    name?: true
    total_jobs?: true
    pending_jobs?: true
    failed_jobs?: true
    failed_job_ids?: true
    options?: true
    cancelled_at?: true
    created_at?: true
    finished_at?: true
  }

  export type Job_batchesMaxAggregateInputType = {
    id?: true
    name?: true
    total_jobs?: true
    pending_jobs?: true
    failed_jobs?: true
    failed_job_ids?: true
    options?: true
    cancelled_at?: true
    created_at?: true
    finished_at?: true
  }

  export type Job_batchesCountAggregateInputType = {
    id?: true
    name?: true
    total_jobs?: true
    pending_jobs?: true
    failed_jobs?: true
    failed_job_ids?: true
    options?: true
    cancelled_at?: true
    created_at?: true
    finished_at?: true
    _all?: true
  }

  export type Job_batchesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which job_batches to aggregate.
     */
    where?: job_batchesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of job_batches to fetch.
     */
    orderBy?: job_batchesOrderByWithRelationInput | job_batchesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: job_batchesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` job_batches from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` job_batches.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned job_batches
    **/
    _count?: true | Job_batchesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Job_batchesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Job_batchesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Job_batchesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Job_batchesMaxAggregateInputType
  }

  export type GetJob_batchesAggregateType<T extends Job_batchesAggregateArgs> = {
        [P in keyof T & keyof AggregateJob_batches]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateJob_batches[P]>
      : GetScalarType<T[P], AggregateJob_batches[P]>
  }




  export type job_batchesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: job_batchesWhereInput
    orderBy?: job_batchesOrderByWithAggregationInput | job_batchesOrderByWithAggregationInput[]
    by: Job_batchesScalarFieldEnum[] | Job_batchesScalarFieldEnum
    having?: job_batchesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Job_batchesCountAggregateInputType | true
    _avg?: Job_batchesAvgAggregateInputType
    _sum?: Job_batchesSumAggregateInputType
    _min?: Job_batchesMinAggregateInputType
    _max?: Job_batchesMaxAggregateInputType
  }

  export type Job_batchesGroupByOutputType = {
    id: string
    name: string
    total_jobs: number
    pending_jobs: number
    failed_jobs: number
    failed_job_ids: string
    options: string | null
    cancelled_at: number | null
    created_at: number
    finished_at: number | null
    _count: Job_batchesCountAggregateOutputType | null
    _avg: Job_batchesAvgAggregateOutputType | null
    _sum: Job_batchesSumAggregateOutputType | null
    _min: Job_batchesMinAggregateOutputType | null
    _max: Job_batchesMaxAggregateOutputType | null
  }

  type GetJob_batchesGroupByPayload<T extends job_batchesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Job_batchesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Job_batchesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Job_batchesGroupByOutputType[P]>
            : GetScalarType<T[P], Job_batchesGroupByOutputType[P]>
        }
      >
    >


  export type job_batchesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    total_jobs?: boolean
    pending_jobs?: boolean
    failed_jobs?: boolean
    failed_job_ids?: boolean
    options?: boolean
    cancelled_at?: boolean
    created_at?: boolean
    finished_at?: boolean
  }, ExtArgs["result"]["job_batches"]>

  export type job_batchesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    total_jobs?: boolean
    pending_jobs?: boolean
    failed_jobs?: boolean
    failed_job_ids?: boolean
    options?: boolean
    cancelled_at?: boolean
    created_at?: boolean
    finished_at?: boolean
  }, ExtArgs["result"]["job_batches"]>

  export type job_batchesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    total_jobs?: boolean
    pending_jobs?: boolean
    failed_jobs?: boolean
    failed_job_ids?: boolean
    options?: boolean
    cancelled_at?: boolean
    created_at?: boolean
    finished_at?: boolean
  }, ExtArgs["result"]["job_batches"]>

  export type job_batchesSelectScalar = {
    id?: boolean
    name?: boolean
    total_jobs?: boolean
    pending_jobs?: boolean
    failed_jobs?: boolean
    failed_job_ids?: boolean
    options?: boolean
    cancelled_at?: boolean
    created_at?: boolean
    finished_at?: boolean
  }

  export type job_batchesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "total_jobs" | "pending_jobs" | "failed_jobs" | "failed_job_ids" | "options" | "cancelled_at" | "created_at" | "finished_at", ExtArgs["result"]["job_batches"]>

  export type $job_batchesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "job_batches"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      total_jobs: number
      pending_jobs: number
      failed_jobs: number
      failed_job_ids: string
      options: string | null
      cancelled_at: number | null
      created_at: number
      finished_at: number | null
    }, ExtArgs["result"]["job_batches"]>
    composites: {}
  }

  type job_batchesGetPayload<S extends boolean | null | undefined | job_batchesDefaultArgs> = $Result.GetResult<Prisma.$job_batchesPayload, S>

  type job_batchesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<job_batchesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit' | 'relationLoadStrategy'> & {
      select?: Job_batchesCountAggregateInputType | true
    }

  export interface job_batchesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['job_batches'], meta: { name: 'job_batches' } }
    /**
     * Find zero or one Job_batches that matches the filter.
     * @param {job_batchesFindUniqueArgs} args - Arguments to find a Job_batches
     * @example
     * // Get one Job_batches
     * const job_batches = await prisma.job_batches.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends job_batchesFindUniqueArgs>(args: SelectSubset<T, job_batchesFindUniqueArgs<ExtArgs>>): Prisma__job_batchesClient<$Result.GetResult<Prisma.$job_batchesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Job_batches that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {job_batchesFindUniqueOrThrowArgs} args - Arguments to find a Job_batches
     * @example
     * // Get one Job_batches
     * const job_batches = await prisma.job_batches.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends job_batchesFindUniqueOrThrowArgs>(args: SelectSubset<T, job_batchesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__job_batchesClient<$Result.GetResult<Prisma.$job_batchesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Job_batches that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {job_batchesFindFirstArgs} args - Arguments to find a Job_batches
     * @example
     * // Get one Job_batches
     * const job_batches = await prisma.job_batches.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends job_batchesFindFirstArgs>(args?: SelectSubset<T, job_batchesFindFirstArgs<ExtArgs>>): Prisma__job_batchesClient<$Result.GetResult<Prisma.$job_batchesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Job_batches that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {job_batchesFindFirstOrThrowArgs} args - Arguments to find a Job_batches
     * @example
     * // Get one Job_batches
     * const job_batches = await prisma.job_batches.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends job_batchesFindFirstOrThrowArgs>(args?: SelectSubset<T, job_batchesFindFirstOrThrowArgs<ExtArgs>>): Prisma__job_batchesClient<$Result.GetResult<Prisma.$job_batchesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Job_batches that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {job_batchesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Job_batches
     * const job_batches = await prisma.job_batches.findMany()
     * 
     * // Get first 10 Job_batches
     * const job_batches = await prisma.job_batches.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const job_batchesWithIdOnly = await prisma.job_batches.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends job_batchesFindManyArgs>(args?: SelectSubset<T, job_batchesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$job_batchesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Job_batches.
     * @param {job_batchesCreateArgs} args - Arguments to create a Job_batches.
     * @example
     * // Create one Job_batches
     * const Job_batches = await prisma.job_batches.create({
     *   data: {
     *     // ... data to create a Job_batches
     *   }
     * })
     * 
     */
    create<T extends job_batchesCreateArgs>(args: SelectSubset<T, job_batchesCreateArgs<ExtArgs>>): Prisma__job_batchesClient<$Result.GetResult<Prisma.$job_batchesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Job_batches.
     * @param {job_batchesCreateManyArgs} args - Arguments to create many Job_batches.
     * @example
     * // Create many Job_batches
     * const job_batches = await prisma.job_batches.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends job_batchesCreateManyArgs>(args?: SelectSubset<T, job_batchesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Job_batches and returns the data saved in the database.
     * @param {job_batchesCreateManyAndReturnArgs} args - Arguments to create many Job_batches.
     * @example
     * // Create many Job_batches
     * const job_batches = await prisma.job_batches.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Job_batches and only return the `id`
     * const job_batchesWithIdOnly = await prisma.job_batches.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends job_batchesCreateManyAndReturnArgs>(args?: SelectSubset<T, job_batchesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$job_batchesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Job_batches.
     * @param {job_batchesDeleteArgs} args - Arguments to delete one Job_batches.
     * @example
     * // Delete one Job_batches
     * const Job_batches = await prisma.job_batches.delete({
     *   where: {
     *     // ... filter to delete one Job_batches
     *   }
     * })
     * 
     */
    delete<T extends job_batchesDeleteArgs>(args: SelectSubset<T, job_batchesDeleteArgs<ExtArgs>>): Prisma__job_batchesClient<$Result.GetResult<Prisma.$job_batchesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Job_batches.
     * @param {job_batchesUpdateArgs} args - Arguments to update one Job_batches.
     * @example
     * // Update one Job_batches
     * const job_batches = await prisma.job_batches.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends job_batchesUpdateArgs>(args: SelectSubset<T, job_batchesUpdateArgs<ExtArgs>>): Prisma__job_batchesClient<$Result.GetResult<Prisma.$job_batchesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Job_batches.
     * @param {job_batchesDeleteManyArgs} args - Arguments to filter Job_batches to delete.
     * @example
     * // Delete a few Job_batches
     * const { count } = await prisma.job_batches.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends job_batchesDeleteManyArgs>(args?: SelectSubset<T, job_batchesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Job_batches.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {job_batchesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Job_batches
     * const job_batches = await prisma.job_batches.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends job_batchesUpdateManyArgs>(args: SelectSubset<T, job_batchesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Job_batches and returns the data updated in the database.
     * @param {job_batchesUpdateManyAndReturnArgs} args - Arguments to update many Job_batches.
     * @example
     * // Update many Job_batches
     * const job_batches = await prisma.job_batches.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Job_batches and only return the `id`
     * const job_batchesWithIdOnly = await prisma.job_batches.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends job_batchesUpdateManyAndReturnArgs>(args: SelectSubset<T, job_batchesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$job_batchesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Job_batches.
     * @param {job_batchesUpsertArgs} args - Arguments to update or create a Job_batches.
     * @example
     * // Update or create a Job_batches
     * const job_batches = await prisma.job_batches.upsert({
     *   create: {
     *     // ... data to create a Job_batches
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Job_batches we want to update
     *   }
     * })
     */
    upsert<T extends job_batchesUpsertArgs>(args: SelectSubset<T, job_batchesUpsertArgs<ExtArgs>>): Prisma__job_batchesClient<$Result.GetResult<Prisma.$job_batchesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Job_batches.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {job_batchesCountArgs} args - Arguments to filter Job_batches to count.
     * @example
     * // Count the number of Job_batches
     * const count = await prisma.job_batches.count({
     *   where: {
     *     // ... the filter for the Job_batches we want to count
     *   }
     * })
    **/
    count<T extends job_batchesCountArgs>(
      args?: Subset<T, job_batchesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Job_batchesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Job_batches.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Job_batchesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Job_batchesAggregateArgs>(args: Subset<T, Job_batchesAggregateArgs>): Prisma.PrismaPromise<GetJob_batchesAggregateType<T>>

    /**
     * Group by Job_batches.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {job_batchesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends job_batchesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: job_batchesGroupByArgs['orderBy'] }
        : { orderBy?: job_batchesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, job_batchesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetJob_batchesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the job_batches model
   */
  readonly fields: job_batchesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for job_batches.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__job_batchesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the job_batches model
   */ 
  interface job_batchesFieldRefs {
    readonly id: FieldRef<"job_batches", 'String'>
    readonly name: FieldRef<"job_batches", 'String'>
    readonly total_jobs: FieldRef<"job_batches", 'Int'>
    readonly pending_jobs: FieldRef<"job_batches", 'Int'>
    readonly failed_jobs: FieldRef<"job_batches", 'Int'>
    readonly failed_job_ids: FieldRef<"job_batches", 'String'>
    readonly options: FieldRef<"job_batches", 'String'>
    readonly cancelled_at: FieldRef<"job_batches", 'Int'>
    readonly created_at: FieldRef<"job_batches", 'Int'>
    readonly finished_at: FieldRef<"job_batches", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * job_batches findUnique
   */
  export type job_batchesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the job_batches
     */
    select?: job_batchesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the job_batches
     */
    omit?: job_batchesOmit<ExtArgs> | null
    /**
     * Filter, which job_batches to fetch.
     */
    where: job_batchesWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * job_batches findUniqueOrThrow
   */
  export type job_batchesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the job_batches
     */
    select?: job_batchesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the job_batches
     */
    omit?: job_batchesOmit<ExtArgs> | null
    /**
     * Filter, which job_batches to fetch.
     */
    where: job_batchesWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * job_batches findFirst
   */
  export type job_batchesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the job_batches
     */
    select?: job_batchesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the job_batches
     */
    omit?: job_batchesOmit<ExtArgs> | null
    /**
     * Filter, which job_batches to fetch.
     */
    where?: job_batchesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of job_batches to fetch.
     */
    orderBy?: job_batchesOrderByWithRelationInput | job_batchesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for job_batches.
     */
    cursor?: job_batchesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` job_batches from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` job_batches.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of job_batches.
     */
    distinct?: Job_batchesScalarFieldEnum | Job_batchesScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * job_batches findFirstOrThrow
   */
  export type job_batchesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the job_batches
     */
    select?: job_batchesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the job_batches
     */
    omit?: job_batchesOmit<ExtArgs> | null
    /**
     * Filter, which job_batches to fetch.
     */
    where?: job_batchesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of job_batches to fetch.
     */
    orderBy?: job_batchesOrderByWithRelationInput | job_batchesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for job_batches.
     */
    cursor?: job_batchesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` job_batches from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` job_batches.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of job_batches.
     */
    distinct?: Job_batchesScalarFieldEnum | Job_batchesScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * job_batches findMany
   */
  export type job_batchesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the job_batches
     */
    select?: job_batchesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the job_batches
     */
    omit?: job_batchesOmit<ExtArgs> | null
    /**
     * Filter, which job_batches to fetch.
     */
    where?: job_batchesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of job_batches to fetch.
     */
    orderBy?: job_batchesOrderByWithRelationInput | job_batchesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing job_batches.
     */
    cursor?: job_batchesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` job_batches from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` job_batches.
     */
    skip?: number
    distinct?: Job_batchesScalarFieldEnum | Job_batchesScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * job_batches create
   */
  export type job_batchesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the job_batches
     */
    select?: job_batchesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the job_batches
     */
    omit?: job_batchesOmit<ExtArgs> | null
    /**
     * The data needed to create a job_batches.
     */
    data: XOR<job_batchesCreateInput, job_batchesUncheckedCreateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * job_batches createMany
   */
  export type job_batchesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many job_batches.
     */
    data: job_batchesCreateManyInput | job_batchesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * job_batches createManyAndReturn
   */
  export type job_batchesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the job_batches
     */
    select?: job_batchesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the job_batches
     */
    omit?: job_batchesOmit<ExtArgs> | null
    /**
     * The data used to create many job_batches.
     */
    data: job_batchesCreateManyInput | job_batchesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * job_batches update
   */
  export type job_batchesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the job_batches
     */
    select?: job_batchesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the job_batches
     */
    omit?: job_batchesOmit<ExtArgs> | null
    /**
     * The data needed to update a job_batches.
     */
    data: XOR<job_batchesUpdateInput, job_batchesUncheckedUpdateInput>
    /**
     * Choose, which job_batches to update.
     */
    where: job_batchesWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * job_batches updateMany
   */
  export type job_batchesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update job_batches.
     */
    data: XOR<job_batchesUpdateManyMutationInput, job_batchesUncheckedUpdateManyInput>
    /**
     * Filter which job_batches to update
     */
    where?: job_batchesWhereInput
    /**
     * Limit how many job_batches to update.
     */
    limit?: number
  }

  /**
   * job_batches updateManyAndReturn
   */
  export type job_batchesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the job_batches
     */
    select?: job_batchesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the job_batches
     */
    omit?: job_batchesOmit<ExtArgs> | null
    /**
     * The data used to update job_batches.
     */
    data: XOR<job_batchesUpdateManyMutationInput, job_batchesUncheckedUpdateManyInput>
    /**
     * Filter which job_batches to update
     */
    where?: job_batchesWhereInput
    /**
     * Limit how many job_batches to update.
     */
    limit?: number
  }

  /**
   * job_batches upsert
   */
  export type job_batchesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the job_batches
     */
    select?: job_batchesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the job_batches
     */
    omit?: job_batchesOmit<ExtArgs> | null
    /**
     * The filter to search for the job_batches to update in case it exists.
     */
    where: job_batchesWhereUniqueInput
    /**
     * In case the job_batches found by the `where` argument doesn't exist, create a new job_batches with this data.
     */
    create: XOR<job_batchesCreateInput, job_batchesUncheckedCreateInput>
    /**
     * In case the job_batches was found with the provided `where` argument, update it with this data.
     */
    update: XOR<job_batchesUpdateInput, job_batchesUncheckedUpdateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * job_batches delete
   */
  export type job_batchesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the job_batches
     */
    select?: job_batchesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the job_batches
     */
    omit?: job_batchesOmit<ExtArgs> | null
    /**
     * Filter which job_batches to delete.
     */
    where: job_batchesWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * job_batches deleteMany
   */
  export type job_batchesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which job_batches to delete
     */
    where?: job_batchesWhereInput
    /**
     * Limit how many job_batches to delete.
     */
    limit?: number
  }

  /**
   * job_batches without action
   */
  export type job_batchesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the job_batches
     */
    select?: job_batchesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the job_batches
     */
    omit?: job_batchesOmit<ExtArgs> | null
  }


  /**
   * Model jobs
   */

  export type AggregateJobs = {
    _count: JobsCountAggregateOutputType | null
    _avg: JobsAvgAggregateOutputType | null
    _sum: JobsSumAggregateOutputType | null
    _min: JobsMinAggregateOutputType | null
    _max: JobsMaxAggregateOutputType | null
  }

  export type JobsAvgAggregateOutputType = {
    id: number | null
    attempts: number | null
    reserved_at: number | null
    available_at: number | null
    created_at: number | null
  }

  export type JobsSumAggregateOutputType = {
    id: bigint | null
    attempts: number | null
    reserved_at: number | null
    available_at: number | null
    created_at: number | null
  }

  export type JobsMinAggregateOutputType = {
    id: bigint | null
    queue: string | null
    payload: string | null
    attempts: number | null
    reserved_at: number | null
    available_at: number | null
    created_at: number | null
  }

  export type JobsMaxAggregateOutputType = {
    id: bigint | null
    queue: string | null
    payload: string | null
    attempts: number | null
    reserved_at: number | null
    available_at: number | null
    created_at: number | null
  }

  export type JobsCountAggregateOutputType = {
    id: number
    queue: number
    payload: number
    attempts: number
    reserved_at: number
    available_at: number
    created_at: number
    _all: number
  }


  export type JobsAvgAggregateInputType = {
    id?: true
    attempts?: true
    reserved_at?: true
    available_at?: true
    created_at?: true
  }

  export type JobsSumAggregateInputType = {
    id?: true
    attempts?: true
    reserved_at?: true
    available_at?: true
    created_at?: true
  }

  export type JobsMinAggregateInputType = {
    id?: true
    queue?: true
    payload?: true
    attempts?: true
    reserved_at?: true
    available_at?: true
    created_at?: true
  }

  export type JobsMaxAggregateInputType = {
    id?: true
    queue?: true
    payload?: true
    attempts?: true
    reserved_at?: true
    available_at?: true
    created_at?: true
  }

  export type JobsCountAggregateInputType = {
    id?: true
    queue?: true
    payload?: true
    attempts?: true
    reserved_at?: true
    available_at?: true
    created_at?: true
    _all?: true
  }

  export type JobsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which jobs to aggregate.
     */
    where?: jobsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of jobs to fetch.
     */
    orderBy?: jobsOrderByWithRelationInput | jobsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: jobsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` jobs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` jobs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned jobs
    **/
    _count?: true | JobsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: JobsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: JobsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: JobsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: JobsMaxAggregateInputType
  }

  export type GetJobsAggregateType<T extends JobsAggregateArgs> = {
        [P in keyof T & keyof AggregateJobs]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateJobs[P]>
      : GetScalarType<T[P], AggregateJobs[P]>
  }




  export type jobsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: jobsWhereInput
    orderBy?: jobsOrderByWithAggregationInput | jobsOrderByWithAggregationInput[]
    by: JobsScalarFieldEnum[] | JobsScalarFieldEnum
    having?: jobsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: JobsCountAggregateInputType | true
    _avg?: JobsAvgAggregateInputType
    _sum?: JobsSumAggregateInputType
    _min?: JobsMinAggregateInputType
    _max?: JobsMaxAggregateInputType
  }

  export type JobsGroupByOutputType = {
    id: bigint
    queue: string
    payload: string
    attempts: number
    reserved_at: number | null
    available_at: number
    created_at: number
    _count: JobsCountAggregateOutputType | null
    _avg: JobsAvgAggregateOutputType | null
    _sum: JobsSumAggregateOutputType | null
    _min: JobsMinAggregateOutputType | null
    _max: JobsMaxAggregateOutputType | null
  }

  type GetJobsGroupByPayload<T extends jobsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<JobsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof JobsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], JobsGroupByOutputType[P]>
            : GetScalarType<T[P], JobsGroupByOutputType[P]>
        }
      >
    >


  export type jobsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    queue?: boolean
    payload?: boolean
    attempts?: boolean
    reserved_at?: boolean
    available_at?: boolean
    created_at?: boolean
  }, ExtArgs["result"]["jobs"]>

  export type jobsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    queue?: boolean
    payload?: boolean
    attempts?: boolean
    reserved_at?: boolean
    available_at?: boolean
    created_at?: boolean
  }, ExtArgs["result"]["jobs"]>

  export type jobsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    queue?: boolean
    payload?: boolean
    attempts?: boolean
    reserved_at?: boolean
    available_at?: boolean
    created_at?: boolean
  }, ExtArgs["result"]["jobs"]>

  export type jobsSelectScalar = {
    id?: boolean
    queue?: boolean
    payload?: boolean
    attempts?: boolean
    reserved_at?: boolean
    available_at?: boolean
    created_at?: boolean
  }

  export type jobsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "queue" | "payload" | "attempts" | "reserved_at" | "available_at" | "created_at", ExtArgs["result"]["jobs"]>

  export type $jobsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "jobs"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      queue: string
      payload: string
      attempts: number
      reserved_at: number | null
      available_at: number
      created_at: number
    }, ExtArgs["result"]["jobs"]>
    composites: {}
  }

  type jobsGetPayload<S extends boolean | null | undefined | jobsDefaultArgs> = $Result.GetResult<Prisma.$jobsPayload, S>

  type jobsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<jobsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit' | 'relationLoadStrategy'> & {
      select?: JobsCountAggregateInputType | true
    }

  export interface jobsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['jobs'], meta: { name: 'jobs' } }
    /**
     * Find zero or one Jobs that matches the filter.
     * @param {jobsFindUniqueArgs} args - Arguments to find a Jobs
     * @example
     * // Get one Jobs
     * const jobs = await prisma.jobs.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends jobsFindUniqueArgs>(args: SelectSubset<T, jobsFindUniqueArgs<ExtArgs>>): Prisma__jobsClient<$Result.GetResult<Prisma.$jobsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Jobs that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {jobsFindUniqueOrThrowArgs} args - Arguments to find a Jobs
     * @example
     * // Get one Jobs
     * const jobs = await prisma.jobs.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends jobsFindUniqueOrThrowArgs>(args: SelectSubset<T, jobsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__jobsClient<$Result.GetResult<Prisma.$jobsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Jobs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {jobsFindFirstArgs} args - Arguments to find a Jobs
     * @example
     * // Get one Jobs
     * const jobs = await prisma.jobs.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends jobsFindFirstArgs>(args?: SelectSubset<T, jobsFindFirstArgs<ExtArgs>>): Prisma__jobsClient<$Result.GetResult<Prisma.$jobsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Jobs that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {jobsFindFirstOrThrowArgs} args - Arguments to find a Jobs
     * @example
     * // Get one Jobs
     * const jobs = await prisma.jobs.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends jobsFindFirstOrThrowArgs>(args?: SelectSubset<T, jobsFindFirstOrThrowArgs<ExtArgs>>): Prisma__jobsClient<$Result.GetResult<Prisma.$jobsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Jobs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {jobsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Jobs
     * const jobs = await prisma.jobs.findMany()
     * 
     * // Get first 10 Jobs
     * const jobs = await prisma.jobs.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const jobsWithIdOnly = await prisma.jobs.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends jobsFindManyArgs>(args?: SelectSubset<T, jobsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$jobsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Jobs.
     * @param {jobsCreateArgs} args - Arguments to create a Jobs.
     * @example
     * // Create one Jobs
     * const Jobs = await prisma.jobs.create({
     *   data: {
     *     // ... data to create a Jobs
     *   }
     * })
     * 
     */
    create<T extends jobsCreateArgs>(args: SelectSubset<T, jobsCreateArgs<ExtArgs>>): Prisma__jobsClient<$Result.GetResult<Prisma.$jobsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Jobs.
     * @param {jobsCreateManyArgs} args - Arguments to create many Jobs.
     * @example
     * // Create many Jobs
     * const jobs = await prisma.jobs.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends jobsCreateManyArgs>(args?: SelectSubset<T, jobsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Jobs and returns the data saved in the database.
     * @param {jobsCreateManyAndReturnArgs} args - Arguments to create many Jobs.
     * @example
     * // Create many Jobs
     * const jobs = await prisma.jobs.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Jobs and only return the `id`
     * const jobsWithIdOnly = await prisma.jobs.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends jobsCreateManyAndReturnArgs>(args?: SelectSubset<T, jobsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$jobsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Jobs.
     * @param {jobsDeleteArgs} args - Arguments to delete one Jobs.
     * @example
     * // Delete one Jobs
     * const Jobs = await prisma.jobs.delete({
     *   where: {
     *     // ... filter to delete one Jobs
     *   }
     * })
     * 
     */
    delete<T extends jobsDeleteArgs>(args: SelectSubset<T, jobsDeleteArgs<ExtArgs>>): Prisma__jobsClient<$Result.GetResult<Prisma.$jobsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Jobs.
     * @param {jobsUpdateArgs} args - Arguments to update one Jobs.
     * @example
     * // Update one Jobs
     * const jobs = await prisma.jobs.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends jobsUpdateArgs>(args: SelectSubset<T, jobsUpdateArgs<ExtArgs>>): Prisma__jobsClient<$Result.GetResult<Prisma.$jobsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Jobs.
     * @param {jobsDeleteManyArgs} args - Arguments to filter Jobs to delete.
     * @example
     * // Delete a few Jobs
     * const { count } = await prisma.jobs.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends jobsDeleteManyArgs>(args?: SelectSubset<T, jobsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Jobs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {jobsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Jobs
     * const jobs = await prisma.jobs.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends jobsUpdateManyArgs>(args: SelectSubset<T, jobsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Jobs and returns the data updated in the database.
     * @param {jobsUpdateManyAndReturnArgs} args - Arguments to update many Jobs.
     * @example
     * // Update many Jobs
     * const jobs = await prisma.jobs.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Jobs and only return the `id`
     * const jobsWithIdOnly = await prisma.jobs.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends jobsUpdateManyAndReturnArgs>(args: SelectSubset<T, jobsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$jobsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Jobs.
     * @param {jobsUpsertArgs} args - Arguments to update or create a Jobs.
     * @example
     * // Update or create a Jobs
     * const jobs = await prisma.jobs.upsert({
     *   create: {
     *     // ... data to create a Jobs
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Jobs we want to update
     *   }
     * })
     */
    upsert<T extends jobsUpsertArgs>(args: SelectSubset<T, jobsUpsertArgs<ExtArgs>>): Prisma__jobsClient<$Result.GetResult<Prisma.$jobsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Jobs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {jobsCountArgs} args - Arguments to filter Jobs to count.
     * @example
     * // Count the number of Jobs
     * const count = await prisma.jobs.count({
     *   where: {
     *     // ... the filter for the Jobs we want to count
     *   }
     * })
    **/
    count<T extends jobsCountArgs>(
      args?: Subset<T, jobsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], JobsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Jobs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends JobsAggregateArgs>(args: Subset<T, JobsAggregateArgs>): Prisma.PrismaPromise<GetJobsAggregateType<T>>

    /**
     * Group by Jobs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {jobsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends jobsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: jobsGroupByArgs['orderBy'] }
        : { orderBy?: jobsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, jobsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetJobsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the jobs model
   */
  readonly fields: jobsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for jobs.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__jobsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the jobs model
   */ 
  interface jobsFieldRefs {
    readonly id: FieldRef<"jobs", 'BigInt'>
    readonly queue: FieldRef<"jobs", 'String'>
    readonly payload: FieldRef<"jobs", 'String'>
    readonly attempts: FieldRef<"jobs", 'Int'>
    readonly reserved_at: FieldRef<"jobs", 'Int'>
    readonly available_at: FieldRef<"jobs", 'Int'>
    readonly created_at: FieldRef<"jobs", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * jobs findUnique
   */
  export type jobsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the jobs
     */
    select?: jobsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the jobs
     */
    omit?: jobsOmit<ExtArgs> | null
    /**
     * Filter, which jobs to fetch.
     */
    where: jobsWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * jobs findUniqueOrThrow
   */
  export type jobsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the jobs
     */
    select?: jobsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the jobs
     */
    omit?: jobsOmit<ExtArgs> | null
    /**
     * Filter, which jobs to fetch.
     */
    where: jobsWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * jobs findFirst
   */
  export type jobsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the jobs
     */
    select?: jobsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the jobs
     */
    omit?: jobsOmit<ExtArgs> | null
    /**
     * Filter, which jobs to fetch.
     */
    where?: jobsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of jobs to fetch.
     */
    orderBy?: jobsOrderByWithRelationInput | jobsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for jobs.
     */
    cursor?: jobsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` jobs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` jobs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of jobs.
     */
    distinct?: JobsScalarFieldEnum | JobsScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * jobs findFirstOrThrow
   */
  export type jobsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the jobs
     */
    select?: jobsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the jobs
     */
    omit?: jobsOmit<ExtArgs> | null
    /**
     * Filter, which jobs to fetch.
     */
    where?: jobsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of jobs to fetch.
     */
    orderBy?: jobsOrderByWithRelationInput | jobsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for jobs.
     */
    cursor?: jobsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` jobs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` jobs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of jobs.
     */
    distinct?: JobsScalarFieldEnum | JobsScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * jobs findMany
   */
  export type jobsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the jobs
     */
    select?: jobsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the jobs
     */
    omit?: jobsOmit<ExtArgs> | null
    /**
     * Filter, which jobs to fetch.
     */
    where?: jobsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of jobs to fetch.
     */
    orderBy?: jobsOrderByWithRelationInput | jobsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing jobs.
     */
    cursor?: jobsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` jobs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` jobs.
     */
    skip?: number
    distinct?: JobsScalarFieldEnum | JobsScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * jobs create
   */
  export type jobsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the jobs
     */
    select?: jobsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the jobs
     */
    omit?: jobsOmit<ExtArgs> | null
    /**
     * The data needed to create a jobs.
     */
    data: XOR<jobsCreateInput, jobsUncheckedCreateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * jobs createMany
   */
  export type jobsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many jobs.
     */
    data: jobsCreateManyInput | jobsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * jobs createManyAndReturn
   */
  export type jobsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the jobs
     */
    select?: jobsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the jobs
     */
    omit?: jobsOmit<ExtArgs> | null
    /**
     * The data used to create many jobs.
     */
    data: jobsCreateManyInput | jobsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * jobs update
   */
  export type jobsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the jobs
     */
    select?: jobsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the jobs
     */
    omit?: jobsOmit<ExtArgs> | null
    /**
     * The data needed to update a jobs.
     */
    data: XOR<jobsUpdateInput, jobsUncheckedUpdateInput>
    /**
     * Choose, which jobs to update.
     */
    where: jobsWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * jobs updateMany
   */
  export type jobsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update jobs.
     */
    data: XOR<jobsUpdateManyMutationInput, jobsUncheckedUpdateManyInput>
    /**
     * Filter which jobs to update
     */
    where?: jobsWhereInput
    /**
     * Limit how many jobs to update.
     */
    limit?: number
  }

  /**
   * jobs updateManyAndReturn
   */
  export type jobsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the jobs
     */
    select?: jobsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the jobs
     */
    omit?: jobsOmit<ExtArgs> | null
    /**
     * The data used to update jobs.
     */
    data: XOR<jobsUpdateManyMutationInput, jobsUncheckedUpdateManyInput>
    /**
     * Filter which jobs to update
     */
    where?: jobsWhereInput
    /**
     * Limit how many jobs to update.
     */
    limit?: number
  }

  /**
   * jobs upsert
   */
  export type jobsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the jobs
     */
    select?: jobsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the jobs
     */
    omit?: jobsOmit<ExtArgs> | null
    /**
     * The filter to search for the jobs to update in case it exists.
     */
    where: jobsWhereUniqueInput
    /**
     * In case the jobs found by the `where` argument doesn't exist, create a new jobs with this data.
     */
    create: XOR<jobsCreateInput, jobsUncheckedCreateInput>
    /**
     * In case the jobs was found with the provided `where` argument, update it with this data.
     */
    update: XOR<jobsUpdateInput, jobsUncheckedUpdateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * jobs delete
   */
  export type jobsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the jobs
     */
    select?: jobsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the jobs
     */
    omit?: jobsOmit<ExtArgs> | null
    /**
     * Filter which jobs to delete.
     */
    where: jobsWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * jobs deleteMany
   */
  export type jobsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which jobs to delete
     */
    where?: jobsWhereInput
    /**
     * Limit how many jobs to delete.
     */
    limit?: number
  }

  /**
   * jobs without action
   */
  export type jobsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the jobs
     */
    select?: jobsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the jobs
     */
    omit?: jobsOmit<ExtArgs> | null
  }


  /**
   * Model migrations
   */

  export type AggregateMigrations = {
    _count: MigrationsCountAggregateOutputType | null
    _avg: MigrationsAvgAggregateOutputType | null
    _sum: MigrationsSumAggregateOutputType | null
    _min: MigrationsMinAggregateOutputType | null
    _max: MigrationsMaxAggregateOutputType | null
  }

  export type MigrationsAvgAggregateOutputType = {
    id: number | null
    batch: number | null
  }

  export type MigrationsSumAggregateOutputType = {
    id: number | null
    batch: number | null
  }

  export type MigrationsMinAggregateOutputType = {
    id: number | null
    migration: string | null
    batch: number | null
  }

  export type MigrationsMaxAggregateOutputType = {
    id: number | null
    migration: string | null
    batch: number | null
  }

  export type MigrationsCountAggregateOutputType = {
    id: number
    migration: number
    batch: number
    _all: number
  }


  export type MigrationsAvgAggregateInputType = {
    id?: true
    batch?: true
  }

  export type MigrationsSumAggregateInputType = {
    id?: true
    batch?: true
  }

  export type MigrationsMinAggregateInputType = {
    id?: true
    migration?: true
    batch?: true
  }

  export type MigrationsMaxAggregateInputType = {
    id?: true
    migration?: true
    batch?: true
  }

  export type MigrationsCountAggregateInputType = {
    id?: true
    migration?: true
    batch?: true
    _all?: true
  }

  export type MigrationsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which migrations to aggregate.
     */
    where?: migrationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of migrations to fetch.
     */
    orderBy?: migrationsOrderByWithRelationInput | migrationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: migrationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` migrations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` migrations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned migrations
    **/
    _count?: true | MigrationsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MigrationsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MigrationsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MigrationsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MigrationsMaxAggregateInputType
  }

  export type GetMigrationsAggregateType<T extends MigrationsAggregateArgs> = {
        [P in keyof T & keyof AggregateMigrations]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMigrations[P]>
      : GetScalarType<T[P], AggregateMigrations[P]>
  }




  export type migrationsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: migrationsWhereInput
    orderBy?: migrationsOrderByWithAggregationInput | migrationsOrderByWithAggregationInput[]
    by: MigrationsScalarFieldEnum[] | MigrationsScalarFieldEnum
    having?: migrationsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MigrationsCountAggregateInputType | true
    _avg?: MigrationsAvgAggregateInputType
    _sum?: MigrationsSumAggregateInputType
    _min?: MigrationsMinAggregateInputType
    _max?: MigrationsMaxAggregateInputType
  }

  export type MigrationsGroupByOutputType = {
    id: number
    migration: string
    batch: number
    _count: MigrationsCountAggregateOutputType | null
    _avg: MigrationsAvgAggregateOutputType | null
    _sum: MigrationsSumAggregateOutputType | null
    _min: MigrationsMinAggregateOutputType | null
    _max: MigrationsMaxAggregateOutputType | null
  }

  type GetMigrationsGroupByPayload<T extends migrationsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MigrationsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MigrationsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MigrationsGroupByOutputType[P]>
            : GetScalarType<T[P], MigrationsGroupByOutputType[P]>
        }
      >
    >


  export type migrationsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    migration?: boolean
    batch?: boolean
  }, ExtArgs["result"]["migrations"]>

  export type migrationsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    migration?: boolean
    batch?: boolean
  }, ExtArgs["result"]["migrations"]>

  export type migrationsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    migration?: boolean
    batch?: boolean
  }, ExtArgs["result"]["migrations"]>

  export type migrationsSelectScalar = {
    id?: boolean
    migration?: boolean
    batch?: boolean
  }

  export type migrationsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "migration" | "batch", ExtArgs["result"]["migrations"]>

  export type $migrationsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "migrations"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      migration: string
      batch: number
    }, ExtArgs["result"]["migrations"]>
    composites: {}
  }

  type migrationsGetPayload<S extends boolean | null | undefined | migrationsDefaultArgs> = $Result.GetResult<Prisma.$migrationsPayload, S>

  type migrationsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<migrationsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit' | 'relationLoadStrategy'> & {
      select?: MigrationsCountAggregateInputType | true
    }

  export interface migrationsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['migrations'], meta: { name: 'migrations' } }
    /**
     * Find zero or one Migrations that matches the filter.
     * @param {migrationsFindUniqueArgs} args - Arguments to find a Migrations
     * @example
     * // Get one Migrations
     * const migrations = await prisma.migrations.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends migrationsFindUniqueArgs>(args: SelectSubset<T, migrationsFindUniqueArgs<ExtArgs>>): Prisma__migrationsClient<$Result.GetResult<Prisma.$migrationsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Migrations that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {migrationsFindUniqueOrThrowArgs} args - Arguments to find a Migrations
     * @example
     * // Get one Migrations
     * const migrations = await prisma.migrations.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends migrationsFindUniqueOrThrowArgs>(args: SelectSubset<T, migrationsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__migrationsClient<$Result.GetResult<Prisma.$migrationsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Migrations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {migrationsFindFirstArgs} args - Arguments to find a Migrations
     * @example
     * // Get one Migrations
     * const migrations = await prisma.migrations.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends migrationsFindFirstArgs>(args?: SelectSubset<T, migrationsFindFirstArgs<ExtArgs>>): Prisma__migrationsClient<$Result.GetResult<Prisma.$migrationsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Migrations that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {migrationsFindFirstOrThrowArgs} args - Arguments to find a Migrations
     * @example
     * // Get one Migrations
     * const migrations = await prisma.migrations.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends migrationsFindFirstOrThrowArgs>(args?: SelectSubset<T, migrationsFindFirstOrThrowArgs<ExtArgs>>): Prisma__migrationsClient<$Result.GetResult<Prisma.$migrationsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Migrations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {migrationsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Migrations
     * const migrations = await prisma.migrations.findMany()
     * 
     * // Get first 10 Migrations
     * const migrations = await prisma.migrations.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const migrationsWithIdOnly = await prisma.migrations.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends migrationsFindManyArgs>(args?: SelectSubset<T, migrationsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$migrationsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Migrations.
     * @param {migrationsCreateArgs} args - Arguments to create a Migrations.
     * @example
     * // Create one Migrations
     * const Migrations = await prisma.migrations.create({
     *   data: {
     *     // ... data to create a Migrations
     *   }
     * })
     * 
     */
    create<T extends migrationsCreateArgs>(args: SelectSubset<T, migrationsCreateArgs<ExtArgs>>): Prisma__migrationsClient<$Result.GetResult<Prisma.$migrationsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Migrations.
     * @param {migrationsCreateManyArgs} args - Arguments to create many Migrations.
     * @example
     * // Create many Migrations
     * const migrations = await prisma.migrations.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends migrationsCreateManyArgs>(args?: SelectSubset<T, migrationsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Migrations and returns the data saved in the database.
     * @param {migrationsCreateManyAndReturnArgs} args - Arguments to create many Migrations.
     * @example
     * // Create many Migrations
     * const migrations = await prisma.migrations.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Migrations and only return the `id`
     * const migrationsWithIdOnly = await prisma.migrations.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends migrationsCreateManyAndReturnArgs>(args?: SelectSubset<T, migrationsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$migrationsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Migrations.
     * @param {migrationsDeleteArgs} args - Arguments to delete one Migrations.
     * @example
     * // Delete one Migrations
     * const Migrations = await prisma.migrations.delete({
     *   where: {
     *     // ... filter to delete one Migrations
     *   }
     * })
     * 
     */
    delete<T extends migrationsDeleteArgs>(args: SelectSubset<T, migrationsDeleteArgs<ExtArgs>>): Prisma__migrationsClient<$Result.GetResult<Prisma.$migrationsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Migrations.
     * @param {migrationsUpdateArgs} args - Arguments to update one Migrations.
     * @example
     * // Update one Migrations
     * const migrations = await prisma.migrations.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends migrationsUpdateArgs>(args: SelectSubset<T, migrationsUpdateArgs<ExtArgs>>): Prisma__migrationsClient<$Result.GetResult<Prisma.$migrationsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Migrations.
     * @param {migrationsDeleteManyArgs} args - Arguments to filter Migrations to delete.
     * @example
     * // Delete a few Migrations
     * const { count } = await prisma.migrations.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends migrationsDeleteManyArgs>(args?: SelectSubset<T, migrationsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Migrations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {migrationsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Migrations
     * const migrations = await prisma.migrations.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends migrationsUpdateManyArgs>(args: SelectSubset<T, migrationsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Migrations and returns the data updated in the database.
     * @param {migrationsUpdateManyAndReturnArgs} args - Arguments to update many Migrations.
     * @example
     * // Update many Migrations
     * const migrations = await prisma.migrations.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Migrations and only return the `id`
     * const migrationsWithIdOnly = await prisma.migrations.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends migrationsUpdateManyAndReturnArgs>(args: SelectSubset<T, migrationsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$migrationsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Migrations.
     * @param {migrationsUpsertArgs} args - Arguments to update or create a Migrations.
     * @example
     * // Update or create a Migrations
     * const migrations = await prisma.migrations.upsert({
     *   create: {
     *     // ... data to create a Migrations
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Migrations we want to update
     *   }
     * })
     */
    upsert<T extends migrationsUpsertArgs>(args: SelectSubset<T, migrationsUpsertArgs<ExtArgs>>): Prisma__migrationsClient<$Result.GetResult<Prisma.$migrationsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Migrations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {migrationsCountArgs} args - Arguments to filter Migrations to count.
     * @example
     * // Count the number of Migrations
     * const count = await prisma.migrations.count({
     *   where: {
     *     // ... the filter for the Migrations we want to count
     *   }
     * })
    **/
    count<T extends migrationsCountArgs>(
      args?: Subset<T, migrationsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MigrationsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Migrations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MigrationsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MigrationsAggregateArgs>(args: Subset<T, MigrationsAggregateArgs>): Prisma.PrismaPromise<GetMigrationsAggregateType<T>>

    /**
     * Group by Migrations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {migrationsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends migrationsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: migrationsGroupByArgs['orderBy'] }
        : { orderBy?: migrationsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, migrationsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMigrationsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the migrations model
   */
  readonly fields: migrationsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for migrations.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__migrationsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the migrations model
   */ 
  interface migrationsFieldRefs {
    readonly id: FieldRef<"migrations", 'Int'>
    readonly migration: FieldRef<"migrations", 'String'>
    readonly batch: FieldRef<"migrations", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * migrations findUnique
   */
  export type migrationsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the migrations
     */
    select?: migrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the migrations
     */
    omit?: migrationsOmit<ExtArgs> | null
    /**
     * Filter, which migrations to fetch.
     */
    where: migrationsWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * migrations findUniqueOrThrow
   */
  export type migrationsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the migrations
     */
    select?: migrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the migrations
     */
    omit?: migrationsOmit<ExtArgs> | null
    /**
     * Filter, which migrations to fetch.
     */
    where: migrationsWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * migrations findFirst
   */
  export type migrationsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the migrations
     */
    select?: migrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the migrations
     */
    omit?: migrationsOmit<ExtArgs> | null
    /**
     * Filter, which migrations to fetch.
     */
    where?: migrationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of migrations to fetch.
     */
    orderBy?: migrationsOrderByWithRelationInput | migrationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for migrations.
     */
    cursor?: migrationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` migrations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` migrations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of migrations.
     */
    distinct?: MigrationsScalarFieldEnum | MigrationsScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * migrations findFirstOrThrow
   */
  export type migrationsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the migrations
     */
    select?: migrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the migrations
     */
    omit?: migrationsOmit<ExtArgs> | null
    /**
     * Filter, which migrations to fetch.
     */
    where?: migrationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of migrations to fetch.
     */
    orderBy?: migrationsOrderByWithRelationInput | migrationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for migrations.
     */
    cursor?: migrationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` migrations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` migrations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of migrations.
     */
    distinct?: MigrationsScalarFieldEnum | MigrationsScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * migrations findMany
   */
  export type migrationsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the migrations
     */
    select?: migrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the migrations
     */
    omit?: migrationsOmit<ExtArgs> | null
    /**
     * Filter, which migrations to fetch.
     */
    where?: migrationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of migrations to fetch.
     */
    orderBy?: migrationsOrderByWithRelationInput | migrationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing migrations.
     */
    cursor?: migrationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` migrations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` migrations.
     */
    skip?: number
    distinct?: MigrationsScalarFieldEnum | MigrationsScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * migrations create
   */
  export type migrationsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the migrations
     */
    select?: migrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the migrations
     */
    omit?: migrationsOmit<ExtArgs> | null
    /**
     * The data needed to create a migrations.
     */
    data: XOR<migrationsCreateInput, migrationsUncheckedCreateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * migrations createMany
   */
  export type migrationsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many migrations.
     */
    data: migrationsCreateManyInput | migrationsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * migrations createManyAndReturn
   */
  export type migrationsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the migrations
     */
    select?: migrationsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the migrations
     */
    omit?: migrationsOmit<ExtArgs> | null
    /**
     * The data used to create many migrations.
     */
    data: migrationsCreateManyInput | migrationsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * migrations update
   */
  export type migrationsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the migrations
     */
    select?: migrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the migrations
     */
    omit?: migrationsOmit<ExtArgs> | null
    /**
     * The data needed to update a migrations.
     */
    data: XOR<migrationsUpdateInput, migrationsUncheckedUpdateInput>
    /**
     * Choose, which migrations to update.
     */
    where: migrationsWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * migrations updateMany
   */
  export type migrationsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update migrations.
     */
    data: XOR<migrationsUpdateManyMutationInput, migrationsUncheckedUpdateManyInput>
    /**
     * Filter which migrations to update
     */
    where?: migrationsWhereInput
    /**
     * Limit how many migrations to update.
     */
    limit?: number
  }

  /**
   * migrations updateManyAndReturn
   */
  export type migrationsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the migrations
     */
    select?: migrationsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the migrations
     */
    omit?: migrationsOmit<ExtArgs> | null
    /**
     * The data used to update migrations.
     */
    data: XOR<migrationsUpdateManyMutationInput, migrationsUncheckedUpdateManyInput>
    /**
     * Filter which migrations to update
     */
    where?: migrationsWhereInput
    /**
     * Limit how many migrations to update.
     */
    limit?: number
  }

  /**
   * migrations upsert
   */
  export type migrationsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the migrations
     */
    select?: migrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the migrations
     */
    omit?: migrationsOmit<ExtArgs> | null
    /**
     * The filter to search for the migrations to update in case it exists.
     */
    where: migrationsWhereUniqueInput
    /**
     * In case the migrations found by the `where` argument doesn't exist, create a new migrations with this data.
     */
    create: XOR<migrationsCreateInput, migrationsUncheckedCreateInput>
    /**
     * In case the migrations was found with the provided `where` argument, update it with this data.
     */
    update: XOR<migrationsUpdateInput, migrationsUncheckedUpdateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * migrations delete
   */
  export type migrationsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the migrations
     */
    select?: migrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the migrations
     */
    omit?: migrationsOmit<ExtArgs> | null
    /**
     * Filter which migrations to delete.
     */
    where: migrationsWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * migrations deleteMany
   */
  export type migrationsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which migrations to delete
     */
    where?: migrationsWhereInput
    /**
     * Limit how many migrations to delete.
     */
    limit?: number
  }

  /**
   * migrations without action
   */
  export type migrationsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the migrations
     */
    select?: migrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the migrations
     */
    omit?: migrationsOmit<ExtArgs> | null
  }


  /**
   * Model model_has_permissions
   */

  export type AggregateModel_has_permissions = {
    _count: Model_has_permissionsCountAggregateOutputType | null
    _avg: Model_has_permissionsAvgAggregateOutputType | null
    _sum: Model_has_permissionsSumAggregateOutputType | null
    _min: Model_has_permissionsMinAggregateOutputType | null
    _max: Model_has_permissionsMaxAggregateOutputType | null
  }

  export type Model_has_permissionsAvgAggregateOutputType = {
    permission_id: number | null
    model_id: number | null
  }

  export type Model_has_permissionsSumAggregateOutputType = {
    permission_id: bigint | null
    model_id: bigint | null
  }

  export type Model_has_permissionsMinAggregateOutputType = {
    permission_id: bigint | null
    model_type: string | null
    model_id: bigint | null
  }

  export type Model_has_permissionsMaxAggregateOutputType = {
    permission_id: bigint | null
    model_type: string | null
    model_id: bigint | null
  }

  export type Model_has_permissionsCountAggregateOutputType = {
    permission_id: number
    model_type: number
    model_id: number
    _all: number
  }


  export type Model_has_permissionsAvgAggregateInputType = {
    permission_id?: true
    model_id?: true
  }

  export type Model_has_permissionsSumAggregateInputType = {
    permission_id?: true
    model_id?: true
  }

  export type Model_has_permissionsMinAggregateInputType = {
    permission_id?: true
    model_type?: true
    model_id?: true
  }

  export type Model_has_permissionsMaxAggregateInputType = {
    permission_id?: true
    model_type?: true
    model_id?: true
  }

  export type Model_has_permissionsCountAggregateInputType = {
    permission_id?: true
    model_type?: true
    model_id?: true
    _all?: true
  }

  export type Model_has_permissionsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which model_has_permissions to aggregate.
     */
    where?: model_has_permissionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of model_has_permissions to fetch.
     */
    orderBy?: model_has_permissionsOrderByWithRelationInput | model_has_permissionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: model_has_permissionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` model_has_permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` model_has_permissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned model_has_permissions
    **/
    _count?: true | Model_has_permissionsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Model_has_permissionsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Model_has_permissionsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Model_has_permissionsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Model_has_permissionsMaxAggregateInputType
  }

  export type GetModel_has_permissionsAggregateType<T extends Model_has_permissionsAggregateArgs> = {
        [P in keyof T & keyof AggregateModel_has_permissions]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateModel_has_permissions[P]>
      : GetScalarType<T[P], AggregateModel_has_permissions[P]>
  }




  export type model_has_permissionsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: model_has_permissionsWhereInput
    orderBy?: model_has_permissionsOrderByWithAggregationInput | model_has_permissionsOrderByWithAggregationInput[]
    by: Model_has_permissionsScalarFieldEnum[] | Model_has_permissionsScalarFieldEnum
    having?: model_has_permissionsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Model_has_permissionsCountAggregateInputType | true
    _avg?: Model_has_permissionsAvgAggregateInputType
    _sum?: Model_has_permissionsSumAggregateInputType
    _min?: Model_has_permissionsMinAggregateInputType
    _max?: Model_has_permissionsMaxAggregateInputType
  }

  export type Model_has_permissionsGroupByOutputType = {
    permission_id: bigint
    model_type: string
    model_id: bigint
    _count: Model_has_permissionsCountAggregateOutputType | null
    _avg: Model_has_permissionsAvgAggregateOutputType | null
    _sum: Model_has_permissionsSumAggregateOutputType | null
    _min: Model_has_permissionsMinAggregateOutputType | null
    _max: Model_has_permissionsMaxAggregateOutputType | null
  }

  type GetModel_has_permissionsGroupByPayload<T extends model_has_permissionsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Model_has_permissionsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Model_has_permissionsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Model_has_permissionsGroupByOutputType[P]>
            : GetScalarType<T[P], Model_has_permissionsGroupByOutputType[P]>
        }
      >
    >


  export type model_has_permissionsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    permission_id?: boolean
    model_type?: boolean
    model_id?: boolean
    permissions?: boolean | permissionsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["model_has_permissions"]>

  export type model_has_permissionsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    permission_id?: boolean
    model_type?: boolean
    model_id?: boolean
    permissions?: boolean | permissionsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["model_has_permissions"]>

  export type model_has_permissionsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    permission_id?: boolean
    model_type?: boolean
    model_id?: boolean
    permissions?: boolean | permissionsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["model_has_permissions"]>

  export type model_has_permissionsSelectScalar = {
    permission_id?: boolean
    model_type?: boolean
    model_id?: boolean
  }

  export type model_has_permissionsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"permission_id" | "model_type" | "model_id", ExtArgs["result"]["model_has_permissions"]>
  export type model_has_permissionsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    permissions?: boolean | permissionsDefaultArgs<ExtArgs>
  }
  export type model_has_permissionsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    permissions?: boolean | permissionsDefaultArgs<ExtArgs>
  }
  export type model_has_permissionsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    permissions?: boolean | permissionsDefaultArgs<ExtArgs>
  }

  export type $model_has_permissionsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "model_has_permissions"
    objects: {
      permissions: Prisma.$permissionsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      permission_id: bigint
      model_type: string
      model_id: bigint
    }, ExtArgs["result"]["model_has_permissions"]>
    composites: {}
  }

  type model_has_permissionsGetPayload<S extends boolean | null | undefined | model_has_permissionsDefaultArgs> = $Result.GetResult<Prisma.$model_has_permissionsPayload, S>

  type model_has_permissionsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<model_has_permissionsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit' | 'relationLoadStrategy'> & {
      select?: Model_has_permissionsCountAggregateInputType | true
    }

  export interface model_has_permissionsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['model_has_permissions'], meta: { name: 'model_has_permissions' } }
    /**
     * Find zero or one Model_has_permissions that matches the filter.
     * @param {model_has_permissionsFindUniqueArgs} args - Arguments to find a Model_has_permissions
     * @example
     * // Get one Model_has_permissions
     * const model_has_permissions = await prisma.model_has_permissions.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends model_has_permissionsFindUniqueArgs>(args: SelectSubset<T, model_has_permissionsFindUniqueArgs<ExtArgs>>): Prisma__model_has_permissionsClient<$Result.GetResult<Prisma.$model_has_permissionsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Model_has_permissions that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {model_has_permissionsFindUniqueOrThrowArgs} args - Arguments to find a Model_has_permissions
     * @example
     * // Get one Model_has_permissions
     * const model_has_permissions = await prisma.model_has_permissions.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends model_has_permissionsFindUniqueOrThrowArgs>(args: SelectSubset<T, model_has_permissionsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__model_has_permissionsClient<$Result.GetResult<Prisma.$model_has_permissionsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Model_has_permissions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {model_has_permissionsFindFirstArgs} args - Arguments to find a Model_has_permissions
     * @example
     * // Get one Model_has_permissions
     * const model_has_permissions = await prisma.model_has_permissions.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends model_has_permissionsFindFirstArgs>(args?: SelectSubset<T, model_has_permissionsFindFirstArgs<ExtArgs>>): Prisma__model_has_permissionsClient<$Result.GetResult<Prisma.$model_has_permissionsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Model_has_permissions that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {model_has_permissionsFindFirstOrThrowArgs} args - Arguments to find a Model_has_permissions
     * @example
     * // Get one Model_has_permissions
     * const model_has_permissions = await prisma.model_has_permissions.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends model_has_permissionsFindFirstOrThrowArgs>(args?: SelectSubset<T, model_has_permissionsFindFirstOrThrowArgs<ExtArgs>>): Prisma__model_has_permissionsClient<$Result.GetResult<Prisma.$model_has_permissionsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Model_has_permissions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {model_has_permissionsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Model_has_permissions
     * const model_has_permissions = await prisma.model_has_permissions.findMany()
     * 
     * // Get first 10 Model_has_permissions
     * const model_has_permissions = await prisma.model_has_permissions.findMany({ take: 10 })
     * 
     * // Only select the `permission_id`
     * const model_has_permissionsWithPermission_idOnly = await prisma.model_has_permissions.findMany({ select: { permission_id: true } })
     * 
     */
    findMany<T extends model_has_permissionsFindManyArgs>(args?: SelectSubset<T, model_has_permissionsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$model_has_permissionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Model_has_permissions.
     * @param {model_has_permissionsCreateArgs} args - Arguments to create a Model_has_permissions.
     * @example
     * // Create one Model_has_permissions
     * const Model_has_permissions = await prisma.model_has_permissions.create({
     *   data: {
     *     // ... data to create a Model_has_permissions
     *   }
     * })
     * 
     */
    create<T extends model_has_permissionsCreateArgs>(args: SelectSubset<T, model_has_permissionsCreateArgs<ExtArgs>>): Prisma__model_has_permissionsClient<$Result.GetResult<Prisma.$model_has_permissionsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Model_has_permissions.
     * @param {model_has_permissionsCreateManyArgs} args - Arguments to create many Model_has_permissions.
     * @example
     * // Create many Model_has_permissions
     * const model_has_permissions = await prisma.model_has_permissions.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends model_has_permissionsCreateManyArgs>(args?: SelectSubset<T, model_has_permissionsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Model_has_permissions and returns the data saved in the database.
     * @param {model_has_permissionsCreateManyAndReturnArgs} args - Arguments to create many Model_has_permissions.
     * @example
     * // Create many Model_has_permissions
     * const model_has_permissions = await prisma.model_has_permissions.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Model_has_permissions and only return the `permission_id`
     * const model_has_permissionsWithPermission_idOnly = await prisma.model_has_permissions.createManyAndReturn({
     *   select: { permission_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends model_has_permissionsCreateManyAndReturnArgs>(args?: SelectSubset<T, model_has_permissionsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$model_has_permissionsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Model_has_permissions.
     * @param {model_has_permissionsDeleteArgs} args - Arguments to delete one Model_has_permissions.
     * @example
     * // Delete one Model_has_permissions
     * const Model_has_permissions = await prisma.model_has_permissions.delete({
     *   where: {
     *     // ... filter to delete one Model_has_permissions
     *   }
     * })
     * 
     */
    delete<T extends model_has_permissionsDeleteArgs>(args: SelectSubset<T, model_has_permissionsDeleteArgs<ExtArgs>>): Prisma__model_has_permissionsClient<$Result.GetResult<Prisma.$model_has_permissionsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Model_has_permissions.
     * @param {model_has_permissionsUpdateArgs} args - Arguments to update one Model_has_permissions.
     * @example
     * // Update one Model_has_permissions
     * const model_has_permissions = await prisma.model_has_permissions.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends model_has_permissionsUpdateArgs>(args: SelectSubset<T, model_has_permissionsUpdateArgs<ExtArgs>>): Prisma__model_has_permissionsClient<$Result.GetResult<Prisma.$model_has_permissionsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Model_has_permissions.
     * @param {model_has_permissionsDeleteManyArgs} args - Arguments to filter Model_has_permissions to delete.
     * @example
     * // Delete a few Model_has_permissions
     * const { count } = await prisma.model_has_permissions.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends model_has_permissionsDeleteManyArgs>(args?: SelectSubset<T, model_has_permissionsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Model_has_permissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {model_has_permissionsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Model_has_permissions
     * const model_has_permissions = await prisma.model_has_permissions.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends model_has_permissionsUpdateManyArgs>(args: SelectSubset<T, model_has_permissionsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Model_has_permissions and returns the data updated in the database.
     * @param {model_has_permissionsUpdateManyAndReturnArgs} args - Arguments to update many Model_has_permissions.
     * @example
     * // Update many Model_has_permissions
     * const model_has_permissions = await prisma.model_has_permissions.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Model_has_permissions and only return the `permission_id`
     * const model_has_permissionsWithPermission_idOnly = await prisma.model_has_permissions.updateManyAndReturn({
     *   select: { permission_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends model_has_permissionsUpdateManyAndReturnArgs>(args: SelectSubset<T, model_has_permissionsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$model_has_permissionsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Model_has_permissions.
     * @param {model_has_permissionsUpsertArgs} args - Arguments to update or create a Model_has_permissions.
     * @example
     * // Update or create a Model_has_permissions
     * const model_has_permissions = await prisma.model_has_permissions.upsert({
     *   create: {
     *     // ... data to create a Model_has_permissions
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Model_has_permissions we want to update
     *   }
     * })
     */
    upsert<T extends model_has_permissionsUpsertArgs>(args: SelectSubset<T, model_has_permissionsUpsertArgs<ExtArgs>>): Prisma__model_has_permissionsClient<$Result.GetResult<Prisma.$model_has_permissionsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Model_has_permissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {model_has_permissionsCountArgs} args - Arguments to filter Model_has_permissions to count.
     * @example
     * // Count the number of Model_has_permissions
     * const count = await prisma.model_has_permissions.count({
     *   where: {
     *     // ... the filter for the Model_has_permissions we want to count
     *   }
     * })
    **/
    count<T extends model_has_permissionsCountArgs>(
      args?: Subset<T, model_has_permissionsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Model_has_permissionsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Model_has_permissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Model_has_permissionsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Model_has_permissionsAggregateArgs>(args: Subset<T, Model_has_permissionsAggregateArgs>): Prisma.PrismaPromise<GetModel_has_permissionsAggregateType<T>>

    /**
     * Group by Model_has_permissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {model_has_permissionsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends model_has_permissionsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: model_has_permissionsGroupByArgs['orderBy'] }
        : { orderBy?: model_has_permissionsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, model_has_permissionsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetModel_has_permissionsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the model_has_permissions model
   */
  readonly fields: model_has_permissionsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for model_has_permissions.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__model_has_permissionsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    permissions<T extends permissionsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, permissionsDefaultArgs<ExtArgs>>): Prisma__permissionsClient<$Result.GetResult<Prisma.$permissionsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the model_has_permissions model
   */ 
  interface model_has_permissionsFieldRefs {
    readonly permission_id: FieldRef<"model_has_permissions", 'BigInt'>
    readonly model_type: FieldRef<"model_has_permissions", 'String'>
    readonly model_id: FieldRef<"model_has_permissions", 'BigInt'>
  }
    

  // Custom InputTypes
  /**
   * model_has_permissions findUnique
   */
  export type model_has_permissionsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the model_has_permissions
     */
    select?: model_has_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the model_has_permissions
     */
    omit?: model_has_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: model_has_permissionsInclude<ExtArgs> | null
    /**
     * Filter, which model_has_permissions to fetch.
     */
    where: model_has_permissionsWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * model_has_permissions findUniqueOrThrow
   */
  export type model_has_permissionsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the model_has_permissions
     */
    select?: model_has_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the model_has_permissions
     */
    omit?: model_has_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: model_has_permissionsInclude<ExtArgs> | null
    /**
     * Filter, which model_has_permissions to fetch.
     */
    where: model_has_permissionsWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * model_has_permissions findFirst
   */
  export type model_has_permissionsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the model_has_permissions
     */
    select?: model_has_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the model_has_permissions
     */
    omit?: model_has_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: model_has_permissionsInclude<ExtArgs> | null
    /**
     * Filter, which model_has_permissions to fetch.
     */
    where?: model_has_permissionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of model_has_permissions to fetch.
     */
    orderBy?: model_has_permissionsOrderByWithRelationInput | model_has_permissionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for model_has_permissions.
     */
    cursor?: model_has_permissionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` model_has_permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` model_has_permissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of model_has_permissions.
     */
    distinct?: Model_has_permissionsScalarFieldEnum | Model_has_permissionsScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * model_has_permissions findFirstOrThrow
   */
  export type model_has_permissionsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the model_has_permissions
     */
    select?: model_has_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the model_has_permissions
     */
    omit?: model_has_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: model_has_permissionsInclude<ExtArgs> | null
    /**
     * Filter, which model_has_permissions to fetch.
     */
    where?: model_has_permissionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of model_has_permissions to fetch.
     */
    orderBy?: model_has_permissionsOrderByWithRelationInput | model_has_permissionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for model_has_permissions.
     */
    cursor?: model_has_permissionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` model_has_permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` model_has_permissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of model_has_permissions.
     */
    distinct?: Model_has_permissionsScalarFieldEnum | Model_has_permissionsScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * model_has_permissions findMany
   */
  export type model_has_permissionsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the model_has_permissions
     */
    select?: model_has_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the model_has_permissions
     */
    omit?: model_has_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: model_has_permissionsInclude<ExtArgs> | null
    /**
     * Filter, which model_has_permissions to fetch.
     */
    where?: model_has_permissionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of model_has_permissions to fetch.
     */
    orderBy?: model_has_permissionsOrderByWithRelationInput | model_has_permissionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing model_has_permissions.
     */
    cursor?: model_has_permissionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` model_has_permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` model_has_permissions.
     */
    skip?: number
    distinct?: Model_has_permissionsScalarFieldEnum | Model_has_permissionsScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * model_has_permissions create
   */
  export type model_has_permissionsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the model_has_permissions
     */
    select?: model_has_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the model_has_permissions
     */
    omit?: model_has_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: model_has_permissionsInclude<ExtArgs> | null
    /**
     * The data needed to create a model_has_permissions.
     */
    data: XOR<model_has_permissionsCreateInput, model_has_permissionsUncheckedCreateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * model_has_permissions createMany
   */
  export type model_has_permissionsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many model_has_permissions.
     */
    data: model_has_permissionsCreateManyInput | model_has_permissionsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * model_has_permissions createManyAndReturn
   */
  export type model_has_permissionsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the model_has_permissions
     */
    select?: model_has_permissionsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the model_has_permissions
     */
    omit?: model_has_permissionsOmit<ExtArgs> | null
    /**
     * The data used to create many model_has_permissions.
     */
    data: model_has_permissionsCreateManyInput | model_has_permissionsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: model_has_permissionsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * model_has_permissions update
   */
  export type model_has_permissionsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the model_has_permissions
     */
    select?: model_has_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the model_has_permissions
     */
    omit?: model_has_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: model_has_permissionsInclude<ExtArgs> | null
    /**
     * The data needed to update a model_has_permissions.
     */
    data: XOR<model_has_permissionsUpdateInput, model_has_permissionsUncheckedUpdateInput>
    /**
     * Choose, which model_has_permissions to update.
     */
    where: model_has_permissionsWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * model_has_permissions updateMany
   */
  export type model_has_permissionsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update model_has_permissions.
     */
    data: XOR<model_has_permissionsUpdateManyMutationInput, model_has_permissionsUncheckedUpdateManyInput>
    /**
     * Filter which model_has_permissions to update
     */
    where?: model_has_permissionsWhereInput
    /**
     * Limit how many model_has_permissions to update.
     */
    limit?: number
  }

  /**
   * model_has_permissions updateManyAndReturn
   */
  export type model_has_permissionsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the model_has_permissions
     */
    select?: model_has_permissionsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the model_has_permissions
     */
    omit?: model_has_permissionsOmit<ExtArgs> | null
    /**
     * The data used to update model_has_permissions.
     */
    data: XOR<model_has_permissionsUpdateManyMutationInput, model_has_permissionsUncheckedUpdateManyInput>
    /**
     * Filter which model_has_permissions to update
     */
    where?: model_has_permissionsWhereInput
    /**
     * Limit how many model_has_permissions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: model_has_permissionsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * model_has_permissions upsert
   */
  export type model_has_permissionsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the model_has_permissions
     */
    select?: model_has_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the model_has_permissions
     */
    omit?: model_has_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: model_has_permissionsInclude<ExtArgs> | null
    /**
     * The filter to search for the model_has_permissions to update in case it exists.
     */
    where: model_has_permissionsWhereUniqueInput
    /**
     * In case the model_has_permissions found by the `where` argument doesn't exist, create a new model_has_permissions with this data.
     */
    create: XOR<model_has_permissionsCreateInput, model_has_permissionsUncheckedCreateInput>
    /**
     * In case the model_has_permissions was found with the provided `where` argument, update it with this data.
     */
    update: XOR<model_has_permissionsUpdateInput, model_has_permissionsUncheckedUpdateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * model_has_permissions delete
   */
  export type model_has_permissionsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the model_has_permissions
     */
    select?: model_has_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the model_has_permissions
     */
    omit?: model_has_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: model_has_permissionsInclude<ExtArgs> | null
    /**
     * Filter which model_has_permissions to delete.
     */
    where: model_has_permissionsWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * model_has_permissions deleteMany
   */
  export type model_has_permissionsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which model_has_permissions to delete
     */
    where?: model_has_permissionsWhereInput
    /**
     * Limit how many model_has_permissions to delete.
     */
    limit?: number
  }

  /**
   * model_has_permissions without action
   */
  export type model_has_permissionsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the model_has_permissions
     */
    select?: model_has_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the model_has_permissions
     */
    omit?: model_has_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: model_has_permissionsInclude<ExtArgs> | null
  }


  /**
   * Model model_has_roles
   */

  export type AggregateModel_has_roles = {
    _count: Model_has_rolesCountAggregateOutputType | null
    _avg: Model_has_rolesAvgAggregateOutputType | null
    _sum: Model_has_rolesSumAggregateOutputType | null
    _min: Model_has_rolesMinAggregateOutputType | null
    _max: Model_has_rolesMaxAggregateOutputType | null
  }

  export type Model_has_rolesAvgAggregateOutputType = {
    role_id: number | null
    model_id: number | null
  }

  export type Model_has_rolesSumAggregateOutputType = {
    role_id: bigint | null
    model_id: bigint | null
  }

  export type Model_has_rolesMinAggregateOutputType = {
    role_id: bigint | null
    model_type: string | null
    model_id: bigint | null
  }

  export type Model_has_rolesMaxAggregateOutputType = {
    role_id: bigint | null
    model_type: string | null
    model_id: bigint | null
  }

  export type Model_has_rolesCountAggregateOutputType = {
    role_id: number
    model_type: number
    model_id: number
    _all: number
  }


  export type Model_has_rolesAvgAggregateInputType = {
    role_id?: true
    model_id?: true
  }

  export type Model_has_rolesSumAggregateInputType = {
    role_id?: true
    model_id?: true
  }

  export type Model_has_rolesMinAggregateInputType = {
    role_id?: true
    model_type?: true
    model_id?: true
  }

  export type Model_has_rolesMaxAggregateInputType = {
    role_id?: true
    model_type?: true
    model_id?: true
  }

  export type Model_has_rolesCountAggregateInputType = {
    role_id?: true
    model_type?: true
    model_id?: true
    _all?: true
  }

  export type Model_has_rolesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which model_has_roles to aggregate.
     */
    where?: model_has_rolesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of model_has_roles to fetch.
     */
    orderBy?: model_has_rolesOrderByWithRelationInput | model_has_rolesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: model_has_rolesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` model_has_roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` model_has_roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned model_has_roles
    **/
    _count?: true | Model_has_rolesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Model_has_rolesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Model_has_rolesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Model_has_rolesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Model_has_rolesMaxAggregateInputType
  }

  export type GetModel_has_rolesAggregateType<T extends Model_has_rolesAggregateArgs> = {
        [P in keyof T & keyof AggregateModel_has_roles]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateModel_has_roles[P]>
      : GetScalarType<T[P], AggregateModel_has_roles[P]>
  }




  export type model_has_rolesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: model_has_rolesWhereInput
    orderBy?: model_has_rolesOrderByWithAggregationInput | model_has_rolesOrderByWithAggregationInput[]
    by: Model_has_rolesScalarFieldEnum[] | Model_has_rolesScalarFieldEnum
    having?: model_has_rolesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Model_has_rolesCountAggregateInputType | true
    _avg?: Model_has_rolesAvgAggregateInputType
    _sum?: Model_has_rolesSumAggregateInputType
    _min?: Model_has_rolesMinAggregateInputType
    _max?: Model_has_rolesMaxAggregateInputType
  }

  export type Model_has_rolesGroupByOutputType = {
    role_id: bigint
    model_type: string
    model_id: bigint
    _count: Model_has_rolesCountAggregateOutputType | null
    _avg: Model_has_rolesAvgAggregateOutputType | null
    _sum: Model_has_rolesSumAggregateOutputType | null
    _min: Model_has_rolesMinAggregateOutputType | null
    _max: Model_has_rolesMaxAggregateOutputType | null
  }

  type GetModel_has_rolesGroupByPayload<T extends model_has_rolesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Model_has_rolesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Model_has_rolesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Model_has_rolesGroupByOutputType[P]>
            : GetScalarType<T[P], Model_has_rolesGroupByOutputType[P]>
        }
      >
    >


  export type model_has_rolesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    role_id?: boolean
    model_type?: boolean
    model_id?: boolean
    roles?: boolean | rolesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["model_has_roles"]>

  export type model_has_rolesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    role_id?: boolean
    model_type?: boolean
    model_id?: boolean
    roles?: boolean | rolesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["model_has_roles"]>

  export type model_has_rolesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    role_id?: boolean
    model_type?: boolean
    model_id?: boolean
    roles?: boolean | rolesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["model_has_roles"]>

  export type model_has_rolesSelectScalar = {
    role_id?: boolean
    model_type?: boolean
    model_id?: boolean
  }

  export type model_has_rolesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"role_id" | "model_type" | "model_id", ExtArgs["result"]["model_has_roles"]>
  export type model_has_rolesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    roles?: boolean | rolesDefaultArgs<ExtArgs>
  }
  export type model_has_rolesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    roles?: boolean | rolesDefaultArgs<ExtArgs>
  }
  export type model_has_rolesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    roles?: boolean | rolesDefaultArgs<ExtArgs>
  }

  export type $model_has_rolesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "model_has_roles"
    objects: {
      roles: Prisma.$rolesPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      role_id: bigint
      model_type: string
      model_id: bigint
    }, ExtArgs["result"]["model_has_roles"]>
    composites: {}
  }

  type model_has_rolesGetPayload<S extends boolean | null | undefined | model_has_rolesDefaultArgs> = $Result.GetResult<Prisma.$model_has_rolesPayload, S>

  type model_has_rolesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<model_has_rolesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit' | 'relationLoadStrategy'> & {
      select?: Model_has_rolesCountAggregateInputType | true
    }

  export interface model_has_rolesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['model_has_roles'], meta: { name: 'model_has_roles' } }
    /**
     * Find zero or one Model_has_roles that matches the filter.
     * @param {model_has_rolesFindUniqueArgs} args - Arguments to find a Model_has_roles
     * @example
     * // Get one Model_has_roles
     * const model_has_roles = await prisma.model_has_roles.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends model_has_rolesFindUniqueArgs>(args: SelectSubset<T, model_has_rolesFindUniqueArgs<ExtArgs>>): Prisma__model_has_rolesClient<$Result.GetResult<Prisma.$model_has_rolesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Model_has_roles that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {model_has_rolesFindUniqueOrThrowArgs} args - Arguments to find a Model_has_roles
     * @example
     * // Get one Model_has_roles
     * const model_has_roles = await prisma.model_has_roles.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends model_has_rolesFindUniqueOrThrowArgs>(args: SelectSubset<T, model_has_rolesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__model_has_rolesClient<$Result.GetResult<Prisma.$model_has_rolesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Model_has_roles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {model_has_rolesFindFirstArgs} args - Arguments to find a Model_has_roles
     * @example
     * // Get one Model_has_roles
     * const model_has_roles = await prisma.model_has_roles.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends model_has_rolesFindFirstArgs>(args?: SelectSubset<T, model_has_rolesFindFirstArgs<ExtArgs>>): Prisma__model_has_rolesClient<$Result.GetResult<Prisma.$model_has_rolesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Model_has_roles that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {model_has_rolesFindFirstOrThrowArgs} args - Arguments to find a Model_has_roles
     * @example
     * // Get one Model_has_roles
     * const model_has_roles = await prisma.model_has_roles.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends model_has_rolesFindFirstOrThrowArgs>(args?: SelectSubset<T, model_has_rolesFindFirstOrThrowArgs<ExtArgs>>): Prisma__model_has_rolesClient<$Result.GetResult<Prisma.$model_has_rolesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Model_has_roles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {model_has_rolesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Model_has_roles
     * const model_has_roles = await prisma.model_has_roles.findMany()
     * 
     * // Get first 10 Model_has_roles
     * const model_has_roles = await prisma.model_has_roles.findMany({ take: 10 })
     * 
     * // Only select the `role_id`
     * const model_has_rolesWithRole_idOnly = await prisma.model_has_roles.findMany({ select: { role_id: true } })
     * 
     */
    findMany<T extends model_has_rolesFindManyArgs>(args?: SelectSubset<T, model_has_rolesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$model_has_rolesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Model_has_roles.
     * @param {model_has_rolesCreateArgs} args - Arguments to create a Model_has_roles.
     * @example
     * // Create one Model_has_roles
     * const Model_has_roles = await prisma.model_has_roles.create({
     *   data: {
     *     // ... data to create a Model_has_roles
     *   }
     * })
     * 
     */
    create<T extends model_has_rolesCreateArgs>(args: SelectSubset<T, model_has_rolesCreateArgs<ExtArgs>>): Prisma__model_has_rolesClient<$Result.GetResult<Prisma.$model_has_rolesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Model_has_roles.
     * @param {model_has_rolesCreateManyArgs} args - Arguments to create many Model_has_roles.
     * @example
     * // Create many Model_has_roles
     * const model_has_roles = await prisma.model_has_roles.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends model_has_rolesCreateManyArgs>(args?: SelectSubset<T, model_has_rolesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Model_has_roles and returns the data saved in the database.
     * @param {model_has_rolesCreateManyAndReturnArgs} args - Arguments to create many Model_has_roles.
     * @example
     * // Create many Model_has_roles
     * const model_has_roles = await prisma.model_has_roles.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Model_has_roles and only return the `role_id`
     * const model_has_rolesWithRole_idOnly = await prisma.model_has_roles.createManyAndReturn({
     *   select: { role_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends model_has_rolesCreateManyAndReturnArgs>(args?: SelectSubset<T, model_has_rolesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$model_has_rolesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Model_has_roles.
     * @param {model_has_rolesDeleteArgs} args - Arguments to delete one Model_has_roles.
     * @example
     * // Delete one Model_has_roles
     * const Model_has_roles = await prisma.model_has_roles.delete({
     *   where: {
     *     // ... filter to delete one Model_has_roles
     *   }
     * })
     * 
     */
    delete<T extends model_has_rolesDeleteArgs>(args: SelectSubset<T, model_has_rolesDeleteArgs<ExtArgs>>): Prisma__model_has_rolesClient<$Result.GetResult<Prisma.$model_has_rolesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Model_has_roles.
     * @param {model_has_rolesUpdateArgs} args - Arguments to update one Model_has_roles.
     * @example
     * // Update one Model_has_roles
     * const model_has_roles = await prisma.model_has_roles.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends model_has_rolesUpdateArgs>(args: SelectSubset<T, model_has_rolesUpdateArgs<ExtArgs>>): Prisma__model_has_rolesClient<$Result.GetResult<Prisma.$model_has_rolesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Model_has_roles.
     * @param {model_has_rolesDeleteManyArgs} args - Arguments to filter Model_has_roles to delete.
     * @example
     * // Delete a few Model_has_roles
     * const { count } = await prisma.model_has_roles.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends model_has_rolesDeleteManyArgs>(args?: SelectSubset<T, model_has_rolesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Model_has_roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {model_has_rolesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Model_has_roles
     * const model_has_roles = await prisma.model_has_roles.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends model_has_rolesUpdateManyArgs>(args: SelectSubset<T, model_has_rolesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Model_has_roles and returns the data updated in the database.
     * @param {model_has_rolesUpdateManyAndReturnArgs} args - Arguments to update many Model_has_roles.
     * @example
     * // Update many Model_has_roles
     * const model_has_roles = await prisma.model_has_roles.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Model_has_roles and only return the `role_id`
     * const model_has_rolesWithRole_idOnly = await prisma.model_has_roles.updateManyAndReturn({
     *   select: { role_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends model_has_rolesUpdateManyAndReturnArgs>(args: SelectSubset<T, model_has_rolesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$model_has_rolesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Model_has_roles.
     * @param {model_has_rolesUpsertArgs} args - Arguments to update or create a Model_has_roles.
     * @example
     * // Update or create a Model_has_roles
     * const model_has_roles = await prisma.model_has_roles.upsert({
     *   create: {
     *     // ... data to create a Model_has_roles
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Model_has_roles we want to update
     *   }
     * })
     */
    upsert<T extends model_has_rolesUpsertArgs>(args: SelectSubset<T, model_has_rolesUpsertArgs<ExtArgs>>): Prisma__model_has_rolesClient<$Result.GetResult<Prisma.$model_has_rolesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Model_has_roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {model_has_rolesCountArgs} args - Arguments to filter Model_has_roles to count.
     * @example
     * // Count the number of Model_has_roles
     * const count = await prisma.model_has_roles.count({
     *   where: {
     *     // ... the filter for the Model_has_roles we want to count
     *   }
     * })
    **/
    count<T extends model_has_rolesCountArgs>(
      args?: Subset<T, model_has_rolesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Model_has_rolesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Model_has_roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Model_has_rolesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Model_has_rolesAggregateArgs>(args: Subset<T, Model_has_rolesAggregateArgs>): Prisma.PrismaPromise<GetModel_has_rolesAggregateType<T>>

    /**
     * Group by Model_has_roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {model_has_rolesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends model_has_rolesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: model_has_rolesGroupByArgs['orderBy'] }
        : { orderBy?: model_has_rolesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, model_has_rolesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetModel_has_rolesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the model_has_roles model
   */
  readonly fields: model_has_rolesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for model_has_roles.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__model_has_rolesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    roles<T extends rolesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, rolesDefaultArgs<ExtArgs>>): Prisma__rolesClient<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the model_has_roles model
   */ 
  interface model_has_rolesFieldRefs {
    readonly role_id: FieldRef<"model_has_roles", 'BigInt'>
    readonly model_type: FieldRef<"model_has_roles", 'String'>
    readonly model_id: FieldRef<"model_has_roles", 'BigInt'>
  }
    

  // Custom InputTypes
  /**
   * model_has_roles findUnique
   */
  export type model_has_rolesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the model_has_roles
     */
    select?: model_has_rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the model_has_roles
     */
    omit?: model_has_rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: model_has_rolesInclude<ExtArgs> | null
    /**
     * Filter, which model_has_roles to fetch.
     */
    where: model_has_rolesWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * model_has_roles findUniqueOrThrow
   */
  export type model_has_rolesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the model_has_roles
     */
    select?: model_has_rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the model_has_roles
     */
    omit?: model_has_rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: model_has_rolesInclude<ExtArgs> | null
    /**
     * Filter, which model_has_roles to fetch.
     */
    where: model_has_rolesWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * model_has_roles findFirst
   */
  export type model_has_rolesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the model_has_roles
     */
    select?: model_has_rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the model_has_roles
     */
    omit?: model_has_rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: model_has_rolesInclude<ExtArgs> | null
    /**
     * Filter, which model_has_roles to fetch.
     */
    where?: model_has_rolesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of model_has_roles to fetch.
     */
    orderBy?: model_has_rolesOrderByWithRelationInput | model_has_rolesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for model_has_roles.
     */
    cursor?: model_has_rolesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` model_has_roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` model_has_roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of model_has_roles.
     */
    distinct?: Model_has_rolesScalarFieldEnum | Model_has_rolesScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * model_has_roles findFirstOrThrow
   */
  export type model_has_rolesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the model_has_roles
     */
    select?: model_has_rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the model_has_roles
     */
    omit?: model_has_rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: model_has_rolesInclude<ExtArgs> | null
    /**
     * Filter, which model_has_roles to fetch.
     */
    where?: model_has_rolesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of model_has_roles to fetch.
     */
    orderBy?: model_has_rolesOrderByWithRelationInput | model_has_rolesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for model_has_roles.
     */
    cursor?: model_has_rolesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` model_has_roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` model_has_roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of model_has_roles.
     */
    distinct?: Model_has_rolesScalarFieldEnum | Model_has_rolesScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * model_has_roles findMany
   */
  export type model_has_rolesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the model_has_roles
     */
    select?: model_has_rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the model_has_roles
     */
    omit?: model_has_rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: model_has_rolesInclude<ExtArgs> | null
    /**
     * Filter, which model_has_roles to fetch.
     */
    where?: model_has_rolesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of model_has_roles to fetch.
     */
    orderBy?: model_has_rolesOrderByWithRelationInput | model_has_rolesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing model_has_roles.
     */
    cursor?: model_has_rolesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` model_has_roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` model_has_roles.
     */
    skip?: number
    distinct?: Model_has_rolesScalarFieldEnum | Model_has_rolesScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * model_has_roles create
   */
  export type model_has_rolesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the model_has_roles
     */
    select?: model_has_rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the model_has_roles
     */
    omit?: model_has_rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: model_has_rolesInclude<ExtArgs> | null
    /**
     * The data needed to create a model_has_roles.
     */
    data: XOR<model_has_rolesCreateInput, model_has_rolesUncheckedCreateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * model_has_roles createMany
   */
  export type model_has_rolesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many model_has_roles.
     */
    data: model_has_rolesCreateManyInput | model_has_rolesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * model_has_roles createManyAndReturn
   */
  export type model_has_rolesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the model_has_roles
     */
    select?: model_has_rolesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the model_has_roles
     */
    omit?: model_has_rolesOmit<ExtArgs> | null
    /**
     * The data used to create many model_has_roles.
     */
    data: model_has_rolesCreateManyInput | model_has_rolesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: model_has_rolesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * model_has_roles update
   */
  export type model_has_rolesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the model_has_roles
     */
    select?: model_has_rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the model_has_roles
     */
    omit?: model_has_rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: model_has_rolesInclude<ExtArgs> | null
    /**
     * The data needed to update a model_has_roles.
     */
    data: XOR<model_has_rolesUpdateInput, model_has_rolesUncheckedUpdateInput>
    /**
     * Choose, which model_has_roles to update.
     */
    where: model_has_rolesWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * model_has_roles updateMany
   */
  export type model_has_rolesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update model_has_roles.
     */
    data: XOR<model_has_rolesUpdateManyMutationInput, model_has_rolesUncheckedUpdateManyInput>
    /**
     * Filter which model_has_roles to update
     */
    where?: model_has_rolesWhereInput
    /**
     * Limit how many model_has_roles to update.
     */
    limit?: number
  }

  /**
   * model_has_roles updateManyAndReturn
   */
  export type model_has_rolesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the model_has_roles
     */
    select?: model_has_rolesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the model_has_roles
     */
    omit?: model_has_rolesOmit<ExtArgs> | null
    /**
     * The data used to update model_has_roles.
     */
    data: XOR<model_has_rolesUpdateManyMutationInput, model_has_rolesUncheckedUpdateManyInput>
    /**
     * Filter which model_has_roles to update
     */
    where?: model_has_rolesWhereInput
    /**
     * Limit how many model_has_roles to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: model_has_rolesIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * model_has_roles upsert
   */
  export type model_has_rolesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the model_has_roles
     */
    select?: model_has_rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the model_has_roles
     */
    omit?: model_has_rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: model_has_rolesInclude<ExtArgs> | null
    /**
     * The filter to search for the model_has_roles to update in case it exists.
     */
    where: model_has_rolesWhereUniqueInput
    /**
     * In case the model_has_roles found by the `where` argument doesn't exist, create a new model_has_roles with this data.
     */
    create: XOR<model_has_rolesCreateInput, model_has_rolesUncheckedCreateInput>
    /**
     * In case the model_has_roles was found with the provided `where` argument, update it with this data.
     */
    update: XOR<model_has_rolesUpdateInput, model_has_rolesUncheckedUpdateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * model_has_roles delete
   */
  export type model_has_rolesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the model_has_roles
     */
    select?: model_has_rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the model_has_roles
     */
    omit?: model_has_rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: model_has_rolesInclude<ExtArgs> | null
    /**
     * Filter which model_has_roles to delete.
     */
    where: model_has_rolesWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * model_has_roles deleteMany
   */
  export type model_has_rolesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which model_has_roles to delete
     */
    where?: model_has_rolesWhereInput
    /**
     * Limit how many model_has_roles to delete.
     */
    limit?: number
  }

  /**
   * model_has_roles without action
   */
  export type model_has_rolesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the model_has_roles
     */
    select?: model_has_rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the model_has_roles
     */
    omit?: model_has_rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: model_has_rolesInclude<ExtArgs> | null
  }


  /**
   * Model oauth_access_tokens
   */

  export type AggregateOauth_access_tokens = {
    _count: Oauth_access_tokensCountAggregateOutputType | null
    _avg: Oauth_access_tokensAvgAggregateOutputType | null
    _sum: Oauth_access_tokensSumAggregateOutputType | null
    _min: Oauth_access_tokensMinAggregateOutputType | null
    _max: Oauth_access_tokensMaxAggregateOutputType | null
  }

  export type Oauth_access_tokensAvgAggregateOutputType = {
    user_id: number | null
    client_id: number | null
  }

  export type Oauth_access_tokensSumAggregateOutputType = {
    user_id: bigint | null
    client_id: bigint | null
  }

  export type Oauth_access_tokensMinAggregateOutputType = {
    id: string | null
    user_id: bigint | null
    client_id: bigint | null
    name: string | null
    scopes: string | null
    revoked: boolean | null
    created_at: Date | null
    updated_at: Date | null
    expires_at: Date | null
  }

  export type Oauth_access_tokensMaxAggregateOutputType = {
    id: string | null
    user_id: bigint | null
    client_id: bigint | null
    name: string | null
    scopes: string | null
    revoked: boolean | null
    created_at: Date | null
    updated_at: Date | null
    expires_at: Date | null
  }

  export type Oauth_access_tokensCountAggregateOutputType = {
    id: number
    user_id: number
    client_id: number
    name: number
    scopes: number
    revoked: number
    created_at: number
    updated_at: number
    expires_at: number
    _all: number
  }


  export type Oauth_access_tokensAvgAggregateInputType = {
    user_id?: true
    client_id?: true
  }

  export type Oauth_access_tokensSumAggregateInputType = {
    user_id?: true
    client_id?: true
  }

  export type Oauth_access_tokensMinAggregateInputType = {
    id?: true
    user_id?: true
    client_id?: true
    name?: true
    scopes?: true
    revoked?: true
    created_at?: true
    updated_at?: true
    expires_at?: true
  }

  export type Oauth_access_tokensMaxAggregateInputType = {
    id?: true
    user_id?: true
    client_id?: true
    name?: true
    scopes?: true
    revoked?: true
    created_at?: true
    updated_at?: true
    expires_at?: true
  }

  export type Oauth_access_tokensCountAggregateInputType = {
    id?: true
    user_id?: true
    client_id?: true
    name?: true
    scopes?: true
    revoked?: true
    created_at?: true
    updated_at?: true
    expires_at?: true
    _all?: true
  }

  export type Oauth_access_tokensAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which oauth_access_tokens to aggregate.
     */
    where?: oauth_access_tokensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of oauth_access_tokens to fetch.
     */
    orderBy?: oauth_access_tokensOrderByWithRelationInput | oauth_access_tokensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: oauth_access_tokensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` oauth_access_tokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` oauth_access_tokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned oauth_access_tokens
    **/
    _count?: true | Oauth_access_tokensCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Oauth_access_tokensAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Oauth_access_tokensSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Oauth_access_tokensMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Oauth_access_tokensMaxAggregateInputType
  }

  export type GetOauth_access_tokensAggregateType<T extends Oauth_access_tokensAggregateArgs> = {
        [P in keyof T & keyof AggregateOauth_access_tokens]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOauth_access_tokens[P]>
      : GetScalarType<T[P], AggregateOauth_access_tokens[P]>
  }




  export type oauth_access_tokensGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: oauth_access_tokensWhereInput
    orderBy?: oauth_access_tokensOrderByWithAggregationInput | oauth_access_tokensOrderByWithAggregationInput[]
    by: Oauth_access_tokensScalarFieldEnum[] | Oauth_access_tokensScalarFieldEnum
    having?: oauth_access_tokensScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Oauth_access_tokensCountAggregateInputType | true
    _avg?: Oauth_access_tokensAvgAggregateInputType
    _sum?: Oauth_access_tokensSumAggregateInputType
    _min?: Oauth_access_tokensMinAggregateInputType
    _max?: Oauth_access_tokensMaxAggregateInputType
  }

  export type Oauth_access_tokensGroupByOutputType = {
    id: string
    user_id: bigint | null
    client_id: bigint
    name: string | null
    scopes: string | null
    revoked: boolean
    created_at: Date | null
    updated_at: Date | null
    expires_at: Date | null
    _count: Oauth_access_tokensCountAggregateOutputType | null
    _avg: Oauth_access_tokensAvgAggregateOutputType | null
    _sum: Oauth_access_tokensSumAggregateOutputType | null
    _min: Oauth_access_tokensMinAggregateOutputType | null
    _max: Oauth_access_tokensMaxAggregateOutputType | null
  }

  type GetOauth_access_tokensGroupByPayload<T extends oauth_access_tokensGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Oauth_access_tokensGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Oauth_access_tokensGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Oauth_access_tokensGroupByOutputType[P]>
            : GetScalarType<T[P], Oauth_access_tokensGroupByOutputType[P]>
        }
      >
    >


  export type oauth_access_tokensSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    client_id?: boolean
    name?: boolean
    scopes?: boolean
    revoked?: boolean
    created_at?: boolean
    updated_at?: boolean
    expires_at?: boolean
  }, ExtArgs["result"]["oauth_access_tokens"]>

  export type oauth_access_tokensSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    client_id?: boolean
    name?: boolean
    scopes?: boolean
    revoked?: boolean
    created_at?: boolean
    updated_at?: boolean
    expires_at?: boolean
  }, ExtArgs["result"]["oauth_access_tokens"]>

  export type oauth_access_tokensSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    client_id?: boolean
    name?: boolean
    scopes?: boolean
    revoked?: boolean
    created_at?: boolean
    updated_at?: boolean
    expires_at?: boolean
  }, ExtArgs["result"]["oauth_access_tokens"]>

  export type oauth_access_tokensSelectScalar = {
    id?: boolean
    user_id?: boolean
    client_id?: boolean
    name?: boolean
    scopes?: boolean
    revoked?: boolean
    created_at?: boolean
    updated_at?: boolean
    expires_at?: boolean
  }

  export type oauth_access_tokensOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user_id" | "client_id" | "name" | "scopes" | "revoked" | "created_at" | "updated_at" | "expires_at", ExtArgs["result"]["oauth_access_tokens"]>

  export type $oauth_access_tokensPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "oauth_access_tokens"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      user_id: bigint | null
      client_id: bigint
      name: string | null
      scopes: string | null
      revoked: boolean
      created_at: Date | null
      updated_at: Date | null
      expires_at: Date | null
    }, ExtArgs["result"]["oauth_access_tokens"]>
    composites: {}
  }

  type oauth_access_tokensGetPayload<S extends boolean | null | undefined | oauth_access_tokensDefaultArgs> = $Result.GetResult<Prisma.$oauth_access_tokensPayload, S>

  type oauth_access_tokensCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<oauth_access_tokensFindManyArgs, 'select' | 'include' | 'distinct' | 'omit' | 'relationLoadStrategy'> & {
      select?: Oauth_access_tokensCountAggregateInputType | true
    }

  export interface oauth_access_tokensDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['oauth_access_tokens'], meta: { name: 'oauth_access_tokens' } }
    /**
     * Find zero or one Oauth_access_tokens that matches the filter.
     * @param {oauth_access_tokensFindUniqueArgs} args - Arguments to find a Oauth_access_tokens
     * @example
     * // Get one Oauth_access_tokens
     * const oauth_access_tokens = await prisma.oauth_access_tokens.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends oauth_access_tokensFindUniqueArgs>(args: SelectSubset<T, oauth_access_tokensFindUniqueArgs<ExtArgs>>): Prisma__oauth_access_tokensClient<$Result.GetResult<Prisma.$oauth_access_tokensPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Oauth_access_tokens that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {oauth_access_tokensFindUniqueOrThrowArgs} args - Arguments to find a Oauth_access_tokens
     * @example
     * // Get one Oauth_access_tokens
     * const oauth_access_tokens = await prisma.oauth_access_tokens.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends oauth_access_tokensFindUniqueOrThrowArgs>(args: SelectSubset<T, oauth_access_tokensFindUniqueOrThrowArgs<ExtArgs>>): Prisma__oauth_access_tokensClient<$Result.GetResult<Prisma.$oauth_access_tokensPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Oauth_access_tokens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {oauth_access_tokensFindFirstArgs} args - Arguments to find a Oauth_access_tokens
     * @example
     * // Get one Oauth_access_tokens
     * const oauth_access_tokens = await prisma.oauth_access_tokens.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends oauth_access_tokensFindFirstArgs>(args?: SelectSubset<T, oauth_access_tokensFindFirstArgs<ExtArgs>>): Prisma__oauth_access_tokensClient<$Result.GetResult<Prisma.$oauth_access_tokensPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Oauth_access_tokens that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {oauth_access_tokensFindFirstOrThrowArgs} args - Arguments to find a Oauth_access_tokens
     * @example
     * // Get one Oauth_access_tokens
     * const oauth_access_tokens = await prisma.oauth_access_tokens.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends oauth_access_tokensFindFirstOrThrowArgs>(args?: SelectSubset<T, oauth_access_tokensFindFirstOrThrowArgs<ExtArgs>>): Prisma__oauth_access_tokensClient<$Result.GetResult<Prisma.$oauth_access_tokensPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Oauth_access_tokens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {oauth_access_tokensFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Oauth_access_tokens
     * const oauth_access_tokens = await prisma.oauth_access_tokens.findMany()
     * 
     * // Get first 10 Oauth_access_tokens
     * const oauth_access_tokens = await prisma.oauth_access_tokens.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const oauth_access_tokensWithIdOnly = await prisma.oauth_access_tokens.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends oauth_access_tokensFindManyArgs>(args?: SelectSubset<T, oauth_access_tokensFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$oauth_access_tokensPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Oauth_access_tokens.
     * @param {oauth_access_tokensCreateArgs} args - Arguments to create a Oauth_access_tokens.
     * @example
     * // Create one Oauth_access_tokens
     * const Oauth_access_tokens = await prisma.oauth_access_tokens.create({
     *   data: {
     *     // ... data to create a Oauth_access_tokens
     *   }
     * })
     * 
     */
    create<T extends oauth_access_tokensCreateArgs>(args: SelectSubset<T, oauth_access_tokensCreateArgs<ExtArgs>>): Prisma__oauth_access_tokensClient<$Result.GetResult<Prisma.$oauth_access_tokensPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Oauth_access_tokens.
     * @param {oauth_access_tokensCreateManyArgs} args - Arguments to create many Oauth_access_tokens.
     * @example
     * // Create many Oauth_access_tokens
     * const oauth_access_tokens = await prisma.oauth_access_tokens.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends oauth_access_tokensCreateManyArgs>(args?: SelectSubset<T, oauth_access_tokensCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Oauth_access_tokens and returns the data saved in the database.
     * @param {oauth_access_tokensCreateManyAndReturnArgs} args - Arguments to create many Oauth_access_tokens.
     * @example
     * // Create many Oauth_access_tokens
     * const oauth_access_tokens = await prisma.oauth_access_tokens.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Oauth_access_tokens and only return the `id`
     * const oauth_access_tokensWithIdOnly = await prisma.oauth_access_tokens.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends oauth_access_tokensCreateManyAndReturnArgs>(args?: SelectSubset<T, oauth_access_tokensCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$oauth_access_tokensPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Oauth_access_tokens.
     * @param {oauth_access_tokensDeleteArgs} args - Arguments to delete one Oauth_access_tokens.
     * @example
     * // Delete one Oauth_access_tokens
     * const Oauth_access_tokens = await prisma.oauth_access_tokens.delete({
     *   where: {
     *     // ... filter to delete one Oauth_access_tokens
     *   }
     * })
     * 
     */
    delete<T extends oauth_access_tokensDeleteArgs>(args: SelectSubset<T, oauth_access_tokensDeleteArgs<ExtArgs>>): Prisma__oauth_access_tokensClient<$Result.GetResult<Prisma.$oauth_access_tokensPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Oauth_access_tokens.
     * @param {oauth_access_tokensUpdateArgs} args - Arguments to update one Oauth_access_tokens.
     * @example
     * // Update one Oauth_access_tokens
     * const oauth_access_tokens = await prisma.oauth_access_tokens.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends oauth_access_tokensUpdateArgs>(args: SelectSubset<T, oauth_access_tokensUpdateArgs<ExtArgs>>): Prisma__oauth_access_tokensClient<$Result.GetResult<Prisma.$oauth_access_tokensPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Oauth_access_tokens.
     * @param {oauth_access_tokensDeleteManyArgs} args - Arguments to filter Oauth_access_tokens to delete.
     * @example
     * // Delete a few Oauth_access_tokens
     * const { count } = await prisma.oauth_access_tokens.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends oauth_access_tokensDeleteManyArgs>(args?: SelectSubset<T, oauth_access_tokensDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Oauth_access_tokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {oauth_access_tokensUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Oauth_access_tokens
     * const oauth_access_tokens = await prisma.oauth_access_tokens.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends oauth_access_tokensUpdateManyArgs>(args: SelectSubset<T, oauth_access_tokensUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Oauth_access_tokens and returns the data updated in the database.
     * @param {oauth_access_tokensUpdateManyAndReturnArgs} args - Arguments to update many Oauth_access_tokens.
     * @example
     * // Update many Oauth_access_tokens
     * const oauth_access_tokens = await prisma.oauth_access_tokens.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Oauth_access_tokens and only return the `id`
     * const oauth_access_tokensWithIdOnly = await prisma.oauth_access_tokens.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends oauth_access_tokensUpdateManyAndReturnArgs>(args: SelectSubset<T, oauth_access_tokensUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$oauth_access_tokensPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Oauth_access_tokens.
     * @param {oauth_access_tokensUpsertArgs} args - Arguments to update or create a Oauth_access_tokens.
     * @example
     * // Update or create a Oauth_access_tokens
     * const oauth_access_tokens = await prisma.oauth_access_tokens.upsert({
     *   create: {
     *     // ... data to create a Oauth_access_tokens
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Oauth_access_tokens we want to update
     *   }
     * })
     */
    upsert<T extends oauth_access_tokensUpsertArgs>(args: SelectSubset<T, oauth_access_tokensUpsertArgs<ExtArgs>>): Prisma__oauth_access_tokensClient<$Result.GetResult<Prisma.$oauth_access_tokensPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Oauth_access_tokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {oauth_access_tokensCountArgs} args - Arguments to filter Oauth_access_tokens to count.
     * @example
     * // Count the number of Oauth_access_tokens
     * const count = await prisma.oauth_access_tokens.count({
     *   where: {
     *     // ... the filter for the Oauth_access_tokens we want to count
     *   }
     * })
    **/
    count<T extends oauth_access_tokensCountArgs>(
      args?: Subset<T, oauth_access_tokensCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Oauth_access_tokensCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Oauth_access_tokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Oauth_access_tokensAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Oauth_access_tokensAggregateArgs>(args: Subset<T, Oauth_access_tokensAggregateArgs>): Prisma.PrismaPromise<GetOauth_access_tokensAggregateType<T>>

    /**
     * Group by Oauth_access_tokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {oauth_access_tokensGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends oauth_access_tokensGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: oauth_access_tokensGroupByArgs['orderBy'] }
        : { orderBy?: oauth_access_tokensGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, oauth_access_tokensGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOauth_access_tokensGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the oauth_access_tokens model
   */
  readonly fields: oauth_access_tokensFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for oauth_access_tokens.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__oauth_access_tokensClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the oauth_access_tokens model
   */ 
  interface oauth_access_tokensFieldRefs {
    readonly id: FieldRef<"oauth_access_tokens", 'String'>
    readonly user_id: FieldRef<"oauth_access_tokens", 'BigInt'>
    readonly client_id: FieldRef<"oauth_access_tokens", 'BigInt'>
    readonly name: FieldRef<"oauth_access_tokens", 'String'>
    readonly scopes: FieldRef<"oauth_access_tokens", 'String'>
    readonly revoked: FieldRef<"oauth_access_tokens", 'Boolean'>
    readonly created_at: FieldRef<"oauth_access_tokens", 'DateTime'>
    readonly updated_at: FieldRef<"oauth_access_tokens", 'DateTime'>
    readonly expires_at: FieldRef<"oauth_access_tokens", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * oauth_access_tokens findUnique
   */
  export type oauth_access_tokensFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the oauth_access_tokens
     */
    select?: oauth_access_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the oauth_access_tokens
     */
    omit?: oauth_access_tokensOmit<ExtArgs> | null
    /**
     * Filter, which oauth_access_tokens to fetch.
     */
    where: oauth_access_tokensWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * oauth_access_tokens findUniqueOrThrow
   */
  export type oauth_access_tokensFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the oauth_access_tokens
     */
    select?: oauth_access_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the oauth_access_tokens
     */
    omit?: oauth_access_tokensOmit<ExtArgs> | null
    /**
     * Filter, which oauth_access_tokens to fetch.
     */
    where: oauth_access_tokensWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * oauth_access_tokens findFirst
   */
  export type oauth_access_tokensFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the oauth_access_tokens
     */
    select?: oauth_access_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the oauth_access_tokens
     */
    omit?: oauth_access_tokensOmit<ExtArgs> | null
    /**
     * Filter, which oauth_access_tokens to fetch.
     */
    where?: oauth_access_tokensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of oauth_access_tokens to fetch.
     */
    orderBy?: oauth_access_tokensOrderByWithRelationInput | oauth_access_tokensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for oauth_access_tokens.
     */
    cursor?: oauth_access_tokensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` oauth_access_tokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` oauth_access_tokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of oauth_access_tokens.
     */
    distinct?: Oauth_access_tokensScalarFieldEnum | Oauth_access_tokensScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * oauth_access_tokens findFirstOrThrow
   */
  export type oauth_access_tokensFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the oauth_access_tokens
     */
    select?: oauth_access_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the oauth_access_tokens
     */
    omit?: oauth_access_tokensOmit<ExtArgs> | null
    /**
     * Filter, which oauth_access_tokens to fetch.
     */
    where?: oauth_access_tokensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of oauth_access_tokens to fetch.
     */
    orderBy?: oauth_access_tokensOrderByWithRelationInput | oauth_access_tokensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for oauth_access_tokens.
     */
    cursor?: oauth_access_tokensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` oauth_access_tokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` oauth_access_tokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of oauth_access_tokens.
     */
    distinct?: Oauth_access_tokensScalarFieldEnum | Oauth_access_tokensScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * oauth_access_tokens findMany
   */
  export type oauth_access_tokensFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the oauth_access_tokens
     */
    select?: oauth_access_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the oauth_access_tokens
     */
    omit?: oauth_access_tokensOmit<ExtArgs> | null
    /**
     * Filter, which oauth_access_tokens to fetch.
     */
    where?: oauth_access_tokensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of oauth_access_tokens to fetch.
     */
    orderBy?: oauth_access_tokensOrderByWithRelationInput | oauth_access_tokensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing oauth_access_tokens.
     */
    cursor?: oauth_access_tokensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` oauth_access_tokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` oauth_access_tokens.
     */
    skip?: number
    distinct?: Oauth_access_tokensScalarFieldEnum | Oauth_access_tokensScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * oauth_access_tokens create
   */
  export type oauth_access_tokensCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the oauth_access_tokens
     */
    select?: oauth_access_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the oauth_access_tokens
     */
    omit?: oauth_access_tokensOmit<ExtArgs> | null
    /**
     * The data needed to create a oauth_access_tokens.
     */
    data: XOR<oauth_access_tokensCreateInput, oauth_access_tokensUncheckedCreateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * oauth_access_tokens createMany
   */
  export type oauth_access_tokensCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many oauth_access_tokens.
     */
    data: oauth_access_tokensCreateManyInput | oauth_access_tokensCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * oauth_access_tokens createManyAndReturn
   */
  export type oauth_access_tokensCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the oauth_access_tokens
     */
    select?: oauth_access_tokensSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the oauth_access_tokens
     */
    omit?: oauth_access_tokensOmit<ExtArgs> | null
    /**
     * The data used to create many oauth_access_tokens.
     */
    data: oauth_access_tokensCreateManyInput | oauth_access_tokensCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * oauth_access_tokens update
   */
  export type oauth_access_tokensUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the oauth_access_tokens
     */
    select?: oauth_access_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the oauth_access_tokens
     */
    omit?: oauth_access_tokensOmit<ExtArgs> | null
    /**
     * The data needed to update a oauth_access_tokens.
     */
    data: XOR<oauth_access_tokensUpdateInput, oauth_access_tokensUncheckedUpdateInput>
    /**
     * Choose, which oauth_access_tokens to update.
     */
    where: oauth_access_tokensWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * oauth_access_tokens updateMany
   */
  export type oauth_access_tokensUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update oauth_access_tokens.
     */
    data: XOR<oauth_access_tokensUpdateManyMutationInput, oauth_access_tokensUncheckedUpdateManyInput>
    /**
     * Filter which oauth_access_tokens to update
     */
    where?: oauth_access_tokensWhereInput
    /**
     * Limit how many oauth_access_tokens to update.
     */
    limit?: number
  }

  /**
   * oauth_access_tokens updateManyAndReturn
   */
  export type oauth_access_tokensUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the oauth_access_tokens
     */
    select?: oauth_access_tokensSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the oauth_access_tokens
     */
    omit?: oauth_access_tokensOmit<ExtArgs> | null
    /**
     * The data used to update oauth_access_tokens.
     */
    data: XOR<oauth_access_tokensUpdateManyMutationInput, oauth_access_tokensUncheckedUpdateManyInput>
    /**
     * Filter which oauth_access_tokens to update
     */
    where?: oauth_access_tokensWhereInput
    /**
     * Limit how many oauth_access_tokens to update.
     */
    limit?: number
  }

  /**
   * oauth_access_tokens upsert
   */
  export type oauth_access_tokensUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the oauth_access_tokens
     */
    select?: oauth_access_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the oauth_access_tokens
     */
    omit?: oauth_access_tokensOmit<ExtArgs> | null
    /**
     * The filter to search for the oauth_access_tokens to update in case it exists.
     */
    where: oauth_access_tokensWhereUniqueInput
    /**
     * In case the oauth_access_tokens found by the `where` argument doesn't exist, create a new oauth_access_tokens with this data.
     */
    create: XOR<oauth_access_tokensCreateInput, oauth_access_tokensUncheckedCreateInput>
    /**
     * In case the oauth_access_tokens was found with the provided `where` argument, update it with this data.
     */
    update: XOR<oauth_access_tokensUpdateInput, oauth_access_tokensUncheckedUpdateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * oauth_access_tokens delete
   */
  export type oauth_access_tokensDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the oauth_access_tokens
     */
    select?: oauth_access_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the oauth_access_tokens
     */
    omit?: oauth_access_tokensOmit<ExtArgs> | null
    /**
     * Filter which oauth_access_tokens to delete.
     */
    where: oauth_access_tokensWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * oauth_access_tokens deleteMany
   */
  export type oauth_access_tokensDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which oauth_access_tokens to delete
     */
    where?: oauth_access_tokensWhereInput
    /**
     * Limit how many oauth_access_tokens to delete.
     */
    limit?: number
  }

  /**
   * oauth_access_tokens without action
   */
  export type oauth_access_tokensDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the oauth_access_tokens
     */
    select?: oauth_access_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the oauth_access_tokens
     */
    omit?: oauth_access_tokensOmit<ExtArgs> | null
  }


  /**
   * Model oauth_auth_codes
   */

  export type AggregateOauth_auth_codes = {
    _count: Oauth_auth_codesCountAggregateOutputType | null
    _avg: Oauth_auth_codesAvgAggregateOutputType | null
    _sum: Oauth_auth_codesSumAggregateOutputType | null
    _min: Oauth_auth_codesMinAggregateOutputType | null
    _max: Oauth_auth_codesMaxAggregateOutputType | null
  }

  export type Oauth_auth_codesAvgAggregateOutputType = {
    user_id: number | null
    client_id: number | null
  }

  export type Oauth_auth_codesSumAggregateOutputType = {
    user_id: bigint | null
    client_id: bigint | null
  }

  export type Oauth_auth_codesMinAggregateOutputType = {
    id: string | null
    user_id: bigint | null
    client_id: bigint | null
    scopes: string | null
    revoked: boolean | null
    expires_at: Date | null
  }

  export type Oauth_auth_codesMaxAggregateOutputType = {
    id: string | null
    user_id: bigint | null
    client_id: bigint | null
    scopes: string | null
    revoked: boolean | null
    expires_at: Date | null
  }

  export type Oauth_auth_codesCountAggregateOutputType = {
    id: number
    user_id: number
    client_id: number
    scopes: number
    revoked: number
    expires_at: number
    _all: number
  }


  export type Oauth_auth_codesAvgAggregateInputType = {
    user_id?: true
    client_id?: true
  }

  export type Oauth_auth_codesSumAggregateInputType = {
    user_id?: true
    client_id?: true
  }

  export type Oauth_auth_codesMinAggregateInputType = {
    id?: true
    user_id?: true
    client_id?: true
    scopes?: true
    revoked?: true
    expires_at?: true
  }

  export type Oauth_auth_codesMaxAggregateInputType = {
    id?: true
    user_id?: true
    client_id?: true
    scopes?: true
    revoked?: true
    expires_at?: true
  }

  export type Oauth_auth_codesCountAggregateInputType = {
    id?: true
    user_id?: true
    client_id?: true
    scopes?: true
    revoked?: true
    expires_at?: true
    _all?: true
  }

  export type Oauth_auth_codesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which oauth_auth_codes to aggregate.
     */
    where?: oauth_auth_codesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of oauth_auth_codes to fetch.
     */
    orderBy?: oauth_auth_codesOrderByWithRelationInput | oauth_auth_codesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: oauth_auth_codesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` oauth_auth_codes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` oauth_auth_codes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned oauth_auth_codes
    **/
    _count?: true | Oauth_auth_codesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Oauth_auth_codesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Oauth_auth_codesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Oauth_auth_codesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Oauth_auth_codesMaxAggregateInputType
  }

  export type GetOauth_auth_codesAggregateType<T extends Oauth_auth_codesAggregateArgs> = {
        [P in keyof T & keyof AggregateOauth_auth_codes]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOauth_auth_codes[P]>
      : GetScalarType<T[P], AggregateOauth_auth_codes[P]>
  }




  export type oauth_auth_codesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: oauth_auth_codesWhereInput
    orderBy?: oauth_auth_codesOrderByWithAggregationInput | oauth_auth_codesOrderByWithAggregationInput[]
    by: Oauth_auth_codesScalarFieldEnum[] | Oauth_auth_codesScalarFieldEnum
    having?: oauth_auth_codesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Oauth_auth_codesCountAggregateInputType | true
    _avg?: Oauth_auth_codesAvgAggregateInputType
    _sum?: Oauth_auth_codesSumAggregateInputType
    _min?: Oauth_auth_codesMinAggregateInputType
    _max?: Oauth_auth_codesMaxAggregateInputType
  }

  export type Oauth_auth_codesGroupByOutputType = {
    id: string
    user_id: bigint
    client_id: bigint
    scopes: string | null
    revoked: boolean
    expires_at: Date | null
    _count: Oauth_auth_codesCountAggregateOutputType | null
    _avg: Oauth_auth_codesAvgAggregateOutputType | null
    _sum: Oauth_auth_codesSumAggregateOutputType | null
    _min: Oauth_auth_codesMinAggregateOutputType | null
    _max: Oauth_auth_codesMaxAggregateOutputType | null
  }

  type GetOauth_auth_codesGroupByPayload<T extends oauth_auth_codesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Oauth_auth_codesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Oauth_auth_codesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Oauth_auth_codesGroupByOutputType[P]>
            : GetScalarType<T[P], Oauth_auth_codesGroupByOutputType[P]>
        }
      >
    >


  export type oauth_auth_codesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    client_id?: boolean
    scopes?: boolean
    revoked?: boolean
    expires_at?: boolean
  }, ExtArgs["result"]["oauth_auth_codes"]>

  export type oauth_auth_codesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    client_id?: boolean
    scopes?: boolean
    revoked?: boolean
    expires_at?: boolean
  }, ExtArgs["result"]["oauth_auth_codes"]>

  export type oauth_auth_codesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    client_id?: boolean
    scopes?: boolean
    revoked?: boolean
    expires_at?: boolean
  }, ExtArgs["result"]["oauth_auth_codes"]>

  export type oauth_auth_codesSelectScalar = {
    id?: boolean
    user_id?: boolean
    client_id?: boolean
    scopes?: boolean
    revoked?: boolean
    expires_at?: boolean
  }

  export type oauth_auth_codesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user_id" | "client_id" | "scopes" | "revoked" | "expires_at", ExtArgs["result"]["oauth_auth_codes"]>

  export type $oauth_auth_codesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "oauth_auth_codes"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      user_id: bigint
      client_id: bigint
      scopes: string | null
      revoked: boolean
      expires_at: Date | null
    }, ExtArgs["result"]["oauth_auth_codes"]>
    composites: {}
  }

  type oauth_auth_codesGetPayload<S extends boolean | null | undefined | oauth_auth_codesDefaultArgs> = $Result.GetResult<Prisma.$oauth_auth_codesPayload, S>

  type oauth_auth_codesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<oauth_auth_codesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit' | 'relationLoadStrategy'> & {
      select?: Oauth_auth_codesCountAggregateInputType | true
    }

  export interface oauth_auth_codesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['oauth_auth_codes'], meta: { name: 'oauth_auth_codes' } }
    /**
     * Find zero or one Oauth_auth_codes that matches the filter.
     * @param {oauth_auth_codesFindUniqueArgs} args - Arguments to find a Oauth_auth_codes
     * @example
     * // Get one Oauth_auth_codes
     * const oauth_auth_codes = await prisma.oauth_auth_codes.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends oauth_auth_codesFindUniqueArgs>(args: SelectSubset<T, oauth_auth_codesFindUniqueArgs<ExtArgs>>): Prisma__oauth_auth_codesClient<$Result.GetResult<Prisma.$oauth_auth_codesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Oauth_auth_codes that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {oauth_auth_codesFindUniqueOrThrowArgs} args - Arguments to find a Oauth_auth_codes
     * @example
     * // Get one Oauth_auth_codes
     * const oauth_auth_codes = await prisma.oauth_auth_codes.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends oauth_auth_codesFindUniqueOrThrowArgs>(args: SelectSubset<T, oauth_auth_codesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__oauth_auth_codesClient<$Result.GetResult<Prisma.$oauth_auth_codesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Oauth_auth_codes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {oauth_auth_codesFindFirstArgs} args - Arguments to find a Oauth_auth_codes
     * @example
     * // Get one Oauth_auth_codes
     * const oauth_auth_codes = await prisma.oauth_auth_codes.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends oauth_auth_codesFindFirstArgs>(args?: SelectSubset<T, oauth_auth_codesFindFirstArgs<ExtArgs>>): Prisma__oauth_auth_codesClient<$Result.GetResult<Prisma.$oauth_auth_codesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Oauth_auth_codes that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {oauth_auth_codesFindFirstOrThrowArgs} args - Arguments to find a Oauth_auth_codes
     * @example
     * // Get one Oauth_auth_codes
     * const oauth_auth_codes = await prisma.oauth_auth_codes.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends oauth_auth_codesFindFirstOrThrowArgs>(args?: SelectSubset<T, oauth_auth_codesFindFirstOrThrowArgs<ExtArgs>>): Prisma__oauth_auth_codesClient<$Result.GetResult<Prisma.$oauth_auth_codesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Oauth_auth_codes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {oauth_auth_codesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Oauth_auth_codes
     * const oauth_auth_codes = await prisma.oauth_auth_codes.findMany()
     * 
     * // Get first 10 Oauth_auth_codes
     * const oauth_auth_codes = await prisma.oauth_auth_codes.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const oauth_auth_codesWithIdOnly = await prisma.oauth_auth_codes.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends oauth_auth_codesFindManyArgs>(args?: SelectSubset<T, oauth_auth_codesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$oauth_auth_codesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Oauth_auth_codes.
     * @param {oauth_auth_codesCreateArgs} args - Arguments to create a Oauth_auth_codes.
     * @example
     * // Create one Oauth_auth_codes
     * const Oauth_auth_codes = await prisma.oauth_auth_codes.create({
     *   data: {
     *     // ... data to create a Oauth_auth_codes
     *   }
     * })
     * 
     */
    create<T extends oauth_auth_codesCreateArgs>(args: SelectSubset<T, oauth_auth_codesCreateArgs<ExtArgs>>): Prisma__oauth_auth_codesClient<$Result.GetResult<Prisma.$oauth_auth_codesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Oauth_auth_codes.
     * @param {oauth_auth_codesCreateManyArgs} args - Arguments to create many Oauth_auth_codes.
     * @example
     * // Create many Oauth_auth_codes
     * const oauth_auth_codes = await prisma.oauth_auth_codes.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends oauth_auth_codesCreateManyArgs>(args?: SelectSubset<T, oauth_auth_codesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Oauth_auth_codes and returns the data saved in the database.
     * @param {oauth_auth_codesCreateManyAndReturnArgs} args - Arguments to create many Oauth_auth_codes.
     * @example
     * // Create many Oauth_auth_codes
     * const oauth_auth_codes = await prisma.oauth_auth_codes.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Oauth_auth_codes and only return the `id`
     * const oauth_auth_codesWithIdOnly = await prisma.oauth_auth_codes.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends oauth_auth_codesCreateManyAndReturnArgs>(args?: SelectSubset<T, oauth_auth_codesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$oauth_auth_codesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Oauth_auth_codes.
     * @param {oauth_auth_codesDeleteArgs} args - Arguments to delete one Oauth_auth_codes.
     * @example
     * // Delete one Oauth_auth_codes
     * const Oauth_auth_codes = await prisma.oauth_auth_codes.delete({
     *   where: {
     *     // ... filter to delete one Oauth_auth_codes
     *   }
     * })
     * 
     */
    delete<T extends oauth_auth_codesDeleteArgs>(args: SelectSubset<T, oauth_auth_codesDeleteArgs<ExtArgs>>): Prisma__oauth_auth_codesClient<$Result.GetResult<Prisma.$oauth_auth_codesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Oauth_auth_codes.
     * @param {oauth_auth_codesUpdateArgs} args - Arguments to update one Oauth_auth_codes.
     * @example
     * // Update one Oauth_auth_codes
     * const oauth_auth_codes = await prisma.oauth_auth_codes.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends oauth_auth_codesUpdateArgs>(args: SelectSubset<T, oauth_auth_codesUpdateArgs<ExtArgs>>): Prisma__oauth_auth_codesClient<$Result.GetResult<Prisma.$oauth_auth_codesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Oauth_auth_codes.
     * @param {oauth_auth_codesDeleteManyArgs} args - Arguments to filter Oauth_auth_codes to delete.
     * @example
     * // Delete a few Oauth_auth_codes
     * const { count } = await prisma.oauth_auth_codes.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends oauth_auth_codesDeleteManyArgs>(args?: SelectSubset<T, oauth_auth_codesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Oauth_auth_codes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {oauth_auth_codesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Oauth_auth_codes
     * const oauth_auth_codes = await prisma.oauth_auth_codes.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends oauth_auth_codesUpdateManyArgs>(args: SelectSubset<T, oauth_auth_codesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Oauth_auth_codes and returns the data updated in the database.
     * @param {oauth_auth_codesUpdateManyAndReturnArgs} args - Arguments to update many Oauth_auth_codes.
     * @example
     * // Update many Oauth_auth_codes
     * const oauth_auth_codes = await prisma.oauth_auth_codes.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Oauth_auth_codes and only return the `id`
     * const oauth_auth_codesWithIdOnly = await prisma.oauth_auth_codes.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends oauth_auth_codesUpdateManyAndReturnArgs>(args: SelectSubset<T, oauth_auth_codesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$oauth_auth_codesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Oauth_auth_codes.
     * @param {oauth_auth_codesUpsertArgs} args - Arguments to update or create a Oauth_auth_codes.
     * @example
     * // Update or create a Oauth_auth_codes
     * const oauth_auth_codes = await prisma.oauth_auth_codes.upsert({
     *   create: {
     *     // ... data to create a Oauth_auth_codes
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Oauth_auth_codes we want to update
     *   }
     * })
     */
    upsert<T extends oauth_auth_codesUpsertArgs>(args: SelectSubset<T, oauth_auth_codesUpsertArgs<ExtArgs>>): Prisma__oauth_auth_codesClient<$Result.GetResult<Prisma.$oauth_auth_codesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Oauth_auth_codes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {oauth_auth_codesCountArgs} args - Arguments to filter Oauth_auth_codes to count.
     * @example
     * // Count the number of Oauth_auth_codes
     * const count = await prisma.oauth_auth_codes.count({
     *   where: {
     *     // ... the filter for the Oauth_auth_codes we want to count
     *   }
     * })
    **/
    count<T extends oauth_auth_codesCountArgs>(
      args?: Subset<T, oauth_auth_codesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Oauth_auth_codesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Oauth_auth_codes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Oauth_auth_codesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Oauth_auth_codesAggregateArgs>(args: Subset<T, Oauth_auth_codesAggregateArgs>): Prisma.PrismaPromise<GetOauth_auth_codesAggregateType<T>>

    /**
     * Group by Oauth_auth_codes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {oauth_auth_codesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends oauth_auth_codesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: oauth_auth_codesGroupByArgs['orderBy'] }
        : { orderBy?: oauth_auth_codesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, oauth_auth_codesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOauth_auth_codesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the oauth_auth_codes model
   */
  readonly fields: oauth_auth_codesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for oauth_auth_codes.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__oauth_auth_codesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the oauth_auth_codes model
   */ 
  interface oauth_auth_codesFieldRefs {
    readonly id: FieldRef<"oauth_auth_codes", 'String'>
    readonly user_id: FieldRef<"oauth_auth_codes", 'BigInt'>
    readonly client_id: FieldRef<"oauth_auth_codes", 'BigInt'>
    readonly scopes: FieldRef<"oauth_auth_codes", 'String'>
    readonly revoked: FieldRef<"oauth_auth_codes", 'Boolean'>
    readonly expires_at: FieldRef<"oauth_auth_codes", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * oauth_auth_codes findUnique
   */
  export type oauth_auth_codesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the oauth_auth_codes
     */
    select?: oauth_auth_codesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the oauth_auth_codes
     */
    omit?: oauth_auth_codesOmit<ExtArgs> | null
    /**
     * Filter, which oauth_auth_codes to fetch.
     */
    where: oauth_auth_codesWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * oauth_auth_codes findUniqueOrThrow
   */
  export type oauth_auth_codesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the oauth_auth_codes
     */
    select?: oauth_auth_codesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the oauth_auth_codes
     */
    omit?: oauth_auth_codesOmit<ExtArgs> | null
    /**
     * Filter, which oauth_auth_codes to fetch.
     */
    where: oauth_auth_codesWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * oauth_auth_codes findFirst
   */
  export type oauth_auth_codesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the oauth_auth_codes
     */
    select?: oauth_auth_codesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the oauth_auth_codes
     */
    omit?: oauth_auth_codesOmit<ExtArgs> | null
    /**
     * Filter, which oauth_auth_codes to fetch.
     */
    where?: oauth_auth_codesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of oauth_auth_codes to fetch.
     */
    orderBy?: oauth_auth_codesOrderByWithRelationInput | oauth_auth_codesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for oauth_auth_codes.
     */
    cursor?: oauth_auth_codesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` oauth_auth_codes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` oauth_auth_codes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of oauth_auth_codes.
     */
    distinct?: Oauth_auth_codesScalarFieldEnum | Oauth_auth_codesScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * oauth_auth_codes findFirstOrThrow
   */
  export type oauth_auth_codesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the oauth_auth_codes
     */
    select?: oauth_auth_codesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the oauth_auth_codes
     */
    omit?: oauth_auth_codesOmit<ExtArgs> | null
    /**
     * Filter, which oauth_auth_codes to fetch.
     */
    where?: oauth_auth_codesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of oauth_auth_codes to fetch.
     */
    orderBy?: oauth_auth_codesOrderByWithRelationInput | oauth_auth_codesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for oauth_auth_codes.
     */
    cursor?: oauth_auth_codesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` oauth_auth_codes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` oauth_auth_codes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of oauth_auth_codes.
     */
    distinct?: Oauth_auth_codesScalarFieldEnum | Oauth_auth_codesScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * oauth_auth_codes findMany
   */
  export type oauth_auth_codesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the oauth_auth_codes
     */
    select?: oauth_auth_codesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the oauth_auth_codes
     */
    omit?: oauth_auth_codesOmit<ExtArgs> | null
    /**
     * Filter, which oauth_auth_codes to fetch.
     */
    where?: oauth_auth_codesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of oauth_auth_codes to fetch.
     */
    orderBy?: oauth_auth_codesOrderByWithRelationInput | oauth_auth_codesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing oauth_auth_codes.
     */
    cursor?: oauth_auth_codesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` oauth_auth_codes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` oauth_auth_codes.
     */
    skip?: number
    distinct?: Oauth_auth_codesScalarFieldEnum | Oauth_auth_codesScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * oauth_auth_codes create
   */
  export type oauth_auth_codesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the oauth_auth_codes
     */
    select?: oauth_auth_codesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the oauth_auth_codes
     */
    omit?: oauth_auth_codesOmit<ExtArgs> | null
    /**
     * The data needed to create a oauth_auth_codes.
     */
    data: XOR<oauth_auth_codesCreateInput, oauth_auth_codesUncheckedCreateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * oauth_auth_codes createMany
   */
  export type oauth_auth_codesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many oauth_auth_codes.
     */
    data: oauth_auth_codesCreateManyInput | oauth_auth_codesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * oauth_auth_codes createManyAndReturn
   */
  export type oauth_auth_codesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the oauth_auth_codes
     */
    select?: oauth_auth_codesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the oauth_auth_codes
     */
    omit?: oauth_auth_codesOmit<ExtArgs> | null
    /**
     * The data used to create many oauth_auth_codes.
     */
    data: oauth_auth_codesCreateManyInput | oauth_auth_codesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * oauth_auth_codes update
   */
  export type oauth_auth_codesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the oauth_auth_codes
     */
    select?: oauth_auth_codesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the oauth_auth_codes
     */
    omit?: oauth_auth_codesOmit<ExtArgs> | null
    /**
     * The data needed to update a oauth_auth_codes.
     */
    data: XOR<oauth_auth_codesUpdateInput, oauth_auth_codesUncheckedUpdateInput>
    /**
     * Choose, which oauth_auth_codes to update.
     */
    where: oauth_auth_codesWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * oauth_auth_codes updateMany
   */
  export type oauth_auth_codesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update oauth_auth_codes.
     */
    data: XOR<oauth_auth_codesUpdateManyMutationInput, oauth_auth_codesUncheckedUpdateManyInput>
    /**
     * Filter which oauth_auth_codes to update
     */
    where?: oauth_auth_codesWhereInput
    /**
     * Limit how many oauth_auth_codes to update.
     */
    limit?: number
  }

  /**
   * oauth_auth_codes updateManyAndReturn
   */
  export type oauth_auth_codesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the oauth_auth_codes
     */
    select?: oauth_auth_codesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the oauth_auth_codes
     */
    omit?: oauth_auth_codesOmit<ExtArgs> | null
    /**
     * The data used to update oauth_auth_codes.
     */
    data: XOR<oauth_auth_codesUpdateManyMutationInput, oauth_auth_codesUncheckedUpdateManyInput>
    /**
     * Filter which oauth_auth_codes to update
     */
    where?: oauth_auth_codesWhereInput
    /**
     * Limit how many oauth_auth_codes to update.
     */
    limit?: number
  }

  /**
   * oauth_auth_codes upsert
   */
  export type oauth_auth_codesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the oauth_auth_codes
     */
    select?: oauth_auth_codesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the oauth_auth_codes
     */
    omit?: oauth_auth_codesOmit<ExtArgs> | null
    /**
     * The filter to search for the oauth_auth_codes to update in case it exists.
     */
    where: oauth_auth_codesWhereUniqueInput
    /**
     * In case the oauth_auth_codes found by the `where` argument doesn't exist, create a new oauth_auth_codes with this data.
     */
    create: XOR<oauth_auth_codesCreateInput, oauth_auth_codesUncheckedCreateInput>
    /**
     * In case the oauth_auth_codes was found with the provided `where` argument, update it with this data.
     */
    update: XOR<oauth_auth_codesUpdateInput, oauth_auth_codesUncheckedUpdateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * oauth_auth_codes delete
   */
  export type oauth_auth_codesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the oauth_auth_codes
     */
    select?: oauth_auth_codesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the oauth_auth_codes
     */
    omit?: oauth_auth_codesOmit<ExtArgs> | null
    /**
     * Filter which oauth_auth_codes to delete.
     */
    where: oauth_auth_codesWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * oauth_auth_codes deleteMany
   */
  export type oauth_auth_codesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which oauth_auth_codes to delete
     */
    where?: oauth_auth_codesWhereInput
    /**
     * Limit how many oauth_auth_codes to delete.
     */
    limit?: number
  }

  /**
   * oauth_auth_codes without action
   */
  export type oauth_auth_codesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the oauth_auth_codes
     */
    select?: oauth_auth_codesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the oauth_auth_codes
     */
    omit?: oauth_auth_codesOmit<ExtArgs> | null
  }


  /**
   * Model oauth_clients
   */

  export type AggregateOauth_clients = {
    _count: Oauth_clientsCountAggregateOutputType | null
    _avg: Oauth_clientsAvgAggregateOutputType | null
    _sum: Oauth_clientsSumAggregateOutputType | null
    _min: Oauth_clientsMinAggregateOutputType | null
    _max: Oauth_clientsMaxAggregateOutputType | null
  }

  export type Oauth_clientsAvgAggregateOutputType = {
    id: number | null
    user_id: number | null
  }

  export type Oauth_clientsSumAggregateOutputType = {
    id: bigint | null
    user_id: bigint | null
  }

  export type Oauth_clientsMinAggregateOutputType = {
    id: bigint | null
    user_id: bigint | null
    name: string | null
    secret: string | null
    provider: string | null
    redirect: string | null
    personal_access_client: boolean | null
    password_client: boolean | null
    revoked: boolean | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Oauth_clientsMaxAggregateOutputType = {
    id: bigint | null
    user_id: bigint | null
    name: string | null
    secret: string | null
    provider: string | null
    redirect: string | null
    personal_access_client: boolean | null
    password_client: boolean | null
    revoked: boolean | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Oauth_clientsCountAggregateOutputType = {
    id: number
    user_id: number
    name: number
    secret: number
    provider: number
    redirect: number
    personal_access_client: number
    password_client: number
    revoked: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Oauth_clientsAvgAggregateInputType = {
    id?: true
    user_id?: true
  }

  export type Oauth_clientsSumAggregateInputType = {
    id?: true
    user_id?: true
  }

  export type Oauth_clientsMinAggregateInputType = {
    id?: true
    user_id?: true
    name?: true
    secret?: true
    provider?: true
    redirect?: true
    personal_access_client?: true
    password_client?: true
    revoked?: true
    created_at?: true
    updated_at?: true
  }

  export type Oauth_clientsMaxAggregateInputType = {
    id?: true
    user_id?: true
    name?: true
    secret?: true
    provider?: true
    redirect?: true
    personal_access_client?: true
    password_client?: true
    revoked?: true
    created_at?: true
    updated_at?: true
  }

  export type Oauth_clientsCountAggregateInputType = {
    id?: true
    user_id?: true
    name?: true
    secret?: true
    provider?: true
    redirect?: true
    personal_access_client?: true
    password_client?: true
    revoked?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Oauth_clientsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which oauth_clients to aggregate.
     */
    where?: oauth_clientsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of oauth_clients to fetch.
     */
    orderBy?: oauth_clientsOrderByWithRelationInput | oauth_clientsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: oauth_clientsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` oauth_clients from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` oauth_clients.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned oauth_clients
    **/
    _count?: true | Oauth_clientsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Oauth_clientsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Oauth_clientsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Oauth_clientsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Oauth_clientsMaxAggregateInputType
  }

  export type GetOauth_clientsAggregateType<T extends Oauth_clientsAggregateArgs> = {
        [P in keyof T & keyof AggregateOauth_clients]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOauth_clients[P]>
      : GetScalarType<T[P], AggregateOauth_clients[P]>
  }




  export type oauth_clientsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: oauth_clientsWhereInput
    orderBy?: oauth_clientsOrderByWithAggregationInput | oauth_clientsOrderByWithAggregationInput[]
    by: Oauth_clientsScalarFieldEnum[] | Oauth_clientsScalarFieldEnum
    having?: oauth_clientsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Oauth_clientsCountAggregateInputType | true
    _avg?: Oauth_clientsAvgAggregateInputType
    _sum?: Oauth_clientsSumAggregateInputType
    _min?: Oauth_clientsMinAggregateInputType
    _max?: Oauth_clientsMaxAggregateInputType
  }

  export type Oauth_clientsGroupByOutputType = {
    id: bigint
    user_id: bigint | null
    name: string
    secret: string | null
    provider: string | null
    redirect: string
    personal_access_client: boolean
    password_client: boolean
    revoked: boolean
    created_at: Date | null
    updated_at: Date | null
    _count: Oauth_clientsCountAggregateOutputType | null
    _avg: Oauth_clientsAvgAggregateOutputType | null
    _sum: Oauth_clientsSumAggregateOutputType | null
    _min: Oauth_clientsMinAggregateOutputType | null
    _max: Oauth_clientsMaxAggregateOutputType | null
  }

  type GetOauth_clientsGroupByPayload<T extends oauth_clientsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Oauth_clientsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Oauth_clientsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Oauth_clientsGroupByOutputType[P]>
            : GetScalarType<T[P], Oauth_clientsGroupByOutputType[P]>
        }
      >
    >


  export type oauth_clientsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    name?: boolean
    secret?: boolean
    provider?: boolean
    redirect?: boolean
    personal_access_client?: boolean
    password_client?: boolean
    revoked?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["oauth_clients"]>

  export type oauth_clientsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    name?: boolean
    secret?: boolean
    provider?: boolean
    redirect?: boolean
    personal_access_client?: boolean
    password_client?: boolean
    revoked?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["oauth_clients"]>

  export type oauth_clientsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    name?: boolean
    secret?: boolean
    provider?: boolean
    redirect?: boolean
    personal_access_client?: boolean
    password_client?: boolean
    revoked?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["oauth_clients"]>

  export type oauth_clientsSelectScalar = {
    id?: boolean
    user_id?: boolean
    name?: boolean
    secret?: boolean
    provider?: boolean
    redirect?: boolean
    personal_access_client?: boolean
    password_client?: boolean
    revoked?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type oauth_clientsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user_id" | "name" | "secret" | "provider" | "redirect" | "personal_access_client" | "password_client" | "revoked" | "created_at" | "updated_at", ExtArgs["result"]["oauth_clients"]>

  export type $oauth_clientsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "oauth_clients"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      user_id: bigint | null
      name: string
      secret: string | null
      provider: string | null
      redirect: string
      personal_access_client: boolean
      password_client: boolean
      revoked: boolean
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["oauth_clients"]>
    composites: {}
  }

  type oauth_clientsGetPayload<S extends boolean | null | undefined | oauth_clientsDefaultArgs> = $Result.GetResult<Prisma.$oauth_clientsPayload, S>

  type oauth_clientsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<oauth_clientsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit' | 'relationLoadStrategy'> & {
      select?: Oauth_clientsCountAggregateInputType | true
    }

  export interface oauth_clientsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['oauth_clients'], meta: { name: 'oauth_clients' } }
    /**
     * Find zero or one Oauth_clients that matches the filter.
     * @param {oauth_clientsFindUniqueArgs} args - Arguments to find a Oauth_clients
     * @example
     * // Get one Oauth_clients
     * const oauth_clients = await prisma.oauth_clients.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends oauth_clientsFindUniqueArgs>(args: SelectSubset<T, oauth_clientsFindUniqueArgs<ExtArgs>>): Prisma__oauth_clientsClient<$Result.GetResult<Prisma.$oauth_clientsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Oauth_clients that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {oauth_clientsFindUniqueOrThrowArgs} args - Arguments to find a Oauth_clients
     * @example
     * // Get one Oauth_clients
     * const oauth_clients = await prisma.oauth_clients.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends oauth_clientsFindUniqueOrThrowArgs>(args: SelectSubset<T, oauth_clientsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__oauth_clientsClient<$Result.GetResult<Prisma.$oauth_clientsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Oauth_clients that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {oauth_clientsFindFirstArgs} args - Arguments to find a Oauth_clients
     * @example
     * // Get one Oauth_clients
     * const oauth_clients = await prisma.oauth_clients.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends oauth_clientsFindFirstArgs>(args?: SelectSubset<T, oauth_clientsFindFirstArgs<ExtArgs>>): Prisma__oauth_clientsClient<$Result.GetResult<Prisma.$oauth_clientsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Oauth_clients that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {oauth_clientsFindFirstOrThrowArgs} args - Arguments to find a Oauth_clients
     * @example
     * // Get one Oauth_clients
     * const oauth_clients = await prisma.oauth_clients.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends oauth_clientsFindFirstOrThrowArgs>(args?: SelectSubset<T, oauth_clientsFindFirstOrThrowArgs<ExtArgs>>): Prisma__oauth_clientsClient<$Result.GetResult<Prisma.$oauth_clientsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Oauth_clients that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {oauth_clientsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Oauth_clients
     * const oauth_clients = await prisma.oauth_clients.findMany()
     * 
     * // Get first 10 Oauth_clients
     * const oauth_clients = await prisma.oauth_clients.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const oauth_clientsWithIdOnly = await prisma.oauth_clients.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends oauth_clientsFindManyArgs>(args?: SelectSubset<T, oauth_clientsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$oauth_clientsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Oauth_clients.
     * @param {oauth_clientsCreateArgs} args - Arguments to create a Oauth_clients.
     * @example
     * // Create one Oauth_clients
     * const Oauth_clients = await prisma.oauth_clients.create({
     *   data: {
     *     // ... data to create a Oauth_clients
     *   }
     * })
     * 
     */
    create<T extends oauth_clientsCreateArgs>(args: SelectSubset<T, oauth_clientsCreateArgs<ExtArgs>>): Prisma__oauth_clientsClient<$Result.GetResult<Prisma.$oauth_clientsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Oauth_clients.
     * @param {oauth_clientsCreateManyArgs} args - Arguments to create many Oauth_clients.
     * @example
     * // Create many Oauth_clients
     * const oauth_clients = await prisma.oauth_clients.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends oauth_clientsCreateManyArgs>(args?: SelectSubset<T, oauth_clientsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Oauth_clients and returns the data saved in the database.
     * @param {oauth_clientsCreateManyAndReturnArgs} args - Arguments to create many Oauth_clients.
     * @example
     * // Create many Oauth_clients
     * const oauth_clients = await prisma.oauth_clients.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Oauth_clients and only return the `id`
     * const oauth_clientsWithIdOnly = await prisma.oauth_clients.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends oauth_clientsCreateManyAndReturnArgs>(args?: SelectSubset<T, oauth_clientsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$oauth_clientsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Oauth_clients.
     * @param {oauth_clientsDeleteArgs} args - Arguments to delete one Oauth_clients.
     * @example
     * // Delete one Oauth_clients
     * const Oauth_clients = await prisma.oauth_clients.delete({
     *   where: {
     *     // ... filter to delete one Oauth_clients
     *   }
     * })
     * 
     */
    delete<T extends oauth_clientsDeleteArgs>(args: SelectSubset<T, oauth_clientsDeleteArgs<ExtArgs>>): Prisma__oauth_clientsClient<$Result.GetResult<Prisma.$oauth_clientsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Oauth_clients.
     * @param {oauth_clientsUpdateArgs} args - Arguments to update one Oauth_clients.
     * @example
     * // Update one Oauth_clients
     * const oauth_clients = await prisma.oauth_clients.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends oauth_clientsUpdateArgs>(args: SelectSubset<T, oauth_clientsUpdateArgs<ExtArgs>>): Prisma__oauth_clientsClient<$Result.GetResult<Prisma.$oauth_clientsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Oauth_clients.
     * @param {oauth_clientsDeleteManyArgs} args - Arguments to filter Oauth_clients to delete.
     * @example
     * // Delete a few Oauth_clients
     * const { count } = await prisma.oauth_clients.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends oauth_clientsDeleteManyArgs>(args?: SelectSubset<T, oauth_clientsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Oauth_clients.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {oauth_clientsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Oauth_clients
     * const oauth_clients = await prisma.oauth_clients.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends oauth_clientsUpdateManyArgs>(args: SelectSubset<T, oauth_clientsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Oauth_clients and returns the data updated in the database.
     * @param {oauth_clientsUpdateManyAndReturnArgs} args - Arguments to update many Oauth_clients.
     * @example
     * // Update many Oauth_clients
     * const oauth_clients = await prisma.oauth_clients.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Oauth_clients and only return the `id`
     * const oauth_clientsWithIdOnly = await prisma.oauth_clients.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends oauth_clientsUpdateManyAndReturnArgs>(args: SelectSubset<T, oauth_clientsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$oauth_clientsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Oauth_clients.
     * @param {oauth_clientsUpsertArgs} args - Arguments to update or create a Oauth_clients.
     * @example
     * // Update or create a Oauth_clients
     * const oauth_clients = await prisma.oauth_clients.upsert({
     *   create: {
     *     // ... data to create a Oauth_clients
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Oauth_clients we want to update
     *   }
     * })
     */
    upsert<T extends oauth_clientsUpsertArgs>(args: SelectSubset<T, oauth_clientsUpsertArgs<ExtArgs>>): Prisma__oauth_clientsClient<$Result.GetResult<Prisma.$oauth_clientsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Oauth_clients.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {oauth_clientsCountArgs} args - Arguments to filter Oauth_clients to count.
     * @example
     * // Count the number of Oauth_clients
     * const count = await prisma.oauth_clients.count({
     *   where: {
     *     // ... the filter for the Oauth_clients we want to count
     *   }
     * })
    **/
    count<T extends oauth_clientsCountArgs>(
      args?: Subset<T, oauth_clientsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Oauth_clientsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Oauth_clients.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Oauth_clientsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Oauth_clientsAggregateArgs>(args: Subset<T, Oauth_clientsAggregateArgs>): Prisma.PrismaPromise<GetOauth_clientsAggregateType<T>>

    /**
     * Group by Oauth_clients.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {oauth_clientsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends oauth_clientsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: oauth_clientsGroupByArgs['orderBy'] }
        : { orderBy?: oauth_clientsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, oauth_clientsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOauth_clientsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the oauth_clients model
   */
  readonly fields: oauth_clientsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for oauth_clients.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__oauth_clientsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the oauth_clients model
   */ 
  interface oauth_clientsFieldRefs {
    readonly id: FieldRef<"oauth_clients", 'BigInt'>
    readonly user_id: FieldRef<"oauth_clients", 'BigInt'>
    readonly name: FieldRef<"oauth_clients", 'String'>
    readonly secret: FieldRef<"oauth_clients", 'String'>
    readonly provider: FieldRef<"oauth_clients", 'String'>
    readonly redirect: FieldRef<"oauth_clients", 'String'>
    readonly personal_access_client: FieldRef<"oauth_clients", 'Boolean'>
    readonly password_client: FieldRef<"oauth_clients", 'Boolean'>
    readonly revoked: FieldRef<"oauth_clients", 'Boolean'>
    readonly created_at: FieldRef<"oauth_clients", 'DateTime'>
    readonly updated_at: FieldRef<"oauth_clients", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * oauth_clients findUnique
   */
  export type oauth_clientsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the oauth_clients
     */
    select?: oauth_clientsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the oauth_clients
     */
    omit?: oauth_clientsOmit<ExtArgs> | null
    /**
     * Filter, which oauth_clients to fetch.
     */
    where: oauth_clientsWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * oauth_clients findUniqueOrThrow
   */
  export type oauth_clientsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the oauth_clients
     */
    select?: oauth_clientsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the oauth_clients
     */
    omit?: oauth_clientsOmit<ExtArgs> | null
    /**
     * Filter, which oauth_clients to fetch.
     */
    where: oauth_clientsWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * oauth_clients findFirst
   */
  export type oauth_clientsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the oauth_clients
     */
    select?: oauth_clientsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the oauth_clients
     */
    omit?: oauth_clientsOmit<ExtArgs> | null
    /**
     * Filter, which oauth_clients to fetch.
     */
    where?: oauth_clientsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of oauth_clients to fetch.
     */
    orderBy?: oauth_clientsOrderByWithRelationInput | oauth_clientsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for oauth_clients.
     */
    cursor?: oauth_clientsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` oauth_clients from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` oauth_clients.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of oauth_clients.
     */
    distinct?: Oauth_clientsScalarFieldEnum | Oauth_clientsScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * oauth_clients findFirstOrThrow
   */
  export type oauth_clientsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the oauth_clients
     */
    select?: oauth_clientsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the oauth_clients
     */
    omit?: oauth_clientsOmit<ExtArgs> | null
    /**
     * Filter, which oauth_clients to fetch.
     */
    where?: oauth_clientsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of oauth_clients to fetch.
     */
    orderBy?: oauth_clientsOrderByWithRelationInput | oauth_clientsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for oauth_clients.
     */
    cursor?: oauth_clientsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` oauth_clients from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` oauth_clients.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of oauth_clients.
     */
    distinct?: Oauth_clientsScalarFieldEnum | Oauth_clientsScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * oauth_clients findMany
   */
  export type oauth_clientsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the oauth_clients
     */
    select?: oauth_clientsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the oauth_clients
     */
    omit?: oauth_clientsOmit<ExtArgs> | null
    /**
     * Filter, which oauth_clients to fetch.
     */
    where?: oauth_clientsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of oauth_clients to fetch.
     */
    orderBy?: oauth_clientsOrderByWithRelationInput | oauth_clientsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing oauth_clients.
     */
    cursor?: oauth_clientsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` oauth_clients from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` oauth_clients.
     */
    skip?: number
    distinct?: Oauth_clientsScalarFieldEnum | Oauth_clientsScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * oauth_clients create
   */
  export type oauth_clientsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the oauth_clients
     */
    select?: oauth_clientsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the oauth_clients
     */
    omit?: oauth_clientsOmit<ExtArgs> | null
    /**
     * The data needed to create a oauth_clients.
     */
    data: XOR<oauth_clientsCreateInput, oauth_clientsUncheckedCreateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * oauth_clients createMany
   */
  export type oauth_clientsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many oauth_clients.
     */
    data: oauth_clientsCreateManyInput | oauth_clientsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * oauth_clients createManyAndReturn
   */
  export type oauth_clientsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the oauth_clients
     */
    select?: oauth_clientsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the oauth_clients
     */
    omit?: oauth_clientsOmit<ExtArgs> | null
    /**
     * The data used to create many oauth_clients.
     */
    data: oauth_clientsCreateManyInput | oauth_clientsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * oauth_clients update
   */
  export type oauth_clientsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the oauth_clients
     */
    select?: oauth_clientsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the oauth_clients
     */
    omit?: oauth_clientsOmit<ExtArgs> | null
    /**
     * The data needed to update a oauth_clients.
     */
    data: XOR<oauth_clientsUpdateInput, oauth_clientsUncheckedUpdateInput>
    /**
     * Choose, which oauth_clients to update.
     */
    where: oauth_clientsWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * oauth_clients updateMany
   */
  export type oauth_clientsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update oauth_clients.
     */
    data: XOR<oauth_clientsUpdateManyMutationInput, oauth_clientsUncheckedUpdateManyInput>
    /**
     * Filter which oauth_clients to update
     */
    where?: oauth_clientsWhereInput
    /**
     * Limit how many oauth_clients to update.
     */
    limit?: number
  }

  /**
   * oauth_clients updateManyAndReturn
   */
  export type oauth_clientsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the oauth_clients
     */
    select?: oauth_clientsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the oauth_clients
     */
    omit?: oauth_clientsOmit<ExtArgs> | null
    /**
     * The data used to update oauth_clients.
     */
    data: XOR<oauth_clientsUpdateManyMutationInput, oauth_clientsUncheckedUpdateManyInput>
    /**
     * Filter which oauth_clients to update
     */
    where?: oauth_clientsWhereInput
    /**
     * Limit how many oauth_clients to update.
     */
    limit?: number
  }

  /**
   * oauth_clients upsert
   */
  export type oauth_clientsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the oauth_clients
     */
    select?: oauth_clientsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the oauth_clients
     */
    omit?: oauth_clientsOmit<ExtArgs> | null
    /**
     * The filter to search for the oauth_clients to update in case it exists.
     */
    where: oauth_clientsWhereUniqueInput
    /**
     * In case the oauth_clients found by the `where` argument doesn't exist, create a new oauth_clients with this data.
     */
    create: XOR<oauth_clientsCreateInput, oauth_clientsUncheckedCreateInput>
    /**
     * In case the oauth_clients was found with the provided `where` argument, update it with this data.
     */
    update: XOR<oauth_clientsUpdateInput, oauth_clientsUncheckedUpdateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * oauth_clients delete
   */
  export type oauth_clientsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the oauth_clients
     */
    select?: oauth_clientsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the oauth_clients
     */
    omit?: oauth_clientsOmit<ExtArgs> | null
    /**
     * Filter which oauth_clients to delete.
     */
    where: oauth_clientsWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * oauth_clients deleteMany
   */
  export type oauth_clientsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which oauth_clients to delete
     */
    where?: oauth_clientsWhereInput
    /**
     * Limit how many oauth_clients to delete.
     */
    limit?: number
  }

  /**
   * oauth_clients without action
   */
  export type oauth_clientsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the oauth_clients
     */
    select?: oauth_clientsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the oauth_clients
     */
    omit?: oauth_clientsOmit<ExtArgs> | null
  }


  /**
   * Model oauth_personal_access_clients
   */

  export type AggregateOauth_personal_access_clients = {
    _count: Oauth_personal_access_clientsCountAggregateOutputType | null
    _avg: Oauth_personal_access_clientsAvgAggregateOutputType | null
    _sum: Oauth_personal_access_clientsSumAggregateOutputType | null
    _min: Oauth_personal_access_clientsMinAggregateOutputType | null
    _max: Oauth_personal_access_clientsMaxAggregateOutputType | null
  }

  export type Oauth_personal_access_clientsAvgAggregateOutputType = {
    id: number | null
    client_id: number | null
  }

  export type Oauth_personal_access_clientsSumAggregateOutputType = {
    id: bigint | null
    client_id: bigint | null
  }

  export type Oauth_personal_access_clientsMinAggregateOutputType = {
    id: bigint | null
    client_id: bigint | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Oauth_personal_access_clientsMaxAggregateOutputType = {
    id: bigint | null
    client_id: bigint | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Oauth_personal_access_clientsCountAggregateOutputType = {
    id: number
    client_id: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Oauth_personal_access_clientsAvgAggregateInputType = {
    id?: true
    client_id?: true
  }

  export type Oauth_personal_access_clientsSumAggregateInputType = {
    id?: true
    client_id?: true
  }

  export type Oauth_personal_access_clientsMinAggregateInputType = {
    id?: true
    client_id?: true
    created_at?: true
    updated_at?: true
  }

  export type Oauth_personal_access_clientsMaxAggregateInputType = {
    id?: true
    client_id?: true
    created_at?: true
    updated_at?: true
  }

  export type Oauth_personal_access_clientsCountAggregateInputType = {
    id?: true
    client_id?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Oauth_personal_access_clientsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which oauth_personal_access_clients to aggregate.
     */
    where?: oauth_personal_access_clientsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of oauth_personal_access_clients to fetch.
     */
    orderBy?: oauth_personal_access_clientsOrderByWithRelationInput | oauth_personal_access_clientsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: oauth_personal_access_clientsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` oauth_personal_access_clients from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` oauth_personal_access_clients.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned oauth_personal_access_clients
    **/
    _count?: true | Oauth_personal_access_clientsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Oauth_personal_access_clientsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Oauth_personal_access_clientsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Oauth_personal_access_clientsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Oauth_personal_access_clientsMaxAggregateInputType
  }

  export type GetOauth_personal_access_clientsAggregateType<T extends Oauth_personal_access_clientsAggregateArgs> = {
        [P in keyof T & keyof AggregateOauth_personal_access_clients]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOauth_personal_access_clients[P]>
      : GetScalarType<T[P], AggregateOauth_personal_access_clients[P]>
  }




  export type oauth_personal_access_clientsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: oauth_personal_access_clientsWhereInput
    orderBy?: oauth_personal_access_clientsOrderByWithAggregationInput | oauth_personal_access_clientsOrderByWithAggregationInput[]
    by: Oauth_personal_access_clientsScalarFieldEnum[] | Oauth_personal_access_clientsScalarFieldEnum
    having?: oauth_personal_access_clientsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Oauth_personal_access_clientsCountAggregateInputType | true
    _avg?: Oauth_personal_access_clientsAvgAggregateInputType
    _sum?: Oauth_personal_access_clientsSumAggregateInputType
    _min?: Oauth_personal_access_clientsMinAggregateInputType
    _max?: Oauth_personal_access_clientsMaxAggregateInputType
  }

  export type Oauth_personal_access_clientsGroupByOutputType = {
    id: bigint
    client_id: bigint
    created_at: Date | null
    updated_at: Date | null
    _count: Oauth_personal_access_clientsCountAggregateOutputType | null
    _avg: Oauth_personal_access_clientsAvgAggregateOutputType | null
    _sum: Oauth_personal_access_clientsSumAggregateOutputType | null
    _min: Oauth_personal_access_clientsMinAggregateOutputType | null
    _max: Oauth_personal_access_clientsMaxAggregateOutputType | null
  }

  type GetOauth_personal_access_clientsGroupByPayload<T extends oauth_personal_access_clientsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Oauth_personal_access_clientsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Oauth_personal_access_clientsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Oauth_personal_access_clientsGroupByOutputType[P]>
            : GetScalarType<T[P], Oauth_personal_access_clientsGroupByOutputType[P]>
        }
      >
    >


  export type oauth_personal_access_clientsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    client_id?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["oauth_personal_access_clients"]>

  export type oauth_personal_access_clientsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    client_id?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["oauth_personal_access_clients"]>

  export type oauth_personal_access_clientsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    client_id?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["oauth_personal_access_clients"]>

  export type oauth_personal_access_clientsSelectScalar = {
    id?: boolean
    client_id?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type oauth_personal_access_clientsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "client_id" | "created_at" | "updated_at", ExtArgs["result"]["oauth_personal_access_clients"]>

  export type $oauth_personal_access_clientsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "oauth_personal_access_clients"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      client_id: bigint
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["oauth_personal_access_clients"]>
    composites: {}
  }

  type oauth_personal_access_clientsGetPayload<S extends boolean | null | undefined | oauth_personal_access_clientsDefaultArgs> = $Result.GetResult<Prisma.$oauth_personal_access_clientsPayload, S>

  type oauth_personal_access_clientsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<oauth_personal_access_clientsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit' | 'relationLoadStrategy'> & {
      select?: Oauth_personal_access_clientsCountAggregateInputType | true
    }

  export interface oauth_personal_access_clientsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['oauth_personal_access_clients'], meta: { name: 'oauth_personal_access_clients' } }
    /**
     * Find zero or one Oauth_personal_access_clients that matches the filter.
     * @param {oauth_personal_access_clientsFindUniqueArgs} args - Arguments to find a Oauth_personal_access_clients
     * @example
     * // Get one Oauth_personal_access_clients
     * const oauth_personal_access_clients = await prisma.oauth_personal_access_clients.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends oauth_personal_access_clientsFindUniqueArgs>(args: SelectSubset<T, oauth_personal_access_clientsFindUniqueArgs<ExtArgs>>): Prisma__oauth_personal_access_clientsClient<$Result.GetResult<Prisma.$oauth_personal_access_clientsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Oauth_personal_access_clients that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {oauth_personal_access_clientsFindUniqueOrThrowArgs} args - Arguments to find a Oauth_personal_access_clients
     * @example
     * // Get one Oauth_personal_access_clients
     * const oauth_personal_access_clients = await prisma.oauth_personal_access_clients.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends oauth_personal_access_clientsFindUniqueOrThrowArgs>(args: SelectSubset<T, oauth_personal_access_clientsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__oauth_personal_access_clientsClient<$Result.GetResult<Prisma.$oauth_personal_access_clientsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Oauth_personal_access_clients that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {oauth_personal_access_clientsFindFirstArgs} args - Arguments to find a Oauth_personal_access_clients
     * @example
     * // Get one Oauth_personal_access_clients
     * const oauth_personal_access_clients = await prisma.oauth_personal_access_clients.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends oauth_personal_access_clientsFindFirstArgs>(args?: SelectSubset<T, oauth_personal_access_clientsFindFirstArgs<ExtArgs>>): Prisma__oauth_personal_access_clientsClient<$Result.GetResult<Prisma.$oauth_personal_access_clientsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Oauth_personal_access_clients that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {oauth_personal_access_clientsFindFirstOrThrowArgs} args - Arguments to find a Oauth_personal_access_clients
     * @example
     * // Get one Oauth_personal_access_clients
     * const oauth_personal_access_clients = await prisma.oauth_personal_access_clients.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends oauth_personal_access_clientsFindFirstOrThrowArgs>(args?: SelectSubset<T, oauth_personal_access_clientsFindFirstOrThrowArgs<ExtArgs>>): Prisma__oauth_personal_access_clientsClient<$Result.GetResult<Prisma.$oauth_personal_access_clientsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Oauth_personal_access_clients that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {oauth_personal_access_clientsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Oauth_personal_access_clients
     * const oauth_personal_access_clients = await prisma.oauth_personal_access_clients.findMany()
     * 
     * // Get first 10 Oauth_personal_access_clients
     * const oauth_personal_access_clients = await prisma.oauth_personal_access_clients.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const oauth_personal_access_clientsWithIdOnly = await prisma.oauth_personal_access_clients.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends oauth_personal_access_clientsFindManyArgs>(args?: SelectSubset<T, oauth_personal_access_clientsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$oauth_personal_access_clientsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Oauth_personal_access_clients.
     * @param {oauth_personal_access_clientsCreateArgs} args - Arguments to create a Oauth_personal_access_clients.
     * @example
     * // Create one Oauth_personal_access_clients
     * const Oauth_personal_access_clients = await prisma.oauth_personal_access_clients.create({
     *   data: {
     *     // ... data to create a Oauth_personal_access_clients
     *   }
     * })
     * 
     */
    create<T extends oauth_personal_access_clientsCreateArgs>(args: SelectSubset<T, oauth_personal_access_clientsCreateArgs<ExtArgs>>): Prisma__oauth_personal_access_clientsClient<$Result.GetResult<Prisma.$oauth_personal_access_clientsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Oauth_personal_access_clients.
     * @param {oauth_personal_access_clientsCreateManyArgs} args - Arguments to create many Oauth_personal_access_clients.
     * @example
     * // Create many Oauth_personal_access_clients
     * const oauth_personal_access_clients = await prisma.oauth_personal_access_clients.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends oauth_personal_access_clientsCreateManyArgs>(args?: SelectSubset<T, oauth_personal_access_clientsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Oauth_personal_access_clients and returns the data saved in the database.
     * @param {oauth_personal_access_clientsCreateManyAndReturnArgs} args - Arguments to create many Oauth_personal_access_clients.
     * @example
     * // Create many Oauth_personal_access_clients
     * const oauth_personal_access_clients = await prisma.oauth_personal_access_clients.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Oauth_personal_access_clients and only return the `id`
     * const oauth_personal_access_clientsWithIdOnly = await prisma.oauth_personal_access_clients.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends oauth_personal_access_clientsCreateManyAndReturnArgs>(args?: SelectSubset<T, oauth_personal_access_clientsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$oauth_personal_access_clientsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Oauth_personal_access_clients.
     * @param {oauth_personal_access_clientsDeleteArgs} args - Arguments to delete one Oauth_personal_access_clients.
     * @example
     * // Delete one Oauth_personal_access_clients
     * const Oauth_personal_access_clients = await prisma.oauth_personal_access_clients.delete({
     *   where: {
     *     // ... filter to delete one Oauth_personal_access_clients
     *   }
     * })
     * 
     */
    delete<T extends oauth_personal_access_clientsDeleteArgs>(args: SelectSubset<T, oauth_personal_access_clientsDeleteArgs<ExtArgs>>): Prisma__oauth_personal_access_clientsClient<$Result.GetResult<Prisma.$oauth_personal_access_clientsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Oauth_personal_access_clients.
     * @param {oauth_personal_access_clientsUpdateArgs} args - Arguments to update one Oauth_personal_access_clients.
     * @example
     * // Update one Oauth_personal_access_clients
     * const oauth_personal_access_clients = await prisma.oauth_personal_access_clients.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends oauth_personal_access_clientsUpdateArgs>(args: SelectSubset<T, oauth_personal_access_clientsUpdateArgs<ExtArgs>>): Prisma__oauth_personal_access_clientsClient<$Result.GetResult<Prisma.$oauth_personal_access_clientsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Oauth_personal_access_clients.
     * @param {oauth_personal_access_clientsDeleteManyArgs} args - Arguments to filter Oauth_personal_access_clients to delete.
     * @example
     * // Delete a few Oauth_personal_access_clients
     * const { count } = await prisma.oauth_personal_access_clients.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends oauth_personal_access_clientsDeleteManyArgs>(args?: SelectSubset<T, oauth_personal_access_clientsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Oauth_personal_access_clients.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {oauth_personal_access_clientsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Oauth_personal_access_clients
     * const oauth_personal_access_clients = await prisma.oauth_personal_access_clients.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends oauth_personal_access_clientsUpdateManyArgs>(args: SelectSubset<T, oauth_personal_access_clientsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Oauth_personal_access_clients and returns the data updated in the database.
     * @param {oauth_personal_access_clientsUpdateManyAndReturnArgs} args - Arguments to update many Oauth_personal_access_clients.
     * @example
     * // Update many Oauth_personal_access_clients
     * const oauth_personal_access_clients = await prisma.oauth_personal_access_clients.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Oauth_personal_access_clients and only return the `id`
     * const oauth_personal_access_clientsWithIdOnly = await prisma.oauth_personal_access_clients.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends oauth_personal_access_clientsUpdateManyAndReturnArgs>(args: SelectSubset<T, oauth_personal_access_clientsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$oauth_personal_access_clientsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Oauth_personal_access_clients.
     * @param {oauth_personal_access_clientsUpsertArgs} args - Arguments to update or create a Oauth_personal_access_clients.
     * @example
     * // Update or create a Oauth_personal_access_clients
     * const oauth_personal_access_clients = await prisma.oauth_personal_access_clients.upsert({
     *   create: {
     *     // ... data to create a Oauth_personal_access_clients
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Oauth_personal_access_clients we want to update
     *   }
     * })
     */
    upsert<T extends oauth_personal_access_clientsUpsertArgs>(args: SelectSubset<T, oauth_personal_access_clientsUpsertArgs<ExtArgs>>): Prisma__oauth_personal_access_clientsClient<$Result.GetResult<Prisma.$oauth_personal_access_clientsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Oauth_personal_access_clients.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {oauth_personal_access_clientsCountArgs} args - Arguments to filter Oauth_personal_access_clients to count.
     * @example
     * // Count the number of Oauth_personal_access_clients
     * const count = await prisma.oauth_personal_access_clients.count({
     *   where: {
     *     // ... the filter for the Oauth_personal_access_clients we want to count
     *   }
     * })
    **/
    count<T extends oauth_personal_access_clientsCountArgs>(
      args?: Subset<T, oauth_personal_access_clientsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Oauth_personal_access_clientsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Oauth_personal_access_clients.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Oauth_personal_access_clientsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Oauth_personal_access_clientsAggregateArgs>(args: Subset<T, Oauth_personal_access_clientsAggregateArgs>): Prisma.PrismaPromise<GetOauth_personal_access_clientsAggregateType<T>>

    /**
     * Group by Oauth_personal_access_clients.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {oauth_personal_access_clientsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends oauth_personal_access_clientsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: oauth_personal_access_clientsGroupByArgs['orderBy'] }
        : { orderBy?: oauth_personal_access_clientsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, oauth_personal_access_clientsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOauth_personal_access_clientsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the oauth_personal_access_clients model
   */
  readonly fields: oauth_personal_access_clientsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for oauth_personal_access_clients.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__oauth_personal_access_clientsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the oauth_personal_access_clients model
   */ 
  interface oauth_personal_access_clientsFieldRefs {
    readonly id: FieldRef<"oauth_personal_access_clients", 'BigInt'>
    readonly client_id: FieldRef<"oauth_personal_access_clients", 'BigInt'>
    readonly created_at: FieldRef<"oauth_personal_access_clients", 'DateTime'>
    readonly updated_at: FieldRef<"oauth_personal_access_clients", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * oauth_personal_access_clients findUnique
   */
  export type oauth_personal_access_clientsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the oauth_personal_access_clients
     */
    select?: oauth_personal_access_clientsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the oauth_personal_access_clients
     */
    omit?: oauth_personal_access_clientsOmit<ExtArgs> | null
    /**
     * Filter, which oauth_personal_access_clients to fetch.
     */
    where: oauth_personal_access_clientsWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * oauth_personal_access_clients findUniqueOrThrow
   */
  export type oauth_personal_access_clientsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the oauth_personal_access_clients
     */
    select?: oauth_personal_access_clientsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the oauth_personal_access_clients
     */
    omit?: oauth_personal_access_clientsOmit<ExtArgs> | null
    /**
     * Filter, which oauth_personal_access_clients to fetch.
     */
    where: oauth_personal_access_clientsWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * oauth_personal_access_clients findFirst
   */
  export type oauth_personal_access_clientsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the oauth_personal_access_clients
     */
    select?: oauth_personal_access_clientsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the oauth_personal_access_clients
     */
    omit?: oauth_personal_access_clientsOmit<ExtArgs> | null
    /**
     * Filter, which oauth_personal_access_clients to fetch.
     */
    where?: oauth_personal_access_clientsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of oauth_personal_access_clients to fetch.
     */
    orderBy?: oauth_personal_access_clientsOrderByWithRelationInput | oauth_personal_access_clientsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for oauth_personal_access_clients.
     */
    cursor?: oauth_personal_access_clientsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` oauth_personal_access_clients from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` oauth_personal_access_clients.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of oauth_personal_access_clients.
     */
    distinct?: Oauth_personal_access_clientsScalarFieldEnum | Oauth_personal_access_clientsScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * oauth_personal_access_clients findFirstOrThrow
   */
  export type oauth_personal_access_clientsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the oauth_personal_access_clients
     */
    select?: oauth_personal_access_clientsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the oauth_personal_access_clients
     */
    omit?: oauth_personal_access_clientsOmit<ExtArgs> | null
    /**
     * Filter, which oauth_personal_access_clients to fetch.
     */
    where?: oauth_personal_access_clientsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of oauth_personal_access_clients to fetch.
     */
    orderBy?: oauth_personal_access_clientsOrderByWithRelationInput | oauth_personal_access_clientsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for oauth_personal_access_clients.
     */
    cursor?: oauth_personal_access_clientsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` oauth_personal_access_clients from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` oauth_personal_access_clients.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of oauth_personal_access_clients.
     */
    distinct?: Oauth_personal_access_clientsScalarFieldEnum | Oauth_personal_access_clientsScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * oauth_personal_access_clients findMany
   */
  export type oauth_personal_access_clientsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the oauth_personal_access_clients
     */
    select?: oauth_personal_access_clientsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the oauth_personal_access_clients
     */
    omit?: oauth_personal_access_clientsOmit<ExtArgs> | null
    /**
     * Filter, which oauth_personal_access_clients to fetch.
     */
    where?: oauth_personal_access_clientsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of oauth_personal_access_clients to fetch.
     */
    orderBy?: oauth_personal_access_clientsOrderByWithRelationInput | oauth_personal_access_clientsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing oauth_personal_access_clients.
     */
    cursor?: oauth_personal_access_clientsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` oauth_personal_access_clients from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` oauth_personal_access_clients.
     */
    skip?: number
    distinct?: Oauth_personal_access_clientsScalarFieldEnum | Oauth_personal_access_clientsScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * oauth_personal_access_clients create
   */
  export type oauth_personal_access_clientsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the oauth_personal_access_clients
     */
    select?: oauth_personal_access_clientsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the oauth_personal_access_clients
     */
    omit?: oauth_personal_access_clientsOmit<ExtArgs> | null
    /**
     * The data needed to create a oauth_personal_access_clients.
     */
    data: XOR<oauth_personal_access_clientsCreateInput, oauth_personal_access_clientsUncheckedCreateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * oauth_personal_access_clients createMany
   */
  export type oauth_personal_access_clientsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many oauth_personal_access_clients.
     */
    data: oauth_personal_access_clientsCreateManyInput | oauth_personal_access_clientsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * oauth_personal_access_clients createManyAndReturn
   */
  export type oauth_personal_access_clientsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the oauth_personal_access_clients
     */
    select?: oauth_personal_access_clientsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the oauth_personal_access_clients
     */
    omit?: oauth_personal_access_clientsOmit<ExtArgs> | null
    /**
     * The data used to create many oauth_personal_access_clients.
     */
    data: oauth_personal_access_clientsCreateManyInput | oauth_personal_access_clientsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * oauth_personal_access_clients update
   */
  export type oauth_personal_access_clientsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the oauth_personal_access_clients
     */
    select?: oauth_personal_access_clientsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the oauth_personal_access_clients
     */
    omit?: oauth_personal_access_clientsOmit<ExtArgs> | null
    /**
     * The data needed to update a oauth_personal_access_clients.
     */
    data: XOR<oauth_personal_access_clientsUpdateInput, oauth_personal_access_clientsUncheckedUpdateInput>
    /**
     * Choose, which oauth_personal_access_clients to update.
     */
    where: oauth_personal_access_clientsWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * oauth_personal_access_clients updateMany
   */
  export type oauth_personal_access_clientsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update oauth_personal_access_clients.
     */
    data: XOR<oauth_personal_access_clientsUpdateManyMutationInput, oauth_personal_access_clientsUncheckedUpdateManyInput>
    /**
     * Filter which oauth_personal_access_clients to update
     */
    where?: oauth_personal_access_clientsWhereInput
    /**
     * Limit how many oauth_personal_access_clients to update.
     */
    limit?: number
  }

  /**
   * oauth_personal_access_clients updateManyAndReturn
   */
  export type oauth_personal_access_clientsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the oauth_personal_access_clients
     */
    select?: oauth_personal_access_clientsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the oauth_personal_access_clients
     */
    omit?: oauth_personal_access_clientsOmit<ExtArgs> | null
    /**
     * The data used to update oauth_personal_access_clients.
     */
    data: XOR<oauth_personal_access_clientsUpdateManyMutationInput, oauth_personal_access_clientsUncheckedUpdateManyInput>
    /**
     * Filter which oauth_personal_access_clients to update
     */
    where?: oauth_personal_access_clientsWhereInput
    /**
     * Limit how many oauth_personal_access_clients to update.
     */
    limit?: number
  }

  /**
   * oauth_personal_access_clients upsert
   */
  export type oauth_personal_access_clientsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the oauth_personal_access_clients
     */
    select?: oauth_personal_access_clientsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the oauth_personal_access_clients
     */
    omit?: oauth_personal_access_clientsOmit<ExtArgs> | null
    /**
     * The filter to search for the oauth_personal_access_clients to update in case it exists.
     */
    where: oauth_personal_access_clientsWhereUniqueInput
    /**
     * In case the oauth_personal_access_clients found by the `where` argument doesn't exist, create a new oauth_personal_access_clients with this data.
     */
    create: XOR<oauth_personal_access_clientsCreateInput, oauth_personal_access_clientsUncheckedCreateInput>
    /**
     * In case the oauth_personal_access_clients was found with the provided `where` argument, update it with this data.
     */
    update: XOR<oauth_personal_access_clientsUpdateInput, oauth_personal_access_clientsUncheckedUpdateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * oauth_personal_access_clients delete
   */
  export type oauth_personal_access_clientsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the oauth_personal_access_clients
     */
    select?: oauth_personal_access_clientsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the oauth_personal_access_clients
     */
    omit?: oauth_personal_access_clientsOmit<ExtArgs> | null
    /**
     * Filter which oauth_personal_access_clients to delete.
     */
    where: oauth_personal_access_clientsWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * oauth_personal_access_clients deleteMany
   */
  export type oauth_personal_access_clientsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which oauth_personal_access_clients to delete
     */
    where?: oauth_personal_access_clientsWhereInput
    /**
     * Limit how many oauth_personal_access_clients to delete.
     */
    limit?: number
  }

  /**
   * oauth_personal_access_clients without action
   */
  export type oauth_personal_access_clientsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the oauth_personal_access_clients
     */
    select?: oauth_personal_access_clientsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the oauth_personal_access_clients
     */
    omit?: oauth_personal_access_clientsOmit<ExtArgs> | null
  }


  /**
   * Model oauth_refresh_tokens
   */

  export type AggregateOauth_refresh_tokens = {
    _count: Oauth_refresh_tokensCountAggregateOutputType | null
    _min: Oauth_refresh_tokensMinAggregateOutputType | null
    _max: Oauth_refresh_tokensMaxAggregateOutputType | null
  }

  export type Oauth_refresh_tokensMinAggregateOutputType = {
    id: string | null
    access_token_id: string | null
    revoked: boolean | null
    expires_at: Date | null
  }

  export type Oauth_refresh_tokensMaxAggregateOutputType = {
    id: string | null
    access_token_id: string | null
    revoked: boolean | null
    expires_at: Date | null
  }

  export type Oauth_refresh_tokensCountAggregateOutputType = {
    id: number
    access_token_id: number
    revoked: number
    expires_at: number
    _all: number
  }


  export type Oauth_refresh_tokensMinAggregateInputType = {
    id?: true
    access_token_id?: true
    revoked?: true
    expires_at?: true
  }

  export type Oauth_refresh_tokensMaxAggregateInputType = {
    id?: true
    access_token_id?: true
    revoked?: true
    expires_at?: true
  }

  export type Oauth_refresh_tokensCountAggregateInputType = {
    id?: true
    access_token_id?: true
    revoked?: true
    expires_at?: true
    _all?: true
  }

  export type Oauth_refresh_tokensAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which oauth_refresh_tokens to aggregate.
     */
    where?: oauth_refresh_tokensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of oauth_refresh_tokens to fetch.
     */
    orderBy?: oauth_refresh_tokensOrderByWithRelationInput | oauth_refresh_tokensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: oauth_refresh_tokensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` oauth_refresh_tokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` oauth_refresh_tokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned oauth_refresh_tokens
    **/
    _count?: true | Oauth_refresh_tokensCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Oauth_refresh_tokensMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Oauth_refresh_tokensMaxAggregateInputType
  }

  export type GetOauth_refresh_tokensAggregateType<T extends Oauth_refresh_tokensAggregateArgs> = {
        [P in keyof T & keyof AggregateOauth_refresh_tokens]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOauth_refresh_tokens[P]>
      : GetScalarType<T[P], AggregateOauth_refresh_tokens[P]>
  }




  export type oauth_refresh_tokensGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: oauth_refresh_tokensWhereInput
    orderBy?: oauth_refresh_tokensOrderByWithAggregationInput | oauth_refresh_tokensOrderByWithAggregationInput[]
    by: Oauth_refresh_tokensScalarFieldEnum[] | Oauth_refresh_tokensScalarFieldEnum
    having?: oauth_refresh_tokensScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Oauth_refresh_tokensCountAggregateInputType | true
    _min?: Oauth_refresh_tokensMinAggregateInputType
    _max?: Oauth_refresh_tokensMaxAggregateInputType
  }

  export type Oauth_refresh_tokensGroupByOutputType = {
    id: string
    access_token_id: string
    revoked: boolean
    expires_at: Date | null
    _count: Oauth_refresh_tokensCountAggregateOutputType | null
    _min: Oauth_refresh_tokensMinAggregateOutputType | null
    _max: Oauth_refresh_tokensMaxAggregateOutputType | null
  }

  type GetOauth_refresh_tokensGroupByPayload<T extends oauth_refresh_tokensGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Oauth_refresh_tokensGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Oauth_refresh_tokensGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Oauth_refresh_tokensGroupByOutputType[P]>
            : GetScalarType<T[P], Oauth_refresh_tokensGroupByOutputType[P]>
        }
      >
    >


  export type oauth_refresh_tokensSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    access_token_id?: boolean
    revoked?: boolean
    expires_at?: boolean
  }, ExtArgs["result"]["oauth_refresh_tokens"]>

  export type oauth_refresh_tokensSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    access_token_id?: boolean
    revoked?: boolean
    expires_at?: boolean
  }, ExtArgs["result"]["oauth_refresh_tokens"]>

  export type oauth_refresh_tokensSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    access_token_id?: boolean
    revoked?: boolean
    expires_at?: boolean
  }, ExtArgs["result"]["oauth_refresh_tokens"]>

  export type oauth_refresh_tokensSelectScalar = {
    id?: boolean
    access_token_id?: boolean
    revoked?: boolean
    expires_at?: boolean
  }

  export type oauth_refresh_tokensOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "access_token_id" | "revoked" | "expires_at", ExtArgs["result"]["oauth_refresh_tokens"]>

  export type $oauth_refresh_tokensPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "oauth_refresh_tokens"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      access_token_id: string
      revoked: boolean
      expires_at: Date | null
    }, ExtArgs["result"]["oauth_refresh_tokens"]>
    composites: {}
  }

  type oauth_refresh_tokensGetPayload<S extends boolean | null | undefined | oauth_refresh_tokensDefaultArgs> = $Result.GetResult<Prisma.$oauth_refresh_tokensPayload, S>

  type oauth_refresh_tokensCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<oauth_refresh_tokensFindManyArgs, 'select' | 'include' | 'distinct' | 'omit' | 'relationLoadStrategy'> & {
      select?: Oauth_refresh_tokensCountAggregateInputType | true
    }

  export interface oauth_refresh_tokensDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['oauth_refresh_tokens'], meta: { name: 'oauth_refresh_tokens' } }
    /**
     * Find zero or one Oauth_refresh_tokens that matches the filter.
     * @param {oauth_refresh_tokensFindUniqueArgs} args - Arguments to find a Oauth_refresh_tokens
     * @example
     * // Get one Oauth_refresh_tokens
     * const oauth_refresh_tokens = await prisma.oauth_refresh_tokens.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends oauth_refresh_tokensFindUniqueArgs>(args: SelectSubset<T, oauth_refresh_tokensFindUniqueArgs<ExtArgs>>): Prisma__oauth_refresh_tokensClient<$Result.GetResult<Prisma.$oauth_refresh_tokensPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Oauth_refresh_tokens that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {oauth_refresh_tokensFindUniqueOrThrowArgs} args - Arguments to find a Oauth_refresh_tokens
     * @example
     * // Get one Oauth_refresh_tokens
     * const oauth_refresh_tokens = await prisma.oauth_refresh_tokens.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends oauth_refresh_tokensFindUniqueOrThrowArgs>(args: SelectSubset<T, oauth_refresh_tokensFindUniqueOrThrowArgs<ExtArgs>>): Prisma__oauth_refresh_tokensClient<$Result.GetResult<Prisma.$oauth_refresh_tokensPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Oauth_refresh_tokens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {oauth_refresh_tokensFindFirstArgs} args - Arguments to find a Oauth_refresh_tokens
     * @example
     * // Get one Oauth_refresh_tokens
     * const oauth_refresh_tokens = await prisma.oauth_refresh_tokens.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends oauth_refresh_tokensFindFirstArgs>(args?: SelectSubset<T, oauth_refresh_tokensFindFirstArgs<ExtArgs>>): Prisma__oauth_refresh_tokensClient<$Result.GetResult<Prisma.$oauth_refresh_tokensPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Oauth_refresh_tokens that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {oauth_refresh_tokensFindFirstOrThrowArgs} args - Arguments to find a Oauth_refresh_tokens
     * @example
     * // Get one Oauth_refresh_tokens
     * const oauth_refresh_tokens = await prisma.oauth_refresh_tokens.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends oauth_refresh_tokensFindFirstOrThrowArgs>(args?: SelectSubset<T, oauth_refresh_tokensFindFirstOrThrowArgs<ExtArgs>>): Prisma__oauth_refresh_tokensClient<$Result.GetResult<Prisma.$oauth_refresh_tokensPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Oauth_refresh_tokens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {oauth_refresh_tokensFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Oauth_refresh_tokens
     * const oauth_refresh_tokens = await prisma.oauth_refresh_tokens.findMany()
     * 
     * // Get first 10 Oauth_refresh_tokens
     * const oauth_refresh_tokens = await prisma.oauth_refresh_tokens.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const oauth_refresh_tokensWithIdOnly = await prisma.oauth_refresh_tokens.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends oauth_refresh_tokensFindManyArgs>(args?: SelectSubset<T, oauth_refresh_tokensFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$oauth_refresh_tokensPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Oauth_refresh_tokens.
     * @param {oauth_refresh_tokensCreateArgs} args - Arguments to create a Oauth_refresh_tokens.
     * @example
     * // Create one Oauth_refresh_tokens
     * const Oauth_refresh_tokens = await prisma.oauth_refresh_tokens.create({
     *   data: {
     *     // ... data to create a Oauth_refresh_tokens
     *   }
     * })
     * 
     */
    create<T extends oauth_refresh_tokensCreateArgs>(args: SelectSubset<T, oauth_refresh_tokensCreateArgs<ExtArgs>>): Prisma__oauth_refresh_tokensClient<$Result.GetResult<Prisma.$oauth_refresh_tokensPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Oauth_refresh_tokens.
     * @param {oauth_refresh_tokensCreateManyArgs} args - Arguments to create many Oauth_refresh_tokens.
     * @example
     * // Create many Oauth_refresh_tokens
     * const oauth_refresh_tokens = await prisma.oauth_refresh_tokens.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends oauth_refresh_tokensCreateManyArgs>(args?: SelectSubset<T, oauth_refresh_tokensCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Oauth_refresh_tokens and returns the data saved in the database.
     * @param {oauth_refresh_tokensCreateManyAndReturnArgs} args - Arguments to create many Oauth_refresh_tokens.
     * @example
     * // Create many Oauth_refresh_tokens
     * const oauth_refresh_tokens = await prisma.oauth_refresh_tokens.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Oauth_refresh_tokens and only return the `id`
     * const oauth_refresh_tokensWithIdOnly = await prisma.oauth_refresh_tokens.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends oauth_refresh_tokensCreateManyAndReturnArgs>(args?: SelectSubset<T, oauth_refresh_tokensCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$oauth_refresh_tokensPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Oauth_refresh_tokens.
     * @param {oauth_refresh_tokensDeleteArgs} args - Arguments to delete one Oauth_refresh_tokens.
     * @example
     * // Delete one Oauth_refresh_tokens
     * const Oauth_refresh_tokens = await prisma.oauth_refresh_tokens.delete({
     *   where: {
     *     // ... filter to delete one Oauth_refresh_tokens
     *   }
     * })
     * 
     */
    delete<T extends oauth_refresh_tokensDeleteArgs>(args: SelectSubset<T, oauth_refresh_tokensDeleteArgs<ExtArgs>>): Prisma__oauth_refresh_tokensClient<$Result.GetResult<Prisma.$oauth_refresh_tokensPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Oauth_refresh_tokens.
     * @param {oauth_refresh_tokensUpdateArgs} args - Arguments to update one Oauth_refresh_tokens.
     * @example
     * // Update one Oauth_refresh_tokens
     * const oauth_refresh_tokens = await prisma.oauth_refresh_tokens.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends oauth_refresh_tokensUpdateArgs>(args: SelectSubset<T, oauth_refresh_tokensUpdateArgs<ExtArgs>>): Prisma__oauth_refresh_tokensClient<$Result.GetResult<Prisma.$oauth_refresh_tokensPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Oauth_refresh_tokens.
     * @param {oauth_refresh_tokensDeleteManyArgs} args - Arguments to filter Oauth_refresh_tokens to delete.
     * @example
     * // Delete a few Oauth_refresh_tokens
     * const { count } = await prisma.oauth_refresh_tokens.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends oauth_refresh_tokensDeleteManyArgs>(args?: SelectSubset<T, oauth_refresh_tokensDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Oauth_refresh_tokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {oauth_refresh_tokensUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Oauth_refresh_tokens
     * const oauth_refresh_tokens = await prisma.oauth_refresh_tokens.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends oauth_refresh_tokensUpdateManyArgs>(args: SelectSubset<T, oauth_refresh_tokensUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Oauth_refresh_tokens and returns the data updated in the database.
     * @param {oauth_refresh_tokensUpdateManyAndReturnArgs} args - Arguments to update many Oauth_refresh_tokens.
     * @example
     * // Update many Oauth_refresh_tokens
     * const oauth_refresh_tokens = await prisma.oauth_refresh_tokens.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Oauth_refresh_tokens and only return the `id`
     * const oauth_refresh_tokensWithIdOnly = await prisma.oauth_refresh_tokens.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends oauth_refresh_tokensUpdateManyAndReturnArgs>(args: SelectSubset<T, oauth_refresh_tokensUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$oauth_refresh_tokensPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Oauth_refresh_tokens.
     * @param {oauth_refresh_tokensUpsertArgs} args - Arguments to update or create a Oauth_refresh_tokens.
     * @example
     * // Update or create a Oauth_refresh_tokens
     * const oauth_refresh_tokens = await prisma.oauth_refresh_tokens.upsert({
     *   create: {
     *     // ... data to create a Oauth_refresh_tokens
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Oauth_refresh_tokens we want to update
     *   }
     * })
     */
    upsert<T extends oauth_refresh_tokensUpsertArgs>(args: SelectSubset<T, oauth_refresh_tokensUpsertArgs<ExtArgs>>): Prisma__oauth_refresh_tokensClient<$Result.GetResult<Prisma.$oauth_refresh_tokensPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Oauth_refresh_tokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {oauth_refresh_tokensCountArgs} args - Arguments to filter Oauth_refresh_tokens to count.
     * @example
     * // Count the number of Oauth_refresh_tokens
     * const count = await prisma.oauth_refresh_tokens.count({
     *   where: {
     *     // ... the filter for the Oauth_refresh_tokens we want to count
     *   }
     * })
    **/
    count<T extends oauth_refresh_tokensCountArgs>(
      args?: Subset<T, oauth_refresh_tokensCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Oauth_refresh_tokensCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Oauth_refresh_tokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Oauth_refresh_tokensAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Oauth_refresh_tokensAggregateArgs>(args: Subset<T, Oauth_refresh_tokensAggregateArgs>): Prisma.PrismaPromise<GetOauth_refresh_tokensAggregateType<T>>

    /**
     * Group by Oauth_refresh_tokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {oauth_refresh_tokensGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends oauth_refresh_tokensGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: oauth_refresh_tokensGroupByArgs['orderBy'] }
        : { orderBy?: oauth_refresh_tokensGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, oauth_refresh_tokensGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOauth_refresh_tokensGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the oauth_refresh_tokens model
   */
  readonly fields: oauth_refresh_tokensFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for oauth_refresh_tokens.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__oauth_refresh_tokensClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the oauth_refresh_tokens model
   */ 
  interface oauth_refresh_tokensFieldRefs {
    readonly id: FieldRef<"oauth_refresh_tokens", 'String'>
    readonly access_token_id: FieldRef<"oauth_refresh_tokens", 'String'>
    readonly revoked: FieldRef<"oauth_refresh_tokens", 'Boolean'>
    readonly expires_at: FieldRef<"oauth_refresh_tokens", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * oauth_refresh_tokens findUnique
   */
  export type oauth_refresh_tokensFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the oauth_refresh_tokens
     */
    select?: oauth_refresh_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the oauth_refresh_tokens
     */
    omit?: oauth_refresh_tokensOmit<ExtArgs> | null
    /**
     * Filter, which oauth_refresh_tokens to fetch.
     */
    where: oauth_refresh_tokensWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * oauth_refresh_tokens findUniqueOrThrow
   */
  export type oauth_refresh_tokensFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the oauth_refresh_tokens
     */
    select?: oauth_refresh_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the oauth_refresh_tokens
     */
    omit?: oauth_refresh_tokensOmit<ExtArgs> | null
    /**
     * Filter, which oauth_refresh_tokens to fetch.
     */
    where: oauth_refresh_tokensWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * oauth_refresh_tokens findFirst
   */
  export type oauth_refresh_tokensFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the oauth_refresh_tokens
     */
    select?: oauth_refresh_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the oauth_refresh_tokens
     */
    omit?: oauth_refresh_tokensOmit<ExtArgs> | null
    /**
     * Filter, which oauth_refresh_tokens to fetch.
     */
    where?: oauth_refresh_tokensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of oauth_refresh_tokens to fetch.
     */
    orderBy?: oauth_refresh_tokensOrderByWithRelationInput | oauth_refresh_tokensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for oauth_refresh_tokens.
     */
    cursor?: oauth_refresh_tokensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` oauth_refresh_tokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` oauth_refresh_tokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of oauth_refresh_tokens.
     */
    distinct?: Oauth_refresh_tokensScalarFieldEnum | Oauth_refresh_tokensScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * oauth_refresh_tokens findFirstOrThrow
   */
  export type oauth_refresh_tokensFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the oauth_refresh_tokens
     */
    select?: oauth_refresh_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the oauth_refresh_tokens
     */
    omit?: oauth_refresh_tokensOmit<ExtArgs> | null
    /**
     * Filter, which oauth_refresh_tokens to fetch.
     */
    where?: oauth_refresh_tokensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of oauth_refresh_tokens to fetch.
     */
    orderBy?: oauth_refresh_tokensOrderByWithRelationInput | oauth_refresh_tokensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for oauth_refresh_tokens.
     */
    cursor?: oauth_refresh_tokensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` oauth_refresh_tokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` oauth_refresh_tokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of oauth_refresh_tokens.
     */
    distinct?: Oauth_refresh_tokensScalarFieldEnum | Oauth_refresh_tokensScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * oauth_refresh_tokens findMany
   */
  export type oauth_refresh_tokensFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the oauth_refresh_tokens
     */
    select?: oauth_refresh_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the oauth_refresh_tokens
     */
    omit?: oauth_refresh_tokensOmit<ExtArgs> | null
    /**
     * Filter, which oauth_refresh_tokens to fetch.
     */
    where?: oauth_refresh_tokensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of oauth_refresh_tokens to fetch.
     */
    orderBy?: oauth_refresh_tokensOrderByWithRelationInput | oauth_refresh_tokensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing oauth_refresh_tokens.
     */
    cursor?: oauth_refresh_tokensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` oauth_refresh_tokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` oauth_refresh_tokens.
     */
    skip?: number
    distinct?: Oauth_refresh_tokensScalarFieldEnum | Oauth_refresh_tokensScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * oauth_refresh_tokens create
   */
  export type oauth_refresh_tokensCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the oauth_refresh_tokens
     */
    select?: oauth_refresh_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the oauth_refresh_tokens
     */
    omit?: oauth_refresh_tokensOmit<ExtArgs> | null
    /**
     * The data needed to create a oauth_refresh_tokens.
     */
    data: XOR<oauth_refresh_tokensCreateInput, oauth_refresh_tokensUncheckedCreateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * oauth_refresh_tokens createMany
   */
  export type oauth_refresh_tokensCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many oauth_refresh_tokens.
     */
    data: oauth_refresh_tokensCreateManyInput | oauth_refresh_tokensCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * oauth_refresh_tokens createManyAndReturn
   */
  export type oauth_refresh_tokensCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the oauth_refresh_tokens
     */
    select?: oauth_refresh_tokensSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the oauth_refresh_tokens
     */
    omit?: oauth_refresh_tokensOmit<ExtArgs> | null
    /**
     * The data used to create many oauth_refresh_tokens.
     */
    data: oauth_refresh_tokensCreateManyInput | oauth_refresh_tokensCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * oauth_refresh_tokens update
   */
  export type oauth_refresh_tokensUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the oauth_refresh_tokens
     */
    select?: oauth_refresh_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the oauth_refresh_tokens
     */
    omit?: oauth_refresh_tokensOmit<ExtArgs> | null
    /**
     * The data needed to update a oauth_refresh_tokens.
     */
    data: XOR<oauth_refresh_tokensUpdateInput, oauth_refresh_tokensUncheckedUpdateInput>
    /**
     * Choose, which oauth_refresh_tokens to update.
     */
    where: oauth_refresh_tokensWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * oauth_refresh_tokens updateMany
   */
  export type oauth_refresh_tokensUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update oauth_refresh_tokens.
     */
    data: XOR<oauth_refresh_tokensUpdateManyMutationInput, oauth_refresh_tokensUncheckedUpdateManyInput>
    /**
     * Filter which oauth_refresh_tokens to update
     */
    where?: oauth_refresh_tokensWhereInput
    /**
     * Limit how many oauth_refresh_tokens to update.
     */
    limit?: number
  }

  /**
   * oauth_refresh_tokens updateManyAndReturn
   */
  export type oauth_refresh_tokensUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the oauth_refresh_tokens
     */
    select?: oauth_refresh_tokensSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the oauth_refresh_tokens
     */
    omit?: oauth_refresh_tokensOmit<ExtArgs> | null
    /**
     * The data used to update oauth_refresh_tokens.
     */
    data: XOR<oauth_refresh_tokensUpdateManyMutationInput, oauth_refresh_tokensUncheckedUpdateManyInput>
    /**
     * Filter which oauth_refresh_tokens to update
     */
    where?: oauth_refresh_tokensWhereInput
    /**
     * Limit how many oauth_refresh_tokens to update.
     */
    limit?: number
  }

  /**
   * oauth_refresh_tokens upsert
   */
  export type oauth_refresh_tokensUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the oauth_refresh_tokens
     */
    select?: oauth_refresh_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the oauth_refresh_tokens
     */
    omit?: oauth_refresh_tokensOmit<ExtArgs> | null
    /**
     * The filter to search for the oauth_refresh_tokens to update in case it exists.
     */
    where: oauth_refresh_tokensWhereUniqueInput
    /**
     * In case the oauth_refresh_tokens found by the `where` argument doesn't exist, create a new oauth_refresh_tokens with this data.
     */
    create: XOR<oauth_refresh_tokensCreateInput, oauth_refresh_tokensUncheckedCreateInput>
    /**
     * In case the oauth_refresh_tokens was found with the provided `where` argument, update it with this data.
     */
    update: XOR<oauth_refresh_tokensUpdateInput, oauth_refresh_tokensUncheckedUpdateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * oauth_refresh_tokens delete
   */
  export type oauth_refresh_tokensDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the oauth_refresh_tokens
     */
    select?: oauth_refresh_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the oauth_refresh_tokens
     */
    omit?: oauth_refresh_tokensOmit<ExtArgs> | null
    /**
     * Filter which oauth_refresh_tokens to delete.
     */
    where: oauth_refresh_tokensWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * oauth_refresh_tokens deleteMany
   */
  export type oauth_refresh_tokensDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which oauth_refresh_tokens to delete
     */
    where?: oauth_refresh_tokensWhereInput
    /**
     * Limit how many oauth_refresh_tokens to delete.
     */
    limit?: number
  }

  /**
   * oauth_refresh_tokens without action
   */
  export type oauth_refresh_tokensDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the oauth_refresh_tokens
     */
    select?: oauth_refresh_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the oauth_refresh_tokens
     */
    omit?: oauth_refresh_tokensOmit<ExtArgs> | null
  }


  /**
   * Model offer_categories
   */

  export type AggregateOffer_categories = {
    _count: Offer_categoriesCountAggregateOutputType | null
    _avg: Offer_categoriesAvgAggregateOutputType | null
    _sum: Offer_categoriesSumAggregateOutputType | null
    _min: Offer_categoriesMinAggregateOutputType | null
    _max: Offer_categoriesMaxAggregateOutputType | null
  }

  export type Offer_categoriesAvgAggregateOutputType = {
    id: number | null
    status: number | null
  }

  export type Offer_categoriesSumAggregateOutputType = {
    id: bigint | null
    status: number | null
  }

  export type Offer_categoriesMinAggregateOutputType = {
    id: bigint | null
    title: string | null
    icon: string | null
    description: string | null
    status: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Offer_categoriesMaxAggregateOutputType = {
    id: bigint | null
    title: string | null
    icon: string | null
    description: string | null
    status: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Offer_categoriesCountAggregateOutputType = {
    id: number
    title: number
    icon: number
    description: number
    status: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Offer_categoriesAvgAggregateInputType = {
    id?: true
    status?: true
  }

  export type Offer_categoriesSumAggregateInputType = {
    id?: true
    status?: true
  }

  export type Offer_categoriesMinAggregateInputType = {
    id?: true
    title?: true
    icon?: true
    description?: true
    status?: true
    created_at?: true
    updated_at?: true
  }

  export type Offer_categoriesMaxAggregateInputType = {
    id?: true
    title?: true
    icon?: true
    description?: true
    status?: true
    created_at?: true
    updated_at?: true
  }

  export type Offer_categoriesCountAggregateInputType = {
    id?: true
    title?: true
    icon?: true
    description?: true
    status?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Offer_categoriesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which offer_categories to aggregate.
     */
    where?: offer_categoriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of offer_categories to fetch.
     */
    orderBy?: offer_categoriesOrderByWithRelationInput | offer_categoriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: offer_categoriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` offer_categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` offer_categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned offer_categories
    **/
    _count?: true | Offer_categoriesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Offer_categoriesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Offer_categoriesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Offer_categoriesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Offer_categoriesMaxAggregateInputType
  }

  export type GetOffer_categoriesAggregateType<T extends Offer_categoriesAggregateArgs> = {
        [P in keyof T & keyof AggregateOffer_categories]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOffer_categories[P]>
      : GetScalarType<T[P], AggregateOffer_categories[P]>
  }




  export type offer_categoriesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: offer_categoriesWhereInput
    orderBy?: offer_categoriesOrderByWithAggregationInput | offer_categoriesOrderByWithAggregationInput[]
    by: Offer_categoriesScalarFieldEnum[] | Offer_categoriesScalarFieldEnum
    having?: offer_categoriesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Offer_categoriesCountAggregateInputType | true
    _avg?: Offer_categoriesAvgAggregateInputType
    _sum?: Offer_categoriesSumAggregateInputType
    _min?: Offer_categoriesMinAggregateInputType
    _max?: Offer_categoriesMaxAggregateInputType
  }

  export type Offer_categoriesGroupByOutputType = {
    id: bigint
    title: string
    icon: string | null
    description: string | null
    status: number
    created_at: Date | null
    updated_at: Date | null
    _count: Offer_categoriesCountAggregateOutputType | null
    _avg: Offer_categoriesAvgAggregateOutputType | null
    _sum: Offer_categoriesSumAggregateOutputType | null
    _min: Offer_categoriesMinAggregateOutputType | null
    _max: Offer_categoriesMaxAggregateOutputType | null
  }

  type GetOffer_categoriesGroupByPayload<T extends offer_categoriesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Offer_categoriesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Offer_categoriesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Offer_categoriesGroupByOutputType[P]>
            : GetScalarType<T[P], Offer_categoriesGroupByOutputType[P]>
        }
      >
    >


  export type offer_categoriesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    icon?: boolean
    description?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
    offers?: boolean | offer_categories$offersArgs<ExtArgs>
    providers?: boolean | offer_categories$providersArgs<ExtArgs>
    _count?: boolean | Offer_categoriesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["offer_categories"]>

  export type offer_categoriesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    icon?: boolean
    description?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["offer_categories"]>

  export type offer_categoriesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    icon?: boolean
    description?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["offer_categories"]>

  export type offer_categoriesSelectScalar = {
    id?: boolean
    title?: boolean
    icon?: boolean
    description?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type offer_categoriesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "title" | "icon" | "description" | "status" | "created_at" | "updated_at", ExtArgs["result"]["offer_categories"]>
  export type offer_categoriesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    offers?: boolean | offer_categories$offersArgs<ExtArgs>
    providers?: boolean | offer_categories$providersArgs<ExtArgs>
    _count?: boolean | Offer_categoriesCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type offer_categoriesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type offer_categoriesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $offer_categoriesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "offer_categories"
    objects: {
      offers: Prisma.$offersPayload<ExtArgs>[]
      providers: Prisma.$providersPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      title: string
      icon: string | null
      description: string | null
      status: number
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["offer_categories"]>
    composites: {}
  }

  type offer_categoriesGetPayload<S extends boolean | null | undefined | offer_categoriesDefaultArgs> = $Result.GetResult<Prisma.$offer_categoriesPayload, S>

  type offer_categoriesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<offer_categoriesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit' | 'relationLoadStrategy'> & {
      select?: Offer_categoriesCountAggregateInputType | true
    }

  export interface offer_categoriesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['offer_categories'], meta: { name: 'offer_categories' } }
    /**
     * Find zero or one Offer_categories that matches the filter.
     * @param {offer_categoriesFindUniqueArgs} args - Arguments to find a Offer_categories
     * @example
     * // Get one Offer_categories
     * const offer_categories = await prisma.offer_categories.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends offer_categoriesFindUniqueArgs>(args: SelectSubset<T, offer_categoriesFindUniqueArgs<ExtArgs>>): Prisma__offer_categoriesClient<$Result.GetResult<Prisma.$offer_categoriesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Offer_categories that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {offer_categoriesFindUniqueOrThrowArgs} args - Arguments to find a Offer_categories
     * @example
     * // Get one Offer_categories
     * const offer_categories = await prisma.offer_categories.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends offer_categoriesFindUniqueOrThrowArgs>(args: SelectSubset<T, offer_categoriesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__offer_categoriesClient<$Result.GetResult<Prisma.$offer_categoriesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Offer_categories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {offer_categoriesFindFirstArgs} args - Arguments to find a Offer_categories
     * @example
     * // Get one Offer_categories
     * const offer_categories = await prisma.offer_categories.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends offer_categoriesFindFirstArgs>(args?: SelectSubset<T, offer_categoriesFindFirstArgs<ExtArgs>>): Prisma__offer_categoriesClient<$Result.GetResult<Prisma.$offer_categoriesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Offer_categories that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {offer_categoriesFindFirstOrThrowArgs} args - Arguments to find a Offer_categories
     * @example
     * // Get one Offer_categories
     * const offer_categories = await prisma.offer_categories.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends offer_categoriesFindFirstOrThrowArgs>(args?: SelectSubset<T, offer_categoriesFindFirstOrThrowArgs<ExtArgs>>): Prisma__offer_categoriesClient<$Result.GetResult<Prisma.$offer_categoriesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Offer_categories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {offer_categoriesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Offer_categories
     * const offer_categories = await prisma.offer_categories.findMany()
     * 
     * // Get first 10 Offer_categories
     * const offer_categories = await prisma.offer_categories.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const offer_categoriesWithIdOnly = await prisma.offer_categories.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends offer_categoriesFindManyArgs>(args?: SelectSubset<T, offer_categoriesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$offer_categoriesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Offer_categories.
     * @param {offer_categoriesCreateArgs} args - Arguments to create a Offer_categories.
     * @example
     * // Create one Offer_categories
     * const Offer_categories = await prisma.offer_categories.create({
     *   data: {
     *     // ... data to create a Offer_categories
     *   }
     * })
     * 
     */
    create<T extends offer_categoriesCreateArgs>(args: SelectSubset<T, offer_categoriesCreateArgs<ExtArgs>>): Prisma__offer_categoriesClient<$Result.GetResult<Prisma.$offer_categoriesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Offer_categories.
     * @param {offer_categoriesCreateManyArgs} args - Arguments to create many Offer_categories.
     * @example
     * // Create many Offer_categories
     * const offer_categories = await prisma.offer_categories.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends offer_categoriesCreateManyArgs>(args?: SelectSubset<T, offer_categoriesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Offer_categories and returns the data saved in the database.
     * @param {offer_categoriesCreateManyAndReturnArgs} args - Arguments to create many Offer_categories.
     * @example
     * // Create many Offer_categories
     * const offer_categories = await prisma.offer_categories.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Offer_categories and only return the `id`
     * const offer_categoriesWithIdOnly = await prisma.offer_categories.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends offer_categoriesCreateManyAndReturnArgs>(args?: SelectSubset<T, offer_categoriesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$offer_categoriesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Offer_categories.
     * @param {offer_categoriesDeleteArgs} args - Arguments to delete one Offer_categories.
     * @example
     * // Delete one Offer_categories
     * const Offer_categories = await prisma.offer_categories.delete({
     *   where: {
     *     // ... filter to delete one Offer_categories
     *   }
     * })
     * 
     */
    delete<T extends offer_categoriesDeleteArgs>(args: SelectSubset<T, offer_categoriesDeleteArgs<ExtArgs>>): Prisma__offer_categoriesClient<$Result.GetResult<Prisma.$offer_categoriesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Offer_categories.
     * @param {offer_categoriesUpdateArgs} args - Arguments to update one Offer_categories.
     * @example
     * // Update one Offer_categories
     * const offer_categories = await prisma.offer_categories.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends offer_categoriesUpdateArgs>(args: SelectSubset<T, offer_categoriesUpdateArgs<ExtArgs>>): Prisma__offer_categoriesClient<$Result.GetResult<Prisma.$offer_categoriesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Offer_categories.
     * @param {offer_categoriesDeleteManyArgs} args - Arguments to filter Offer_categories to delete.
     * @example
     * // Delete a few Offer_categories
     * const { count } = await prisma.offer_categories.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends offer_categoriesDeleteManyArgs>(args?: SelectSubset<T, offer_categoriesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Offer_categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {offer_categoriesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Offer_categories
     * const offer_categories = await prisma.offer_categories.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends offer_categoriesUpdateManyArgs>(args: SelectSubset<T, offer_categoriesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Offer_categories and returns the data updated in the database.
     * @param {offer_categoriesUpdateManyAndReturnArgs} args - Arguments to update many Offer_categories.
     * @example
     * // Update many Offer_categories
     * const offer_categories = await prisma.offer_categories.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Offer_categories and only return the `id`
     * const offer_categoriesWithIdOnly = await prisma.offer_categories.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends offer_categoriesUpdateManyAndReturnArgs>(args: SelectSubset<T, offer_categoriesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$offer_categoriesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Offer_categories.
     * @param {offer_categoriesUpsertArgs} args - Arguments to update or create a Offer_categories.
     * @example
     * // Update or create a Offer_categories
     * const offer_categories = await prisma.offer_categories.upsert({
     *   create: {
     *     // ... data to create a Offer_categories
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Offer_categories we want to update
     *   }
     * })
     */
    upsert<T extends offer_categoriesUpsertArgs>(args: SelectSubset<T, offer_categoriesUpsertArgs<ExtArgs>>): Prisma__offer_categoriesClient<$Result.GetResult<Prisma.$offer_categoriesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Offer_categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {offer_categoriesCountArgs} args - Arguments to filter Offer_categories to count.
     * @example
     * // Count the number of Offer_categories
     * const count = await prisma.offer_categories.count({
     *   where: {
     *     // ... the filter for the Offer_categories we want to count
     *   }
     * })
    **/
    count<T extends offer_categoriesCountArgs>(
      args?: Subset<T, offer_categoriesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Offer_categoriesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Offer_categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Offer_categoriesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Offer_categoriesAggregateArgs>(args: Subset<T, Offer_categoriesAggregateArgs>): Prisma.PrismaPromise<GetOffer_categoriesAggregateType<T>>

    /**
     * Group by Offer_categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {offer_categoriesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends offer_categoriesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: offer_categoriesGroupByArgs['orderBy'] }
        : { orderBy?: offer_categoriesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, offer_categoriesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOffer_categoriesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the offer_categories model
   */
  readonly fields: offer_categoriesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for offer_categories.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__offer_categoriesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    offers<T extends offer_categories$offersArgs<ExtArgs> = {}>(args?: Subset<T, offer_categories$offersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$offersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    providers<T extends offer_categories$providersArgs<ExtArgs> = {}>(args?: Subset<T, offer_categories$providersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$providersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the offer_categories model
   */ 
  interface offer_categoriesFieldRefs {
    readonly id: FieldRef<"offer_categories", 'BigInt'>
    readonly title: FieldRef<"offer_categories", 'String'>
    readonly icon: FieldRef<"offer_categories", 'String'>
    readonly description: FieldRef<"offer_categories", 'String'>
    readonly status: FieldRef<"offer_categories", 'Int'>
    readonly created_at: FieldRef<"offer_categories", 'DateTime'>
    readonly updated_at: FieldRef<"offer_categories", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * offer_categories findUnique
   */
  export type offer_categoriesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offer_categories
     */
    select?: offer_categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offer_categories
     */
    omit?: offer_categoriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: offer_categoriesInclude<ExtArgs> | null
    /**
     * Filter, which offer_categories to fetch.
     */
    where: offer_categoriesWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * offer_categories findUniqueOrThrow
   */
  export type offer_categoriesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offer_categories
     */
    select?: offer_categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offer_categories
     */
    omit?: offer_categoriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: offer_categoriesInclude<ExtArgs> | null
    /**
     * Filter, which offer_categories to fetch.
     */
    where: offer_categoriesWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * offer_categories findFirst
   */
  export type offer_categoriesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offer_categories
     */
    select?: offer_categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offer_categories
     */
    omit?: offer_categoriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: offer_categoriesInclude<ExtArgs> | null
    /**
     * Filter, which offer_categories to fetch.
     */
    where?: offer_categoriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of offer_categories to fetch.
     */
    orderBy?: offer_categoriesOrderByWithRelationInput | offer_categoriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for offer_categories.
     */
    cursor?: offer_categoriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` offer_categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` offer_categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of offer_categories.
     */
    distinct?: Offer_categoriesScalarFieldEnum | Offer_categoriesScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * offer_categories findFirstOrThrow
   */
  export type offer_categoriesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offer_categories
     */
    select?: offer_categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offer_categories
     */
    omit?: offer_categoriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: offer_categoriesInclude<ExtArgs> | null
    /**
     * Filter, which offer_categories to fetch.
     */
    where?: offer_categoriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of offer_categories to fetch.
     */
    orderBy?: offer_categoriesOrderByWithRelationInput | offer_categoriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for offer_categories.
     */
    cursor?: offer_categoriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` offer_categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` offer_categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of offer_categories.
     */
    distinct?: Offer_categoriesScalarFieldEnum | Offer_categoriesScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * offer_categories findMany
   */
  export type offer_categoriesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offer_categories
     */
    select?: offer_categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offer_categories
     */
    omit?: offer_categoriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: offer_categoriesInclude<ExtArgs> | null
    /**
     * Filter, which offer_categories to fetch.
     */
    where?: offer_categoriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of offer_categories to fetch.
     */
    orderBy?: offer_categoriesOrderByWithRelationInput | offer_categoriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing offer_categories.
     */
    cursor?: offer_categoriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` offer_categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` offer_categories.
     */
    skip?: number
    distinct?: Offer_categoriesScalarFieldEnum | Offer_categoriesScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * offer_categories create
   */
  export type offer_categoriesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offer_categories
     */
    select?: offer_categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offer_categories
     */
    omit?: offer_categoriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: offer_categoriesInclude<ExtArgs> | null
    /**
     * The data needed to create a offer_categories.
     */
    data: XOR<offer_categoriesCreateInput, offer_categoriesUncheckedCreateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * offer_categories createMany
   */
  export type offer_categoriesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many offer_categories.
     */
    data: offer_categoriesCreateManyInput | offer_categoriesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * offer_categories createManyAndReturn
   */
  export type offer_categoriesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offer_categories
     */
    select?: offer_categoriesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the offer_categories
     */
    omit?: offer_categoriesOmit<ExtArgs> | null
    /**
     * The data used to create many offer_categories.
     */
    data: offer_categoriesCreateManyInput | offer_categoriesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * offer_categories update
   */
  export type offer_categoriesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offer_categories
     */
    select?: offer_categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offer_categories
     */
    omit?: offer_categoriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: offer_categoriesInclude<ExtArgs> | null
    /**
     * The data needed to update a offer_categories.
     */
    data: XOR<offer_categoriesUpdateInput, offer_categoriesUncheckedUpdateInput>
    /**
     * Choose, which offer_categories to update.
     */
    where: offer_categoriesWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * offer_categories updateMany
   */
  export type offer_categoriesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update offer_categories.
     */
    data: XOR<offer_categoriesUpdateManyMutationInput, offer_categoriesUncheckedUpdateManyInput>
    /**
     * Filter which offer_categories to update
     */
    where?: offer_categoriesWhereInput
    /**
     * Limit how many offer_categories to update.
     */
    limit?: number
  }

  /**
   * offer_categories updateManyAndReturn
   */
  export type offer_categoriesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offer_categories
     */
    select?: offer_categoriesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the offer_categories
     */
    omit?: offer_categoriesOmit<ExtArgs> | null
    /**
     * The data used to update offer_categories.
     */
    data: XOR<offer_categoriesUpdateManyMutationInput, offer_categoriesUncheckedUpdateManyInput>
    /**
     * Filter which offer_categories to update
     */
    where?: offer_categoriesWhereInput
    /**
     * Limit how many offer_categories to update.
     */
    limit?: number
  }

  /**
   * offer_categories upsert
   */
  export type offer_categoriesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offer_categories
     */
    select?: offer_categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offer_categories
     */
    omit?: offer_categoriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: offer_categoriesInclude<ExtArgs> | null
    /**
     * The filter to search for the offer_categories to update in case it exists.
     */
    where: offer_categoriesWhereUniqueInput
    /**
     * In case the offer_categories found by the `where` argument doesn't exist, create a new offer_categories with this data.
     */
    create: XOR<offer_categoriesCreateInput, offer_categoriesUncheckedCreateInput>
    /**
     * In case the offer_categories was found with the provided `where` argument, update it with this data.
     */
    update: XOR<offer_categoriesUpdateInput, offer_categoriesUncheckedUpdateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * offer_categories delete
   */
  export type offer_categoriesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offer_categories
     */
    select?: offer_categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offer_categories
     */
    omit?: offer_categoriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: offer_categoriesInclude<ExtArgs> | null
    /**
     * Filter which offer_categories to delete.
     */
    where: offer_categoriesWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * offer_categories deleteMany
   */
  export type offer_categoriesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which offer_categories to delete
     */
    where?: offer_categoriesWhereInput
    /**
     * Limit how many offer_categories to delete.
     */
    limit?: number
  }

  /**
   * offer_categories.offers
   */
  export type offer_categories$offersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offers
     */
    select?: offersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offers
     */
    omit?: offersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: offersInclude<ExtArgs> | null
    where?: offersWhereInput
    orderBy?: offersOrderByWithRelationInput | offersOrderByWithRelationInput[]
    cursor?: offersWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OffersScalarFieldEnum | OffersScalarFieldEnum[]
  }

  /**
   * offer_categories.providers
   */
  export type offer_categories$providersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the providers
     */
    select?: providersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the providers
     */
    omit?: providersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: providersInclude<ExtArgs> | null
    where?: providersWhereInput
    orderBy?: providersOrderByWithRelationInput | providersOrderByWithRelationInput[]
    cursor?: providersWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProvidersScalarFieldEnum | ProvidersScalarFieldEnum[]
  }

  /**
   * offer_categories without action
   */
  export type offer_categoriesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offer_categories
     */
    select?: offer_categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offer_categories
     */
    omit?: offer_categoriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: offer_categoriesInclude<ExtArgs> | null
  }


  /**
   * Model offers
   */

  export type AggregateOffers = {
    _count: OffersCountAggregateOutputType | null
    _avg: OffersAvgAggregateOutputType | null
    _sum: OffersSumAggregateOutputType | null
    _min: OffersMinAggregateOutputType | null
    _max: OffersMaxAggregateOutputType | null
  }

  export type OffersAvgAggregateOutputType = {
    id: number | null
    category_id: number | null
    price: Decimal | null
  }

  export type OffersSumAggregateOutputType = {
    id: bigint | null
    category_id: bigint | null
    price: Decimal | null
  }

  export type OffersMinAggregateOutputType = {
    id: bigint | null
    category_id: bigint | null
    title: string | null
    icon: string | null
    description: string | null
    price: Decimal | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type OffersMaxAggregateOutputType = {
    id: bigint | null
    category_id: bigint | null
    title: string | null
    icon: string | null
    description: string | null
    price: Decimal | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type OffersCountAggregateOutputType = {
    id: number
    category_id: number
    title: number
    icon: number
    description: number
    price: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type OffersAvgAggregateInputType = {
    id?: true
    category_id?: true
    price?: true
  }

  export type OffersSumAggregateInputType = {
    id?: true
    category_id?: true
    price?: true
  }

  export type OffersMinAggregateInputType = {
    id?: true
    category_id?: true
    title?: true
    icon?: true
    description?: true
    price?: true
    created_at?: true
    updated_at?: true
  }

  export type OffersMaxAggregateInputType = {
    id?: true
    category_id?: true
    title?: true
    icon?: true
    description?: true
    price?: true
    created_at?: true
    updated_at?: true
  }

  export type OffersCountAggregateInputType = {
    id?: true
    category_id?: true
    title?: true
    icon?: true
    description?: true
    price?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type OffersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which offers to aggregate.
     */
    where?: offersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of offers to fetch.
     */
    orderBy?: offersOrderByWithRelationInput | offersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: offersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` offers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` offers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned offers
    **/
    _count?: true | OffersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: OffersAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: OffersSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OffersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OffersMaxAggregateInputType
  }

  export type GetOffersAggregateType<T extends OffersAggregateArgs> = {
        [P in keyof T & keyof AggregateOffers]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOffers[P]>
      : GetScalarType<T[P], AggregateOffers[P]>
  }




  export type offersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: offersWhereInput
    orderBy?: offersOrderByWithAggregationInput | offersOrderByWithAggregationInput[]
    by: OffersScalarFieldEnum[] | OffersScalarFieldEnum
    having?: offersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OffersCountAggregateInputType | true
    _avg?: OffersAvgAggregateInputType
    _sum?: OffersSumAggregateInputType
    _min?: OffersMinAggregateInputType
    _max?: OffersMaxAggregateInputType
  }

  export type OffersGroupByOutputType = {
    id: bigint
    category_id: bigint
    title: string
    icon: string | null
    description: string | null
    price: Decimal | null
    created_at: Date | null
    updated_at: Date | null
    _count: OffersCountAggregateOutputType | null
    _avg: OffersAvgAggregateOutputType | null
    _sum: OffersSumAggregateOutputType | null
    _min: OffersMinAggregateOutputType | null
    _max: OffersMaxAggregateOutputType | null
  }

  type GetOffersGroupByPayload<T extends offersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OffersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OffersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OffersGroupByOutputType[P]>
            : GetScalarType<T[P], OffersGroupByOutputType[P]>
        }
      >
    >


  export type offersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    category_id?: boolean
    title?: boolean
    icon?: boolean
    description?: boolean
    price?: boolean
    created_at?: boolean
    updated_at?: boolean
    offer_categories?: boolean | offer_categoriesDefaultArgs<ExtArgs>
    provider_offers?: boolean | offers$provider_offersArgs<ExtArgs>
    subscription_plan_offers?: boolean | offers$subscription_plan_offersArgs<ExtArgs>
    subscription_usages?: boolean | offers$subscription_usagesArgs<ExtArgs>
    _count?: boolean | OffersCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["offers"]>

  export type offersSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    category_id?: boolean
    title?: boolean
    icon?: boolean
    description?: boolean
    price?: boolean
    created_at?: boolean
    updated_at?: boolean
    offer_categories?: boolean | offer_categoriesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["offers"]>

  export type offersSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    category_id?: boolean
    title?: boolean
    icon?: boolean
    description?: boolean
    price?: boolean
    created_at?: boolean
    updated_at?: boolean
    offer_categories?: boolean | offer_categoriesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["offers"]>

  export type offersSelectScalar = {
    id?: boolean
    category_id?: boolean
    title?: boolean
    icon?: boolean
    description?: boolean
    price?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type offersOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "category_id" | "title" | "icon" | "description" | "price" | "created_at" | "updated_at", ExtArgs["result"]["offers"]>
  export type offersInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    offer_categories?: boolean | offer_categoriesDefaultArgs<ExtArgs>
    provider_offers?: boolean | offers$provider_offersArgs<ExtArgs>
    subscription_plan_offers?: boolean | offers$subscription_plan_offersArgs<ExtArgs>
    subscription_usages?: boolean | offers$subscription_usagesArgs<ExtArgs>
    _count?: boolean | OffersCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type offersIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    offer_categories?: boolean | offer_categoriesDefaultArgs<ExtArgs>
  }
  export type offersIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    offer_categories?: boolean | offer_categoriesDefaultArgs<ExtArgs>
  }

  export type $offersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "offers"
    objects: {
      offer_categories: Prisma.$offer_categoriesPayload<ExtArgs>
      provider_offers: Prisma.$provider_offersPayload<ExtArgs>[]
      subscription_plan_offers: Prisma.$subscription_plan_offersPayload<ExtArgs>[]
      subscription_usages: Prisma.$subscription_usagesPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      category_id: bigint
      title: string
      icon: string | null
      description: string | null
      price: Prisma.Decimal | null
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["offers"]>
    composites: {}
  }

  type offersGetPayload<S extends boolean | null | undefined | offersDefaultArgs> = $Result.GetResult<Prisma.$offersPayload, S>

  type offersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<offersFindManyArgs, 'select' | 'include' | 'distinct' | 'omit' | 'relationLoadStrategy'> & {
      select?: OffersCountAggregateInputType | true
    }

  export interface offersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['offers'], meta: { name: 'offers' } }
    /**
     * Find zero or one Offers that matches the filter.
     * @param {offersFindUniqueArgs} args - Arguments to find a Offers
     * @example
     * // Get one Offers
     * const offers = await prisma.offers.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends offersFindUniqueArgs>(args: SelectSubset<T, offersFindUniqueArgs<ExtArgs>>): Prisma__offersClient<$Result.GetResult<Prisma.$offersPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Offers that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {offersFindUniqueOrThrowArgs} args - Arguments to find a Offers
     * @example
     * // Get one Offers
     * const offers = await prisma.offers.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends offersFindUniqueOrThrowArgs>(args: SelectSubset<T, offersFindUniqueOrThrowArgs<ExtArgs>>): Prisma__offersClient<$Result.GetResult<Prisma.$offersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Offers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {offersFindFirstArgs} args - Arguments to find a Offers
     * @example
     * // Get one Offers
     * const offers = await prisma.offers.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends offersFindFirstArgs>(args?: SelectSubset<T, offersFindFirstArgs<ExtArgs>>): Prisma__offersClient<$Result.GetResult<Prisma.$offersPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Offers that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {offersFindFirstOrThrowArgs} args - Arguments to find a Offers
     * @example
     * // Get one Offers
     * const offers = await prisma.offers.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends offersFindFirstOrThrowArgs>(args?: SelectSubset<T, offersFindFirstOrThrowArgs<ExtArgs>>): Prisma__offersClient<$Result.GetResult<Prisma.$offersPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Offers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {offersFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Offers
     * const offers = await prisma.offers.findMany()
     * 
     * // Get first 10 Offers
     * const offers = await prisma.offers.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const offersWithIdOnly = await prisma.offers.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends offersFindManyArgs>(args?: SelectSubset<T, offersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$offersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Offers.
     * @param {offersCreateArgs} args - Arguments to create a Offers.
     * @example
     * // Create one Offers
     * const Offers = await prisma.offers.create({
     *   data: {
     *     // ... data to create a Offers
     *   }
     * })
     * 
     */
    create<T extends offersCreateArgs>(args: SelectSubset<T, offersCreateArgs<ExtArgs>>): Prisma__offersClient<$Result.GetResult<Prisma.$offersPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Offers.
     * @param {offersCreateManyArgs} args - Arguments to create many Offers.
     * @example
     * // Create many Offers
     * const offers = await prisma.offers.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends offersCreateManyArgs>(args?: SelectSubset<T, offersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Offers and returns the data saved in the database.
     * @param {offersCreateManyAndReturnArgs} args - Arguments to create many Offers.
     * @example
     * // Create many Offers
     * const offers = await prisma.offers.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Offers and only return the `id`
     * const offersWithIdOnly = await prisma.offers.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends offersCreateManyAndReturnArgs>(args?: SelectSubset<T, offersCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$offersPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Offers.
     * @param {offersDeleteArgs} args - Arguments to delete one Offers.
     * @example
     * // Delete one Offers
     * const Offers = await prisma.offers.delete({
     *   where: {
     *     // ... filter to delete one Offers
     *   }
     * })
     * 
     */
    delete<T extends offersDeleteArgs>(args: SelectSubset<T, offersDeleteArgs<ExtArgs>>): Prisma__offersClient<$Result.GetResult<Prisma.$offersPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Offers.
     * @param {offersUpdateArgs} args - Arguments to update one Offers.
     * @example
     * // Update one Offers
     * const offers = await prisma.offers.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends offersUpdateArgs>(args: SelectSubset<T, offersUpdateArgs<ExtArgs>>): Prisma__offersClient<$Result.GetResult<Prisma.$offersPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Offers.
     * @param {offersDeleteManyArgs} args - Arguments to filter Offers to delete.
     * @example
     * // Delete a few Offers
     * const { count } = await prisma.offers.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends offersDeleteManyArgs>(args?: SelectSubset<T, offersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Offers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {offersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Offers
     * const offers = await prisma.offers.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends offersUpdateManyArgs>(args: SelectSubset<T, offersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Offers and returns the data updated in the database.
     * @param {offersUpdateManyAndReturnArgs} args - Arguments to update many Offers.
     * @example
     * // Update many Offers
     * const offers = await prisma.offers.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Offers and only return the `id`
     * const offersWithIdOnly = await prisma.offers.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends offersUpdateManyAndReturnArgs>(args: SelectSubset<T, offersUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$offersPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Offers.
     * @param {offersUpsertArgs} args - Arguments to update or create a Offers.
     * @example
     * // Update or create a Offers
     * const offers = await prisma.offers.upsert({
     *   create: {
     *     // ... data to create a Offers
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Offers we want to update
     *   }
     * })
     */
    upsert<T extends offersUpsertArgs>(args: SelectSubset<T, offersUpsertArgs<ExtArgs>>): Prisma__offersClient<$Result.GetResult<Prisma.$offersPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Offers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {offersCountArgs} args - Arguments to filter Offers to count.
     * @example
     * // Count the number of Offers
     * const count = await prisma.offers.count({
     *   where: {
     *     // ... the filter for the Offers we want to count
     *   }
     * })
    **/
    count<T extends offersCountArgs>(
      args?: Subset<T, offersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OffersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Offers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OffersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OffersAggregateArgs>(args: Subset<T, OffersAggregateArgs>): Prisma.PrismaPromise<GetOffersAggregateType<T>>

    /**
     * Group by Offers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {offersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends offersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: offersGroupByArgs['orderBy'] }
        : { orderBy?: offersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, offersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOffersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the offers model
   */
  readonly fields: offersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for offers.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__offersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    offer_categories<T extends offer_categoriesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, offer_categoriesDefaultArgs<ExtArgs>>): Prisma__offer_categoriesClient<$Result.GetResult<Prisma.$offer_categoriesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    provider_offers<T extends offers$provider_offersArgs<ExtArgs> = {}>(args?: Subset<T, offers$provider_offersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$provider_offersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    subscription_plan_offers<T extends offers$subscription_plan_offersArgs<ExtArgs> = {}>(args?: Subset<T, offers$subscription_plan_offersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$subscription_plan_offersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    subscription_usages<T extends offers$subscription_usagesArgs<ExtArgs> = {}>(args?: Subset<T, offers$subscription_usagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$subscription_usagesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the offers model
   */ 
  interface offersFieldRefs {
    readonly id: FieldRef<"offers", 'BigInt'>
    readonly category_id: FieldRef<"offers", 'BigInt'>
    readonly title: FieldRef<"offers", 'String'>
    readonly icon: FieldRef<"offers", 'String'>
    readonly description: FieldRef<"offers", 'String'>
    readonly price: FieldRef<"offers", 'Decimal'>
    readonly created_at: FieldRef<"offers", 'DateTime'>
    readonly updated_at: FieldRef<"offers", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * offers findUnique
   */
  export type offersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offers
     */
    select?: offersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offers
     */
    omit?: offersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: offersInclude<ExtArgs> | null
    /**
     * Filter, which offers to fetch.
     */
    where: offersWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * offers findUniqueOrThrow
   */
  export type offersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offers
     */
    select?: offersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offers
     */
    omit?: offersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: offersInclude<ExtArgs> | null
    /**
     * Filter, which offers to fetch.
     */
    where: offersWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * offers findFirst
   */
  export type offersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offers
     */
    select?: offersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offers
     */
    omit?: offersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: offersInclude<ExtArgs> | null
    /**
     * Filter, which offers to fetch.
     */
    where?: offersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of offers to fetch.
     */
    orderBy?: offersOrderByWithRelationInput | offersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for offers.
     */
    cursor?: offersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` offers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` offers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of offers.
     */
    distinct?: OffersScalarFieldEnum | OffersScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * offers findFirstOrThrow
   */
  export type offersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offers
     */
    select?: offersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offers
     */
    omit?: offersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: offersInclude<ExtArgs> | null
    /**
     * Filter, which offers to fetch.
     */
    where?: offersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of offers to fetch.
     */
    orderBy?: offersOrderByWithRelationInput | offersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for offers.
     */
    cursor?: offersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` offers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` offers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of offers.
     */
    distinct?: OffersScalarFieldEnum | OffersScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * offers findMany
   */
  export type offersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offers
     */
    select?: offersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offers
     */
    omit?: offersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: offersInclude<ExtArgs> | null
    /**
     * Filter, which offers to fetch.
     */
    where?: offersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of offers to fetch.
     */
    orderBy?: offersOrderByWithRelationInput | offersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing offers.
     */
    cursor?: offersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` offers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` offers.
     */
    skip?: number
    distinct?: OffersScalarFieldEnum | OffersScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * offers create
   */
  export type offersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offers
     */
    select?: offersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offers
     */
    omit?: offersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: offersInclude<ExtArgs> | null
    /**
     * The data needed to create a offers.
     */
    data: XOR<offersCreateInput, offersUncheckedCreateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * offers createMany
   */
  export type offersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many offers.
     */
    data: offersCreateManyInput | offersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * offers createManyAndReturn
   */
  export type offersCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offers
     */
    select?: offersSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the offers
     */
    omit?: offersOmit<ExtArgs> | null
    /**
     * The data used to create many offers.
     */
    data: offersCreateManyInput | offersCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: offersIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * offers update
   */
  export type offersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offers
     */
    select?: offersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offers
     */
    omit?: offersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: offersInclude<ExtArgs> | null
    /**
     * The data needed to update a offers.
     */
    data: XOR<offersUpdateInput, offersUncheckedUpdateInput>
    /**
     * Choose, which offers to update.
     */
    where: offersWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * offers updateMany
   */
  export type offersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update offers.
     */
    data: XOR<offersUpdateManyMutationInput, offersUncheckedUpdateManyInput>
    /**
     * Filter which offers to update
     */
    where?: offersWhereInput
    /**
     * Limit how many offers to update.
     */
    limit?: number
  }

  /**
   * offers updateManyAndReturn
   */
  export type offersUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offers
     */
    select?: offersSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the offers
     */
    omit?: offersOmit<ExtArgs> | null
    /**
     * The data used to update offers.
     */
    data: XOR<offersUpdateManyMutationInput, offersUncheckedUpdateManyInput>
    /**
     * Filter which offers to update
     */
    where?: offersWhereInput
    /**
     * Limit how many offers to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: offersIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * offers upsert
   */
  export type offersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offers
     */
    select?: offersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offers
     */
    omit?: offersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: offersInclude<ExtArgs> | null
    /**
     * The filter to search for the offers to update in case it exists.
     */
    where: offersWhereUniqueInput
    /**
     * In case the offers found by the `where` argument doesn't exist, create a new offers with this data.
     */
    create: XOR<offersCreateInput, offersUncheckedCreateInput>
    /**
     * In case the offers was found with the provided `where` argument, update it with this data.
     */
    update: XOR<offersUpdateInput, offersUncheckedUpdateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * offers delete
   */
  export type offersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offers
     */
    select?: offersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offers
     */
    omit?: offersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: offersInclude<ExtArgs> | null
    /**
     * Filter which offers to delete.
     */
    where: offersWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * offers deleteMany
   */
  export type offersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which offers to delete
     */
    where?: offersWhereInput
    /**
     * Limit how many offers to delete.
     */
    limit?: number
  }

  /**
   * offers.provider_offers
   */
  export type offers$provider_offersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the provider_offers
     */
    select?: provider_offersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the provider_offers
     */
    omit?: provider_offersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: provider_offersInclude<ExtArgs> | null
    where?: provider_offersWhereInput
    orderBy?: provider_offersOrderByWithRelationInput | provider_offersOrderByWithRelationInput[]
    cursor?: provider_offersWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Provider_offersScalarFieldEnum | Provider_offersScalarFieldEnum[]
  }

  /**
   * offers.subscription_plan_offers
   */
  export type offers$subscription_plan_offersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscription_plan_offers
     */
    select?: subscription_plan_offersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subscription_plan_offers
     */
    omit?: subscription_plan_offersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subscription_plan_offersInclude<ExtArgs> | null
    where?: subscription_plan_offersWhereInput
    orderBy?: subscription_plan_offersOrderByWithRelationInput | subscription_plan_offersOrderByWithRelationInput[]
    cursor?: subscription_plan_offersWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Subscription_plan_offersScalarFieldEnum | Subscription_plan_offersScalarFieldEnum[]
  }

  /**
   * offers.subscription_usages
   */
  export type offers$subscription_usagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscription_usages
     */
    select?: subscription_usagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subscription_usages
     */
    omit?: subscription_usagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subscription_usagesInclude<ExtArgs> | null
    where?: subscription_usagesWhereInput
    orderBy?: subscription_usagesOrderByWithRelationInput | subscription_usagesOrderByWithRelationInput[]
    cursor?: subscription_usagesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Subscription_usagesScalarFieldEnum | Subscription_usagesScalarFieldEnum[]
  }

  /**
   * offers without action
   */
  export type offersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the offers
     */
    select?: offersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the offers
     */
    omit?: offersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: offersInclude<ExtArgs> | null
  }


  /**
   * Model orders
   */

  export type AggregateOrders = {
    _count: OrdersCountAggregateOutputType | null
    _avg: OrdersAvgAggregateOutputType | null
    _sum: OrdersSumAggregateOutputType | null
    _min: OrdersMinAggregateOutputType | null
    _max: OrdersMaxAggregateOutputType | null
  }

  export type OrdersAvgAggregateOutputType = {
    id: number | null
    buyer_id: number | null
    purchasable_id: number | null
    amount: Decimal | null
    status: number | null
  }

  export type OrdersSumAggregateOutputType = {
    id: bigint | null
    buyer_id: bigint | null
    purchasable_id: bigint | null
    amount: Decimal | null
    status: number | null
  }

  export type OrdersMinAggregateOutputType = {
    id: bigint | null
    buyer_type: string | null
    buyer_id: bigint | null
    purchasable_type: string | null
    purchasable_id: bigint | null
    amount: Decimal | null
    status: number | null
    created_at: Date | null
    updated_at: Date | null
    tracking_code: string | null
  }

  export type OrdersMaxAggregateOutputType = {
    id: bigint | null
    buyer_type: string | null
    buyer_id: bigint | null
    purchasable_type: string | null
    purchasable_id: bigint | null
    amount: Decimal | null
    status: number | null
    created_at: Date | null
    updated_at: Date | null
    tracking_code: string | null
  }

  export type OrdersCountAggregateOutputType = {
    id: number
    buyer_type: number
    buyer_id: number
    purchasable_type: number
    purchasable_id: number
    amount: number
    status: number
    created_at: number
    updated_at: number
    tracking_code: number
    _all: number
  }


  export type OrdersAvgAggregateInputType = {
    id?: true
    buyer_id?: true
    purchasable_id?: true
    amount?: true
    status?: true
  }

  export type OrdersSumAggregateInputType = {
    id?: true
    buyer_id?: true
    purchasable_id?: true
    amount?: true
    status?: true
  }

  export type OrdersMinAggregateInputType = {
    id?: true
    buyer_type?: true
    buyer_id?: true
    purchasable_type?: true
    purchasable_id?: true
    amount?: true
    status?: true
    created_at?: true
    updated_at?: true
    tracking_code?: true
  }

  export type OrdersMaxAggregateInputType = {
    id?: true
    buyer_type?: true
    buyer_id?: true
    purchasable_type?: true
    purchasable_id?: true
    amount?: true
    status?: true
    created_at?: true
    updated_at?: true
    tracking_code?: true
  }

  export type OrdersCountAggregateInputType = {
    id?: true
    buyer_type?: true
    buyer_id?: true
    purchasable_type?: true
    purchasable_id?: true
    amount?: true
    status?: true
    created_at?: true
    updated_at?: true
    tracking_code?: true
    _all?: true
  }

  export type OrdersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which orders to aggregate.
     */
    where?: ordersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of orders to fetch.
     */
    orderBy?: ordersOrderByWithRelationInput | ordersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ordersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` orders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned orders
    **/
    _count?: true | OrdersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: OrdersAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: OrdersSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OrdersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OrdersMaxAggregateInputType
  }

  export type GetOrdersAggregateType<T extends OrdersAggregateArgs> = {
        [P in keyof T & keyof AggregateOrders]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOrders[P]>
      : GetScalarType<T[P], AggregateOrders[P]>
  }




  export type ordersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ordersWhereInput
    orderBy?: ordersOrderByWithAggregationInput | ordersOrderByWithAggregationInput[]
    by: OrdersScalarFieldEnum[] | OrdersScalarFieldEnum
    having?: ordersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OrdersCountAggregateInputType | true
    _avg?: OrdersAvgAggregateInputType
    _sum?: OrdersSumAggregateInputType
    _min?: OrdersMinAggregateInputType
    _max?: OrdersMaxAggregateInputType
  }

  export type OrdersGroupByOutputType = {
    id: bigint
    buyer_type: string
    buyer_id: bigint
    purchasable_type: string
    purchasable_id: bigint
    amount: Decimal
    status: number
    created_at: Date | null
    updated_at: Date | null
    tracking_code: string | null
    _count: OrdersCountAggregateOutputType | null
    _avg: OrdersAvgAggregateOutputType | null
    _sum: OrdersSumAggregateOutputType | null
    _min: OrdersMinAggregateOutputType | null
    _max: OrdersMaxAggregateOutputType | null
  }

  type GetOrdersGroupByPayload<T extends ordersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OrdersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OrdersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OrdersGroupByOutputType[P]>
            : GetScalarType<T[P], OrdersGroupByOutputType[P]>
        }
      >
    >


  export type ordersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    buyer_type?: boolean
    buyer_id?: boolean
    purchasable_type?: boolean
    purchasable_id?: boolean
    amount?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
    tracking_code?: boolean
    customer_subscriptions?: boolean | orders$customer_subscriptionsArgs<ExtArgs>
    payments?: boolean | orders$paymentsArgs<ExtArgs>
    _count?: boolean | OrdersCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["orders"]>

  export type ordersSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    buyer_type?: boolean
    buyer_id?: boolean
    purchasable_type?: boolean
    purchasable_id?: boolean
    amount?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
    tracking_code?: boolean
  }, ExtArgs["result"]["orders"]>

  export type ordersSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    buyer_type?: boolean
    buyer_id?: boolean
    purchasable_type?: boolean
    purchasable_id?: boolean
    amount?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
    tracking_code?: boolean
  }, ExtArgs["result"]["orders"]>

  export type ordersSelectScalar = {
    id?: boolean
    buyer_type?: boolean
    buyer_id?: boolean
    purchasable_type?: boolean
    purchasable_id?: boolean
    amount?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
    tracking_code?: boolean
  }

  export type ordersOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "buyer_type" | "buyer_id" | "purchasable_type" | "purchasable_id" | "amount" | "status" | "created_at" | "updated_at" | "tracking_code", ExtArgs["result"]["orders"]>
  export type ordersInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    customer_subscriptions?: boolean | orders$customer_subscriptionsArgs<ExtArgs>
    payments?: boolean | orders$paymentsArgs<ExtArgs>
    _count?: boolean | OrdersCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ordersIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type ordersIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $ordersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "orders"
    objects: {
      customer_subscriptions: Prisma.$customer_subscriptionsPayload<ExtArgs> | null
      payments: Prisma.$paymentsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      buyer_type: string
      buyer_id: bigint
      purchasable_type: string
      purchasable_id: bigint
      amount: Prisma.Decimal
      status: number
      created_at: Date | null
      updated_at: Date | null
      tracking_code: string | null
    }, ExtArgs["result"]["orders"]>
    composites: {}
  }

  type ordersGetPayload<S extends boolean | null | undefined | ordersDefaultArgs> = $Result.GetResult<Prisma.$ordersPayload, S>

  type ordersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ordersFindManyArgs, 'select' | 'include' | 'distinct' | 'omit' | 'relationLoadStrategy'> & {
      select?: OrdersCountAggregateInputType | true
    }

  export interface ordersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['orders'], meta: { name: 'orders' } }
    /**
     * Find zero or one Orders that matches the filter.
     * @param {ordersFindUniqueArgs} args - Arguments to find a Orders
     * @example
     * // Get one Orders
     * const orders = await prisma.orders.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ordersFindUniqueArgs>(args: SelectSubset<T, ordersFindUniqueArgs<ExtArgs>>): Prisma__ordersClient<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Orders that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ordersFindUniqueOrThrowArgs} args - Arguments to find a Orders
     * @example
     * // Get one Orders
     * const orders = await prisma.orders.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ordersFindUniqueOrThrowArgs>(args: SelectSubset<T, ordersFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ordersClient<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Orders that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ordersFindFirstArgs} args - Arguments to find a Orders
     * @example
     * // Get one Orders
     * const orders = await prisma.orders.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ordersFindFirstArgs>(args?: SelectSubset<T, ordersFindFirstArgs<ExtArgs>>): Prisma__ordersClient<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Orders that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ordersFindFirstOrThrowArgs} args - Arguments to find a Orders
     * @example
     * // Get one Orders
     * const orders = await prisma.orders.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ordersFindFirstOrThrowArgs>(args?: SelectSubset<T, ordersFindFirstOrThrowArgs<ExtArgs>>): Prisma__ordersClient<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Orders that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ordersFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Orders
     * const orders = await prisma.orders.findMany()
     * 
     * // Get first 10 Orders
     * const orders = await prisma.orders.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const ordersWithIdOnly = await prisma.orders.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ordersFindManyArgs>(args?: SelectSubset<T, ordersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Orders.
     * @param {ordersCreateArgs} args - Arguments to create a Orders.
     * @example
     * // Create one Orders
     * const Orders = await prisma.orders.create({
     *   data: {
     *     // ... data to create a Orders
     *   }
     * })
     * 
     */
    create<T extends ordersCreateArgs>(args: SelectSubset<T, ordersCreateArgs<ExtArgs>>): Prisma__ordersClient<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Orders.
     * @param {ordersCreateManyArgs} args - Arguments to create many Orders.
     * @example
     * // Create many Orders
     * const orders = await prisma.orders.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ordersCreateManyArgs>(args?: SelectSubset<T, ordersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Orders and returns the data saved in the database.
     * @param {ordersCreateManyAndReturnArgs} args - Arguments to create many Orders.
     * @example
     * // Create many Orders
     * const orders = await prisma.orders.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Orders and only return the `id`
     * const ordersWithIdOnly = await prisma.orders.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ordersCreateManyAndReturnArgs>(args?: SelectSubset<T, ordersCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Orders.
     * @param {ordersDeleteArgs} args - Arguments to delete one Orders.
     * @example
     * // Delete one Orders
     * const Orders = await prisma.orders.delete({
     *   where: {
     *     // ... filter to delete one Orders
     *   }
     * })
     * 
     */
    delete<T extends ordersDeleteArgs>(args: SelectSubset<T, ordersDeleteArgs<ExtArgs>>): Prisma__ordersClient<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Orders.
     * @param {ordersUpdateArgs} args - Arguments to update one Orders.
     * @example
     * // Update one Orders
     * const orders = await prisma.orders.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ordersUpdateArgs>(args: SelectSubset<T, ordersUpdateArgs<ExtArgs>>): Prisma__ordersClient<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Orders.
     * @param {ordersDeleteManyArgs} args - Arguments to filter Orders to delete.
     * @example
     * // Delete a few Orders
     * const { count } = await prisma.orders.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ordersDeleteManyArgs>(args?: SelectSubset<T, ordersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Orders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ordersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Orders
     * const orders = await prisma.orders.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ordersUpdateManyArgs>(args: SelectSubset<T, ordersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Orders and returns the data updated in the database.
     * @param {ordersUpdateManyAndReturnArgs} args - Arguments to update many Orders.
     * @example
     * // Update many Orders
     * const orders = await prisma.orders.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Orders and only return the `id`
     * const ordersWithIdOnly = await prisma.orders.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ordersUpdateManyAndReturnArgs>(args: SelectSubset<T, ordersUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Orders.
     * @param {ordersUpsertArgs} args - Arguments to update or create a Orders.
     * @example
     * // Update or create a Orders
     * const orders = await prisma.orders.upsert({
     *   create: {
     *     // ... data to create a Orders
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Orders we want to update
     *   }
     * })
     */
    upsert<T extends ordersUpsertArgs>(args: SelectSubset<T, ordersUpsertArgs<ExtArgs>>): Prisma__ordersClient<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Orders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ordersCountArgs} args - Arguments to filter Orders to count.
     * @example
     * // Count the number of Orders
     * const count = await prisma.orders.count({
     *   where: {
     *     // ... the filter for the Orders we want to count
     *   }
     * })
    **/
    count<T extends ordersCountArgs>(
      args?: Subset<T, ordersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OrdersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Orders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrdersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OrdersAggregateArgs>(args: Subset<T, OrdersAggregateArgs>): Prisma.PrismaPromise<GetOrdersAggregateType<T>>

    /**
     * Group by Orders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ordersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ordersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ordersGroupByArgs['orderBy'] }
        : { orderBy?: ordersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ordersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrdersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the orders model
   */
  readonly fields: ordersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for orders.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ordersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    customer_subscriptions<T extends orders$customer_subscriptionsArgs<ExtArgs> = {}>(args?: Subset<T, orders$customer_subscriptionsArgs<ExtArgs>>): Prisma__customer_subscriptionsClient<$Result.GetResult<Prisma.$customer_subscriptionsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    payments<T extends orders$paymentsArgs<ExtArgs> = {}>(args?: Subset<T, orders$paymentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$paymentsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the orders model
   */ 
  interface ordersFieldRefs {
    readonly id: FieldRef<"orders", 'BigInt'>
    readonly buyer_type: FieldRef<"orders", 'String'>
    readonly buyer_id: FieldRef<"orders", 'BigInt'>
    readonly purchasable_type: FieldRef<"orders", 'String'>
    readonly purchasable_id: FieldRef<"orders", 'BigInt'>
    readonly amount: FieldRef<"orders", 'Decimal'>
    readonly status: FieldRef<"orders", 'Int'>
    readonly created_at: FieldRef<"orders", 'DateTime'>
    readonly updated_at: FieldRef<"orders", 'DateTime'>
    readonly tracking_code: FieldRef<"orders", 'String'>
  }
    

  // Custom InputTypes
  /**
   * orders findUnique
   */
  export type ordersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the orders
     */
    select?: ordersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the orders
     */
    omit?: ordersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordersInclude<ExtArgs> | null
    /**
     * Filter, which orders to fetch.
     */
    where: ordersWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * orders findUniqueOrThrow
   */
  export type ordersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the orders
     */
    select?: ordersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the orders
     */
    omit?: ordersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordersInclude<ExtArgs> | null
    /**
     * Filter, which orders to fetch.
     */
    where: ordersWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * orders findFirst
   */
  export type ordersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the orders
     */
    select?: ordersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the orders
     */
    omit?: ordersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordersInclude<ExtArgs> | null
    /**
     * Filter, which orders to fetch.
     */
    where?: ordersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of orders to fetch.
     */
    orderBy?: ordersOrderByWithRelationInput | ordersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for orders.
     */
    cursor?: ordersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` orders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of orders.
     */
    distinct?: OrdersScalarFieldEnum | OrdersScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * orders findFirstOrThrow
   */
  export type ordersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the orders
     */
    select?: ordersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the orders
     */
    omit?: ordersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordersInclude<ExtArgs> | null
    /**
     * Filter, which orders to fetch.
     */
    where?: ordersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of orders to fetch.
     */
    orderBy?: ordersOrderByWithRelationInput | ordersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for orders.
     */
    cursor?: ordersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` orders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of orders.
     */
    distinct?: OrdersScalarFieldEnum | OrdersScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * orders findMany
   */
  export type ordersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the orders
     */
    select?: ordersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the orders
     */
    omit?: ordersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordersInclude<ExtArgs> | null
    /**
     * Filter, which orders to fetch.
     */
    where?: ordersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of orders to fetch.
     */
    orderBy?: ordersOrderByWithRelationInput | ordersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing orders.
     */
    cursor?: ordersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` orders.
     */
    skip?: number
    distinct?: OrdersScalarFieldEnum | OrdersScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * orders create
   */
  export type ordersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the orders
     */
    select?: ordersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the orders
     */
    omit?: ordersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordersInclude<ExtArgs> | null
    /**
     * The data needed to create a orders.
     */
    data: XOR<ordersCreateInput, ordersUncheckedCreateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * orders createMany
   */
  export type ordersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many orders.
     */
    data: ordersCreateManyInput | ordersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * orders createManyAndReturn
   */
  export type ordersCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the orders
     */
    select?: ordersSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the orders
     */
    omit?: ordersOmit<ExtArgs> | null
    /**
     * The data used to create many orders.
     */
    data: ordersCreateManyInput | ordersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * orders update
   */
  export type ordersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the orders
     */
    select?: ordersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the orders
     */
    omit?: ordersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordersInclude<ExtArgs> | null
    /**
     * The data needed to update a orders.
     */
    data: XOR<ordersUpdateInput, ordersUncheckedUpdateInput>
    /**
     * Choose, which orders to update.
     */
    where: ordersWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * orders updateMany
   */
  export type ordersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update orders.
     */
    data: XOR<ordersUpdateManyMutationInput, ordersUncheckedUpdateManyInput>
    /**
     * Filter which orders to update
     */
    where?: ordersWhereInput
    /**
     * Limit how many orders to update.
     */
    limit?: number
  }

  /**
   * orders updateManyAndReturn
   */
  export type ordersUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the orders
     */
    select?: ordersSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the orders
     */
    omit?: ordersOmit<ExtArgs> | null
    /**
     * The data used to update orders.
     */
    data: XOR<ordersUpdateManyMutationInput, ordersUncheckedUpdateManyInput>
    /**
     * Filter which orders to update
     */
    where?: ordersWhereInput
    /**
     * Limit how many orders to update.
     */
    limit?: number
  }

  /**
   * orders upsert
   */
  export type ordersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the orders
     */
    select?: ordersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the orders
     */
    omit?: ordersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordersInclude<ExtArgs> | null
    /**
     * The filter to search for the orders to update in case it exists.
     */
    where: ordersWhereUniqueInput
    /**
     * In case the orders found by the `where` argument doesn't exist, create a new orders with this data.
     */
    create: XOR<ordersCreateInput, ordersUncheckedCreateInput>
    /**
     * In case the orders was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ordersUpdateInput, ordersUncheckedUpdateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * orders delete
   */
  export type ordersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the orders
     */
    select?: ordersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the orders
     */
    omit?: ordersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordersInclude<ExtArgs> | null
    /**
     * Filter which orders to delete.
     */
    where: ordersWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * orders deleteMany
   */
  export type ordersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which orders to delete
     */
    where?: ordersWhereInput
    /**
     * Limit how many orders to delete.
     */
    limit?: number
  }

  /**
   * orders.customer_subscriptions
   */
  export type orders$customer_subscriptionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the customer_subscriptions
     */
    select?: customer_subscriptionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the customer_subscriptions
     */
    omit?: customer_subscriptionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: customer_subscriptionsInclude<ExtArgs> | null
    where?: customer_subscriptionsWhereInput
  }

  /**
   * orders.payments
   */
  export type orders$paymentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the payments
     */
    select?: paymentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the payments
     */
    omit?: paymentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: paymentsInclude<ExtArgs> | null
    where?: paymentsWhereInput
    orderBy?: paymentsOrderByWithRelationInput | paymentsOrderByWithRelationInput[]
    cursor?: paymentsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PaymentsScalarFieldEnum | PaymentsScalarFieldEnum[]
  }

  /**
   * orders without action
   */
  export type ordersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the orders
     */
    select?: ordersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the orders
     */
    omit?: ordersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordersInclude<ExtArgs> | null
  }


  /**
   * Model otps
   */

  export type AggregateOtps = {
    _count: OtpsCountAggregateOutputType | null
    _avg: OtpsAvgAggregateOutputType | null
    _sum: OtpsSumAggregateOutputType | null
    _min: OtpsMinAggregateOutputType | null
    _max: OtpsMaxAggregateOutputType | null
  }

  export type OtpsAvgAggregateOutputType = {
    id: number | null
    channel: number | null
    authenticatable_id: number | null
  }

  export type OtpsSumAggregateOutputType = {
    id: bigint | null
    channel: number | null
    authenticatable_id: bigint | null
  }

  export type OtpsMinAggregateOutputType = {
    id: bigint | null
    code: string | null
    channel: number | null
    reason: string | null
    expires_at: Date | null
    authenticatable_type: string | null
    authenticatable_id: bigint | null
    is_used: boolean | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type OtpsMaxAggregateOutputType = {
    id: bigint | null
    code: string | null
    channel: number | null
    reason: string | null
    expires_at: Date | null
    authenticatable_type: string | null
    authenticatable_id: bigint | null
    is_used: boolean | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type OtpsCountAggregateOutputType = {
    id: number
    code: number
    channel: number
    reason: number
    expires_at: number
    authenticatable_type: number
    authenticatable_id: number
    is_used: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type OtpsAvgAggregateInputType = {
    id?: true
    channel?: true
    authenticatable_id?: true
  }

  export type OtpsSumAggregateInputType = {
    id?: true
    channel?: true
    authenticatable_id?: true
  }

  export type OtpsMinAggregateInputType = {
    id?: true
    code?: true
    channel?: true
    reason?: true
    expires_at?: true
    authenticatable_type?: true
    authenticatable_id?: true
    is_used?: true
    created_at?: true
    updated_at?: true
  }

  export type OtpsMaxAggregateInputType = {
    id?: true
    code?: true
    channel?: true
    reason?: true
    expires_at?: true
    authenticatable_type?: true
    authenticatable_id?: true
    is_used?: true
    created_at?: true
    updated_at?: true
  }

  export type OtpsCountAggregateInputType = {
    id?: true
    code?: true
    channel?: true
    reason?: true
    expires_at?: true
    authenticatable_type?: true
    authenticatable_id?: true
    is_used?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type OtpsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which otps to aggregate.
     */
    where?: otpsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of otps to fetch.
     */
    orderBy?: otpsOrderByWithRelationInput | otpsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: otpsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` otps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` otps.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned otps
    **/
    _count?: true | OtpsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: OtpsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: OtpsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OtpsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OtpsMaxAggregateInputType
  }

  export type GetOtpsAggregateType<T extends OtpsAggregateArgs> = {
        [P in keyof T & keyof AggregateOtps]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOtps[P]>
      : GetScalarType<T[P], AggregateOtps[P]>
  }




  export type otpsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: otpsWhereInput
    orderBy?: otpsOrderByWithAggregationInput | otpsOrderByWithAggregationInput[]
    by: OtpsScalarFieldEnum[] | OtpsScalarFieldEnum
    having?: otpsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OtpsCountAggregateInputType | true
    _avg?: OtpsAvgAggregateInputType
    _sum?: OtpsSumAggregateInputType
    _min?: OtpsMinAggregateInputType
    _max?: OtpsMaxAggregateInputType
  }

  export type OtpsGroupByOutputType = {
    id: bigint
    code: string
    channel: number
    reason: string
    expires_at: Date
    authenticatable_type: string
    authenticatable_id: bigint
    is_used: boolean
    created_at: Date | null
    updated_at: Date | null
    _count: OtpsCountAggregateOutputType | null
    _avg: OtpsAvgAggregateOutputType | null
    _sum: OtpsSumAggregateOutputType | null
    _min: OtpsMinAggregateOutputType | null
    _max: OtpsMaxAggregateOutputType | null
  }

  type GetOtpsGroupByPayload<T extends otpsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OtpsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OtpsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OtpsGroupByOutputType[P]>
            : GetScalarType<T[P], OtpsGroupByOutputType[P]>
        }
      >
    >


  export type otpsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    code?: boolean
    channel?: boolean
    reason?: boolean
    expires_at?: boolean
    authenticatable_type?: boolean
    authenticatable_id?: boolean
    is_used?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["otps"]>

  export type otpsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    code?: boolean
    channel?: boolean
    reason?: boolean
    expires_at?: boolean
    authenticatable_type?: boolean
    authenticatable_id?: boolean
    is_used?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["otps"]>

  export type otpsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    code?: boolean
    channel?: boolean
    reason?: boolean
    expires_at?: boolean
    authenticatable_type?: boolean
    authenticatable_id?: boolean
    is_used?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["otps"]>

  export type otpsSelectScalar = {
    id?: boolean
    code?: boolean
    channel?: boolean
    reason?: boolean
    expires_at?: boolean
    authenticatable_type?: boolean
    authenticatable_id?: boolean
    is_used?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type otpsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "code" | "channel" | "reason" | "expires_at" | "authenticatable_type" | "authenticatable_id" | "is_used" | "created_at" | "updated_at", ExtArgs["result"]["otps"]>

  export type $otpsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "otps"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      code: string
      channel: number
      reason: string
      expires_at: Date
      authenticatable_type: string
      authenticatable_id: bigint
      is_used: boolean
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["otps"]>
    composites: {}
  }

  type otpsGetPayload<S extends boolean | null | undefined | otpsDefaultArgs> = $Result.GetResult<Prisma.$otpsPayload, S>

  type otpsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<otpsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit' | 'relationLoadStrategy'> & {
      select?: OtpsCountAggregateInputType | true
    }

  export interface otpsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['otps'], meta: { name: 'otps' } }
    /**
     * Find zero or one Otps that matches the filter.
     * @param {otpsFindUniqueArgs} args - Arguments to find a Otps
     * @example
     * // Get one Otps
     * const otps = await prisma.otps.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends otpsFindUniqueArgs>(args: SelectSubset<T, otpsFindUniqueArgs<ExtArgs>>): Prisma__otpsClient<$Result.GetResult<Prisma.$otpsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Otps that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {otpsFindUniqueOrThrowArgs} args - Arguments to find a Otps
     * @example
     * // Get one Otps
     * const otps = await prisma.otps.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends otpsFindUniqueOrThrowArgs>(args: SelectSubset<T, otpsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__otpsClient<$Result.GetResult<Prisma.$otpsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Otps that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {otpsFindFirstArgs} args - Arguments to find a Otps
     * @example
     * // Get one Otps
     * const otps = await prisma.otps.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends otpsFindFirstArgs>(args?: SelectSubset<T, otpsFindFirstArgs<ExtArgs>>): Prisma__otpsClient<$Result.GetResult<Prisma.$otpsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Otps that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {otpsFindFirstOrThrowArgs} args - Arguments to find a Otps
     * @example
     * // Get one Otps
     * const otps = await prisma.otps.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends otpsFindFirstOrThrowArgs>(args?: SelectSubset<T, otpsFindFirstOrThrowArgs<ExtArgs>>): Prisma__otpsClient<$Result.GetResult<Prisma.$otpsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Otps that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {otpsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Otps
     * const otps = await prisma.otps.findMany()
     * 
     * // Get first 10 Otps
     * const otps = await prisma.otps.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const otpsWithIdOnly = await prisma.otps.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends otpsFindManyArgs>(args?: SelectSubset<T, otpsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$otpsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Otps.
     * @param {otpsCreateArgs} args - Arguments to create a Otps.
     * @example
     * // Create one Otps
     * const Otps = await prisma.otps.create({
     *   data: {
     *     // ... data to create a Otps
     *   }
     * })
     * 
     */
    create<T extends otpsCreateArgs>(args: SelectSubset<T, otpsCreateArgs<ExtArgs>>): Prisma__otpsClient<$Result.GetResult<Prisma.$otpsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Otps.
     * @param {otpsCreateManyArgs} args - Arguments to create many Otps.
     * @example
     * // Create many Otps
     * const otps = await prisma.otps.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends otpsCreateManyArgs>(args?: SelectSubset<T, otpsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Otps and returns the data saved in the database.
     * @param {otpsCreateManyAndReturnArgs} args - Arguments to create many Otps.
     * @example
     * // Create many Otps
     * const otps = await prisma.otps.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Otps and only return the `id`
     * const otpsWithIdOnly = await prisma.otps.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends otpsCreateManyAndReturnArgs>(args?: SelectSubset<T, otpsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$otpsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Otps.
     * @param {otpsDeleteArgs} args - Arguments to delete one Otps.
     * @example
     * // Delete one Otps
     * const Otps = await prisma.otps.delete({
     *   where: {
     *     // ... filter to delete one Otps
     *   }
     * })
     * 
     */
    delete<T extends otpsDeleteArgs>(args: SelectSubset<T, otpsDeleteArgs<ExtArgs>>): Prisma__otpsClient<$Result.GetResult<Prisma.$otpsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Otps.
     * @param {otpsUpdateArgs} args - Arguments to update one Otps.
     * @example
     * // Update one Otps
     * const otps = await prisma.otps.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends otpsUpdateArgs>(args: SelectSubset<T, otpsUpdateArgs<ExtArgs>>): Prisma__otpsClient<$Result.GetResult<Prisma.$otpsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Otps.
     * @param {otpsDeleteManyArgs} args - Arguments to filter Otps to delete.
     * @example
     * // Delete a few Otps
     * const { count } = await prisma.otps.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends otpsDeleteManyArgs>(args?: SelectSubset<T, otpsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Otps.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {otpsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Otps
     * const otps = await prisma.otps.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends otpsUpdateManyArgs>(args: SelectSubset<T, otpsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Otps and returns the data updated in the database.
     * @param {otpsUpdateManyAndReturnArgs} args - Arguments to update many Otps.
     * @example
     * // Update many Otps
     * const otps = await prisma.otps.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Otps and only return the `id`
     * const otpsWithIdOnly = await prisma.otps.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends otpsUpdateManyAndReturnArgs>(args: SelectSubset<T, otpsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$otpsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Otps.
     * @param {otpsUpsertArgs} args - Arguments to update or create a Otps.
     * @example
     * // Update or create a Otps
     * const otps = await prisma.otps.upsert({
     *   create: {
     *     // ... data to create a Otps
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Otps we want to update
     *   }
     * })
     */
    upsert<T extends otpsUpsertArgs>(args: SelectSubset<T, otpsUpsertArgs<ExtArgs>>): Prisma__otpsClient<$Result.GetResult<Prisma.$otpsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Otps.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {otpsCountArgs} args - Arguments to filter Otps to count.
     * @example
     * // Count the number of Otps
     * const count = await prisma.otps.count({
     *   where: {
     *     // ... the filter for the Otps we want to count
     *   }
     * })
    **/
    count<T extends otpsCountArgs>(
      args?: Subset<T, otpsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OtpsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Otps.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OtpsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OtpsAggregateArgs>(args: Subset<T, OtpsAggregateArgs>): Prisma.PrismaPromise<GetOtpsAggregateType<T>>

    /**
     * Group by Otps.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {otpsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends otpsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: otpsGroupByArgs['orderBy'] }
        : { orderBy?: otpsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, otpsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOtpsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the otps model
   */
  readonly fields: otpsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for otps.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__otpsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the otps model
   */ 
  interface otpsFieldRefs {
    readonly id: FieldRef<"otps", 'BigInt'>
    readonly code: FieldRef<"otps", 'String'>
    readonly channel: FieldRef<"otps", 'Int'>
    readonly reason: FieldRef<"otps", 'String'>
    readonly expires_at: FieldRef<"otps", 'DateTime'>
    readonly authenticatable_type: FieldRef<"otps", 'String'>
    readonly authenticatable_id: FieldRef<"otps", 'BigInt'>
    readonly is_used: FieldRef<"otps", 'Boolean'>
    readonly created_at: FieldRef<"otps", 'DateTime'>
    readonly updated_at: FieldRef<"otps", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * otps findUnique
   */
  export type otpsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the otps
     */
    select?: otpsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the otps
     */
    omit?: otpsOmit<ExtArgs> | null
    /**
     * Filter, which otps to fetch.
     */
    where: otpsWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * otps findUniqueOrThrow
   */
  export type otpsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the otps
     */
    select?: otpsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the otps
     */
    omit?: otpsOmit<ExtArgs> | null
    /**
     * Filter, which otps to fetch.
     */
    where: otpsWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * otps findFirst
   */
  export type otpsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the otps
     */
    select?: otpsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the otps
     */
    omit?: otpsOmit<ExtArgs> | null
    /**
     * Filter, which otps to fetch.
     */
    where?: otpsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of otps to fetch.
     */
    orderBy?: otpsOrderByWithRelationInput | otpsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for otps.
     */
    cursor?: otpsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` otps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` otps.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of otps.
     */
    distinct?: OtpsScalarFieldEnum | OtpsScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * otps findFirstOrThrow
   */
  export type otpsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the otps
     */
    select?: otpsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the otps
     */
    omit?: otpsOmit<ExtArgs> | null
    /**
     * Filter, which otps to fetch.
     */
    where?: otpsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of otps to fetch.
     */
    orderBy?: otpsOrderByWithRelationInput | otpsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for otps.
     */
    cursor?: otpsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` otps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` otps.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of otps.
     */
    distinct?: OtpsScalarFieldEnum | OtpsScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * otps findMany
   */
  export type otpsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the otps
     */
    select?: otpsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the otps
     */
    omit?: otpsOmit<ExtArgs> | null
    /**
     * Filter, which otps to fetch.
     */
    where?: otpsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of otps to fetch.
     */
    orderBy?: otpsOrderByWithRelationInput | otpsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing otps.
     */
    cursor?: otpsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` otps from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` otps.
     */
    skip?: number
    distinct?: OtpsScalarFieldEnum | OtpsScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * otps create
   */
  export type otpsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the otps
     */
    select?: otpsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the otps
     */
    omit?: otpsOmit<ExtArgs> | null
    /**
     * The data needed to create a otps.
     */
    data: XOR<otpsCreateInput, otpsUncheckedCreateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * otps createMany
   */
  export type otpsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many otps.
     */
    data: otpsCreateManyInput | otpsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * otps createManyAndReturn
   */
  export type otpsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the otps
     */
    select?: otpsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the otps
     */
    omit?: otpsOmit<ExtArgs> | null
    /**
     * The data used to create many otps.
     */
    data: otpsCreateManyInput | otpsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * otps update
   */
  export type otpsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the otps
     */
    select?: otpsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the otps
     */
    omit?: otpsOmit<ExtArgs> | null
    /**
     * The data needed to update a otps.
     */
    data: XOR<otpsUpdateInput, otpsUncheckedUpdateInput>
    /**
     * Choose, which otps to update.
     */
    where: otpsWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * otps updateMany
   */
  export type otpsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update otps.
     */
    data: XOR<otpsUpdateManyMutationInput, otpsUncheckedUpdateManyInput>
    /**
     * Filter which otps to update
     */
    where?: otpsWhereInput
    /**
     * Limit how many otps to update.
     */
    limit?: number
  }

  /**
   * otps updateManyAndReturn
   */
  export type otpsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the otps
     */
    select?: otpsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the otps
     */
    omit?: otpsOmit<ExtArgs> | null
    /**
     * The data used to update otps.
     */
    data: XOR<otpsUpdateManyMutationInput, otpsUncheckedUpdateManyInput>
    /**
     * Filter which otps to update
     */
    where?: otpsWhereInput
    /**
     * Limit how many otps to update.
     */
    limit?: number
  }

  /**
   * otps upsert
   */
  export type otpsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the otps
     */
    select?: otpsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the otps
     */
    omit?: otpsOmit<ExtArgs> | null
    /**
     * The filter to search for the otps to update in case it exists.
     */
    where: otpsWhereUniqueInput
    /**
     * In case the otps found by the `where` argument doesn't exist, create a new otps with this data.
     */
    create: XOR<otpsCreateInput, otpsUncheckedCreateInput>
    /**
     * In case the otps was found with the provided `where` argument, update it with this data.
     */
    update: XOR<otpsUpdateInput, otpsUncheckedUpdateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * otps delete
   */
  export type otpsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the otps
     */
    select?: otpsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the otps
     */
    omit?: otpsOmit<ExtArgs> | null
    /**
     * Filter which otps to delete.
     */
    where: otpsWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * otps deleteMany
   */
  export type otpsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which otps to delete
     */
    where?: otpsWhereInput
    /**
     * Limit how many otps to delete.
     */
    limit?: number
  }

  /**
   * otps without action
   */
  export type otpsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the otps
     */
    select?: otpsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the otps
     */
    omit?: otpsOmit<ExtArgs> | null
  }


  /**
   * Model payments
   */

  export type AggregatePayments = {
    _count: PaymentsCountAggregateOutputType | null
    _avg: PaymentsAvgAggregateOutputType | null
    _sum: PaymentsSumAggregateOutputType | null
    _min: PaymentsMinAggregateOutputType | null
    _max: PaymentsMaxAggregateOutputType | null
  }

  export type PaymentsAvgAggregateOutputType = {
    id: number | null
    order_id: number | null
    status: number | null
    amount: Decimal | null
  }

  export type PaymentsSumAggregateOutputType = {
    id: bigint | null
    order_id: bigint | null
    status: number | null
    amount: Decimal | null
  }

  export type PaymentsMinAggregateOutputType = {
    id: bigint | null
    order_id: bigint | null
    transaction_id: string | null
    res_num: string | null
    status: number | null
    amount: Decimal | null
    payment_method: string | null
    payment_gateway: string | null
    paid_at: Date | null
    created_at: Date | null
    updated_at: Date | null
    receipt_photo: string | null
  }

  export type PaymentsMaxAggregateOutputType = {
    id: bigint | null
    order_id: bigint | null
    transaction_id: string | null
    res_num: string | null
    status: number | null
    amount: Decimal | null
    payment_method: string | null
    payment_gateway: string | null
    paid_at: Date | null
    created_at: Date | null
    updated_at: Date | null
    receipt_photo: string | null
  }

  export type PaymentsCountAggregateOutputType = {
    id: number
    order_id: number
    transaction_id: number
    res_num: number
    status: number
    amount: number
    payment_method: number
    payment_gateway: number
    paid_at: number
    created_at: number
    updated_at: number
    receipt_photo: number
    _all: number
  }


  export type PaymentsAvgAggregateInputType = {
    id?: true
    order_id?: true
    status?: true
    amount?: true
  }

  export type PaymentsSumAggregateInputType = {
    id?: true
    order_id?: true
    status?: true
    amount?: true
  }

  export type PaymentsMinAggregateInputType = {
    id?: true
    order_id?: true
    transaction_id?: true
    res_num?: true
    status?: true
    amount?: true
    payment_method?: true
    payment_gateway?: true
    paid_at?: true
    created_at?: true
    updated_at?: true
    receipt_photo?: true
  }

  export type PaymentsMaxAggregateInputType = {
    id?: true
    order_id?: true
    transaction_id?: true
    res_num?: true
    status?: true
    amount?: true
    payment_method?: true
    payment_gateway?: true
    paid_at?: true
    created_at?: true
    updated_at?: true
    receipt_photo?: true
  }

  export type PaymentsCountAggregateInputType = {
    id?: true
    order_id?: true
    transaction_id?: true
    res_num?: true
    status?: true
    amount?: true
    payment_method?: true
    payment_gateway?: true
    paid_at?: true
    created_at?: true
    updated_at?: true
    receipt_photo?: true
    _all?: true
  }

  export type PaymentsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which payments to aggregate.
     */
    where?: paymentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of payments to fetch.
     */
    orderBy?: paymentsOrderByWithRelationInput | paymentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: paymentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` payments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` payments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned payments
    **/
    _count?: true | PaymentsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PaymentsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PaymentsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PaymentsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PaymentsMaxAggregateInputType
  }

  export type GetPaymentsAggregateType<T extends PaymentsAggregateArgs> = {
        [P in keyof T & keyof AggregatePayments]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePayments[P]>
      : GetScalarType<T[P], AggregatePayments[P]>
  }




  export type paymentsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: paymentsWhereInput
    orderBy?: paymentsOrderByWithAggregationInput | paymentsOrderByWithAggregationInput[]
    by: PaymentsScalarFieldEnum[] | PaymentsScalarFieldEnum
    having?: paymentsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PaymentsCountAggregateInputType | true
    _avg?: PaymentsAvgAggregateInputType
    _sum?: PaymentsSumAggregateInputType
    _min?: PaymentsMinAggregateInputType
    _max?: PaymentsMaxAggregateInputType
  }

  export type PaymentsGroupByOutputType = {
    id: bigint
    order_id: bigint
    transaction_id: string
    res_num: string
    status: number
    amount: Decimal
    payment_method: string | null
    payment_gateway: string | null
    paid_at: Date | null
    created_at: Date | null
    updated_at: Date | null
    receipt_photo: string | null
    _count: PaymentsCountAggregateOutputType | null
    _avg: PaymentsAvgAggregateOutputType | null
    _sum: PaymentsSumAggregateOutputType | null
    _min: PaymentsMinAggregateOutputType | null
    _max: PaymentsMaxAggregateOutputType | null
  }

  type GetPaymentsGroupByPayload<T extends paymentsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PaymentsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PaymentsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PaymentsGroupByOutputType[P]>
            : GetScalarType<T[P], PaymentsGroupByOutputType[P]>
        }
      >
    >


  export type paymentsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    order_id?: boolean
    transaction_id?: boolean
    res_num?: boolean
    status?: boolean
    amount?: boolean
    payment_method?: boolean
    payment_gateway?: boolean
    paid_at?: boolean
    created_at?: boolean
    updated_at?: boolean
    receipt_photo?: boolean
    orders?: boolean | ordersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["payments"]>

  export type paymentsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    order_id?: boolean
    transaction_id?: boolean
    res_num?: boolean
    status?: boolean
    amount?: boolean
    payment_method?: boolean
    payment_gateway?: boolean
    paid_at?: boolean
    created_at?: boolean
    updated_at?: boolean
    receipt_photo?: boolean
    orders?: boolean | ordersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["payments"]>

  export type paymentsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    order_id?: boolean
    transaction_id?: boolean
    res_num?: boolean
    status?: boolean
    amount?: boolean
    payment_method?: boolean
    payment_gateway?: boolean
    paid_at?: boolean
    created_at?: boolean
    updated_at?: boolean
    receipt_photo?: boolean
    orders?: boolean | ordersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["payments"]>

  export type paymentsSelectScalar = {
    id?: boolean
    order_id?: boolean
    transaction_id?: boolean
    res_num?: boolean
    status?: boolean
    amount?: boolean
    payment_method?: boolean
    payment_gateway?: boolean
    paid_at?: boolean
    created_at?: boolean
    updated_at?: boolean
    receipt_photo?: boolean
  }

  export type paymentsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "order_id" | "transaction_id" | "res_num" | "status" | "amount" | "payment_method" | "payment_gateway" | "paid_at" | "created_at" | "updated_at" | "receipt_photo", ExtArgs["result"]["payments"]>
  export type paymentsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    orders?: boolean | ordersDefaultArgs<ExtArgs>
  }
  export type paymentsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    orders?: boolean | ordersDefaultArgs<ExtArgs>
  }
  export type paymentsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    orders?: boolean | ordersDefaultArgs<ExtArgs>
  }

  export type $paymentsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "payments"
    objects: {
      orders: Prisma.$ordersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      order_id: bigint
      transaction_id: string
      res_num: string
      status: number
      amount: Prisma.Decimal
      payment_method: string | null
      payment_gateway: string | null
      paid_at: Date | null
      created_at: Date | null
      updated_at: Date | null
      receipt_photo: string | null
    }, ExtArgs["result"]["payments"]>
    composites: {}
  }

  type paymentsGetPayload<S extends boolean | null | undefined | paymentsDefaultArgs> = $Result.GetResult<Prisma.$paymentsPayload, S>

  type paymentsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<paymentsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit' | 'relationLoadStrategy'> & {
      select?: PaymentsCountAggregateInputType | true
    }

  export interface paymentsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['payments'], meta: { name: 'payments' } }
    /**
     * Find zero or one Payments that matches the filter.
     * @param {paymentsFindUniqueArgs} args - Arguments to find a Payments
     * @example
     * // Get one Payments
     * const payments = await prisma.payments.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends paymentsFindUniqueArgs>(args: SelectSubset<T, paymentsFindUniqueArgs<ExtArgs>>): Prisma__paymentsClient<$Result.GetResult<Prisma.$paymentsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Payments that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {paymentsFindUniqueOrThrowArgs} args - Arguments to find a Payments
     * @example
     * // Get one Payments
     * const payments = await prisma.payments.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends paymentsFindUniqueOrThrowArgs>(args: SelectSubset<T, paymentsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__paymentsClient<$Result.GetResult<Prisma.$paymentsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Payments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {paymentsFindFirstArgs} args - Arguments to find a Payments
     * @example
     * // Get one Payments
     * const payments = await prisma.payments.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends paymentsFindFirstArgs>(args?: SelectSubset<T, paymentsFindFirstArgs<ExtArgs>>): Prisma__paymentsClient<$Result.GetResult<Prisma.$paymentsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Payments that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {paymentsFindFirstOrThrowArgs} args - Arguments to find a Payments
     * @example
     * // Get one Payments
     * const payments = await prisma.payments.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends paymentsFindFirstOrThrowArgs>(args?: SelectSubset<T, paymentsFindFirstOrThrowArgs<ExtArgs>>): Prisma__paymentsClient<$Result.GetResult<Prisma.$paymentsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Payments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {paymentsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Payments
     * const payments = await prisma.payments.findMany()
     * 
     * // Get first 10 Payments
     * const payments = await prisma.payments.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const paymentsWithIdOnly = await prisma.payments.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends paymentsFindManyArgs>(args?: SelectSubset<T, paymentsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$paymentsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Payments.
     * @param {paymentsCreateArgs} args - Arguments to create a Payments.
     * @example
     * // Create one Payments
     * const Payments = await prisma.payments.create({
     *   data: {
     *     // ... data to create a Payments
     *   }
     * })
     * 
     */
    create<T extends paymentsCreateArgs>(args: SelectSubset<T, paymentsCreateArgs<ExtArgs>>): Prisma__paymentsClient<$Result.GetResult<Prisma.$paymentsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Payments.
     * @param {paymentsCreateManyArgs} args - Arguments to create many Payments.
     * @example
     * // Create many Payments
     * const payments = await prisma.payments.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends paymentsCreateManyArgs>(args?: SelectSubset<T, paymentsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Payments and returns the data saved in the database.
     * @param {paymentsCreateManyAndReturnArgs} args - Arguments to create many Payments.
     * @example
     * // Create many Payments
     * const payments = await prisma.payments.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Payments and only return the `id`
     * const paymentsWithIdOnly = await prisma.payments.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends paymentsCreateManyAndReturnArgs>(args?: SelectSubset<T, paymentsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$paymentsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Payments.
     * @param {paymentsDeleteArgs} args - Arguments to delete one Payments.
     * @example
     * // Delete one Payments
     * const Payments = await prisma.payments.delete({
     *   where: {
     *     // ... filter to delete one Payments
     *   }
     * })
     * 
     */
    delete<T extends paymentsDeleteArgs>(args: SelectSubset<T, paymentsDeleteArgs<ExtArgs>>): Prisma__paymentsClient<$Result.GetResult<Prisma.$paymentsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Payments.
     * @param {paymentsUpdateArgs} args - Arguments to update one Payments.
     * @example
     * // Update one Payments
     * const payments = await prisma.payments.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends paymentsUpdateArgs>(args: SelectSubset<T, paymentsUpdateArgs<ExtArgs>>): Prisma__paymentsClient<$Result.GetResult<Prisma.$paymentsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Payments.
     * @param {paymentsDeleteManyArgs} args - Arguments to filter Payments to delete.
     * @example
     * // Delete a few Payments
     * const { count } = await prisma.payments.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends paymentsDeleteManyArgs>(args?: SelectSubset<T, paymentsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Payments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {paymentsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Payments
     * const payments = await prisma.payments.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends paymentsUpdateManyArgs>(args: SelectSubset<T, paymentsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Payments and returns the data updated in the database.
     * @param {paymentsUpdateManyAndReturnArgs} args - Arguments to update many Payments.
     * @example
     * // Update many Payments
     * const payments = await prisma.payments.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Payments and only return the `id`
     * const paymentsWithIdOnly = await prisma.payments.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends paymentsUpdateManyAndReturnArgs>(args: SelectSubset<T, paymentsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$paymentsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Payments.
     * @param {paymentsUpsertArgs} args - Arguments to update or create a Payments.
     * @example
     * // Update or create a Payments
     * const payments = await prisma.payments.upsert({
     *   create: {
     *     // ... data to create a Payments
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Payments we want to update
     *   }
     * })
     */
    upsert<T extends paymentsUpsertArgs>(args: SelectSubset<T, paymentsUpsertArgs<ExtArgs>>): Prisma__paymentsClient<$Result.GetResult<Prisma.$paymentsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Payments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {paymentsCountArgs} args - Arguments to filter Payments to count.
     * @example
     * // Count the number of Payments
     * const count = await prisma.payments.count({
     *   where: {
     *     // ... the filter for the Payments we want to count
     *   }
     * })
    **/
    count<T extends paymentsCountArgs>(
      args?: Subset<T, paymentsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PaymentsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Payments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PaymentsAggregateArgs>(args: Subset<T, PaymentsAggregateArgs>): Prisma.PrismaPromise<GetPaymentsAggregateType<T>>

    /**
     * Group by Payments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {paymentsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends paymentsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: paymentsGroupByArgs['orderBy'] }
        : { orderBy?: paymentsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, paymentsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPaymentsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the payments model
   */
  readonly fields: paymentsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for payments.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__paymentsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    orders<T extends ordersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ordersDefaultArgs<ExtArgs>>): Prisma__ordersClient<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the payments model
   */ 
  interface paymentsFieldRefs {
    readonly id: FieldRef<"payments", 'BigInt'>
    readonly order_id: FieldRef<"payments", 'BigInt'>
    readonly transaction_id: FieldRef<"payments", 'String'>
    readonly res_num: FieldRef<"payments", 'String'>
    readonly status: FieldRef<"payments", 'Int'>
    readonly amount: FieldRef<"payments", 'Decimal'>
    readonly payment_method: FieldRef<"payments", 'String'>
    readonly payment_gateway: FieldRef<"payments", 'String'>
    readonly paid_at: FieldRef<"payments", 'DateTime'>
    readonly created_at: FieldRef<"payments", 'DateTime'>
    readonly updated_at: FieldRef<"payments", 'DateTime'>
    readonly receipt_photo: FieldRef<"payments", 'String'>
  }
    

  // Custom InputTypes
  /**
   * payments findUnique
   */
  export type paymentsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the payments
     */
    select?: paymentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the payments
     */
    omit?: paymentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: paymentsInclude<ExtArgs> | null
    /**
     * Filter, which payments to fetch.
     */
    where: paymentsWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * payments findUniqueOrThrow
   */
  export type paymentsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the payments
     */
    select?: paymentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the payments
     */
    omit?: paymentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: paymentsInclude<ExtArgs> | null
    /**
     * Filter, which payments to fetch.
     */
    where: paymentsWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * payments findFirst
   */
  export type paymentsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the payments
     */
    select?: paymentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the payments
     */
    omit?: paymentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: paymentsInclude<ExtArgs> | null
    /**
     * Filter, which payments to fetch.
     */
    where?: paymentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of payments to fetch.
     */
    orderBy?: paymentsOrderByWithRelationInput | paymentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for payments.
     */
    cursor?: paymentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` payments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` payments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of payments.
     */
    distinct?: PaymentsScalarFieldEnum | PaymentsScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * payments findFirstOrThrow
   */
  export type paymentsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the payments
     */
    select?: paymentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the payments
     */
    omit?: paymentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: paymentsInclude<ExtArgs> | null
    /**
     * Filter, which payments to fetch.
     */
    where?: paymentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of payments to fetch.
     */
    orderBy?: paymentsOrderByWithRelationInput | paymentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for payments.
     */
    cursor?: paymentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` payments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` payments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of payments.
     */
    distinct?: PaymentsScalarFieldEnum | PaymentsScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * payments findMany
   */
  export type paymentsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the payments
     */
    select?: paymentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the payments
     */
    omit?: paymentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: paymentsInclude<ExtArgs> | null
    /**
     * Filter, which payments to fetch.
     */
    where?: paymentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of payments to fetch.
     */
    orderBy?: paymentsOrderByWithRelationInput | paymentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing payments.
     */
    cursor?: paymentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` payments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` payments.
     */
    skip?: number
    distinct?: PaymentsScalarFieldEnum | PaymentsScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * payments create
   */
  export type paymentsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the payments
     */
    select?: paymentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the payments
     */
    omit?: paymentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: paymentsInclude<ExtArgs> | null
    /**
     * The data needed to create a payments.
     */
    data: XOR<paymentsCreateInput, paymentsUncheckedCreateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * payments createMany
   */
  export type paymentsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many payments.
     */
    data: paymentsCreateManyInput | paymentsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * payments createManyAndReturn
   */
  export type paymentsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the payments
     */
    select?: paymentsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the payments
     */
    omit?: paymentsOmit<ExtArgs> | null
    /**
     * The data used to create many payments.
     */
    data: paymentsCreateManyInput | paymentsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: paymentsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * payments update
   */
  export type paymentsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the payments
     */
    select?: paymentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the payments
     */
    omit?: paymentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: paymentsInclude<ExtArgs> | null
    /**
     * The data needed to update a payments.
     */
    data: XOR<paymentsUpdateInput, paymentsUncheckedUpdateInput>
    /**
     * Choose, which payments to update.
     */
    where: paymentsWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * payments updateMany
   */
  export type paymentsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update payments.
     */
    data: XOR<paymentsUpdateManyMutationInput, paymentsUncheckedUpdateManyInput>
    /**
     * Filter which payments to update
     */
    where?: paymentsWhereInput
    /**
     * Limit how many payments to update.
     */
    limit?: number
  }

  /**
   * payments updateManyAndReturn
   */
  export type paymentsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the payments
     */
    select?: paymentsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the payments
     */
    omit?: paymentsOmit<ExtArgs> | null
    /**
     * The data used to update payments.
     */
    data: XOR<paymentsUpdateManyMutationInput, paymentsUncheckedUpdateManyInput>
    /**
     * Filter which payments to update
     */
    where?: paymentsWhereInput
    /**
     * Limit how many payments to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: paymentsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * payments upsert
   */
  export type paymentsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the payments
     */
    select?: paymentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the payments
     */
    omit?: paymentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: paymentsInclude<ExtArgs> | null
    /**
     * The filter to search for the payments to update in case it exists.
     */
    where: paymentsWhereUniqueInput
    /**
     * In case the payments found by the `where` argument doesn't exist, create a new payments with this data.
     */
    create: XOR<paymentsCreateInput, paymentsUncheckedCreateInput>
    /**
     * In case the payments was found with the provided `where` argument, update it with this data.
     */
    update: XOR<paymentsUpdateInput, paymentsUncheckedUpdateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * payments delete
   */
  export type paymentsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the payments
     */
    select?: paymentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the payments
     */
    omit?: paymentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: paymentsInclude<ExtArgs> | null
    /**
     * Filter which payments to delete.
     */
    where: paymentsWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * payments deleteMany
   */
  export type paymentsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which payments to delete
     */
    where?: paymentsWhereInput
    /**
     * Limit how many payments to delete.
     */
    limit?: number
  }

  /**
   * payments without action
   */
  export type paymentsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the payments
     */
    select?: paymentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the payments
     */
    omit?: paymentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: paymentsInclude<ExtArgs> | null
  }


  /**
   * Model permissions
   */

  export type AggregatePermissions = {
    _count: PermissionsCountAggregateOutputType | null
    _avg: PermissionsAvgAggregateOutputType | null
    _sum: PermissionsSumAggregateOutputType | null
    _min: PermissionsMinAggregateOutputType | null
    _max: PermissionsMaxAggregateOutputType | null
  }

  export type PermissionsAvgAggregateOutputType = {
    id: number | null
  }

  export type PermissionsSumAggregateOutputType = {
    id: bigint | null
  }

  export type PermissionsMinAggregateOutputType = {
    id: bigint | null
    name: string | null
    guard_name: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type PermissionsMaxAggregateOutputType = {
    id: bigint | null
    name: string | null
    guard_name: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type PermissionsCountAggregateOutputType = {
    id: number
    name: number
    guard_name: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type PermissionsAvgAggregateInputType = {
    id?: true
  }

  export type PermissionsSumAggregateInputType = {
    id?: true
  }

  export type PermissionsMinAggregateInputType = {
    id?: true
    name?: true
    guard_name?: true
    created_at?: true
    updated_at?: true
  }

  export type PermissionsMaxAggregateInputType = {
    id?: true
    name?: true
    guard_name?: true
    created_at?: true
    updated_at?: true
  }

  export type PermissionsCountAggregateInputType = {
    id?: true
    name?: true
    guard_name?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type PermissionsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which permissions to aggregate.
     */
    where?: permissionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of permissions to fetch.
     */
    orderBy?: permissionsOrderByWithRelationInput | permissionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: permissionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` permissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned permissions
    **/
    _count?: true | PermissionsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PermissionsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PermissionsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PermissionsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PermissionsMaxAggregateInputType
  }

  export type GetPermissionsAggregateType<T extends PermissionsAggregateArgs> = {
        [P in keyof T & keyof AggregatePermissions]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePermissions[P]>
      : GetScalarType<T[P], AggregatePermissions[P]>
  }




  export type permissionsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: permissionsWhereInput
    orderBy?: permissionsOrderByWithAggregationInput | permissionsOrderByWithAggregationInput[]
    by: PermissionsScalarFieldEnum[] | PermissionsScalarFieldEnum
    having?: permissionsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PermissionsCountAggregateInputType | true
    _avg?: PermissionsAvgAggregateInputType
    _sum?: PermissionsSumAggregateInputType
    _min?: PermissionsMinAggregateInputType
    _max?: PermissionsMaxAggregateInputType
  }

  export type PermissionsGroupByOutputType = {
    id: bigint
    name: string
    guard_name: string
    created_at: Date | null
    updated_at: Date | null
    _count: PermissionsCountAggregateOutputType | null
    _avg: PermissionsAvgAggregateOutputType | null
    _sum: PermissionsSumAggregateOutputType | null
    _min: PermissionsMinAggregateOutputType | null
    _max: PermissionsMaxAggregateOutputType | null
  }

  type GetPermissionsGroupByPayload<T extends permissionsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PermissionsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PermissionsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PermissionsGroupByOutputType[P]>
            : GetScalarType<T[P], PermissionsGroupByOutputType[P]>
        }
      >
    >


  export type permissionsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    guard_name?: boolean
    created_at?: boolean
    updated_at?: boolean
    model_has_permissions?: boolean | permissions$model_has_permissionsArgs<ExtArgs>
    role_has_permissions?: boolean | permissions$role_has_permissionsArgs<ExtArgs>
    _count?: boolean | PermissionsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["permissions"]>

  export type permissionsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    guard_name?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["permissions"]>

  export type permissionsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    guard_name?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["permissions"]>

  export type permissionsSelectScalar = {
    id?: boolean
    name?: boolean
    guard_name?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type permissionsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "guard_name" | "created_at" | "updated_at", ExtArgs["result"]["permissions"]>
  export type permissionsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    model_has_permissions?: boolean | permissions$model_has_permissionsArgs<ExtArgs>
    role_has_permissions?: boolean | permissions$role_has_permissionsArgs<ExtArgs>
    _count?: boolean | PermissionsCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type permissionsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type permissionsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $permissionsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "permissions"
    objects: {
      model_has_permissions: Prisma.$model_has_permissionsPayload<ExtArgs>[]
      role_has_permissions: Prisma.$role_has_permissionsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      name: string
      guard_name: string
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["permissions"]>
    composites: {}
  }

  type permissionsGetPayload<S extends boolean | null | undefined | permissionsDefaultArgs> = $Result.GetResult<Prisma.$permissionsPayload, S>

  type permissionsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<permissionsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit' | 'relationLoadStrategy'> & {
      select?: PermissionsCountAggregateInputType | true
    }

  export interface permissionsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['permissions'], meta: { name: 'permissions' } }
    /**
     * Find zero or one Permissions that matches the filter.
     * @param {permissionsFindUniqueArgs} args - Arguments to find a Permissions
     * @example
     * // Get one Permissions
     * const permissions = await prisma.permissions.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends permissionsFindUniqueArgs>(args: SelectSubset<T, permissionsFindUniqueArgs<ExtArgs>>): Prisma__permissionsClient<$Result.GetResult<Prisma.$permissionsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Permissions that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {permissionsFindUniqueOrThrowArgs} args - Arguments to find a Permissions
     * @example
     * // Get one Permissions
     * const permissions = await prisma.permissions.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends permissionsFindUniqueOrThrowArgs>(args: SelectSubset<T, permissionsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__permissionsClient<$Result.GetResult<Prisma.$permissionsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Permissions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {permissionsFindFirstArgs} args - Arguments to find a Permissions
     * @example
     * // Get one Permissions
     * const permissions = await prisma.permissions.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends permissionsFindFirstArgs>(args?: SelectSubset<T, permissionsFindFirstArgs<ExtArgs>>): Prisma__permissionsClient<$Result.GetResult<Prisma.$permissionsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Permissions that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {permissionsFindFirstOrThrowArgs} args - Arguments to find a Permissions
     * @example
     * // Get one Permissions
     * const permissions = await prisma.permissions.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends permissionsFindFirstOrThrowArgs>(args?: SelectSubset<T, permissionsFindFirstOrThrowArgs<ExtArgs>>): Prisma__permissionsClient<$Result.GetResult<Prisma.$permissionsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Permissions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {permissionsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Permissions
     * const permissions = await prisma.permissions.findMany()
     * 
     * // Get first 10 Permissions
     * const permissions = await prisma.permissions.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const permissionsWithIdOnly = await prisma.permissions.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends permissionsFindManyArgs>(args?: SelectSubset<T, permissionsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$permissionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Permissions.
     * @param {permissionsCreateArgs} args - Arguments to create a Permissions.
     * @example
     * // Create one Permissions
     * const Permissions = await prisma.permissions.create({
     *   data: {
     *     // ... data to create a Permissions
     *   }
     * })
     * 
     */
    create<T extends permissionsCreateArgs>(args: SelectSubset<T, permissionsCreateArgs<ExtArgs>>): Prisma__permissionsClient<$Result.GetResult<Prisma.$permissionsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Permissions.
     * @param {permissionsCreateManyArgs} args - Arguments to create many Permissions.
     * @example
     * // Create many Permissions
     * const permissions = await prisma.permissions.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends permissionsCreateManyArgs>(args?: SelectSubset<T, permissionsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Permissions and returns the data saved in the database.
     * @param {permissionsCreateManyAndReturnArgs} args - Arguments to create many Permissions.
     * @example
     * // Create many Permissions
     * const permissions = await prisma.permissions.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Permissions and only return the `id`
     * const permissionsWithIdOnly = await prisma.permissions.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends permissionsCreateManyAndReturnArgs>(args?: SelectSubset<T, permissionsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$permissionsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Permissions.
     * @param {permissionsDeleteArgs} args - Arguments to delete one Permissions.
     * @example
     * // Delete one Permissions
     * const Permissions = await prisma.permissions.delete({
     *   where: {
     *     // ... filter to delete one Permissions
     *   }
     * })
     * 
     */
    delete<T extends permissionsDeleteArgs>(args: SelectSubset<T, permissionsDeleteArgs<ExtArgs>>): Prisma__permissionsClient<$Result.GetResult<Prisma.$permissionsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Permissions.
     * @param {permissionsUpdateArgs} args - Arguments to update one Permissions.
     * @example
     * // Update one Permissions
     * const permissions = await prisma.permissions.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends permissionsUpdateArgs>(args: SelectSubset<T, permissionsUpdateArgs<ExtArgs>>): Prisma__permissionsClient<$Result.GetResult<Prisma.$permissionsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Permissions.
     * @param {permissionsDeleteManyArgs} args - Arguments to filter Permissions to delete.
     * @example
     * // Delete a few Permissions
     * const { count } = await prisma.permissions.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends permissionsDeleteManyArgs>(args?: SelectSubset<T, permissionsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Permissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {permissionsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Permissions
     * const permissions = await prisma.permissions.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends permissionsUpdateManyArgs>(args: SelectSubset<T, permissionsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Permissions and returns the data updated in the database.
     * @param {permissionsUpdateManyAndReturnArgs} args - Arguments to update many Permissions.
     * @example
     * // Update many Permissions
     * const permissions = await prisma.permissions.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Permissions and only return the `id`
     * const permissionsWithIdOnly = await prisma.permissions.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends permissionsUpdateManyAndReturnArgs>(args: SelectSubset<T, permissionsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$permissionsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Permissions.
     * @param {permissionsUpsertArgs} args - Arguments to update or create a Permissions.
     * @example
     * // Update or create a Permissions
     * const permissions = await prisma.permissions.upsert({
     *   create: {
     *     // ... data to create a Permissions
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Permissions we want to update
     *   }
     * })
     */
    upsert<T extends permissionsUpsertArgs>(args: SelectSubset<T, permissionsUpsertArgs<ExtArgs>>): Prisma__permissionsClient<$Result.GetResult<Prisma.$permissionsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Permissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {permissionsCountArgs} args - Arguments to filter Permissions to count.
     * @example
     * // Count the number of Permissions
     * const count = await prisma.permissions.count({
     *   where: {
     *     // ... the filter for the Permissions we want to count
     *   }
     * })
    **/
    count<T extends permissionsCountArgs>(
      args?: Subset<T, permissionsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PermissionsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Permissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermissionsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PermissionsAggregateArgs>(args: Subset<T, PermissionsAggregateArgs>): Prisma.PrismaPromise<GetPermissionsAggregateType<T>>

    /**
     * Group by Permissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {permissionsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends permissionsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: permissionsGroupByArgs['orderBy'] }
        : { orderBy?: permissionsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, permissionsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPermissionsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the permissions model
   */
  readonly fields: permissionsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for permissions.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__permissionsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    model_has_permissions<T extends permissions$model_has_permissionsArgs<ExtArgs> = {}>(args?: Subset<T, permissions$model_has_permissionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$model_has_permissionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    role_has_permissions<T extends permissions$role_has_permissionsArgs<ExtArgs> = {}>(args?: Subset<T, permissions$role_has_permissionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$role_has_permissionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the permissions model
   */ 
  interface permissionsFieldRefs {
    readonly id: FieldRef<"permissions", 'BigInt'>
    readonly name: FieldRef<"permissions", 'String'>
    readonly guard_name: FieldRef<"permissions", 'String'>
    readonly created_at: FieldRef<"permissions", 'DateTime'>
    readonly updated_at: FieldRef<"permissions", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * permissions findUnique
   */
  export type permissionsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permissions
     */
    select?: permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the permissions
     */
    omit?: permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: permissionsInclude<ExtArgs> | null
    /**
     * Filter, which permissions to fetch.
     */
    where: permissionsWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * permissions findUniqueOrThrow
   */
  export type permissionsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permissions
     */
    select?: permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the permissions
     */
    omit?: permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: permissionsInclude<ExtArgs> | null
    /**
     * Filter, which permissions to fetch.
     */
    where: permissionsWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * permissions findFirst
   */
  export type permissionsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permissions
     */
    select?: permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the permissions
     */
    omit?: permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: permissionsInclude<ExtArgs> | null
    /**
     * Filter, which permissions to fetch.
     */
    where?: permissionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of permissions to fetch.
     */
    orderBy?: permissionsOrderByWithRelationInput | permissionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for permissions.
     */
    cursor?: permissionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` permissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of permissions.
     */
    distinct?: PermissionsScalarFieldEnum | PermissionsScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * permissions findFirstOrThrow
   */
  export type permissionsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permissions
     */
    select?: permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the permissions
     */
    omit?: permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: permissionsInclude<ExtArgs> | null
    /**
     * Filter, which permissions to fetch.
     */
    where?: permissionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of permissions to fetch.
     */
    orderBy?: permissionsOrderByWithRelationInput | permissionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for permissions.
     */
    cursor?: permissionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` permissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of permissions.
     */
    distinct?: PermissionsScalarFieldEnum | PermissionsScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * permissions findMany
   */
  export type permissionsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permissions
     */
    select?: permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the permissions
     */
    omit?: permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: permissionsInclude<ExtArgs> | null
    /**
     * Filter, which permissions to fetch.
     */
    where?: permissionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of permissions to fetch.
     */
    orderBy?: permissionsOrderByWithRelationInput | permissionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing permissions.
     */
    cursor?: permissionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` permissions.
     */
    skip?: number
    distinct?: PermissionsScalarFieldEnum | PermissionsScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * permissions create
   */
  export type permissionsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permissions
     */
    select?: permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the permissions
     */
    omit?: permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: permissionsInclude<ExtArgs> | null
    /**
     * The data needed to create a permissions.
     */
    data: XOR<permissionsCreateInput, permissionsUncheckedCreateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * permissions createMany
   */
  export type permissionsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many permissions.
     */
    data: permissionsCreateManyInput | permissionsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * permissions createManyAndReturn
   */
  export type permissionsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permissions
     */
    select?: permissionsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the permissions
     */
    omit?: permissionsOmit<ExtArgs> | null
    /**
     * The data used to create many permissions.
     */
    data: permissionsCreateManyInput | permissionsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * permissions update
   */
  export type permissionsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permissions
     */
    select?: permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the permissions
     */
    omit?: permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: permissionsInclude<ExtArgs> | null
    /**
     * The data needed to update a permissions.
     */
    data: XOR<permissionsUpdateInput, permissionsUncheckedUpdateInput>
    /**
     * Choose, which permissions to update.
     */
    where: permissionsWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * permissions updateMany
   */
  export type permissionsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update permissions.
     */
    data: XOR<permissionsUpdateManyMutationInput, permissionsUncheckedUpdateManyInput>
    /**
     * Filter which permissions to update
     */
    where?: permissionsWhereInput
    /**
     * Limit how many permissions to update.
     */
    limit?: number
  }

  /**
   * permissions updateManyAndReturn
   */
  export type permissionsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permissions
     */
    select?: permissionsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the permissions
     */
    omit?: permissionsOmit<ExtArgs> | null
    /**
     * The data used to update permissions.
     */
    data: XOR<permissionsUpdateManyMutationInput, permissionsUncheckedUpdateManyInput>
    /**
     * Filter which permissions to update
     */
    where?: permissionsWhereInput
    /**
     * Limit how many permissions to update.
     */
    limit?: number
  }

  /**
   * permissions upsert
   */
  export type permissionsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permissions
     */
    select?: permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the permissions
     */
    omit?: permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: permissionsInclude<ExtArgs> | null
    /**
     * The filter to search for the permissions to update in case it exists.
     */
    where: permissionsWhereUniqueInput
    /**
     * In case the permissions found by the `where` argument doesn't exist, create a new permissions with this data.
     */
    create: XOR<permissionsCreateInput, permissionsUncheckedCreateInput>
    /**
     * In case the permissions was found with the provided `where` argument, update it with this data.
     */
    update: XOR<permissionsUpdateInput, permissionsUncheckedUpdateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * permissions delete
   */
  export type permissionsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permissions
     */
    select?: permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the permissions
     */
    omit?: permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: permissionsInclude<ExtArgs> | null
    /**
     * Filter which permissions to delete.
     */
    where: permissionsWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * permissions deleteMany
   */
  export type permissionsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which permissions to delete
     */
    where?: permissionsWhereInput
    /**
     * Limit how many permissions to delete.
     */
    limit?: number
  }

  /**
   * permissions.model_has_permissions
   */
  export type permissions$model_has_permissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the model_has_permissions
     */
    select?: model_has_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the model_has_permissions
     */
    omit?: model_has_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: model_has_permissionsInclude<ExtArgs> | null
    where?: model_has_permissionsWhereInput
    orderBy?: model_has_permissionsOrderByWithRelationInput | model_has_permissionsOrderByWithRelationInput[]
    cursor?: model_has_permissionsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Model_has_permissionsScalarFieldEnum | Model_has_permissionsScalarFieldEnum[]
  }

  /**
   * permissions.role_has_permissions
   */
  export type permissions$role_has_permissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role_has_permissions
     */
    select?: role_has_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the role_has_permissions
     */
    omit?: role_has_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: role_has_permissionsInclude<ExtArgs> | null
    where?: role_has_permissionsWhereInput
    orderBy?: role_has_permissionsOrderByWithRelationInput | role_has_permissionsOrderByWithRelationInput[]
    cursor?: role_has_permissionsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Role_has_permissionsScalarFieldEnum | Role_has_permissionsScalarFieldEnum[]
  }

  /**
   * permissions without action
   */
  export type permissionsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permissions
     */
    select?: permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the permissions
     */
    omit?: permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: permissionsInclude<ExtArgs> | null
  }


  /**
   * Model personal_access_tokens
   */

  export type AggregatePersonal_access_tokens = {
    _count: Personal_access_tokensCountAggregateOutputType | null
    _avg: Personal_access_tokensAvgAggregateOutputType | null
    _sum: Personal_access_tokensSumAggregateOutputType | null
    _min: Personal_access_tokensMinAggregateOutputType | null
    _max: Personal_access_tokensMaxAggregateOutputType | null
  }

  export type Personal_access_tokensAvgAggregateOutputType = {
    id: number | null
    tokenable_id: number | null
  }

  export type Personal_access_tokensSumAggregateOutputType = {
    id: bigint | null
    tokenable_id: bigint | null
  }

  export type Personal_access_tokensMinAggregateOutputType = {
    id: bigint | null
    tokenable_type: string | null
    tokenable_id: bigint | null
    name: string | null
    token: string | null
    abilities: string | null
    last_used_at: Date | null
    expires_at: Date | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Personal_access_tokensMaxAggregateOutputType = {
    id: bigint | null
    tokenable_type: string | null
    tokenable_id: bigint | null
    name: string | null
    token: string | null
    abilities: string | null
    last_used_at: Date | null
    expires_at: Date | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Personal_access_tokensCountAggregateOutputType = {
    id: number
    tokenable_type: number
    tokenable_id: number
    name: number
    token: number
    abilities: number
    last_used_at: number
    expires_at: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Personal_access_tokensAvgAggregateInputType = {
    id?: true
    tokenable_id?: true
  }

  export type Personal_access_tokensSumAggregateInputType = {
    id?: true
    tokenable_id?: true
  }

  export type Personal_access_tokensMinAggregateInputType = {
    id?: true
    tokenable_type?: true
    tokenable_id?: true
    name?: true
    token?: true
    abilities?: true
    last_used_at?: true
    expires_at?: true
    created_at?: true
    updated_at?: true
  }

  export type Personal_access_tokensMaxAggregateInputType = {
    id?: true
    tokenable_type?: true
    tokenable_id?: true
    name?: true
    token?: true
    abilities?: true
    last_used_at?: true
    expires_at?: true
    created_at?: true
    updated_at?: true
  }

  export type Personal_access_tokensCountAggregateInputType = {
    id?: true
    tokenable_type?: true
    tokenable_id?: true
    name?: true
    token?: true
    abilities?: true
    last_used_at?: true
    expires_at?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Personal_access_tokensAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which personal_access_tokens to aggregate.
     */
    where?: personal_access_tokensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of personal_access_tokens to fetch.
     */
    orderBy?: personal_access_tokensOrderByWithRelationInput | personal_access_tokensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: personal_access_tokensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` personal_access_tokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` personal_access_tokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned personal_access_tokens
    **/
    _count?: true | Personal_access_tokensCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Personal_access_tokensAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Personal_access_tokensSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Personal_access_tokensMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Personal_access_tokensMaxAggregateInputType
  }

  export type GetPersonal_access_tokensAggregateType<T extends Personal_access_tokensAggregateArgs> = {
        [P in keyof T & keyof AggregatePersonal_access_tokens]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePersonal_access_tokens[P]>
      : GetScalarType<T[P], AggregatePersonal_access_tokens[P]>
  }




  export type personal_access_tokensGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: personal_access_tokensWhereInput
    orderBy?: personal_access_tokensOrderByWithAggregationInput | personal_access_tokensOrderByWithAggregationInput[]
    by: Personal_access_tokensScalarFieldEnum[] | Personal_access_tokensScalarFieldEnum
    having?: personal_access_tokensScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Personal_access_tokensCountAggregateInputType | true
    _avg?: Personal_access_tokensAvgAggregateInputType
    _sum?: Personal_access_tokensSumAggregateInputType
    _min?: Personal_access_tokensMinAggregateInputType
    _max?: Personal_access_tokensMaxAggregateInputType
  }

  export type Personal_access_tokensGroupByOutputType = {
    id: bigint
    tokenable_type: string
    tokenable_id: bigint
    name: string
    token: string
    abilities: string | null
    last_used_at: Date | null
    expires_at: Date | null
    created_at: Date | null
    updated_at: Date | null
    _count: Personal_access_tokensCountAggregateOutputType | null
    _avg: Personal_access_tokensAvgAggregateOutputType | null
    _sum: Personal_access_tokensSumAggregateOutputType | null
    _min: Personal_access_tokensMinAggregateOutputType | null
    _max: Personal_access_tokensMaxAggregateOutputType | null
  }

  type GetPersonal_access_tokensGroupByPayload<T extends personal_access_tokensGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Personal_access_tokensGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Personal_access_tokensGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Personal_access_tokensGroupByOutputType[P]>
            : GetScalarType<T[P], Personal_access_tokensGroupByOutputType[P]>
        }
      >
    >


  export type personal_access_tokensSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    tokenable_type?: boolean
    tokenable_id?: boolean
    name?: boolean
    token?: boolean
    abilities?: boolean
    last_used_at?: boolean
    expires_at?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["personal_access_tokens"]>

  export type personal_access_tokensSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    tokenable_type?: boolean
    tokenable_id?: boolean
    name?: boolean
    token?: boolean
    abilities?: boolean
    last_used_at?: boolean
    expires_at?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["personal_access_tokens"]>

  export type personal_access_tokensSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    tokenable_type?: boolean
    tokenable_id?: boolean
    name?: boolean
    token?: boolean
    abilities?: boolean
    last_used_at?: boolean
    expires_at?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["personal_access_tokens"]>

  export type personal_access_tokensSelectScalar = {
    id?: boolean
    tokenable_type?: boolean
    tokenable_id?: boolean
    name?: boolean
    token?: boolean
    abilities?: boolean
    last_used_at?: boolean
    expires_at?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type personal_access_tokensOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "tokenable_type" | "tokenable_id" | "name" | "token" | "abilities" | "last_used_at" | "expires_at" | "created_at" | "updated_at", ExtArgs["result"]["personal_access_tokens"]>

  export type $personal_access_tokensPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "personal_access_tokens"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      tokenable_type: string
      tokenable_id: bigint
      name: string
      token: string
      abilities: string | null
      last_used_at: Date | null
      expires_at: Date | null
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["personal_access_tokens"]>
    composites: {}
  }

  type personal_access_tokensGetPayload<S extends boolean | null | undefined | personal_access_tokensDefaultArgs> = $Result.GetResult<Prisma.$personal_access_tokensPayload, S>

  type personal_access_tokensCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<personal_access_tokensFindManyArgs, 'select' | 'include' | 'distinct' | 'omit' | 'relationLoadStrategy'> & {
      select?: Personal_access_tokensCountAggregateInputType | true
    }

  export interface personal_access_tokensDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['personal_access_tokens'], meta: { name: 'personal_access_tokens' } }
    /**
     * Find zero or one Personal_access_tokens that matches the filter.
     * @param {personal_access_tokensFindUniqueArgs} args - Arguments to find a Personal_access_tokens
     * @example
     * // Get one Personal_access_tokens
     * const personal_access_tokens = await prisma.personal_access_tokens.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends personal_access_tokensFindUniqueArgs>(args: SelectSubset<T, personal_access_tokensFindUniqueArgs<ExtArgs>>): Prisma__personal_access_tokensClient<$Result.GetResult<Prisma.$personal_access_tokensPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Personal_access_tokens that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {personal_access_tokensFindUniqueOrThrowArgs} args - Arguments to find a Personal_access_tokens
     * @example
     * // Get one Personal_access_tokens
     * const personal_access_tokens = await prisma.personal_access_tokens.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends personal_access_tokensFindUniqueOrThrowArgs>(args: SelectSubset<T, personal_access_tokensFindUniqueOrThrowArgs<ExtArgs>>): Prisma__personal_access_tokensClient<$Result.GetResult<Prisma.$personal_access_tokensPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Personal_access_tokens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {personal_access_tokensFindFirstArgs} args - Arguments to find a Personal_access_tokens
     * @example
     * // Get one Personal_access_tokens
     * const personal_access_tokens = await prisma.personal_access_tokens.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends personal_access_tokensFindFirstArgs>(args?: SelectSubset<T, personal_access_tokensFindFirstArgs<ExtArgs>>): Prisma__personal_access_tokensClient<$Result.GetResult<Prisma.$personal_access_tokensPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Personal_access_tokens that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {personal_access_tokensFindFirstOrThrowArgs} args - Arguments to find a Personal_access_tokens
     * @example
     * // Get one Personal_access_tokens
     * const personal_access_tokens = await prisma.personal_access_tokens.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends personal_access_tokensFindFirstOrThrowArgs>(args?: SelectSubset<T, personal_access_tokensFindFirstOrThrowArgs<ExtArgs>>): Prisma__personal_access_tokensClient<$Result.GetResult<Prisma.$personal_access_tokensPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Personal_access_tokens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {personal_access_tokensFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Personal_access_tokens
     * const personal_access_tokens = await prisma.personal_access_tokens.findMany()
     * 
     * // Get first 10 Personal_access_tokens
     * const personal_access_tokens = await prisma.personal_access_tokens.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const personal_access_tokensWithIdOnly = await prisma.personal_access_tokens.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends personal_access_tokensFindManyArgs>(args?: SelectSubset<T, personal_access_tokensFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$personal_access_tokensPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Personal_access_tokens.
     * @param {personal_access_tokensCreateArgs} args - Arguments to create a Personal_access_tokens.
     * @example
     * // Create one Personal_access_tokens
     * const Personal_access_tokens = await prisma.personal_access_tokens.create({
     *   data: {
     *     // ... data to create a Personal_access_tokens
     *   }
     * })
     * 
     */
    create<T extends personal_access_tokensCreateArgs>(args: SelectSubset<T, personal_access_tokensCreateArgs<ExtArgs>>): Prisma__personal_access_tokensClient<$Result.GetResult<Prisma.$personal_access_tokensPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Personal_access_tokens.
     * @param {personal_access_tokensCreateManyArgs} args - Arguments to create many Personal_access_tokens.
     * @example
     * // Create many Personal_access_tokens
     * const personal_access_tokens = await prisma.personal_access_tokens.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends personal_access_tokensCreateManyArgs>(args?: SelectSubset<T, personal_access_tokensCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Personal_access_tokens and returns the data saved in the database.
     * @param {personal_access_tokensCreateManyAndReturnArgs} args - Arguments to create many Personal_access_tokens.
     * @example
     * // Create many Personal_access_tokens
     * const personal_access_tokens = await prisma.personal_access_tokens.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Personal_access_tokens and only return the `id`
     * const personal_access_tokensWithIdOnly = await prisma.personal_access_tokens.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends personal_access_tokensCreateManyAndReturnArgs>(args?: SelectSubset<T, personal_access_tokensCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$personal_access_tokensPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Personal_access_tokens.
     * @param {personal_access_tokensDeleteArgs} args - Arguments to delete one Personal_access_tokens.
     * @example
     * // Delete one Personal_access_tokens
     * const Personal_access_tokens = await prisma.personal_access_tokens.delete({
     *   where: {
     *     // ... filter to delete one Personal_access_tokens
     *   }
     * })
     * 
     */
    delete<T extends personal_access_tokensDeleteArgs>(args: SelectSubset<T, personal_access_tokensDeleteArgs<ExtArgs>>): Prisma__personal_access_tokensClient<$Result.GetResult<Prisma.$personal_access_tokensPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Personal_access_tokens.
     * @param {personal_access_tokensUpdateArgs} args - Arguments to update one Personal_access_tokens.
     * @example
     * // Update one Personal_access_tokens
     * const personal_access_tokens = await prisma.personal_access_tokens.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends personal_access_tokensUpdateArgs>(args: SelectSubset<T, personal_access_tokensUpdateArgs<ExtArgs>>): Prisma__personal_access_tokensClient<$Result.GetResult<Prisma.$personal_access_tokensPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Personal_access_tokens.
     * @param {personal_access_tokensDeleteManyArgs} args - Arguments to filter Personal_access_tokens to delete.
     * @example
     * // Delete a few Personal_access_tokens
     * const { count } = await prisma.personal_access_tokens.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends personal_access_tokensDeleteManyArgs>(args?: SelectSubset<T, personal_access_tokensDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Personal_access_tokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {personal_access_tokensUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Personal_access_tokens
     * const personal_access_tokens = await prisma.personal_access_tokens.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends personal_access_tokensUpdateManyArgs>(args: SelectSubset<T, personal_access_tokensUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Personal_access_tokens and returns the data updated in the database.
     * @param {personal_access_tokensUpdateManyAndReturnArgs} args - Arguments to update many Personal_access_tokens.
     * @example
     * // Update many Personal_access_tokens
     * const personal_access_tokens = await prisma.personal_access_tokens.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Personal_access_tokens and only return the `id`
     * const personal_access_tokensWithIdOnly = await prisma.personal_access_tokens.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends personal_access_tokensUpdateManyAndReturnArgs>(args: SelectSubset<T, personal_access_tokensUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$personal_access_tokensPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Personal_access_tokens.
     * @param {personal_access_tokensUpsertArgs} args - Arguments to update or create a Personal_access_tokens.
     * @example
     * // Update or create a Personal_access_tokens
     * const personal_access_tokens = await prisma.personal_access_tokens.upsert({
     *   create: {
     *     // ... data to create a Personal_access_tokens
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Personal_access_tokens we want to update
     *   }
     * })
     */
    upsert<T extends personal_access_tokensUpsertArgs>(args: SelectSubset<T, personal_access_tokensUpsertArgs<ExtArgs>>): Prisma__personal_access_tokensClient<$Result.GetResult<Prisma.$personal_access_tokensPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Personal_access_tokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {personal_access_tokensCountArgs} args - Arguments to filter Personal_access_tokens to count.
     * @example
     * // Count the number of Personal_access_tokens
     * const count = await prisma.personal_access_tokens.count({
     *   where: {
     *     // ... the filter for the Personal_access_tokens we want to count
     *   }
     * })
    **/
    count<T extends personal_access_tokensCountArgs>(
      args?: Subset<T, personal_access_tokensCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Personal_access_tokensCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Personal_access_tokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Personal_access_tokensAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Personal_access_tokensAggregateArgs>(args: Subset<T, Personal_access_tokensAggregateArgs>): Prisma.PrismaPromise<GetPersonal_access_tokensAggregateType<T>>

    /**
     * Group by Personal_access_tokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {personal_access_tokensGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends personal_access_tokensGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: personal_access_tokensGroupByArgs['orderBy'] }
        : { orderBy?: personal_access_tokensGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, personal_access_tokensGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPersonal_access_tokensGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the personal_access_tokens model
   */
  readonly fields: personal_access_tokensFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for personal_access_tokens.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__personal_access_tokensClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the personal_access_tokens model
   */ 
  interface personal_access_tokensFieldRefs {
    readonly id: FieldRef<"personal_access_tokens", 'BigInt'>
    readonly tokenable_type: FieldRef<"personal_access_tokens", 'String'>
    readonly tokenable_id: FieldRef<"personal_access_tokens", 'BigInt'>
    readonly name: FieldRef<"personal_access_tokens", 'String'>
    readonly token: FieldRef<"personal_access_tokens", 'String'>
    readonly abilities: FieldRef<"personal_access_tokens", 'String'>
    readonly last_used_at: FieldRef<"personal_access_tokens", 'DateTime'>
    readonly expires_at: FieldRef<"personal_access_tokens", 'DateTime'>
    readonly created_at: FieldRef<"personal_access_tokens", 'DateTime'>
    readonly updated_at: FieldRef<"personal_access_tokens", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * personal_access_tokens findUnique
   */
  export type personal_access_tokensFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the personal_access_tokens
     */
    select?: personal_access_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the personal_access_tokens
     */
    omit?: personal_access_tokensOmit<ExtArgs> | null
    /**
     * Filter, which personal_access_tokens to fetch.
     */
    where: personal_access_tokensWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * personal_access_tokens findUniqueOrThrow
   */
  export type personal_access_tokensFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the personal_access_tokens
     */
    select?: personal_access_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the personal_access_tokens
     */
    omit?: personal_access_tokensOmit<ExtArgs> | null
    /**
     * Filter, which personal_access_tokens to fetch.
     */
    where: personal_access_tokensWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * personal_access_tokens findFirst
   */
  export type personal_access_tokensFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the personal_access_tokens
     */
    select?: personal_access_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the personal_access_tokens
     */
    omit?: personal_access_tokensOmit<ExtArgs> | null
    /**
     * Filter, which personal_access_tokens to fetch.
     */
    where?: personal_access_tokensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of personal_access_tokens to fetch.
     */
    orderBy?: personal_access_tokensOrderByWithRelationInput | personal_access_tokensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for personal_access_tokens.
     */
    cursor?: personal_access_tokensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` personal_access_tokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` personal_access_tokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of personal_access_tokens.
     */
    distinct?: Personal_access_tokensScalarFieldEnum | Personal_access_tokensScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * personal_access_tokens findFirstOrThrow
   */
  export type personal_access_tokensFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the personal_access_tokens
     */
    select?: personal_access_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the personal_access_tokens
     */
    omit?: personal_access_tokensOmit<ExtArgs> | null
    /**
     * Filter, which personal_access_tokens to fetch.
     */
    where?: personal_access_tokensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of personal_access_tokens to fetch.
     */
    orderBy?: personal_access_tokensOrderByWithRelationInput | personal_access_tokensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for personal_access_tokens.
     */
    cursor?: personal_access_tokensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` personal_access_tokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` personal_access_tokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of personal_access_tokens.
     */
    distinct?: Personal_access_tokensScalarFieldEnum | Personal_access_tokensScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * personal_access_tokens findMany
   */
  export type personal_access_tokensFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the personal_access_tokens
     */
    select?: personal_access_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the personal_access_tokens
     */
    omit?: personal_access_tokensOmit<ExtArgs> | null
    /**
     * Filter, which personal_access_tokens to fetch.
     */
    where?: personal_access_tokensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of personal_access_tokens to fetch.
     */
    orderBy?: personal_access_tokensOrderByWithRelationInput | personal_access_tokensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing personal_access_tokens.
     */
    cursor?: personal_access_tokensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` personal_access_tokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` personal_access_tokens.
     */
    skip?: number
    distinct?: Personal_access_tokensScalarFieldEnum | Personal_access_tokensScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * personal_access_tokens create
   */
  export type personal_access_tokensCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the personal_access_tokens
     */
    select?: personal_access_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the personal_access_tokens
     */
    omit?: personal_access_tokensOmit<ExtArgs> | null
    /**
     * The data needed to create a personal_access_tokens.
     */
    data: XOR<personal_access_tokensCreateInput, personal_access_tokensUncheckedCreateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * personal_access_tokens createMany
   */
  export type personal_access_tokensCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many personal_access_tokens.
     */
    data: personal_access_tokensCreateManyInput | personal_access_tokensCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * personal_access_tokens createManyAndReturn
   */
  export type personal_access_tokensCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the personal_access_tokens
     */
    select?: personal_access_tokensSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the personal_access_tokens
     */
    omit?: personal_access_tokensOmit<ExtArgs> | null
    /**
     * The data used to create many personal_access_tokens.
     */
    data: personal_access_tokensCreateManyInput | personal_access_tokensCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * personal_access_tokens update
   */
  export type personal_access_tokensUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the personal_access_tokens
     */
    select?: personal_access_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the personal_access_tokens
     */
    omit?: personal_access_tokensOmit<ExtArgs> | null
    /**
     * The data needed to update a personal_access_tokens.
     */
    data: XOR<personal_access_tokensUpdateInput, personal_access_tokensUncheckedUpdateInput>
    /**
     * Choose, which personal_access_tokens to update.
     */
    where: personal_access_tokensWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * personal_access_tokens updateMany
   */
  export type personal_access_tokensUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update personal_access_tokens.
     */
    data: XOR<personal_access_tokensUpdateManyMutationInput, personal_access_tokensUncheckedUpdateManyInput>
    /**
     * Filter which personal_access_tokens to update
     */
    where?: personal_access_tokensWhereInput
    /**
     * Limit how many personal_access_tokens to update.
     */
    limit?: number
  }

  /**
   * personal_access_tokens updateManyAndReturn
   */
  export type personal_access_tokensUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the personal_access_tokens
     */
    select?: personal_access_tokensSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the personal_access_tokens
     */
    omit?: personal_access_tokensOmit<ExtArgs> | null
    /**
     * The data used to update personal_access_tokens.
     */
    data: XOR<personal_access_tokensUpdateManyMutationInput, personal_access_tokensUncheckedUpdateManyInput>
    /**
     * Filter which personal_access_tokens to update
     */
    where?: personal_access_tokensWhereInput
    /**
     * Limit how many personal_access_tokens to update.
     */
    limit?: number
  }

  /**
   * personal_access_tokens upsert
   */
  export type personal_access_tokensUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the personal_access_tokens
     */
    select?: personal_access_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the personal_access_tokens
     */
    omit?: personal_access_tokensOmit<ExtArgs> | null
    /**
     * The filter to search for the personal_access_tokens to update in case it exists.
     */
    where: personal_access_tokensWhereUniqueInput
    /**
     * In case the personal_access_tokens found by the `where` argument doesn't exist, create a new personal_access_tokens with this data.
     */
    create: XOR<personal_access_tokensCreateInput, personal_access_tokensUncheckedCreateInput>
    /**
     * In case the personal_access_tokens was found with the provided `where` argument, update it with this data.
     */
    update: XOR<personal_access_tokensUpdateInput, personal_access_tokensUncheckedUpdateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * personal_access_tokens delete
   */
  export type personal_access_tokensDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the personal_access_tokens
     */
    select?: personal_access_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the personal_access_tokens
     */
    omit?: personal_access_tokensOmit<ExtArgs> | null
    /**
     * Filter which personal_access_tokens to delete.
     */
    where: personal_access_tokensWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * personal_access_tokens deleteMany
   */
  export type personal_access_tokensDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which personal_access_tokens to delete
     */
    where?: personal_access_tokensWhereInput
    /**
     * Limit how many personal_access_tokens to delete.
     */
    limit?: number
  }

  /**
   * personal_access_tokens without action
   */
  export type personal_access_tokensDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the personal_access_tokens
     */
    select?: personal_access_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the personal_access_tokens
     */
    omit?: personal_access_tokensOmit<ExtArgs> | null
  }


  /**
   * Model provider_agents
   */

  export type AggregateProvider_agents = {
    _count: Provider_agentsCountAggregateOutputType | null
    _avg: Provider_agentsAvgAggregateOutputType | null
    _sum: Provider_agentsSumAggregateOutputType | null
    _min: Provider_agentsMinAggregateOutputType | null
    _max: Provider_agentsMaxAggregateOutputType | null
  }

  export type Provider_agentsAvgAggregateOutputType = {
    id: number | null
    provider_id: number | null
    user_id: number | null
    role: number | null
  }

  export type Provider_agentsSumAggregateOutputType = {
    id: bigint | null
    provider_id: bigint | null
    user_id: bigint | null
    role: number | null
  }

  export type Provider_agentsMinAggregateOutputType = {
    id: bigint | null
    provider_id: bigint | null
    user_id: bigint | null
    role: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Provider_agentsMaxAggregateOutputType = {
    id: bigint | null
    provider_id: bigint | null
    user_id: bigint | null
    role: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Provider_agentsCountAggregateOutputType = {
    id: number
    provider_id: number
    user_id: number
    role: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Provider_agentsAvgAggregateInputType = {
    id?: true
    provider_id?: true
    user_id?: true
    role?: true
  }

  export type Provider_agentsSumAggregateInputType = {
    id?: true
    provider_id?: true
    user_id?: true
    role?: true
  }

  export type Provider_agentsMinAggregateInputType = {
    id?: true
    provider_id?: true
    user_id?: true
    role?: true
    created_at?: true
    updated_at?: true
  }

  export type Provider_agentsMaxAggregateInputType = {
    id?: true
    provider_id?: true
    user_id?: true
    role?: true
    created_at?: true
    updated_at?: true
  }

  export type Provider_agentsCountAggregateInputType = {
    id?: true
    provider_id?: true
    user_id?: true
    role?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Provider_agentsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which provider_agents to aggregate.
     */
    where?: provider_agentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of provider_agents to fetch.
     */
    orderBy?: provider_agentsOrderByWithRelationInput | provider_agentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: provider_agentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` provider_agents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` provider_agents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned provider_agents
    **/
    _count?: true | Provider_agentsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Provider_agentsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Provider_agentsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Provider_agentsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Provider_agentsMaxAggregateInputType
  }

  export type GetProvider_agentsAggregateType<T extends Provider_agentsAggregateArgs> = {
        [P in keyof T & keyof AggregateProvider_agents]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProvider_agents[P]>
      : GetScalarType<T[P], AggregateProvider_agents[P]>
  }




  export type provider_agentsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: provider_agentsWhereInput
    orderBy?: provider_agentsOrderByWithAggregationInput | provider_agentsOrderByWithAggregationInput[]
    by: Provider_agentsScalarFieldEnum[] | Provider_agentsScalarFieldEnum
    having?: provider_agentsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Provider_agentsCountAggregateInputType | true
    _avg?: Provider_agentsAvgAggregateInputType
    _sum?: Provider_agentsSumAggregateInputType
    _min?: Provider_agentsMinAggregateInputType
    _max?: Provider_agentsMaxAggregateInputType
  }

  export type Provider_agentsGroupByOutputType = {
    id: bigint
    provider_id: bigint
    user_id: bigint
    role: number
    created_at: Date | null
    updated_at: Date | null
    _count: Provider_agentsCountAggregateOutputType | null
    _avg: Provider_agentsAvgAggregateOutputType | null
    _sum: Provider_agentsSumAggregateOutputType | null
    _min: Provider_agentsMinAggregateOutputType | null
    _max: Provider_agentsMaxAggregateOutputType | null
  }

  type GetProvider_agentsGroupByPayload<T extends provider_agentsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Provider_agentsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Provider_agentsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Provider_agentsGroupByOutputType[P]>
            : GetScalarType<T[P], Provider_agentsGroupByOutputType[P]>
        }
      >
    >


  export type provider_agentsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    provider_id?: boolean
    user_id?: boolean
    role?: boolean
    created_at?: boolean
    updated_at?: boolean
    providers?: boolean | providersDefaultArgs<ExtArgs>
    admins?: boolean | adminsDefaultArgs<ExtArgs>
    subscription_usages?: boolean | provider_agents$subscription_usagesArgs<ExtArgs>
    _count?: boolean | Provider_agentsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["provider_agents"]>

  export type provider_agentsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    provider_id?: boolean
    user_id?: boolean
    role?: boolean
    created_at?: boolean
    updated_at?: boolean
    providers?: boolean | providersDefaultArgs<ExtArgs>
    admins?: boolean | adminsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["provider_agents"]>

  export type provider_agentsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    provider_id?: boolean
    user_id?: boolean
    role?: boolean
    created_at?: boolean
    updated_at?: boolean
    providers?: boolean | providersDefaultArgs<ExtArgs>
    admins?: boolean | adminsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["provider_agents"]>

  export type provider_agentsSelectScalar = {
    id?: boolean
    provider_id?: boolean
    user_id?: boolean
    role?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type provider_agentsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "provider_id" | "user_id" | "role" | "created_at" | "updated_at", ExtArgs["result"]["provider_agents"]>
  export type provider_agentsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    providers?: boolean | providersDefaultArgs<ExtArgs>
    admins?: boolean | adminsDefaultArgs<ExtArgs>
    subscription_usages?: boolean | provider_agents$subscription_usagesArgs<ExtArgs>
    _count?: boolean | Provider_agentsCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type provider_agentsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    providers?: boolean | providersDefaultArgs<ExtArgs>
    admins?: boolean | adminsDefaultArgs<ExtArgs>
  }
  export type provider_agentsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    providers?: boolean | providersDefaultArgs<ExtArgs>
    admins?: boolean | adminsDefaultArgs<ExtArgs>
  }

  export type $provider_agentsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "provider_agents"
    objects: {
      providers: Prisma.$providersPayload<ExtArgs>
      admins: Prisma.$adminsPayload<ExtArgs>
      subscription_usages: Prisma.$subscription_usagesPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      provider_id: bigint
      user_id: bigint
      role: number
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["provider_agents"]>
    composites: {}
  }

  type provider_agentsGetPayload<S extends boolean | null | undefined | provider_agentsDefaultArgs> = $Result.GetResult<Prisma.$provider_agentsPayload, S>

  type provider_agentsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<provider_agentsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit' | 'relationLoadStrategy'> & {
      select?: Provider_agentsCountAggregateInputType | true
    }

  export interface provider_agentsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['provider_agents'], meta: { name: 'provider_agents' } }
    /**
     * Find zero or one Provider_agents that matches the filter.
     * @param {provider_agentsFindUniqueArgs} args - Arguments to find a Provider_agents
     * @example
     * // Get one Provider_agents
     * const provider_agents = await prisma.provider_agents.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends provider_agentsFindUniqueArgs>(args: SelectSubset<T, provider_agentsFindUniqueArgs<ExtArgs>>): Prisma__provider_agentsClient<$Result.GetResult<Prisma.$provider_agentsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Provider_agents that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {provider_agentsFindUniqueOrThrowArgs} args - Arguments to find a Provider_agents
     * @example
     * // Get one Provider_agents
     * const provider_agents = await prisma.provider_agents.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends provider_agentsFindUniqueOrThrowArgs>(args: SelectSubset<T, provider_agentsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__provider_agentsClient<$Result.GetResult<Prisma.$provider_agentsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Provider_agents that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {provider_agentsFindFirstArgs} args - Arguments to find a Provider_agents
     * @example
     * // Get one Provider_agents
     * const provider_agents = await prisma.provider_agents.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends provider_agentsFindFirstArgs>(args?: SelectSubset<T, provider_agentsFindFirstArgs<ExtArgs>>): Prisma__provider_agentsClient<$Result.GetResult<Prisma.$provider_agentsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Provider_agents that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {provider_agentsFindFirstOrThrowArgs} args - Arguments to find a Provider_agents
     * @example
     * // Get one Provider_agents
     * const provider_agents = await prisma.provider_agents.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends provider_agentsFindFirstOrThrowArgs>(args?: SelectSubset<T, provider_agentsFindFirstOrThrowArgs<ExtArgs>>): Prisma__provider_agentsClient<$Result.GetResult<Prisma.$provider_agentsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Provider_agents that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {provider_agentsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Provider_agents
     * const provider_agents = await prisma.provider_agents.findMany()
     * 
     * // Get first 10 Provider_agents
     * const provider_agents = await prisma.provider_agents.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const provider_agentsWithIdOnly = await prisma.provider_agents.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends provider_agentsFindManyArgs>(args?: SelectSubset<T, provider_agentsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$provider_agentsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Provider_agents.
     * @param {provider_agentsCreateArgs} args - Arguments to create a Provider_agents.
     * @example
     * // Create one Provider_agents
     * const Provider_agents = await prisma.provider_agents.create({
     *   data: {
     *     // ... data to create a Provider_agents
     *   }
     * })
     * 
     */
    create<T extends provider_agentsCreateArgs>(args: SelectSubset<T, provider_agentsCreateArgs<ExtArgs>>): Prisma__provider_agentsClient<$Result.GetResult<Prisma.$provider_agentsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Provider_agents.
     * @param {provider_agentsCreateManyArgs} args - Arguments to create many Provider_agents.
     * @example
     * // Create many Provider_agents
     * const provider_agents = await prisma.provider_agents.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends provider_agentsCreateManyArgs>(args?: SelectSubset<T, provider_agentsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Provider_agents and returns the data saved in the database.
     * @param {provider_agentsCreateManyAndReturnArgs} args - Arguments to create many Provider_agents.
     * @example
     * // Create many Provider_agents
     * const provider_agents = await prisma.provider_agents.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Provider_agents and only return the `id`
     * const provider_agentsWithIdOnly = await prisma.provider_agents.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends provider_agentsCreateManyAndReturnArgs>(args?: SelectSubset<T, provider_agentsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$provider_agentsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Provider_agents.
     * @param {provider_agentsDeleteArgs} args - Arguments to delete one Provider_agents.
     * @example
     * // Delete one Provider_agents
     * const Provider_agents = await prisma.provider_agents.delete({
     *   where: {
     *     // ... filter to delete one Provider_agents
     *   }
     * })
     * 
     */
    delete<T extends provider_agentsDeleteArgs>(args: SelectSubset<T, provider_agentsDeleteArgs<ExtArgs>>): Prisma__provider_agentsClient<$Result.GetResult<Prisma.$provider_agentsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Provider_agents.
     * @param {provider_agentsUpdateArgs} args - Arguments to update one Provider_agents.
     * @example
     * // Update one Provider_agents
     * const provider_agents = await prisma.provider_agents.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends provider_agentsUpdateArgs>(args: SelectSubset<T, provider_agentsUpdateArgs<ExtArgs>>): Prisma__provider_agentsClient<$Result.GetResult<Prisma.$provider_agentsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Provider_agents.
     * @param {provider_agentsDeleteManyArgs} args - Arguments to filter Provider_agents to delete.
     * @example
     * // Delete a few Provider_agents
     * const { count } = await prisma.provider_agents.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends provider_agentsDeleteManyArgs>(args?: SelectSubset<T, provider_agentsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Provider_agents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {provider_agentsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Provider_agents
     * const provider_agents = await prisma.provider_agents.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends provider_agentsUpdateManyArgs>(args: SelectSubset<T, provider_agentsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Provider_agents and returns the data updated in the database.
     * @param {provider_agentsUpdateManyAndReturnArgs} args - Arguments to update many Provider_agents.
     * @example
     * // Update many Provider_agents
     * const provider_agents = await prisma.provider_agents.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Provider_agents and only return the `id`
     * const provider_agentsWithIdOnly = await prisma.provider_agents.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends provider_agentsUpdateManyAndReturnArgs>(args: SelectSubset<T, provider_agentsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$provider_agentsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Provider_agents.
     * @param {provider_agentsUpsertArgs} args - Arguments to update or create a Provider_agents.
     * @example
     * // Update or create a Provider_agents
     * const provider_agents = await prisma.provider_agents.upsert({
     *   create: {
     *     // ... data to create a Provider_agents
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Provider_agents we want to update
     *   }
     * })
     */
    upsert<T extends provider_agentsUpsertArgs>(args: SelectSubset<T, provider_agentsUpsertArgs<ExtArgs>>): Prisma__provider_agentsClient<$Result.GetResult<Prisma.$provider_agentsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Provider_agents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {provider_agentsCountArgs} args - Arguments to filter Provider_agents to count.
     * @example
     * // Count the number of Provider_agents
     * const count = await prisma.provider_agents.count({
     *   where: {
     *     // ... the filter for the Provider_agents we want to count
     *   }
     * })
    **/
    count<T extends provider_agentsCountArgs>(
      args?: Subset<T, provider_agentsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Provider_agentsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Provider_agents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Provider_agentsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Provider_agentsAggregateArgs>(args: Subset<T, Provider_agentsAggregateArgs>): Prisma.PrismaPromise<GetProvider_agentsAggregateType<T>>

    /**
     * Group by Provider_agents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {provider_agentsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends provider_agentsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: provider_agentsGroupByArgs['orderBy'] }
        : { orderBy?: provider_agentsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, provider_agentsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProvider_agentsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the provider_agents model
   */
  readonly fields: provider_agentsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for provider_agents.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__provider_agentsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    providers<T extends providersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, providersDefaultArgs<ExtArgs>>): Prisma__providersClient<$Result.GetResult<Prisma.$providersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    admins<T extends adminsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, adminsDefaultArgs<ExtArgs>>): Prisma__adminsClient<$Result.GetResult<Prisma.$adminsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    subscription_usages<T extends provider_agents$subscription_usagesArgs<ExtArgs> = {}>(args?: Subset<T, provider_agents$subscription_usagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$subscription_usagesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the provider_agents model
   */ 
  interface provider_agentsFieldRefs {
    readonly id: FieldRef<"provider_agents", 'BigInt'>
    readonly provider_id: FieldRef<"provider_agents", 'BigInt'>
    readonly user_id: FieldRef<"provider_agents", 'BigInt'>
    readonly role: FieldRef<"provider_agents", 'Int'>
    readonly created_at: FieldRef<"provider_agents", 'DateTime'>
    readonly updated_at: FieldRef<"provider_agents", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * provider_agents findUnique
   */
  export type provider_agentsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the provider_agents
     */
    select?: provider_agentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the provider_agents
     */
    omit?: provider_agentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: provider_agentsInclude<ExtArgs> | null
    /**
     * Filter, which provider_agents to fetch.
     */
    where: provider_agentsWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * provider_agents findUniqueOrThrow
   */
  export type provider_agentsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the provider_agents
     */
    select?: provider_agentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the provider_agents
     */
    omit?: provider_agentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: provider_agentsInclude<ExtArgs> | null
    /**
     * Filter, which provider_agents to fetch.
     */
    where: provider_agentsWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * provider_agents findFirst
   */
  export type provider_agentsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the provider_agents
     */
    select?: provider_agentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the provider_agents
     */
    omit?: provider_agentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: provider_agentsInclude<ExtArgs> | null
    /**
     * Filter, which provider_agents to fetch.
     */
    where?: provider_agentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of provider_agents to fetch.
     */
    orderBy?: provider_agentsOrderByWithRelationInput | provider_agentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for provider_agents.
     */
    cursor?: provider_agentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` provider_agents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` provider_agents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of provider_agents.
     */
    distinct?: Provider_agentsScalarFieldEnum | Provider_agentsScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * provider_agents findFirstOrThrow
   */
  export type provider_agentsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the provider_agents
     */
    select?: provider_agentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the provider_agents
     */
    omit?: provider_agentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: provider_agentsInclude<ExtArgs> | null
    /**
     * Filter, which provider_agents to fetch.
     */
    where?: provider_agentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of provider_agents to fetch.
     */
    orderBy?: provider_agentsOrderByWithRelationInput | provider_agentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for provider_agents.
     */
    cursor?: provider_agentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` provider_agents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` provider_agents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of provider_agents.
     */
    distinct?: Provider_agentsScalarFieldEnum | Provider_agentsScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * provider_agents findMany
   */
  export type provider_agentsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the provider_agents
     */
    select?: provider_agentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the provider_agents
     */
    omit?: provider_agentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: provider_agentsInclude<ExtArgs> | null
    /**
     * Filter, which provider_agents to fetch.
     */
    where?: provider_agentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of provider_agents to fetch.
     */
    orderBy?: provider_agentsOrderByWithRelationInput | provider_agentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing provider_agents.
     */
    cursor?: provider_agentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` provider_agents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` provider_agents.
     */
    skip?: number
    distinct?: Provider_agentsScalarFieldEnum | Provider_agentsScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * provider_agents create
   */
  export type provider_agentsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the provider_agents
     */
    select?: provider_agentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the provider_agents
     */
    omit?: provider_agentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: provider_agentsInclude<ExtArgs> | null
    /**
     * The data needed to create a provider_agents.
     */
    data: XOR<provider_agentsCreateInput, provider_agentsUncheckedCreateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * provider_agents createMany
   */
  export type provider_agentsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many provider_agents.
     */
    data: provider_agentsCreateManyInput | provider_agentsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * provider_agents createManyAndReturn
   */
  export type provider_agentsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the provider_agents
     */
    select?: provider_agentsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the provider_agents
     */
    omit?: provider_agentsOmit<ExtArgs> | null
    /**
     * The data used to create many provider_agents.
     */
    data: provider_agentsCreateManyInput | provider_agentsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: provider_agentsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * provider_agents update
   */
  export type provider_agentsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the provider_agents
     */
    select?: provider_agentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the provider_agents
     */
    omit?: provider_agentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: provider_agentsInclude<ExtArgs> | null
    /**
     * The data needed to update a provider_agents.
     */
    data: XOR<provider_agentsUpdateInput, provider_agentsUncheckedUpdateInput>
    /**
     * Choose, which provider_agents to update.
     */
    where: provider_agentsWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * provider_agents updateMany
   */
  export type provider_agentsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update provider_agents.
     */
    data: XOR<provider_agentsUpdateManyMutationInput, provider_agentsUncheckedUpdateManyInput>
    /**
     * Filter which provider_agents to update
     */
    where?: provider_agentsWhereInput
    /**
     * Limit how many provider_agents to update.
     */
    limit?: number
  }

  /**
   * provider_agents updateManyAndReturn
   */
  export type provider_agentsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the provider_agents
     */
    select?: provider_agentsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the provider_agents
     */
    omit?: provider_agentsOmit<ExtArgs> | null
    /**
     * The data used to update provider_agents.
     */
    data: XOR<provider_agentsUpdateManyMutationInput, provider_agentsUncheckedUpdateManyInput>
    /**
     * Filter which provider_agents to update
     */
    where?: provider_agentsWhereInput
    /**
     * Limit how many provider_agents to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: provider_agentsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * provider_agents upsert
   */
  export type provider_agentsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the provider_agents
     */
    select?: provider_agentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the provider_agents
     */
    omit?: provider_agentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: provider_agentsInclude<ExtArgs> | null
    /**
     * The filter to search for the provider_agents to update in case it exists.
     */
    where: provider_agentsWhereUniqueInput
    /**
     * In case the provider_agents found by the `where` argument doesn't exist, create a new provider_agents with this data.
     */
    create: XOR<provider_agentsCreateInput, provider_agentsUncheckedCreateInput>
    /**
     * In case the provider_agents was found with the provided `where` argument, update it with this data.
     */
    update: XOR<provider_agentsUpdateInput, provider_agentsUncheckedUpdateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * provider_agents delete
   */
  export type provider_agentsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the provider_agents
     */
    select?: provider_agentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the provider_agents
     */
    omit?: provider_agentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: provider_agentsInclude<ExtArgs> | null
    /**
     * Filter which provider_agents to delete.
     */
    where: provider_agentsWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * provider_agents deleteMany
   */
  export type provider_agentsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which provider_agents to delete
     */
    where?: provider_agentsWhereInput
    /**
     * Limit how many provider_agents to delete.
     */
    limit?: number
  }

  /**
   * provider_agents.subscription_usages
   */
  export type provider_agents$subscription_usagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscription_usages
     */
    select?: subscription_usagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subscription_usages
     */
    omit?: subscription_usagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subscription_usagesInclude<ExtArgs> | null
    where?: subscription_usagesWhereInput
    orderBy?: subscription_usagesOrderByWithRelationInput | subscription_usagesOrderByWithRelationInput[]
    cursor?: subscription_usagesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Subscription_usagesScalarFieldEnum | Subscription_usagesScalarFieldEnum[]
  }

  /**
   * provider_agents without action
   */
  export type provider_agentsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the provider_agents
     */
    select?: provider_agentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the provider_agents
     */
    omit?: provider_agentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: provider_agentsInclude<ExtArgs> | null
  }


  /**
   * Model provider_offers
   */

  export type AggregateProvider_offers = {
    _count: Provider_offersCountAggregateOutputType | null
    _avg: Provider_offersAvgAggregateOutputType | null
    _sum: Provider_offersSumAggregateOutputType | null
    _min: Provider_offersMinAggregateOutputType | null
    _max: Provider_offersMaxAggregateOutputType | null
  }

  export type Provider_offersAvgAggregateOutputType = {
    id: number | null
    provider_id: number | null
    offer_id: number | null
  }

  export type Provider_offersSumAggregateOutputType = {
    id: bigint | null
    provider_id: bigint | null
    offer_id: bigint | null
  }

  export type Provider_offersMinAggregateOutputType = {
    id: bigint | null
    provider_id: bigint | null
    offer_id: bigint | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Provider_offersMaxAggregateOutputType = {
    id: bigint | null
    provider_id: bigint | null
    offer_id: bigint | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Provider_offersCountAggregateOutputType = {
    id: number
    provider_id: number
    offer_id: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Provider_offersAvgAggregateInputType = {
    id?: true
    provider_id?: true
    offer_id?: true
  }

  export type Provider_offersSumAggregateInputType = {
    id?: true
    provider_id?: true
    offer_id?: true
  }

  export type Provider_offersMinAggregateInputType = {
    id?: true
    provider_id?: true
    offer_id?: true
    created_at?: true
    updated_at?: true
  }

  export type Provider_offersMaxAggregateInputType = {
    id?: true
    provider_id?: true
    offer_id?: true
    created_at?: true
    updated_at?: true
  }

  export type Provider_offersCountAggregateInputType = {
    id?: true
    provider_id?: true
    offer_id?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Provider_offersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which provider_offers to aggregate.
     */
    where?: provider_offersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of provider_offers to fetch.
     */
    orderBy?: provider_offersOrderByWithRelationInput | provider_offersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: provider_offersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` provider_offers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` provider_offers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned provider_offers
    **/
    _count?: true | Provider_offersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Provider_offersAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Provider_offersSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Provider_offersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Provider_offersMaxAggregateInputType
  }

  export type GetProvider_offersAggregateType<T extends Provider_offersAggregateArgs> = {
        [P in keyof T & keyof AggregateProvider_offers]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProvider_offers[P]>
      : GetScalarType<T[P], AggregateProvider_offers[P]>
  }




  export type provider_offersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: provider_offersWhereInput
    orderBy?: provider_offersOrderByWithAggregationInput | provider_offersOrderByWithAggregationInput[]
    by: Provider_offersScalarFieldEnum[] | Provider_offersScalarFieldEnum
    having?: provider_offersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Provider_offersCountAggregateInputType | true
    _avg?: Provider_offersAvgAggregateInputType
    _sum?: Provider_offersSumAggregateInputType
    _min?: Provider_offersMinAggregateInputType
    _max?: Provider_offersMaxAggregateInputType
  }

  export type Provider_offersGroupByOutputType = {
    id: bigint
    provider_id: bigint
    offer_id: bigint
    created_at: Date | null
    updated_at: Date | null
    _count: Provider_offersCountAggregateOutputType | null
    _avg: Provider_offersAvgAggregateOutputType | null
    _sum: Provider_offersSumAggregateOutputType | null
    _min: Provider_offersMinAggregateOutputType | null
    _max: Provider_offersMaxAggregateOutputType | null
  }

  type GetProvider_offersGroupByPayload<T extends provider_offersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Provider_offersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Provider_offersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Provider_offersGroupByOutputType[P]>
            : GetScalarType<T[P], Provider_offersGroupByOutputType[P]>
        }
      >
    >


  export type provider_offersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    provider_id?: boolean
    offer_id?: boolean
    created_at?: boolean
    updated_at?: boolean
    offers?: boolean | offersDefaultArgs<ExtArgs>
    providers?: boolean | providersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["provider_offers"]>

  export type provider_offersSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    provider_id?: boolean
    offer_id?: boolean
    created_at?: boolean
    updated_at?: boolean
    offers?: boolean | offersDefaultArgs<ExtArgs>
    providers?: boolean | providersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["provider_offers"]>

  export type provider_offersSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    provider_id?: boolean
    offer_id?: boolean
    created_at?: boolean
    updated_at?: boolean
    offers?: boolean | offersDefaultArgs<ExtArgs>
    providers?: boolean | providersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["provider_offers"]>

  export type provider_offersSelectScalar = {
    id?: boolean
    provider_id?: boolean
    offer_id?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type provider_offersOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "provider_id" | "offer_id" | "created_at" | "updated_at", ExtArgs["result"]["provider_offers"]>
  export type provider_offersInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    offers?: boolean | offersDefaultArgs<ExtArgs>
    providers?: boolean | providersDefaultArgs<ExtArgs>
  }
  export type provider_offersIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    offers?: boolean | offersDefaultArgs<ExtArgs>
    providers?: boolean | providersDefaultArgs<ExtArgs>
  }
  export type provider_offersIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    offers?: boolean | offersDefaultArgs<ExtArgs>
    providers?: boolean | providersDefaultArgs<ExtArgs>
  }

  export type $provider_offersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "provider_offers"
    objects: {
      offers: Prisma.$offersPayload<ExtArgs>
      providers: Prisma.$providersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      provider_id: bigint
      offer_id: bigint
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["provider_offers"]>
    composites: {}
  }

  type provider_offersGetPayload<S extends boolean | null | undefined | provider_offersDefaultArgs> = $Result.GetResult<Prisma.$provider_offersPayload, S>

  type provider_offersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<provider_offersFindManyArgs, 'select' | 'include' | 'distinct' | 'omit' | 'relationLoadStrategy'> & {
      select?: Provider_offersCountAggregateInputType | true
    }

  export interface provider_offersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['provider_offers'], meta: { name: 'provider_offers' } }
    /**
     * Find zero or one Provider_offers that matches the filter.
     * @param {provider_offersFindUniqueArgs} args - Arguments to find a Provider_offers
     * @example
     * // Get one Provider_offers
     * const provider_offers = await prisma.provider_offers.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends provider_offersFindUniqueArgs>(args: SelectSubset<T, provider_offersFindUniqueArgs<ExtArgs>>): Prisma__provider_offersClient<$Result.GetResult<Prisma.$provider_offersPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Provider_offers that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {provider_offersFindUniqueOrThrowArgs} args - Arguments to find a Provider_offers
     * @example
     * // Get one Provider_offers
     * const provider_offers = await prisma.provider_offers.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends provider_offersFindUniqueOrThrowArgs>(args: SelectSubset<T, provider_offersFindUniqueOrThrowArgs<ExtArgs>>): Prisma__provider_offersClient<$Result.GetResult<Prisma.$provider_offersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Provider_offers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {provider_offersFindFirstArgs} args - Arguments to find a Provider_offers
     * @example
     * // Get one Provider_offers
     * const provider_offers = await prisma.provider_offers.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends provider_offersFindFirstArgs>(args?: SelectSubset<T, provider_offersFindFirstArgs<ExtArgs>>): Prisma__provider_offersClient<$Result.GetResult<Prisma.$provider_offersPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Provider_offers that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {provider_offersFindFirstOrThrowArgs} args - Arguments to find a Provider_offers
     * @example
     * // Get one Provider_offers
     * const provider_offers = await prisma.provider_offers.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends provider_offersFindFirstOrThrowArgs>(args?: SelectSubset<T, provider_offersFindFirstOrThrowArgs<ExtArgs>>): Prisma__provider_offersClient<$Result.GetResult<Prisma.$provider_offersPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Provider_offers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {provider_offersFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Provider_offers
     * const provider_offers = await prisma.provider_offers.findMany()
     * 
     * // Get first 10 Provider_offers
     * const provider_offers = await prisma.provider_offers.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const provider_offersWithIdOnly = await prisma.provider_offers.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends provider_offersFindManyArgs>(args?: SelectSubset<T, provider_offersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$provider_offersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Provider_offers.
     * @param {provider_offersCreateArgs} args - Arguments to create a Provider_offers.
     * @example
     * // Create one Provider_offers
     * const Provider_offers = await prisma.provider_offers.create({
     *   data: {
     *     // ... data to create a Provider_offers
     *   }
     * })
     * 
     */
    create<T extends provider_offersCreateArgs>(args: SelectSubset<T, provider_offersCreateArgs<ExtArgs>>): Prisma__provider_offersClient<$Result.GetResult<Prisma.$provider_offersPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Provider_offers.
     * @param {provider_offersCreateManyArgs} args - Arguments to create many Provider_offers.
     * @example
     * // Create many Provider_offers
     * const provider_offers = await prisma.provider_offers.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends provider_offersCreateManyArgs>(args?: SelectSubset<T, provider_offersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Provider_offers and returns the data saved in the database.
     * @param {provider_offersCreateManyAndReturnArgs} args - Arguments to create many Provider_offers.
     * @example
     * // Create many Provider_offers
     * const provider_offers = await prisma.provider_offers.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Provider_offers and only return the `id`
     * const provider_offersWithIdOnly = await prisma.provider_offers.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends provider_offersCreateManyAndReturnArgs>(args?: SelectSubset<T, provider_offersCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$provider_offersPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Provider_offers.
     * @param {provider_offersDeleteArgs} args - Arguments to delete one Provider_offers.
     * @example
     * // Delete one Provider_offers
     * const Provider_offers = await prisma.provider_offers.delete({
     *   where: {
     *     // ... filter to delete one Provider_offers
     *   }
     * })
     * 
     */
    delete<T extends provider_offersDeleteArgs>(args: SelectSubset<T, provider_offersDeleteArgs<ExtArgs>>): Prisma__provider_offersClient<$Result.GetResult<Prisma.$provider_offersPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Provider_offers.
     * @param {provider_offersUpdateArgs} args - Arguments to update one Provider_offers.
     * @example
     * // Update one Provider_offers
     * const provider_offers = await prisma.provider_offers.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends provider_offersUpdateArgs>(args: SelectSubset<T, provider_offersUpdateArgs<ExtArgs>>): Prisma__provider_offersClient<$Result.GetResult<Prisma.$provider_offersPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Provider_offers.
     * @param {provider_offersDeleteManyArgs} args - Arguments to filter Provider_offers to delete.
     * @example
     * // Delete a few Provider_offers
     * const { count } = await prisma.provider_offers.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends provider_offersDeleteManyArgs>(args?: SelectSubset<T, provider_offersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Provider_offers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {provider_offersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Provider_offers
     * const provider_offers = await prisma.provider_offers.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends provider_offersUpdateManyArgs>(args: SelectSubset<T, provider_offersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Provider_offers and returns the data updated in the database.
     * @param {provider_offersUpdateManyAndReturnArgs} args - Arguments to update many Provider_offers.
     * @example
     * // Update many Provider_offers
     * const provider_offers = await prisma.provider_offers.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Provider_offers and only return the `id`
     * const provider_offersWithIdOnly = await prisma.provider_offers.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends provider_offersUpdateManyAndReturnArgs>(args: SelectSubset<T, provider_offersUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$provider_offersPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Provider_offers.
     * @param {provider_offersUpsertArgs} args - Arguments to update or create a Provider_offers.
     * @example
     * // Update or create a Provider_offers
     * const provider_offers = await prisma.provider_offers.upsert({
     *   create: {
     *     // ... data to create a Provider_offers
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Provider_offers we want to update
     *   }
     * })
     */
    upsert<T extends provider_offersUpsertArgs>(args: SelectSubset<T, provider_offersUpsertArgs<ExtArgs>>): Prisma__provider_offersClient<$Result.GetResult<Prisma.$provider_offersPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Provider_offers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {provider_offersCountArgs} args - Arguments to filter Provider_offers to count.
     * @example
     * // Count the number of Provider_offers
     * const count = await prisma.provider_offers.count({
     *   where: {
     *     // ... the filter for the Provider_offers we want to count
     *   }
     * })
    **/
    count<T extends provider_offersCountArgs>(
      args?: Subset<T, provider_offersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Provider_offersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Provider_offers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Provider_offersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Provider_offersAggregateArgs>(args: Subset<T, Provider_offersAggregateArgs>): Prisma.PrismaPromise<GetProvider_offersAggregateType<T>>

    /**
     * Group by Provider_offers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {provider_offersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends provider_offersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: provider_offersGroupByArgs['orderBy'] }
        : { orderBy?: provider_offersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, provider_offersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProvider_offersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the provider_offers model
   */
  readonly fields: provider_offersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for provider_offers.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__provider_offersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    offers<T extends offersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, offersDefaultArgs<ExtArgs>>): Prisma__offersClient<$Result.GetResult<Prisma.$offersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    providers<T extends providersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, providersDefaultArgs<ExtArgs>>): Prisma__providersClient<$Result.GetResult<Prisma.$providersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the provider_offers model
   */ 
  interface provider_offersFieldRefs {
    readonly id: FieldRef<"provider_offers", 'BigInt'>
    readonly provider_id: FieldRef<"provider_offers", 'BigInt'>
    readonly offer_id: FieldRef<"provider_offers", 'BigInt'>
    readonly created_at: FieldRef<"provider_offers", 'DateTime'>
    readonly updated_at: FieldRef<"provider_offers", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * provider_offers findUnique
   */
  export type provider_offersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the provider_offers
     */
    select?: provider_offersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the provider_offers
     */
    omit?: provider_offersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: provider_offersInclude<ExtArgs> | null
    /**
     * Filter, which provider_offers to fetch.
     */
    where: provider_offersWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * provider_offers findUniqueOrThrow
   */
  export type provider_offersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the provider_offers
     */
    select?: provider_offersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the provider_offers
     */
    omit?: provider_offersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: provider_offersInclude<ExtArgs> | null
    /**
     * Filter, which provider_offers to fetch.
     */
    where: provider_offersWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * provider_offers findFirst
   */
  export type provider_offersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the provider_offers
     */
    select?: provider_offersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the provider_offers
     */
    omit?: provider_offersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: provider_offersInclude<ExtArgs> | null
    /**
     * Filter, which provider_offers to fetch.
     */
    where?: provider_offersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of provider_offers to fetch.
     */
    orderBy?: provider_offersOrderByWithRelationInput | provider_offersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for provider_offers.
     */
    cursor?: provider_offersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` provider_offers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` provider_offers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of provider_offers.
     */
    distinct?: Provider_offersScalarFieldEnum | Provider_offersScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * provider_offers findFirstOrThrow
   */
  export type provider_offersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the provider_offers
     */
    select?: provider_offersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the provider_offers
     */
    omit?: provider_offersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: provider_offersInclude<ExtArgs> | null
    /**
     * Filter, which provider_offers to fetch.
     */
    where?: provider_offersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of provider_offers to fetch.
     */
    orderBy?: provider_offersOrderByWithRelationInput | provider_offersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for provider_offers.
     */
    cursor?: provider_offersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` provider_offers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` provider_offers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of provider_offers.
     */
    distinct?: Provider_offersScalarFieldEnum | Provider_offersScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * provider_offers findMany
   */
  export type provider_offersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the provider_offers
     */
    select?: provider_offersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the provider_offers
     */
    omit?: provider_offersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: provider_offersInclude<ExtArgs> | null
    /**
     * Filter, which provider_offers to fetch.
     */
    where?: provider_offersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of provider_offers to fetch.
     */
    orderBy?: provider_offersOrderByWithRelationInput | provider_offersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing provider_offers.
     */
    cursor?: provider_offersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` provider_offers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` provider_offers.
     */
    skip?: number
    distinct?: Provider_offersScalarFieldEnum | Provider_offersScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * provider_offers create
   */
  export type provider_offersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the provider_offers
     */
    select?: provider_offersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the provider_offers
     */
    omit?: provider_offersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: provider_offersInclude<ExtArgs> | null
    /**
     * The data needed to create a provider_offers.
     */
    data: XOR<provider_offersCreateInput, provider_offersUncheckedCreateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * provider_offers createMany
   */
  export type provider_offersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many provider_offers.
     */
    data: provider_offersCreateManyInput | provider_offersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * provider_offers createManyAndReturn
   */
  export type provider_offersCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the provider_offers
     */
    select?: provider_offersSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the provider_offers
     */
    omit?: provider_offersOmit<ExtArgs> | null
    /**
     * The data used to create many provider_offers.
     */
    data: provider_offersCreateManyInput | provider_offersCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: provider_offersIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * provider_offers update
   */
  export type provider_offersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the provider_offers
     */
    select?: provider_offersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the provider_offers
     */
    omit?: provider_offersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: provider_offersInclude<ExtArgs> | null
    /**
     * The data needed to update a provider_offers.
     */
    data: XOR<provider_offersUpdateInput, provider_offersUncheckedUpdateInput>
    /**
     * Choose, which provider_offers to update.
     */
    where: provider_offersWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * provider_offers updateMany
   */
  export type provider_offersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update provider_offers.
     */
    data: XOR<provider_offersUpdateManyMutationInput, provider_offersUncheckedUpdateManyInput>
    /**
     * Filter which provider_offers to update
     */
    where?: provider_offersWhereInput
    /**
     * Limit how many provider_offers to update.
     */
    limit?: number
  }

  /**
   * provider_offers updateManyAndReturn
   */
  export type provider_offersUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the provider_offers
     */
    select?: provider_offersSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the provider_offers
     */
    omit?: provider_offersOmit<ExtArgs> | null
    /**
     * The data used to update provider_offers.
     */
    data: XOR<provider_offersUpdateManyMutationInput, provider_offersUncheckedUpdateManyInput>
    /**
     * Filter which provider_offers to update
     */
    where?: provider_offersWhereInput
    /**
     * Limit how many provider_offers to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: provider_offersIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * provider_offers upsert
   */
  export type provider_offersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the provider_offers
     */
    select?: provider_offersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the provider_offers
     */
    omit?: provider_offersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: provider_offersInclude<ExtArgs> | null
    /**
     * The filter to search for the provider_offers to update in case it exists.
     */
    where: provider_offersWhereUniqueInput
    /**
     * In case the provider_offers found by the `where` argument doesn't exist, create a new provider_offers with this data.
     */
    create: XOR<provider_offersCreateInput, provider_offersUncheckedCreateInput>
    /**
     * In case the provider_offers was found with the provided `where` argument, update it with this data.
     */
    update: XOR<provider_offersUpdateInput, provider_offersUncheckedUpdateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * provider_offers delete
   */
  export type provider_offersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the provider_offers
     */
    select?: provider_offersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the provider_offers
     */
    omit?: provider_offersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: provider_offersInclude<ExtArgs> | null
    /**
     * Filter which provider_offers to delete.
     */
    where: provider_offersWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * provider_offers deleteMany
   */
  export type provider_offersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which provider_offers to delete
     */
    where?: provider_offersWhereInput
    /**
     * Limit how many provider_offers to delete.
     */
    limit?: number
  }

  /**
   * provider_offers without action
   */
  export type provider_offersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the provider_offers
     */
    select?: provider_offersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the provider_offers
     */
    omit?: provider_offersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: provider_offersInclude<ExtArgs> | null
  }


  /**
   * Model providers
   */

  export type AggregateProviders = {
    _count: ProvidersCountAggregateOutputType | null
    _avg: ProvidersAvgAggregateOutputType | null
    _sum: ProvidersSumAggregateOutputType | null
    _min: ProvidersMinAggregateOutputType | null
    _max: ProvidersMaxAggregateOutputType | null
  }

  export type ProvidersAvgAggregateOutputType = {
    id: number | null
    category_id: number | null
    latitude: Decimal | null
    longitude: Decimal | null
    status: number | null
  }

  export type ProvidersSumAggregateOutputType = {
    id: bigint | null
    category_id: bigint | null
    latitude: Decimal | null
    longitude: Decimal | null
    status: number | null
  }

  export type ProvidersMinAggregateOutputType = {
    id: bigint | null
    name: string | null
    description: string | null
    category_id: bigint | null
    address: string | null
    main_image: string | null
    latitude: Decimal | null
    longitude: Decimal | null
    is_verified: boolean | null
    status: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type ProvidersMaxAggregateOutputType = {
    id: bigint | null
    name: string | null
    description: string | null
    category_id: bigint | null
    address: string | null
    main_image: string | null
    latitude: Decimal | null
    longitude: Decimal | null
    is_verified: boolean | null
    status: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type ProvidersCountAggregateOutputType = {
    id: number
    name: number
    description: number
    category_id: number
    address: number
    phone_number: number
    main_image: number
    slider_images: number
    latitude: number
    longitude: number
    is_verified: number
    status: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type ProvidersAvgAggregateInputType = {
    id?: true
    category_id?: true
    latitude?: true
    longitude?: true
    status?: true
  }

  export type ProvidersSumAggregateInputType = {
    id?: true
    category_id?: true
    latitude?: true
    longitude?: true
    status?: true
  }

  export type ProvidersMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    category_id?: true
    address?: true
    main_image?: true
    latitude?: true
    longitude?: true
    is_verified?: true
    status?: true
    created_at?: true
    updated_at?: true
  }

  export type ProvidersMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    category_id?: true
    address?: true
    main_image?: true
    latitude?: true
    longitude?: true
    is_verified?: true
    status?: true
    created_at?: true
    updated_at?: true
  }

  export type ProvidersCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    category_id?: true
    address?: true
    phone_number?: true
    main_image?: true
    slider_images?: true
    latitude?: true
    longitude?: true
    is_verified?: true
    status?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type ProvidersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which providers to aggregate.
     */
    where?: providersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of providers to fetch.
     */
    orderBy?: providersOrderByWithRelationInput | providersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: providersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` providers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` providers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned providers
    **/
    _count?: true | ProvidersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProvidersAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProvidersSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProvidersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProvidersMaxAggregateInputType
  }

  export type GetProvidersAggregateType<T extends ProvidersAggregateArgs> = {
        [P in keyof T & keyof AggregateProviders]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProviders[P]>
      : GetScalarType<T[P], AggregateProviders[P]>
  }




  export type providersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: providersWhereInput
    orderBy?: providersOrderByWithAggregationInput | providersOrderByWithAggregationInput[]
    by: ProvidersScalarFieldEnum[] | ProvidersScalarFieldEnum
    having?: providersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProvidersCountAggregateInputType | true
    _avg?: ProvidersAvgAggregateInputType
    _sum?: ProvidersSumAggregateInputType
    _min?: ProvidersMinAggregateInputType
    _max?: ProvidersMaxAggregateInputType
  }

  export type ProvidersGroupByOutputType = {
    id: bigint
    name: string
    description: string | null
    category_id: bigint
    address: string
    phone_number: JsonValue
    main_image: string
    slider_images: JsonValue
    latitude: Decimal
    longitude: Decimal
    is_verified: boolean
    status: number
    created_at: Date | null
    updated_at: Date | null
    _count: ProvidersCountAggregateOutputType | null
    _avg: ProvidersAvgAggregateOutputType | null
    _sum: ProvidersSumAggregateOutputType | null
    _min: ProvidersMinAggregateOutputType | null
    _max: ProvidersMaxAggregateOutputType | null
  }

  type GetProvidersGroupByPayload<T extends providersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProvidersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProvidersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProvidersGroupByOutputType[P]>
            : GetScalarType<T[P], ProvidersGroupByOutputType[P]>
        }
      >
    >


  export type providersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    category_id?: boolean
    address?: boolean
    phone_number?: boolean
    main_image?: boolean
    slider_images?: boolean
    latitude?: boolean
    longitude?: boolean
    is_verified?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
    provider_agents?: boolean | providers$provider_agentsArgs<ExtArgs>
    provider_menu?: boolean | providers$provider_menuArgs<ExtArgs>
    provider_offers?: boolean | providers$provider_offersArgs<ExtArgs>
    offer_categories?: boolean | offer_categoriesDefaultArgs<ExtArgs>
    subscription_usages?: boolean | providers$subscription_usagesArgs<ExtArgs>
    _count?: boolean | ProvidersCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["providers"]>

  export type providersSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    category_id?: boolean
    address?: boolean
    phone_number?: boolean
    main_image?: boolean
    slider_images?: boolean
    latitude?: boolean
    longitude?: boolean
    is_verified?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
    offer_categories?: boolean | offer_categoriesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["providers"]>

  export type providersSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    category_id?: boolean
    address?: boolean
    phone_number?: boolean
    main_image?: boolean
    slider_images?: boolean
    latitude?: boolean
    longitude?: boolean
    is_verified?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
    offer_categories?: boolean | offer_categoriesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["providers"]>

  export type providersSelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    category_id?: boolean
    address?: boolean
    phone_number?: boolean
    main_image?: boolean
    slider_images?: boolean
    latitude?: boolean
    longitude?: boolean
    is_verified?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type providersOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "description" | "category_id" | "address" | "phone_number" | "main_image" | "slider_images" | "latitude" | "longitude" | "is_verified" | "status" | "created_at" | "updated_at", ExtArgs["result"]["providers"]>
  export type providersInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    provider_agents?: boolean | providers$provider_agentsArgs<ExtArgs>
    provider_menu?: boolean | providers$provider_menuArgs<ExtArgs>
    provider_offers?: boolean | providers$provider_offersArgs<ExtArgs>
    offer_categories?: boolean | offer_categoriesDefaultArgs<ExtArgs>
    subscription_usages?: boolean | providers$subscription_usagesArgs<ExtArgs>
    _count?: boolean | ProvidersCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type providersIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    offer_categories?: boolean | offer_categoriesDefaultArgs<ExtArgs>
  }
  export type providersIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    offer_categories?: boolean | offer_categoriesDefaultArgs<ExtArgs>
  }

  export type $providersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "providers"
    objects: {
      provider_agents: Prisma.$provider_agentsPayload<ExtArgs>[]
      provider_menu: Prisma.$provider_menuPayload<ExtArgs> | null
      provider_offers: Prisma.$provider_offersPayload<ExtArgs>[]
      offer_categories: Prisma.$offer_categoriesPayload<ExtArgs>
      subscription_usages: Prisma.$subscription_usagesPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      name: string
      description: string | null
      category_id: bigint
      address: string
      phone_number: Prisma.JsonValue
      main_image: string
      slider_images: Prisma.JsonValue
      latitude: Prisma.Decimal
      longitude: Prisma.Decimal
      is_verified: boolean
      status: number
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["providers"]>
    composites: {}
  }

  type providersGetPayload<S extends boolean | null | undefined | providersDefaultArgs> = $Result.GetResult<Prisma.$providersPayload, S>

  type providersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<providersFindManyArgs, 'select' | 'include' | 'distinct' | 'omit' | 'relationLoadStrategy'> & {
      select?: ProvidersCountAggregateInputType | true
    }

  export interface providersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['providers'], meta: { name: 'providers' } }
    /**
     * Find zero or one Providers that matches the filter.
     * @param {providersFindUniqueArgs} args - Arguments to find a Providers
     * @example
     * // Get one Providers
     * const providers = await prisma.providers.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends providersFindUniqueArgs>(args: SelectSubset<T, providersFindUniqueArgs<ExtArgs>>): Prisma__providersClient<$Result.GetResult<Prisma.$providersPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Providers that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {providersFindUniqueOrThrowArgs} args - Arguments to find a Providers
     * @example
     * // Get one Providers
     * const providers = await prisma.providers.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends providersFindUniqueOrThrowArgs>(args: SelectSubset<T, providersFindUniqueOrThrowArgs<ExtArgs>>): Prisma__providersClient<$Result.GetResult<Prisma.$providersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Providers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {providersFindFirstArgs} args - Arguments to find a Providers
     * @example
     * // Get one Providers
     * const providers = await prisma.providers.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends providersFindFirstArgs>(args?: SelectSubset<T, providersFindFirstArgs<ExtArgs>>): Prisma__providersClient<$Result.GetResult<Prisma.$providersPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Providers that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {providersFindFirstOrThrowArgs} args - Arguments to find a Providers
     * @example
     * // Get one Providers
     * const providers = await prisma.providers.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends providersFindFirstOrThrowArgs>(args?: SelectSubset<T, providersFindFirstOrThrowArgs<ExtArgs>>): Prisma__providersClient<$Result.GetResult<Prisma.$providersPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Providers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {providersFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Providers
     * const providers = await prisma.providers.findMany()
     * 
     * // Get first 10 Providers
     * const providers = await prisma.providers.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const providersWithIdOnly = await prisma.providers.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends providersFindManyArgs>(args?: SelectSubset<T, providersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$providersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Providers.
     * @param {providersCreateArgs} args - Arguments to create a Providers.
     * @example
     * // Create one Providers
     * const Providers = await prisma.providers.create({
     *   data: {
     *     // ... data to create a Providers
     *   }
     * })
     * 
     */
    create<T extends providersCreateArgs>(args: SelectSubset<T, providersCreateArgs<ExtArgs>>): Prisma__providersClient<$Result.GetResult<Prisma.$providersPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Providers.
     * @param {providersCreateManyArgs} args - Arguments to create many Providers.
     * @example
     * // Create many Providers
     * const providers = await prisma.providers.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends providersCreateManyArgs>(args?: SelectSubset<T, providersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Providers and returns the data saved in the database.
     * @param {providersCreateManyAndReturnArgs} args - Arguments to create many Providers.
     * @example
     * // Create many Providers
     * const providers = await prisma.providers.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Providers and only return the `id`
     * const providersWithIdOnly = await prisma.providers.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends providersCreateManyAndReturnArgs>(args?: SelectSubset<T, providersCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$providersPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Providers.
     * @param {providersDeleteArgs} args - Arguments to delete one Providers.
     * @example
     * // Delete one Providers
     * const Providers = await prisma.providers.delete({
     *   where: {
     *     // ... filter to delete one Providers
     *   }
     * })
     * 
     */
    delete<T extends providersDeleteArgs>(args: SelectSubset<T, providersDeleteArgs<ExtArgs>>): Prisma__providersClient<$Result.GetResult<Prisma.$providersPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Providers.
     * @param {providersUpdateArgs} args - Arguments to update one Providers.
     * @example
     * // Update one Providers
     * const providers = await prisma.providers.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends providersUpdateArgs>(args: SelectSubset<T, providersUpdateArgs<ExtArgs>>): Prisma__providersClient<$Result.GetResult<Prisma.$providersPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Providers.
     * @param {providersDeleteManyArgs} args - Arguments to filter Providers to delete.
     * @example
     * // Delete a few Providers
     * const { count } = await prisma.providers.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends providersDeleteManyArgs>(args?: SelectSubset<T, providersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Providers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {providersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Providers
     * const providers = await prisma.providers.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends providersUpdateManyArgs>(args: SelectSubset<T, providersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Providers and returns the data updated in the database.
     * @param {providersUpdateManyAndReturnArgs} args - Arguments to update many Providers.
     * @example
     * // Update many Providers
     * const providers = await prisma.providers.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Providers and only return the `id`
     * const providersWithIdOnly = await prisma.providers.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends providersUpdateManyAndReturnArgs>(args: SelectSubset<T, providersUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$providersPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Providers.
     * @param {providersUpsertArgs} args - Arguments to update or create a Providers.
     * @example
     * // Update or create a Providers
     * const providers = await prisma.providers.upsert({
     *   create: {
     *     // ... data to create a Providers
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Providers we want to update
     *   }
     * })
     */
    upsert<T extends providersUpsertArgs>(args: SelectSubset<T, providersUpsertArgs<ExtArgs>>): Prisma__providersClient<$Result.GetResult<Prisma.$providersPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Providers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {providersCountArgs} args - Arguments to filter Providers to count.
     * @example
     * // Count the number of Providers
     * const count = await prisma.providers.count({
     *   where: {
     *     // ... the filter for the Providers we want to count
     *   }
     * })
    **/
    count<T extends providersCountArgs>(
      args?: Subset<T, providersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProvidersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Providers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProvidersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProvidersAggregateArgs>(args: Subset<T, ProvidersAggregateArgs>): Prisma.PrismaPromise<GetProvidersAggregateType<T>>

    /**
     * Group by Providers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {providersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends providersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: providersGroupByArgs['orderBy'] }
        : { orderBy?: providersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, providersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProvidersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the providers model
   */
  readonly fields: providersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for providers.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__providersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    provider_agents<T extends providers$provider_agentsArgs<ExtArgs> = {}>(args?: Subset<T, providers$provider_agentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$provider_agentsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    provider_menu<T extends providers$provider_menuArgs<ExtArgs> = {}>(args?: Subset<T, providers$provider_menuArgs<ExtArgs>>): Prisma__provider_menuClient<$Result.GetResult<Prisma.$provider_menuPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    provider_offers<T extends providers$provider_offersArgs<ExtArgs> = {}>(args?: Subset<T, providers$provider_offersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$provider_offersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    offer_categories<T extends offer_categoriesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, offer_categoriesDefaultArgs<ExtArgs>>): Prisma__offer_categoriesClient<$Result.GetResult<Prisma.$offer_categoriesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    subscription_usages<T extends providers$subscription_usagesArgs<ExtArgs> = {}>(args?: Subset<T, providers$subscription_usagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$subscription_usagesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the providers model
   */ 
  interface providersFieldRefs {
    readonly id: FieldRef<"providers", 'BigInt'>
    readonly name: FieldRef<"providers", 'String'>
    readonly description: FieldRef<"providers", 'String'>
    readonly category_id: FieldRef<"providers", 'BigInt'>
    readonly address: FieldRef<"providers", 'String'>
    readonly phone_number: FieldRef<"providers", 'Json'>
    readonly main_image: FieldRef<"providers", 'String'>
    readonly slider_images: FieldRef<"providers", 'Json'>
    readonly latitude: FieldRef<"providers", 'Decimal'>
    readonly longitude: FieldRef<"providers", 'Decimal'>
    readonly is_verified: FieldRef<"providers", 'Boolean'>
    readonly status: FieldRef<"providers", 'Int'>
    readonly created_at: FieldRef<"providers", 'DateTime'>
    readonly updated_at: FieldRef<"providers", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * providers findUnique
   */
  export type providersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the providers
     */
    select?: providersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the providers
     */
    omit?: providersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: providersInclude<ExtArgs> | null
    /**
     * Filter, which providers to fetch.
     */
    where: providersWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * providers findUniqueOrThrow
   */
  export type providersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the providers
     */
    select?: providersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the providers
     */
    omit?: providersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: providersInclude<ExtArgs> | null
    /**
     * Filter, which providers to fetch.
     */
    where: providersWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * providers findFirst
   */
  export type providersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the providers
     */
    select?: providersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the providers
     */
    omit?: providersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: providersInclude<ExtArgs> | null
    /**
     * Filter, which providers to fetch.
     */
    where?: providersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of providers to fetch.
     */
    orderBy?: providersOrderByWithRelationInput | providersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for providers.
     */
    cursor?: providersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` providers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` providers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of providers.
     */
    distinct?: ProvidersScalarFieldEnum | ProvidersScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * providers findFirstOrThrow
   */
  export type providersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the providers
     */
    select?: providersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the providers
     */
    omit?: providersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: providersInclude<ExtArgs> | null
    /**
     * Filter, which providers to fetch.
     */
    where?: providersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of providers to fetch.
     */
    orderBy?: providersOrderByWithRelationInput | providersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for providers.
     */
    cursor?: providersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` providers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` providers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of providers.
     */
    distinct?: ProvidersScalarFieldEnum | ProvidersScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * providers findMany
   */
  export type providersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the providers
     */
    select?: providersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the providers
     */
    omit?: providersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: providersInclude<ExtArgs> | null
    /**
     * Filter, which providers to fetch.
     */
    where?: providersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of providers to fetch.
     */
    orderBy?: providersOrderByWithRelationInput | providersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing providers.
     */
    cursor?: providersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` providers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` providers.
     */
    skip?: number
    distinct?: ProvidersScalarFieldEnum | ProvidersScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * providers create
   */
  export type providersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the providers
     */
    select?: providersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the providers
     */
    omit?: providersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: providersInclude<ExtArgs> | null
    /**
     * The data needed to create a providers.
     */
    data: XOR<providersCreateInput, providersUncheckedCreateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * providers createMany
   */
  export type providersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many providers.
     */
    data: providersCreateManyInput | providersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * providers createManyAndReturn
   */
  export type providersCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the providers
     */
    select?: providersSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the providers
     */
    omit?: providersOmit<ExtArgs> | null
    /**
     * The data used to create many providers.
     */
    data: providersCreateManyInput | providersCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: providersIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * providers update
   */
  export type providersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the providers
     */
    select?: providersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the providers
     */
    omit?: providersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: providersInclude<ExtArgs> | null
    /**
     * The data needed to update a providers.
     */
    data: XOR<providersUpdateInput, providersUncheckedUpdateInput>
    /**
     * Choose, which providers to update.
     */
    where: providersWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * providers updateMany
   */
  export type providersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update providers.
     */
    data: XOR<providersUpdateManyMutationInput, providersUncheckedUpdateManyInput>
    /**
     * Filter which providers to update
     */
    where?: providersWhereInput
    /**
     * Limit how many providers to update.
     */
    limit?: number
  }

  /**
   * providers updateManyAndReturn
   */
  export type providersUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the providers
     */
    select?: providersSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the providers
     */
    omit?: providersOmit<ExtArgs> | null
    /**
     * The data used to update providers.
     */
    data: XOR<providersUpdateManyMutationInput, providersUncheckedUpdateManyInput>
    /**
     * Filter which providers to update
     */
    where?: providersWhereInput
    /**
     * Limit how many providers to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: providersIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * providers upsert
   */
  export type providersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the providers
     */
    select?: providersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the providers
     */
    omit?: providersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: providersInclude<ExtArgs> | null
    /**
     * The filter to search for the providers to update in case it exists.
     */
    where: providersWhereUniqueInput
    /**
     * In case the providers found by the `where` argument doesn't exist, create a new providers with this data.
     */
    create: XOR<providersCreateInput, providersUncheckedCreateInput>
    /**
     * In case the providers was found with the provided `where` argument, update it with this data.
     */
    update: XOR<providersUpdateInput, providersUncheckedUpdateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * providers delete
   */
  export type providersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the providers
     */
    select?: providersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the providers
     */
    omit?: providersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: providersInclude<ExtArgs> | null
    /**
     * Filter which providers to delete.
     */
    where: providersWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * providers deleteMany
   */
  export type providersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which providers to delete
     */
    where?: providersWhereInput
    /**
     * Limit how many providers to delete.
     */
    limit?: number
  }

  /**
   * providers.provider_agents
   */
  export type providers$provider_agentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the provider_agents
     */
    select?: provider_agentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the provider_agents
     */
    omit?: provider_agentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: provider_agentsInclude<ExtArgs> | null
    where?: provider_agentsWhereInput
    orderBy?: provider_agentsOrderByWithRelationInput | provider_agentsOrderByWithRelationInput[]
    cursor?: provider_agentsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Provider_agentsScalarFieldEnum | Provider_agentsScalarFieldEnum[]
  }

  /**
   * providers.provider_menu
   */
  export type providers$provider_menuArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the provider_menu
     */
    select?: provider_menuSelect<ExtArgs> | null
    /**
     * Omit specific fields from the provider_menu
     */
    omit?: provider_menuOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: provider_menuInclude<ExtArgs> | null
    where?: provider_menuWhereInput
  }

  /**
   * providers.provider_offers
   */
  export type providers$provider_offersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the provider_offers
     */
    select?: provider_offersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the provider_offers
     */
    omit?: provider_offersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: provider_offersInclude<ExtArgs> | null
    where?: provider_offersWhereInput
    orderBy?: provider_offersOrderByWithRelationInput | provider_offersOrderByWithRelationInput[]
    cursor?: provider_offersWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Provider_offersScalarFieldEnum | Provider_offersScalarFieldEnum[]
  }

  /**
   * providers.subscription_usages
   */
  export type providers$subscription_usagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscription_usages
     */
    select?: subscription_usagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subscription_usages
     */
    omit?: subscription_usagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subscription_usagesInclude<ExtArgs> | null
    where?: subscription_usagesWhereInput
    orderBy?: subscription_usagesOrderByWithRelationInput | subscription_usagesOrderByWithRelationInput[]
    cursor?: subscription_usagesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Subscription_usagesScalarFieldEnum | Subscription_usagesScalarFieldEnum[]
  }

  /**
   * providers without action
   */
  export type providersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the providers
     */
    select?: providersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the providers
     */
    omit?: providersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: providersInclude<ExtArgs> | null
  }


  /**
   * Model provider_menu
   */

  export type AggregateProvider_menu = {
    _count: Provider_menuCountAggregateOutputType | null
    _avg: Provider_menuAvgAggregateOutputType | null
    _sum: Provider_menuSumAggregateOutputType | null
    _min: Provider_menuMinAggregateOutputType | null
    _max: Provider_menuMaxAggregateOutputType | null
  }

  export type Provider_menuAvgAggregateOutputType = {
    id: number | null
    provider_id: number | null
  }

  export type Provider_menuSumAggregateOutputType = {
    id: bigint | null
    provider_id: bigint | null
  }

  export type Provider_menuMinAggregateOutputType = {
    id: bigint | null
    provider_id: bigint | null
    title: string | null
    description: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Provider_menuMaxAggregateOutputType = {
    id: bigint | null
    provider_id: bigint | null
    title: string | null
    description: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Provider_menuCountAggregateOutputType = {
    id: number
    provider_id: number
    title: number
    description: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Provider_menuAvgAggregateInputType = {
    id?: true
    provider_id?: true
  }

  export type Provider_menuSumAggregateInputType = {
    id?: true
    provider_id?: true
  }

  export type Provider_menuMinAggregateInputType = {
    id?: true
    provider_id?: true
    title?: true
    description?: true
    created_at?: true
    updated_at?: true
  }

  export type Provider_menuMaxAggregateInputType = {
    id?: true
    provider_id?: true
    title?: true
    description?: true
    created_at?: true
    updated_at?: true
  }

  export type Provider_menuCountAggregateInputType = {
    id?: true
    provider_id?: true
    title?: true
    description?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Provider_menuAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which provider_menu to aggregate.
     */
    where?: provider_menuWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of provider_menus to fetch.
     */
    orderBy?: provider_menuOrderByWithRelationInput | provider_menuOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: provider_menuWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` provider_menus from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` provider_menus.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned provider_menus
    **/
    _count?: true | Provider_menuCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Provider_menuAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Provider_menuSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Provider_menuMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Provider_menuMaxAggregateInputType
  }

  export type GetProvider_menuAggregateType<T extends Provider_menuAggregateArgs> = {
        [P in keyof T & keyof AggregateProvider_menu]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProvider_menu[P]>
      : GetScalarType<T[P], AggregateProvider_menu[P]>
  }




  export type provider_menuGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: provider_menuWhereInput
    orderBy?: provider_menuOrderByWithAggregationInput | provider_menuOrderByWithAggregationInput[]
    by: Provider_menuScalarFieldEnum[] | Provider_menuScalarFieldEnum
    having?: provider_menuScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Provider_menuCountAggregateInputType | true
    _avg?: Provider_menuAvgAggregateInputType
    _sum?: Provider_menuSumAggregateInputType
    _min?: Provider_menuMinAggregateInputType
    _max?: Provider_menuMaxAggregateInputType
  }

  export type Provider_menuGroupByOutputType = {
    id: bigint
    provider_id: bigint
    title: string | null
    description: string | null
    created_at: Date | null
    updated_at: Date | null
    _count: Provider_menuCountAggregateOutputType | null
    _avg: Provider_menuAvgAggregateOutputType | null
    _sum: Provider_menuSumAggregateOutputType | null
    _min: Provider_menuMinAggregateOutputType | null
    _max: Provider_menuMaxAggregateOutputType | null
  }

  type GetProvider_menuGroupByPayload<T extends provider_menuGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Provider_menuGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Provider_menuGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Provider_menuGroupByOutputType[P]>
            : GetScalarType<T[P], Provider_menuGroupByOutputType[P]>
        }
      >
    >


  export type provider_menuSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    provider_id?: boolean
    title?: boolean
    description?: boolean
    created_at?: boolean
    updated_at?: boolean
    providers?: boolean | providersDefaultArgs<ExtArgs>
    provider_menu_items?: boolean | provider_menu$provider_menu_itemsArgs<ExtArgs>
    provider_menu_categories?: boolean | provider_menu$provider_menu_categoriesArgs<ExtArgs>
    _count?: boolean | Provider_menuCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["provider_menu"]>

  export type provider_menuSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    provider_id?: boolean
    title?: boolean
    description?: boolean
    created_at?: boolean
    updated_at?: boolean
    providers?: boolean | providersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["provider_menu"]>

  export type provider_menuSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    provider_id?: boolean
    title?: boolean
    description?: boolean
    created_at?: boolean
    updated_at?: boolean
    providers?: boolean | providersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["provider_menu"]>

  export type provider_menuSelectScalar = {
    id?: boolean
    provider_id?: boolean
    title?: boolean
    description?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type provider_menuOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "provider_id" | "title" | "description" | "created_at" | "updated_at", ExtArgs["result"]["provider_menu"]>
  export type provider_menuInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    providers?: boolean | providersDefaultArgs<ExtArgs>
    provider_menu_items?: boolean | provider_menu$provider_menu_itemsArgs<ExtArgs>
    provider_menu_categories?: boolean | provider_menu$provider_menu_categoriesArgs<ExtArgs>
    _count?: boolean | Provider_menuCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type provider_menuIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    providers?: boolean | providersDefaultArgs<ExtArgs>
  }
  export type provider_menuIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    providers?: boolean | providersDefaultArgs<ExtArgs>
  }

  export type $provider_menuPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "provider_menu"
    objects: {
      providers: Prisma.$providersPayload<ExtArgs>
      provider_menu_items: Prisma.$provider_menu_itemsPayload<ExtArgs>[]
      provider_menu_categories: Prisma.$provider_menu_categoriesPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      provider_id: bigint
      title: string | null
      description: string | null
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["provider_menu"]>
    composites: {}
  }

  type provider_menuGetPayload<S extends boolean | null | undefined | provider_menuDefaultArgs> = $Result.GetResult<Prisma.$provider_menuPayload, S>

  type provider_menuCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<provider_menuFindManyArgs, 'select' | 'include' | 'distinct' | 'omit' | 'relationLoadStrategy'> & {
      select?: Provider_menuCountAggregateInputType | true
    }

  export interface provider_menuDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['provider_menu'], meta: { name: 'provider_menu' } }
    /**
     * Find zero or one Provider_menu that matches the filter.
     * @param {provider_menuFindUniqueArgs} args - Arguments to find a Provider_menu
     * @example
     * // Get one Provider_menu
     * const provider_menu = await prisma.provider_menu.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends provider_menuFindUniqueArgs>(args: SelectSubset<T, provider_menuFindUniqueArgs<ExtArgs>>): Prisma__provider_menuClient<$Result.GetResult<Prisma.$provider_menuPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Provider_menu that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {provider_menuFindUniqueOrThrowArgs} args - Arguments to find a Provider_menu
     * @example
     * // Get one Provider_menu
     * const provider_menu = await prisma.provider_menu.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends provider_menuFindUniqueOrThrowArgs>(args: SelectSubset<T, provider_menuFindUniqueOrThrowArgs<ExtArgs>>): Prisma__provider_menuClient<$Result.GetResult<Prisma.$provider_menuPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Provider_menu that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {provider_menuFindFirstArgs} args - Arguments to find a Provider_menu
     * @example
     * // Get one Provider_menu
     * const provider_menu = await prisma.provider_menu.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends provider_menuFindFirstArgs>(args?: SelectSubset<T, provider_menuFindFirstArgs<ExtArgs>>): Prisma__provider_menuClient<$Result.GetResult<Prisma.$provider_menuPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Provider_menu that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {provider_menuFindFirstOrThrowArgs} args - Arguments to find a Provider_menu
     * @example
     * // Get one Provider_menu
     * const provider_menu = await prisma.provider_menu.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends provider_menuFindFirstOrThrowArgs>(args?: SelectSubset<T, provider_menuFindFirstOrThrowArgs<ExtArgs>>): Prisma__provider_menuClient<$Result.GetResult<Prisma.$provider_menuPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Provider_menus that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {provider_menuFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Provider_menus
     * const provider_menus = await prisma.provider_menu.findMany()
     * 
     * // Get first 10 Provider_menus
     * const provider_menus = await prisma.provider_menu.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const provider_menuWithIdOnly = await prisma.provider_menu.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends provider_menuFindManyArgs>(args?: SelectSubset<T, provider_menuFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$provider_menuPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Provider_menu.
     * @param {provider_menuCreateArgs} args - Arguments to create a Provider_menu.
     * @example
     * // Create one Provider_menu
     * const Provider_menu = await prisma.provider_menu.create({
     *   data: {
     *     // ... data to create a Provider_menu
     *   }
     * })
     * 
     */
    create<T extends provider_menuCreateArgs>(args: SelectSubset<T, provider_menuCreateArgs<ExtArgs>>): Prisma__provider_menuClient<$Result.GetResult<Prisma.$provider_menuPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Provider_menus.
     * @param {provider_menuCreateManyArgs} args - Arguments to create many Provider_menus.
     * @example
     * // Create many Provider_menus
     * const provider_menu = await prisma.provider_menu.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends provider_menuCreateManyArgs>(args?: SelectSubset<T, provider_menuCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Provider_menus and returns the data saved in the database.
     * @param {provider_menuCreateManyAndReturnArgs} args - Arguments to create many Provider_menus.
     * @example
     * // Create many Provider_menus
     * const provider_menu = await prisma.provider_menu.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Provider_menus and only return the `id`
     * const provider_menuWithIdOnly = await prisma.provider_menu.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends provider_menuCreateManyAndReturnArgs>(args?: SelectSubset<T, provider_menuCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$provider_menuPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Provider_menu.
     * @param {provider_menuDeleteArgs} args - Arguments to delete one Provider_menu.
     * @example
     * // Delete one Provider_menu
     * const Provider_menu = await prisma.provider_menu.delete({
     *   where: {
     *     // ... filter to delete one Provider_menu
     *   }
     * })
     * 
     */
    delete<T extends provider_menuDeleteArgs>(args: SelectSubset<T, provider_menuDeleteArgs<ExtArgs>>): Prisma__provider_menuClient<$Result.GetResult<Prisma.$provider_menuPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Provider_menu.
     * @param {provider_menuUpdateArgs} args - Arguments to update one Provider_menu.
     * @example
     * // Update one Provider_menu
     * const provider_menu = await prisma.provider_menu.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends provider_menuUpdateArgs>(args: SelectSubset<T, provider_menuUpdateArgs<ExtArgs>>): Prisma__provider_menuClient<$Result.GetResult<Prisma.$provider_menuPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Provider_menus.
     * @param {provider_menuDeleteManyArgs} args - Arguments to filter Provider_menus to delete.
     * @example
     * // Delete a few Provider_menus
     * const { count } = await prisma.provider_menu.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends provider_menuDeleteManyArgs>(args?: SelectSubset<T, provider_menuDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Provider_menus.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {provider_menuUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Provider_menus
     * const provider_menu = await prisma.provider_menu.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends provider_menuUpdateManyArgs>(args: SelectSubset<T, provider_menuUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Provider_menus and returns the data updated in the database.
     * @param {provider_menuUpdateManyAndReturnArgs} args - Arguments to update many Provider_menus.
     * @example
     * // Update many Provider_menus
     * const provider_menu = await prisma.provider_menu.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Provider_menus and only return the `id`
     * const provider_menuWithIdOnly = await prisma.provider_menu.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends provider_menuUpdateManyAndReturnArgs>(args: SelectSubset<T, provider_menuUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$provider_menuPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Provider_menu.
     * @param {provider_menuUpsertArgs} args - Arguments to update or create a Provider_menu.
     * @example
     * // Update or create a Provider_menu
     * const provider_menu = await prisma.provider_menu.upsert({
     *   create: {
     *     // ... data to create a Provider_menu
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Provider_menu we want to update
     *   }
     * })
     */
    upsert<T extends provider_menuUpsertArgs>(args: SelectSubset<T, provider_menuUpsertArgs<ExtArgs>>): Prisma__provider_menuClient<$Result.GetResult<Prisma.$provider_menuPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Provider_menus.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {provider_menuCountArgs} args - Arguments to filter Provider_menus to count.
     * @example
     * // Count the number of Provider_menus
     * const count = await prisma.provider_menu.count({
     *   where: {
     *     // ... the filter for the Provider_menus we want to count
     *   }
     * })
    **/
    count<T extends provider_menuCountArgs>(
      args?: Subset<T, provider_menuCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Provider_menuCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Provider_menu.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Provider_menuAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Provider_menuAggregateArgs>(args: Subset<T, Provider_menuAggregateArgs>): Prisma.PrismaPromise<GetProvider_menuAggregateType<T>>

    /**
     * Group by Provider_menu.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {provider_menuGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends provider_menuGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: provider_menuGroupByArgs['orderBy'] }
        : { orderBy?: provider_menuGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, provider_menuGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProvider_menuGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the provider_menu model
   */
  readonly fields: provider_menuFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for provider_menu.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__provider_menuClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    providers<T extends providersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, providersDefaultArgs<ExtArgs>>): Prisma__providersClient<$Result.GetResult<Prisma.$providersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    provider_menu_items<T extends provider_menu$provider_menu_itemsArgs<ExtArgs> = {}>(args?: Subset<T, provider_menu$provider_menu_itemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$provider_menu_itemsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    provider_menu_categories<T extends provider_menu$provider_menu_categoriesArgs<ExtArgs> = {}>(args?: Subset<T, provider_menu$provider_menu_categoriesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$provider_menu_categoriesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the provider_menu model
   */ 
  interface provider_menuFieldRefs {
    readonly id: FieldRef<"provider_menu", 'BigInt'>
    readonly provider_id: FieldRef<"provider_menu", 'BigInt'>
    readonly title: FieldRef<"provider_menu", 'String'>
    readonly description: FieldRef<"provider_menu", 'String'>
    readonly created_at: FieldRef<"provider_menu", 'DateTime'>
    readonly updated_at: FieldRef<"provider_menu", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * provider_menu findUnique
   */
  export type provider_menuFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the provider_menu
     */
    select?: provider_menuSelect<ExtArgs> | null
    /**
     * Omit specific fields from the provider_menu
     */
    omit?: provider_menuOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: provider_menuInclude<ExtArgs> | null
    /**
     * Filter, which provider_menu to fetch.
     */
    where: provider_menuWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * provider_menu findUniqueOrThrow
   */
  export type provider_menuFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the provider_menu
     */
    select?: provider_menuSelect<ExtArgs> | null
    /**
     * Omit specific fields from the provider_menu
     */
    omit?: provider_menuOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: provider_menuInclude<ExtArgs> | null
    /**
     * Filter, which provider_menu to fetch.
     */
    where: provider_menuWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * provider_menu findFirst
   */
  export type provider_menuFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the provider_menu
     */
    select?: provider_menuSelect<ExtArgs> | null
    /**
     * Omit specific fields from the provider_menu
     */
    omit?: provider_menuOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: provider_menuInclude<ExtArgs> | null
    /**
     * Filter, which provider_menu to fetch.
     */
    where?: provider_menuWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of provider_menus to fetch.
     */
    orderBy?: provider_menuOrderByWithRelationInput | provider_menuOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for provider_menus.
     */
    cursor?: provider_menuWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` provider_menus from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` provider_menus.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of provider_menus.
     */
    distinct?: Provider_menuScalarFieldEnum | Provider_menuScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * provider_menu findFirstOrThrow
   */
  export type provider_menuFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the provider_menu
     */
    select?: provider_menuSelect<ExtArgs> | null
    /**
     * Omit specific fields from the provider_menu
     */
    omit?: provider_menuOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: provider_menuInclude<ExtArgs> | null
    /**
     * Filter, which provider_menu to fetch.
     */
    where?: provider_menuWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of provider_menus to fetch.
     */
    orderBy?: provider_menuOrderByWithRelationInput | provider_menuOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for provider_menus.
     */
    cursor?: provider_menuWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` provider_menus from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` provider_menus.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of provider_menus.
     */
    distinct?: Provider_menuScalarFieldEnum | Provider_menuScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * provider_menu findMany
   */
  export type provider_menuFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the provider_menu
     */
    select?: provider_menuSelect<ExtArgs> | null
    /**
     * Omit specific fields from the provider_menu
     */
    omit?: provider_menuOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: provider_menuInclude<ExtArgs> | null
    /**
     * Filter, which provider_menus to fetch.
     */
    where?: provider_menuWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of provider_menus to fetch.
     */
    orderBy?: provider_menuOrderByWithRelationInput | provider_menuOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing provider_menus.
     */
    cursor?: provider_menuWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` provider_menus from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` provider_menus.
     */
    skip?: number
    distinct?: Provider_menuScalarFieldEnum | Provider_menuScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * provider_menu create
   */
  export type provider_menuCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the provider_menu
     */
    select?: provider_menuSelect<ExtArgs> | null
    /**
     * Omit specific fields from the provider_menu
     */
    omit?: provider_menuOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: provider_menuInclude<ExtArgs> | null
    /**
     * The data needed to create a provider_menu.
     */
    data: XOR<provider_menuCreateInput, provider_menuUncheckedCreateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * provider_menu createMany
   */
  export type provider_menuCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many provider_menus.
     */
    data: provider_menuCreateManyInput | provider_menuCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * provider_menu createManyAndReturn
   */
  export type provider_menuCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the provider_menu
     */
    select?: provider_menuSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the provider_menu
     */
    omit?: provider_menuOmit<ExtArgs> | null
    /**
     * The data used to create many provider_menus.
     */
    data: provider_menuCreateManyInput | provider_menuCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: provider_menuIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * provider_menu update
   */
  export type provider_menuUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the provider_menu
     */
    select?: provider_menuSelect<ExtArgs> | null
    /**
     * Omit specific fields from the provider_menu
     */
    omit?: provider_menuOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: provider_menuInclude<ExtArgs> | null
    /**
     * The data needed to update a provider_menu.
     */
    data: XOR<provider_menuUpdateInput, provider_menuUncheckedUpdateInput>
    /**
     * Choose, which provider_menu to update.
     */
    where: provider_menuWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * provider_menu updateMany
   */
  export type provider_menuUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update provider_menus.
     */
    data: XOR<provider_menuUpdateManyMutationInput, provider_menuUncheckedUpdateManyInput>
    /**
     * Filter which provider_menus to update
     */
    where?: provider_menuWhereInput
    /**
     * Limit how many provider_menus to update.
     */
    limit?: number
  }

  /**
   * provider_menu updateManyAndReturn
   */
  export type provider_menuUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the provider_menu
     */
    select?: provider_menuSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the provider_menu
     */
    omit?: provider_menuOmit<ExtArgs> | null
    /**
     * The data used to update provider_menus.
     */
    data: XOR<provider_menuUpdateManyMutationInput, provider_menuUncheckedUpdateManyInput>
    /**
     * Filter which provider_menus to update
     */
    where?: provider_menuWhereInput
    /**
     * Limit how many provider_menus to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: provider_menuIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * provider_menu upsert
   */
  export type provider_menuUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the provider_menu
     */
    select?: provider_menuSelect<ExtArgs> | null
    /**
     * Omit specific fields from the provider_menu
     */
    omit?: provider_menuOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: provider_menuInclude<ExtArgs> | null
    /**
     * The filter to search for the provider_menu to update in case it exists.
     */
    where: provider_menuWhereUniqueInput
    /**
     * In case the provider_menu found by the `where` argument doesn't exist, create a new provider_menu with this data.
     */
    create: XOR<provider_menuCreateInput, provider_menuUncheckedCreateInput>
    /**
     * In case the provider_menu was found with the provided `where` argument, update it with this data.
     */
    update: XOR<provider_menuUpdateInput, provider_menuUncheckedUpdateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * provider_menu delete
   */
  export type provider_menuDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the provider_menu
     */
    select?: provider_menuSelect<ExtArgs> | null
    /**
     * Omit specific fields from the provider_menu
     */
    omit?: provider_menuOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: provider_menuInclude<ExtArgs> | null
    /**
     * Filter which provider_menu to delete.
     */
    where: provider_menuWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * provider_menu deleteMany
   */
  export type provider_menuDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which provider_menus to delete
     */
    where?: provider_menuWhereInput
    /**
     * Limit how many provider_menus to delete.
     */
    limit?: number
  }

  /**
   * provider_menu.provider_menu_items
   */
  export type provider_menu$provider_menu_itemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the provider_menu_items
     */
    select?: provider_menu_itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the provider_menu_items
     */
    omit?: provider_menu_itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: provider_menu_itemsInclude<ExtArgs> | null
    where?: provider_menu_itemsWhereInput
    orderBy?: provider_menu_itemsOrderByWithRelationInput | provider_menu_itemsOrderByWithRelationInput[]
    cursor?: provider_menu_itemsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Provider_menu_itemsScalarFieldEnum | Provider_menu_itemsScalarFieldEnum[]
  }

  /**
   * provider_menu.provider_menu_categories
   */
  export type provider_menu$provider_menu_categoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the provider_menu_categories
     */
    select?: provider_menu_categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the provider_menu_categories
     */
    omit?: provider_menu_categoriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: provider_menu_categoriesInclude<ExtArgs> | null
    where?: provider_menu_categoriesWhereInput
    orderBy?: provider_menu_categoriesOrderByWithRelationInput | provider_menu_categoriesOrderByWithRelationInput[]
    cursor?: provider_menu_categoriesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Provider_menu_categoriesScalarFieldEnum | Provider_menu_categoriesScalarFieldEnum[]
  }

  /**
   * provider_menu without action
   */
  export type provider_menuDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the provider_menu
     */
    select?: provider_menuSelect<ExtArgs> | null
    /**
     * Omit specific fields from the provider_menu
     */
    omit?: provider_menuOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: provider_menuInclude<ExtArgs> | null
  }


  /**
   * Model provider_menu_items
   */

  export type AggregateProvider_menu_items = {
    _count: Provider_menu_itemsCountAggregateOutputType | null
    _avg: Provider_menu_itemsAvgAggregateOutputType | null
    _sum: Provider_menu_itemsSumAggregateOutputType | null
    _min: Provider_menu_itemsMinAggregateOutputType | null
    _max: Provider_menu_itemsMaxAggregateOutputType | null
  }

  export type Provider_menu_itemsAvgAggregateOutputType = {
    id: number | null
    menu_id: number | null
    category_id: number | null
    price: Decimal | null
  }

  export type Provider_menu_itemsSumAggregateOutputType = {
    id: bigint | null
    menu_id: bigint | null
    category_id: bigint | null
    price: Decimal | null
  }

  export type Provider_menu_itemsMinAggregateOutputType = {
    id: bigint | null
    menu_id: bigint | null
    title: string | null
    description: string | null
    created_at: Date | null
    updated_at: Date | null
    category_id: bigint | null
    price: Decimal | null
  }

  export type Provider_menu_itemsMaxAggregateOutputType = {
    id: bigint | null
    menu_id: bigint | null
    title: string | null
    description: string | null
    created_at: Date | null
    updated_at: Date | null
    category_id: bigint | null
    price: Decimal | null
  }

  export type Provider_menu_itemsCountAggregateOutputType = {
    id: number
    menu_id: number
    title: number
    description: number
    created_at: number
    updated_at: number
    category_id: number
    price: number
    _all: number
  }


  export type Provider_menu_itemsAvgAggregateInputType = {
    id?: true
    menu_id?: true
    category_id?: true
    price?: true
  }

  export type Provider_menu_itemsSumAggregateInputType = {
    id?: true
    menu_id?: true
    category_id?: true
    price?: true
  }

  export type Provider_menu_itemsMinAggregateInputType = {
    id?: true
    menu_id?: true
    title?: true
    description?: true
    created_at?: true
    updated_at?: true
    category_id?: true
    price?: true
  }

  export type Provider_menu_itemsMaxAggregateInputType = {
    id?: true
    menu_id?: true
    title?: true
    description?: true
    created_at?: true
    updated_at?: true
    category_id?: true
    price?: true
  }

  export type Provider_menu_itemsCountAggregateInputType = {
    id?: true
    menu_id?: true
    title?: true
    description?: true
    created_at?: true
    updated_at?: true
    category_id?: true
    price?: true
    _all?: true
  }

  export type Provider_menu_itemsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which provider_menu_items to aggregate.
     */
    where?: provider_menu_itemsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of provider_menu_items to fetch.
     */
    orderBy?: provider_menu_itemsOrderByWithRelationInput | provider_menu_itemsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: provider_menu_itemsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` provider_menu_items from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` provider_menu_items.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned provider_menu_items
    **/
    _count?: true | Provider_menu_itemsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Provider_menu_itemsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Provider_menu_itemsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Provider_menu_itemsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Provider_menu_itemsMaxAggregateInputType
  }

  export type GetProvider_menu_itemsAggregateType<T extends Provider_menu_itemsAggregateArgs> = {
        [P in keyof T & keyof AggregateProvider_menu_items]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProvider_menu_items[P]>
      : GetScalarType<T[P], AggregateProvider_menu_items[P]>
  }




  export type provider_menu_itemsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: provider_menu_itemsWhereInput
    orderBy?: provider_menu_itemsOrderByWithAggregationInput | provider_menu_itemsOrderByWithAggregationInput[]
    by: Provider_menu_itemsScalarFieldEnum[] | Provider_menu_itemsScalarFieldEnum
    having?: provider_menu_itemsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Provider_menu_itemsCountAggregateInputType | true
    _avg?: Provider_menu_itemsAvgAggregateInputType
    _sum?: Provider_menu_itemsSumAggregateInputType
    _min?: Provider_menu_itemsMinAggregateInputType
    _max?: Provider_menu_itemsMaxAggregateInputType
  }

  export type Provider_menu_itemsGroupByOutputType = {
    id: bigint
    menu_id: bigint
    title: string
    description: string | null
    created_at: Date | null
    updated_at: Date | null
    category_id: bigint
    price: Decimal
    _count: Provider_menu_itemsCountAggregateOutputType | null
    _avg: Provider_menu_itemsAvgAggregateOutputType | null
    _sum: Provider_menu_itemsSumAggregateOutputType | null
    _min: Provider_menu_itemsMinAggregateOutputType | null
    _max: Provider_menu_itemsMaxAggregateOutputType | null
  }

  type GetProvider_menu_itemsGroupByPayload<T extends provider_menu_itemsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Provider_menu_itemsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Provider_menu_itemsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Provider_menu_itemsGroupByOutputType[P]>
            : GetScalarType<T[P], Provider_menu_itemsGroupByOutputType[P]>
        }
      >
    >


  export type provider_menu_itemsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    menu_id?: boolean
    title?: boolean
    description?: boolean
    created_at?: boolean
    updated_at?: boolean
    category_id?: boolean
    price?: boolean
    provider_menu_categories?: boolean | provider_menu_categoriesDefaultArgs<ExtArgs>
    provider_menu?: boolean | provider_menuDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["provider_menu_items"]>

  export type provider_menu_itemsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    menu_id?: boolean
    title?: boolean
    description?: boolean
    created_at?: boolean
    updated_at?: boolean
    category_id?: boolean
    price?: boolean
    provider_menu_categories?: boolean | provider_menu_categoriesDefaultArgs<ExtArgs>
    provider_menu?: boolean | provider_menuDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["provider_menu_items"]>

  export type provider_menu_itemsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    menu_id?: boolean
    title?: boolean
    description?: boolean
    created_at?: boolean
    updated_at?: boolean
    category_id?: boolean
    price?: boolean
    provider_menu_categories?: boolean | provider_menu_categoriesDefaultArgs<ExtArgs>
    provider_menu?: boolean | provider_menuDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["provider_menu_items"]>

  export type provider_menu_itemsSelectScalar = {
    id?: boolean
    menu_id?: boolean
    title?: boolean
    description?: boolean
    created_at?: boolean
    updated_at?: boolean
    category_id?: boolean
    price?: boolean
  }

  export type provider_menu_itemsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "menu_id" | "title" | "description" | "created_at" | "updated_at" | "category_id" | "price", ExtArgs["result"]["provider_menu_items"]>
  export type provider_menu_itemsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    provider_menu_categories?: boolean | provider_menu_categoriesDefaultArgs<ExtArgs>
    provider_menu?: boolean | provider_menuDefaultArgs<ExtArgs>
  }
  export type provider_menu_itemsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    provider_menu_categories?: boolean | provider_menu_categoriesDefaultArgs<ExtArgs>
    provider_menu?: boolean | provider_menuDefaultArgs<ExtArgs>
  }
  export type provider_menu_itemsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    provider_menu_categories?: boolean | provider_menu_categoriesDefaultArgs<ExtArgs>
    provider_menu?: boolean | provider_menuDefaultArgs<ExtArgs>
  }

  export type $provider_menu_itemsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "provider_menu_items"
    objects: {
      provider_menu_categories: Prisma.$provider_menu_categoriesPayload<ExtArgs>
      provider_menu: Prisma.$provider_menuPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      menu_id: bigint
      title: string
      description: string | null
      created_at: Date | null
      updated_at: Date | null
      category_id: bigint
      price: Prisma.Decimal
    }, ExtArgs["result"]["provider_menu_items"]>
    composites: {}
  }

  type provider_menu_itemsGetPayload<S extends boolean | null | undefined | provider_menu_itemsDefaultArgs> = $Result.GetResult<Prisma.$provider_menu_itemsPayload, S>

  type provider_menu_itemsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<provider_menu_itemsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit' | 'relationLoadStrategy'> & {
      select?: Provider_menu_itemsCountAggregateInputType | true
    }

  export interface provider_menu_itemsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['provider_menu_items'], meta: { name: 'provider_menu_items' } }
    /**
     * Find zero or one Provider_menu_items that matches the filter.
     * @param {provider_menu_itemsFindUniqueArgs} args - Arguments to find a Provider_menu_items
     * @example
     * // Get one Provider_menu_items
     * const provider_menu_items = await prisma.provider_menu_items.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends provider_menu_itemsFindUniqueArgs>(args: SelectSubset<T, provider_menu_itemsFindUniqueArgs<ExtArgs>>): Prisma__provider_menu_itemsClient<$Result.GetResult<Prisma.$provider_menu_itemsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Provider_menu_items that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {provider_menu_itemsFindUniqueOrThrowArgs} args - Arguments to find a Provider_menu_items
     * @example
     * // Get one Provider_menu_items
     * const provider_menu_items = await prisma.provider_menu_items.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends provider_menu_itemsFindUniqueOrThrowArgs>(args: SelectSubset<T, provider_menu_itemsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__provider_menu_itemsClient<$Result.GetResult<Prisma.$provider_menu_itemsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Provider_menu_items that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {provider_menu_itemsFindFirstArgs} args - Arguments to find a Provider_menu_items
     * @example
     * // Get one Provider_menu_items
     * const provider_menu_items = await prisma.provider_menu_items.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends provider_menu_itemsFindFirstArgs>(args?: SelectSubset<T, provider_menu_itemsFindFirstArgs<ExtArgs>>): Prisma__provider_menu_itemsClient<$Result.GetResult<Prisma.$provider_menu_itemsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Provider_menu_items that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {provider_menu_itemsFindFirstOrThrowArgs} args - Arguments to find a Provider_menu_items
     * @example
     * // Get one Provider_menu_items
     * const provider_menu_items = await prisma.provider_menu_items.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends provider_menu_itemsFindFirstOrThrowArgs>(args?: SelectSubset<T, provider_menu_itemsFindFirstOrThrowArgs<ExtArgs>>): Prisma__provider_menu_itemsClient<$Result.GetResult<Prisma.$provider_menu_itemsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Provider_menu_items that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {provider_menu_itemsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Provider_menu_items
     * const provider_menu_items = await prisma.provider_menu_items.findMany()
     * 
     * // Get first 10 Provider_menu_items
     * const provider_menu_items = await prisma.provider_menu_items.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const provider_menu_itemsWithIdOnly = await prisma.provider_menu_items.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends provider_menu_itemsFindManyArgs>(args?: SelectSubset<T, provider_menu_itemsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$provider_menu_itemsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Provider_menu_items.
     * @param {provider_menu_itemsCreateArgs} args - Arguments to create a Provider_menu_items.
     * @example
     * // Create one Provider_menu_items
     * const Provider_menu_items = await prisma.provider_menu_items.create({
     *   data: {
     *     // ... data to create a Provider_menu_items
     *   }
     * })
     * 
     */
    create<T extends provider_menu_itemsCreateArgs>(args: SelectSubset<T, provider_menu_itemsCreateArgs<ExtArgs>>): Prisma__provider_menu_itemsClient<$Result.GetResult<Prisma.$provider_menu_itemsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Provider_menu_items.
     * @param {provider_menu_itemsCreateManyArgs} args - Arguments to create many Provider_menu_items.
     * @example
     * // Create many Provider_menu_items
     * const provider_menu_items = await prisma.provider_menu_items.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends provider_menu_itemsCreateManyArgs>(args?: SelectSubset<T, provider_menu_itemsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Provider_menu_items and returns the data saved in the database.
     * @param {provider_menu_itemsCreateManyAndReturnArgs} args - Arguments to create many Provider_menu_items.
     * @example
     * // Create many Provider_menu_items
     * const provider_menu_items = await prisma.provider_menu_items.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Provider_menu_items and only return the `id`
     * const provider_menu_itemsWithIdOnly = await prisma.provider_menu_items.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends provider_menu_itemsCreateManyAndReturnArgs>(args?: SelectSubset<T, provider_menu_itemsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$provider_menu_itemsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Provider_menu_items.
     * @param {provider_menu_itemsDeleteArgs} args - Arguments to delete one Provider_menu_items.
     * @example
     * // Delete one Provider_menu_items
     * const Provider_menu_items = await prisma.provider_menu_items.delete({
     *   where: {
     *     // ... filter to delete one Provider_menu_items
     *   }
     * })
     * 
     */
    delete<T extends provider_menu_itemsDeleteArgs>(args: SelectSubset<T, provider_menu_itemsDeleteArgs<ExtArgs>>): Prisma__provider_menu_itemsClient<$Result.GetResult<Prisma.$provider_menu_itemsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Provider_menu_items.
     * @param {provider_menu_itemsUpdateArgs} args - Arguments to update one Provider_menu_items.
     * @example
     * // Update one Provider_menu_items
     * const provider_menu_items = await prisma.provider_menu_items.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends provider_menu_itemsUpdateArgs>(args: SelectSubset<T, provider_menu_itemsUpdateArgs<ExtArgs>>): Prisma__provider_menu_itemsClient<$Result.GetResult<Prisma.$provider_menu_itemsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Provider_menu_items.
     * @param {provider_menu_itemsDeleteManyArgs} args - Arguments to filter Provider_menu_items to delete.
     * @example
     * // Delete a few Provider_menu_items
     * const { count } = await prisma.provider_menu_items.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends provider_menu_itemsDeleteManyArgs>(args?: SelectSubset<T, provider_menu_itemsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Provider_menu_items.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {provider_menu_itemsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Provider_menu_items
     * const provider_menu_items = await prisma.provider_menu_items.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends provider_menu_itemsUpdateManyArgs>(args: SelectSubset<T, provider_menu_itemsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Provider_menu_items and returns the data updated in the database.
     * @param {provider_menu_itemsUpdateManyAndReturnArgs} args - Arguments to update many Provider_menu_items.
     * @example
     * // Update many Provider_menu_items
     * const provider_menu_items = await prisma.provider_menu_items.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Provider_menu_items and only return the `id`
     * const provider_menu_itemsWithIdOnly = await prisma.provider_menu_items.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends provider_menu_itemsUpdateManyAndReturnArgs>(args: SelectSubset<T, provider_menu_itemsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$provider_menu_itemsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Provider_menu_items.
     * @param {provider_menu_itemsUpsertArgs} args - Arguments to update or create a Provider_menu_items.
     * @example
     * // Update or create a Provider_menu_items
     * const provider_menu_items = await prisma.provider_menu_items.upsert({
     *   create: {
     *     // ... data to create a Provider_menu_items
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Provider_menu_items we want to update
     *   }
     * })
     */
    upsert<T extends provider_menu_itemsUpsertArgs>(args: SelectSubset<T, provider_menu_itemsUpsertArgs<ExtArgs>>): Prisma__provider_menu_itemsClient<$Result.GetResult<Prisma.$provider_menu_itemsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Provider_menu_items.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {provider_menu_itemsCountArgs} args - Arguments to filter Provider_menu_items to count.
     * @example
     * // Count the number of Provider_menu_items
     * const count = await prisma.provider_menu_items.count({
     *   where: {
     *     // ... the filter for the Provider_menu_items we want to count
     *   }
     * })
    **/
    count<T extends provider_menu_itemsCountArgs>(
      args?: Subset<T, provider_menu_itemsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Provider_menu_itemsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Provider_menu_items.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Provider_menu_itemsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Provider_menu_itemsAggregateArgs>(args: Subset<T, Provider_menu_itemsAggregateArgs>): Prisma.PrismaPromise<GetProvider_menu_itemsAggregateType<T>>

    /**
     * Group by Provider_menu_items.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {provider_menu_itemsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends provider_menu_itemsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: provider_menu_itemsGroupByArgs['orderBy'] }
        : { orderBy?: provider_menu_itemsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, provider_menu_itemsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProvider_menu_itemsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the provider_menu_items model
   */
  readonly fields: provider_menu_itemsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for provider_menu_items.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__provider_menu_itemsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    provider_menu_categories<T extends provider_menu_categoriesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, provider_menu_categoriesDefaultArgs<ExtArgs>>): Prisma__provider_menu_categoriesClient<$Result.GetResult<Prisma.$provider_menu_categoriesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    provider_menu<T extends provider_menuDefaultArgs<ExtArgs> = {}>(args?: Subset<T, provider_menuDefaultArgs<ExtArgs>>): Prisma__provider_menuClient<$Result.GetResult<Prisma.$provider_menuPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the provider_menu_items model
   */ 
  interface provider_menu_itemsFieldRefs {
    readonly id: FieldRef<"provider_menu_items", 'BigInt'>
    readonly menu_id: FieldRef<"provider_menu_items", 'BigInt'>
    readonly title: FieldRef<"provider_menu_items", 'String'>
    readonly description: FieldRef<"provider_menu_items", 'String'>
    readonly created_at: FieldRef<"provider_menu_items", 'DateTime'>
    readonly updated_at: FieldRef<"provider_menu_items", 'DateTime'>
    readonly category_id: FieldRef<"provider_menu_items", 'BigInt'>
    readonly price: FieldRef<"provider_menu_items", 'Decimal'>
  }
    

  // Custom InputTypes
  /**
   * provider_menu_items findUnique
   */
  export type provider_menu_itemsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the provider_menu_items
     */
    select?: provider_menu_itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the provider_menu_items
     */
    omit?: provider_menu_itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: provider_menu_itemsInclude<ExtArgs> | null
    /**
     * Filter, which provider_menu_items to fetch.
     */
    where: provider_menu_itemsWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * provider_menu_items findUniqueOrThrow
   */
  export type provider_menu_itemsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the provider_menu_items
     */
    select?: provider_menu_itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the provider_menu_items
     */
    omit?: provider_menu_itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: provider_menu_itemsInclude<ExtArgs> | null
    /**
     * Filter, which provider_menu_items to fetch.
     */
    where: provider_menu_itemsWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * provider_menu_items findFirst
   */
  export type provider_menu_itemsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the provider_menu_items
     */
    select?: provider_menu_itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the provider_menu_items
     */
    omit?: provider_menu_itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: provider_menu_itemsInclude<ExtArgs> | null
    /**
     * Filter, which provider_menu_items to fetch.
     */
    where?: provider_menu_itemsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of provider_menu_items to fetch.
     */
    orderBy?: provider_menu_itemsOrderByWithRelationInput | provider_menu_itemsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for provider_menu_items.
     */
    cursor?: provider_menu_itemsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` provider_menu_items from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` provider_menu_items.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of provider_menu_items.
     */
    distinct?: Provider_menu_itemsScalarFieldEnum | Provider_menu_itemsScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * provider_menu_items findFirstOrThrow
   */
  export type provider_menu_itemsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the provider_menu_items
     */
    select?: provider_menu_itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the provider_menu_items
     */
    omit?: provider_menu_itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: provider_menu_itemsInclude<ExtArgs> | null
    /**
     * Filter, which provider_menu_items to fetch.
     */
    where?: provider_menu_itemsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of provider_menu_items to fetch.
     */
    orderBy?: provider_menu_itemsOrderByWithRelationInput | provider_menu_itemsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for provider_menu_items.
     */
    cursor?: provider_menu_itemsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` provider_menu_items from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` provider_menu_items.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of provider_menu_items.
     */
    distinct?: Provider_menu_itemsScalarFieldEnum | Provider_menu_itemsScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * provider_menu_items findMany
   */
  export type provider_menu_itemsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the provider_menu_items
     */
    select?: provider_menu_itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the provider_menu_items
     */
    omit?: provider_menu_itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: provider_menu_itemsInclude<ExtArgs> | null
    /**
     * Filter, which provider_menu_items to fetch.
     */
    where?: provider_menu_itemsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of provider_menu_items to fetch.
     */
    orderBy?: provider_menu_itemsOrderByWithRelationInput | provider_menu_itemsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing provider_menu_items.
     */
    cursor?: provider_menu_itemsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` provider_menu_items from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` provider_menu_items.
     */
    skip?: number
    distinct?: Provider_menu_itemsScalarFieldEnum | Provider_menu_itemsScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * provider_menu_items create
   */
  export type provider_menu_itemsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the provider_menu_items
     */
    select?: provider_menu_itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the provider_menu_items
     */
    omit?: provider_menu_itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: provider_menu_itemsInclude<ExtArgs> | null
    /**
     * The data needed to create a provider_menu_items.
     */
    data: XOR<provider_menu_itemsCreateInput, provider_menu_itemsUncheckedCreateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * provider_menu_items createMany
   */
  export type provider_menu_itemsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many provider_menu_items.
     */
    data: provider_menu_itemsCreateManyInput | provider_menu_itemsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * provider_menu_items createManyAndReturn
   */
  export type provider_menu_itemsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the provider_menu_items
     */
    select?: provider_menu_itemsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the provider_menu_items
     */
    omit?: provider_menu_itemsOmit<ExtArgs> | null
    /**
     * The data used to create many provider_menu_items.
     */
    data: provider_menu_itemsCreateManyInput | provider_menu_itemsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: provider_menu_itemsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * provider_menu_items update
   */
  export type provider_menu_itemsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the provider_menu_items
     */
    select?: provider_menu_itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the provider_menu_items
     */
    omit?: provider_menu_itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: provider_menu_itemsInclude<ExtArgs> | null
    /**
     * The data needed to update a provider_menu_items.
     */
    data: XOR<provider_menu_itemsUpdateInput, provider_menu_itemsUncheckedUpdateInput>
    /**
     * Choose, which provider_menu_items to update.
     */
    where: provider_menu_itemsWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * provider_menu_items updateMany
   */
  export type provider_menu_itemsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update provider_menu_items.
     */
    data: XOR<provider_menu_itemsUpdateManyMutationInput, provider_menu_itemsUncheckedUpdateManyInput>
    /**
     * Filter which provider_menu_items to update
     */
    where?: provider_menu_itemsWhereInput
    /**
     * Limit how many provider_menu_items to update.
     */
    limit?: number
  }

  /**
   * provider_menu_items updateManyAndReturn
   */
  export type provider_menu_itemsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the provider_menu_items
     */
    select?: provider_menu_itemsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the provider_menu_items
     */
    omit?: provider_menu_itemsOmit<ExtArgs> | null
    /**
     * The data used to update provider_menu_items.
     */
    data: XOR<provider_menu_itemsUpdateManyMutationInput, provider_menu_itemsUncheckedUpdateManyInput>
    /**
     * Filter which provider_menu_items to update
     */
    where?: provider_menu_itemsWhereInput
    /**
     * Limit how many provider_menu_items to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: provider_menu_itemsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * provider_menu_items upsert
   */
  export type provider_menu_itemsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the provider_menu_items
     */
    select?: provider_menu_itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the provider_menu_items
     */
    omit?: provider_menu_itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: provider_menu_itemsInclude<ExtArgs> | null
    /**
     * The filter to search for the provider_menu_items to update in case it exists.
     */
    where: provider_menu_itemsWhereUniqueInput
    /**
     * In case the provider_menu_items found by the `where` argument doesn't exist, create a new provider_menu_items with this data.
     */
    create: XOR<provider_menu_itemsCreateInput, provider_menu_itemsUncheckedCreateInput>
    /**
     * In case the provider_menu_items was found with the provided `where` argument, update it with this data.
     */
    update: XOR<provider_menu_itemsUpdateInput, provider_menu_itemsUncheckedUpdateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * provider_menu_items delete
   */
  export type provider_menu_itemsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the provider_menu_items
     */
    select?: provider_menu_itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the provider_menu_items
     */
    omit?: provider_menu_itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: provider_menu_itemsInclude<ExtArgs> | null
    /**
     * Filter which provider_menu_items to delete.
     */
    where: provider_menu_itemsWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * provider_menu_items deleteMany
   */
  export type provider_menu_itemsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which provider_menu_items to delete
     */
    where?: provider_menu_itemsWhereInput
    /**
     * Limit how many provider_menu_items to delete.
     */
    limit?: number
  }

  /**
   * provider_menu_items without action
   */
  export type provider_menu_itemsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the provider_menu_items
     */
    select?: provider_menu_itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the provider_menu_items
     */
    omit?: provider_menu_itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: provider_menu_itemsInclude<ExtArgs> | null
  }


  /**
   * Model provider_menu_categories
   */

  export type AggregateProvider_menu_categories = {
    _count: Provider_menu_categoriesCountAggregateOutputType | null
    _avg: Provider_menu_categoriesAvgAggregateOutputType | null
    _sum: Provider_menu_categoriesSumAggregateOutputType | null
    _min: Provider_menu_categoriesMinAggregateOutputType | null
    _max: Provider_menu_categoriesMaxAggregateOutputType | null
  }

  export type Provider_menu_categoriesAvgAggregateOutputType = {
    id: number | null
    menu_id: number | null
  }

  export type Provider_menu_categoriesSumAggregateOutputType = {
    id: bigint | null
    menu_id: bigint | null
  }

  export type Provider_menu_categoriesMinAggregateOutputType = {
    id: bigint | null
    menu_id: bigint | null
    title: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Provider_menu_categoriesMaxAggregateOutputType = {
    id: bigint | null
    menu_id: bigint | null
    title: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Provider_menu_categoriesCountAggregateOutputType = {
    id: number
    menu_id: number
    title: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Provider_menu_categoriesAvgAggregateInputType = {
    id?: true
    menu_id?: true
  }

  export type Provider_menu_categoriesSumAggregateInputType = {
    id?: true
    menu_id?: true
  }

  export type Provider_menu_categoriesMinAggregateInputType = {
    id?: true
    menu_id?: true
    title?: true
    created_at?: true
    updated_at?: true
  }

  export type Provider_menu_categoriesMaxAggregateInputType = {
    id?: true
    menu_id?: true
    title?: true
    created_at?: true
    updated_at?: true
  }

  export type Provider_menu_categoriesCountAggregateInputType = {
    id?: true
    menu_id?: true
    title?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Provider_menu_categoriesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which provider_menu_categories to aggregate.
     */
    where?: provider_menu_categoriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of provider_menu_categories to fetch.
     */
    orderBy?: provider_menu_categoriesOrderByWithRelationInput | provider_menu_categoriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: provider_menu_categoriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` provider_menu_categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` provider_menu_categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned provider_menu_categories
    **/
    _count?: true | Provider_menu_categoriesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Provider_menu_categoriesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Provider_menu_categoriesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Provider_menu_categoriesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Provider_menu_categoriesMaxAggregateInputType
  }

  export type GetProvider_menu_categoriesAggregateType<T extends Provider_menu_categoriesAggregateArgs> = {
        [P in keyof T & keyof AggregateProvider_menu_categories]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProvider_menu_categories[P]>
      : GetScalarType<T[P], AggregateProvider_menu_categories[P]>
  }




  export type provider_menu_categoriesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: provider_menu_categoriesWhereInput
    orderBy?: provider_menu_categoriesOrderByWithAggregationInput | provider_menu_categoriesOrderByWithAggregationInput[]
    by: Provider_menu_categoriesScalarFieldEnum[] | Provider_menu_categoriesScalarFieldEnum
    having?: provider_menu_categoriesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Provider_menu_categoriesCountAggregateInputType | true
    _avg?: Provider_menu_categoriesAvgAggregateInputType
    _sum?: Provider_menu_categoriesSumAggregateInputType
    _min?: Provider_menu_categoriesMinAggregateInputType
    _max?: Provider_menu_categoriesMaxAggregateInputType
  }

  export type Provider_menu_categoriesGroupByOutputType = {
    id: bigint
    menu_id: bigint
    title: string
    created_at: Date | null
    updated_at: Date | null
    _count: Provider_menu_categoriesCountAggregateOutputType | null
    _avg: Provider_menu_categoriesAvgAggregateOutputType | null
    _sum: Provider_menu_categoriesSumAggregateOutputType | null
    _min: Provider_menu_categoriesMinAggregateOutputType | null
    _max: Provider_menu_categoriesMaxAggregateOutputType | null
  }

  type GetProvider_menu_categoriesGroupByPayload<T extends provider_menu_categoriesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Provider_menu_categoriesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Provider_menu_categoriesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Provider_menu_categoriesGroupByOutputType[P]>
            : GetScalarType<T[P], Provider_menu_categoriesGroupByOutputType[P]>
        }
      >
    >


  export type provider_menu_categoriesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    menu_id?: boolean
    title?: boolean
    created_at?: boolean
    updated_at?: boolean
    provider_menu?: boolean | provider_menuDefaultArgs<ExtArgs>
    provider_menu_items?: boolean | provider_menu_categories$provider_menu_itemsArgs<ExtArgs>
    _count?: boolean | Provider_menu_categoriesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["provider_menu_categories"]>

  export type provider_menu_categoriesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    menu_id?: boolean
    title?: boolean
    created_at?: boolean
    updated_at?: boolean
    provider_menu?: boolean | provider_menuDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["provider_menu_categories"]>

  export type provider_menu_categoriesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    menu_id?: boolean
    title?: boolean
    created_at?: boolean
    updated_at?: boolean
    provider_menu?: boolean | provider_menuDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["provider_menu_categories"]>

  export type provider_menu_categoriesSelectScalar = {
    id?: boolean
    menu_id?: boolean
    title?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type provider_menu_categoriesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "menu_id" | "title" | "created_at" | "updated_at", ExtArgs["result"]["provider_menu_categories"]>
  export type provider_menu_categoriesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    provider_menu?: boolean | provider_menuDefaultArgs<ExtArgs>
    provider_menu_items?: boolean | provider_menu_categories$provider_menu_itemsArgs<ExtArgs>
    _count?: boolean | Provider_menu_categoriesCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type provider_menu_categoriesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    provider_menu?: boolean | provider_menuDefaultArgs<ExtArgs>
  }
  export type provider_menu_categoriesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    provider_menu?: boolean | provider_menuDefaultArgs<ExtArgs>
  }

  export type $provider_menu_categoriesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "provider_menu_categories"
    objects: {
      provider_menu: Prisma.$provider_menuPayload<ExtArgs>
      provider_menu_items: Prisma.$provider_menu_itemsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      menu_id: bigint
      title: string
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["provider_menu_categories"]>
    composites: {}
  }

  type provider_menu_categoriesGetPayload<S extends boolean | null | undefined | provider_menu_categoriesDefaultArgs> = $Result.GetResult<Prisma.$provider_menu_categoriesPayload, S>

  type provider_menu_categoriesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<provider_menu_categoriesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit' | 'relationLoadStrategy'> & {
      select?: Provider_menu_categoriesCountAggregateInputType | true
    }

  export interface provider_menu_categoriesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['provider_menu_categories'], meta: { name: 'provider_menu_categories' } }
    /**
     * Find zero or one Provider_menu_categories that matches the filter.
     * @param {provider_menu_categoriesFindUniqueArgs} args - Arguments to find a Provider_menu_categories
     * @example
     * // Get one Provider_menu_categories
     * const provider_menu_categories = await prisma.provider_menu_categories.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends provider_menu_categoriesFindUniqueArgs>(args: SelectSubset<T, provider_menu_categoriesFindUniqueArgs<ExtArgs>>): Prisma__provider_menu_categoriesClient<$Result.GetResult<Prisma.$provider_menu_categoriesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Provider_menu_categories that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {provider_menu_categoriesFindUniqueOrThrowArgs} args - Arguments to find a Provider_menu_categories
     * @example
     * // Get one Provider_menu_categories
     * const provider_menu_categories = await prisma.provider_menu_categories.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends provider_menu_categoriesFindUniqueOrThrowArgs>(args: SelectSubset<T, provider_menu_categoriesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__provider_menu_categoriesClient<$Result.GetResult<Prisma.$provider_menu_categoriesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Provider_menu_categories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {provider_menu_categoriesFindFirstArgs} args - Arguments to find a Provider_menu_categories
     * @example
     * // Get one Provider_menu_categories
     * const provider_menu_categories = await prisma.provider_menu_categories.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends provider_menu_categoriesFindFirstArgs>(args?: SelectSubset<T, provider_menu_categoriesFindFirstArgs<ExtArgs>>): Prisma__provider_menu_categoriesClient<$Result.GetResult<Prisma.$provider_menu_categoriesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Provider_menu_categories that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {provider_menu_categoriesFindFirstOrThrowArgs} args - Arguments to find a Provider_menu_categories
     * @example
     * // Get one Provider_menu_categories
     * const provider_menu_categories = await prisma.provider_menu_categories.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends provider_menu_categoriesFindFirstOrThrowArgs>(args?: SelectSubset<T, provider_menu_categoriesFindFirstOrThrowArgs<ExtArgs>>): Prisma__provider_menu_categoriesClient<$Result.GetResult<Prisma.$provider_menu_categoriesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Provider_menu_categories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {provider_menu_categoriesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Provider_menu_categories
     * const provider_menu_categories = await prisma.provider_menu_categories.findMany()
     * 
     * // Get first 10 Provider_menu_categories
     * const provider_menu_categories = await prisma.provider_menu_categories.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const provider_menu_categoriesWithIdOnly = await prisma.provider_menu_categories.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends provider_menu_categoriesFindManyArgs>(args?: SelectSubset<T, provider_menu_categoriesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$provider_menu_categoriesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Provider_menu_categories.
     * @param {provider_menu_categoriesCreateArgs} args - Arguments to create a Provider_menu_categories.
     * @example
     * // Create one Provider_menu_categories
     * const Provider_menu_categories = await prisma.provider_menu_categories.create({
     *   data: {
     *     // ... data to create a Provider_menu_categories
     *   }
     * })
     * 
     */
    create<T extends provider_menu_categoriesCreateArgs>(args: SelectSubset<T, provider_menu_categoriesCreateArgs<ExtArgs>>): Prisma__provider_menu_categoriesClient<$Result.GetResult<Prisma.$provider_menu_categoriesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Provider_menu_categories.
     * @param {provider_menu_categoriesCreateManyArgs} args - Arguments to create many Provider_menu_categories.
     * @example
     * // Create many Provider_menu_categories
     * const provider_menu_categories = await prisma.provider_menu_categories.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends provider_menu_categoriesCreateManyArgs>(args?: SelectSubset<T, provider_menu_categoriesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Provider_menu_categories and returns the data saved in the database.
     * @param {provider_menu_categoriesCreateManyAndReturnArgs} args - Arguments to create many Provider_menu_categories.
     * @example
     * // Create many Provider_menu_categories
     * const provider_menu_categories = await prisma.provider_menu_categories.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Provider_menu_categories and only return the `id`
     * const provider_menu_categoriesWithIdOnly = await prisma.provider_menu_categories.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends provider_menu_categoriesCreateManyAndReturnArgs>(args?: SelectSubset<T, provider_menu_categoriesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$provider_menu_categoriesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Provider_menu_categories.
     * @param {provider_menu_categoriesDeleteArgs} args - Arguments to delete one Provider_menu_categories.
     * @example
     * // Delete one Provider_menu_categories
     * const Provider_menu_categories = await prisma.provider_menu_categories.delete({
     *   where: {
     *     // ... filter to delete one Provider_menu_categories
     *   }
     * })
     * 
     */
    delete<T extends provider_menu_categoriesDeleteArgs>(args: SelectSubset<T, provider_menu_categoriesDeleteArgs<ExtArgs>>): Prisma__provider_menu_categoriesClient<$Result.GetResult<Prisma.$provider_menu_categoriesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Provider_menu_categories.
     * @param {provider_menu_categoriesUpdateArgs} args - Arguments to update one Provider_menu_categories.
     * @example
     * // Update one Provider_menu_categories
     * const provider_menu_categories = await prisma.provider_menu_categories.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends provider_menu_categoriesUpdateArgs>(args: SelectSubset<T, provider_menu_categoriesUpdateArgs<ExtArgs>>): Prisma__provider_menu_categoriesClient<$Result.GetResult<Prisma.$provider_menu_categoriesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Provider_menu_categories.
     * @param {provider_menu_categoriesDeleteManyArgs} args - Arguments to filter Provider_menu_categories to delete.
     * @example
     * // Delete a few Provider_menu_categories
     * const { count } = await prisma.provider_menu_categories.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends provider_menu_categoriesDeleteManyArgs>(args?: SelectSubset<T, provider_menu_categoriesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Provider_menu_categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {provider_menu_categoriesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Provider_menu_categories
     * const provider_menu_categories = await prisma.provider_menu_categories.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends provider_menu_categoriesUpdateManyArgs>(args: SelectSubset<T, provider_menu_categoriesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Provider_menu_categories and returns the data updated in the database.
     * @param {provider_menu_categoriesUpdateManyAndReturnArgs} args - Arguments to update many Provider_menu_categories.
     * @example
     * // Update many Provider_menu_categories
     * const provider_menu_categories = await prisma.provider_menu_categories.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Provider_menu_categories and only return the `id`
     * const provider_menu_categoriesWithIdOnly = await prisma.provider_menu_categories.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends provider_menu_categoriesUpdateManyAndReturnArgs>(args: SelectSubset<T, provider_menu_categoriesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$provider_menu_categoriesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Provider_menu_categories.
     * @param {provider_menu_categoriesUpsertArgs} args - Arguments to update or create a Provider_menu_categories.
     * @example
     * // Update or create a Provider_menu_categories
     * const provider_menu_categories = await prisma.provider_menu_categories.upsert({
     *   create: {
     *     // ... data to create a Provider_menu_categories
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Provider_menu_categories we want to update
     *   }
     * })
     */
    upsert<T extends provider_menu_categoriesUpsertArgs>(args: SelectSubset<T, provider_menu_categoriesUpsertArgs<ExtArgs>>): Prisma__provider_menu_categoriesClient<$Result.GetResult<Prisma.$provider_menu_categoriesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Provider_menu_categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {provider_menu_categoriesCountArgs} args - Arguments to filter Provider_menu_categories to count.
     * @example
     * // Count the number of Provider_menu_categories
     * const count = await prisma.provider_menu_categories.count({
     *   where: {
     *     // ... the filter for the Provider_menu_categories we want to count
     *   }
     * })
    **/
    count<T extends provider_menu_categoriesCountArgs>(
      args?: Subset<T, provider_menu_categoriesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Provider_menu_categoriesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Provider_menu_categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Provider_menu_categoriesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Provider_menu_categoriesAggregateArgs>(args: Subset<T, Provider_menu_categoriesAggregateArgs>): Prisma.PrismaPromise<GetProvider_menu_categoriesAggregateType<T>>

    /**
     * Group by Provider_menu_categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {provider_menu_categoriesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends provider_menu_categoriesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: provider_menu_categoriesGroupByArgs['orderBy'] }
        : { orderBy?: provider_menu_categoriesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, provider_menu_categoriesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProvider_menu_categoriesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the provider_menu_categories model
   */
  readonly fields: provider_menu_categoriesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for provider_menu_categories.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__provider_menu_categoriesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    provider_menu<T extends provider_menuDefaultArgs<ExtArgs> = {}>(args?: Subset<T, provider_menuDefaultArgs<ExtArgs>>): Prisma__provider_menuClient<$Result.GetResult<Prisma.$provider_menuPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    provider_menu_items<T extends provider_menu_categories$provider_menu_itemsArgs<ExtArgs> = {}>(args?: Subset<T, provider_menu_categories$provider_menu_itemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$provider_menu_itemsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the provider_menu_categories model
   */ 
  interface provider_menu_categoriesFieldRefs {
    readonly id: FieldRef<"provider_menu_categories", 'BigInt'>
    readonly menu_id: FieldRef<"provider_menu_categories", 'BigInt'>
    readonly title: FieldRef<"provider_menu_categories", 'String'>
    readonly created_at: FieldRef<"provider_menu_categories", 'DateTime'>
    readonly updated_at: FieldRef<"provider_menu_categories", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * provider_menu_categories findUnique
   */
  export type provider_menu_categoriesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the provider_menu_categories
     */
    select?: provider_menu_categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the provider_menu_categories
     */
    omit?: provider_menu_categoriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: provider_menu_categoriesInclude<ExtArgs> | null
    /**
     * Filter, which provider_menu_categories to fetch.
     */
    where: provider_menu_categoriesWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * provider_menu_categories findUniqueOrThrow
   */
  export type provider_menu_categoriesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the provider_menu_categories
     */
    select?: provider_menu_categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the provider_menu_categories
     */
    omit?: provider_menu_categoriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: provider_menu_categoriesInclude<ExtArgs> | null
    /**
     * Filter, which provider_menu_categories to fetch.
     */
    where: provider_menu_categoriesWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * provider_menu_categories findFirst
   */
  export type provider_menu_categoriesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the provider_menu_categories
     */
    select?: provider_menu_categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the provider_menu_categories
     */
    omit?: provider_menu_categoriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: provider_menu_categoriesInclude<ExtArgs> | null
    /**
     * Filter, which provider_menu_categories to fetch.
     */
    where?: provider_menu_categoriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of provider_menu_categories to fetch.
     */
    orderBy?: provider_menu_categoriesOrderByWithRelationInput | provider_menu_categoriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for provider_menu_categories.
     */
    cursor?: provider_menu_categoriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` provider_menu_categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` provider_menu_categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of provider_menu_categories.
     */
    distinct?: Provider_menu_categoriesScalarFieldEnum | Provider_menu_categoriesScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * provider_menu_categories findFirstOrThrow
   */
  export type provider_menu_categoriesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the provider_menu_categories
     */
    select?: provider_menu_categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the provider_menu_categories
     */
    omit?: provider_menu_categoriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: provider_menu_categoriesInclude<ExtArgs> | null
    /**
     * Filter, which provider_menu_categories to fetch.
     */
    where?: provider_menu_categoriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of provider_menu_categories to fetch.
     */
    orderBy?: provider_menu_categoriesOrderByWithRelationInput | provider_menu_categoriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for provider_menu_categories.
     */
    cursor?: provider_menu_categoriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` provider_menu_categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` provider_menu_categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of provider_menu_categories.
     */
    distinct?: Provider_menu_categoriesScalarFieldEnum | Provider_menu_categoriesScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * provider_menu_categories findMany
   */
  export type provider_menu_categoriesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the provider_menu_categories
     */
    select?: provider_menu_categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the provider_menu_categories
     */
    omit?: provider_menu_categoriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: provider_menu_categoriesInclude<ExtArgs> | null
    /**
     * Filter, which provider_menu_categories to fetch.
     */
    where?: provider_menu_categoriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of provider_menu_categories to fetch.
     */
    orderBy?: provider_menu_categoriesOrderByWithRelationInput | provider_menu_categoriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing provider_menu_categories.
     */
    cursor?: provider_menu_categoriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` provider_menu_categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` provider_menu_categories.
     */
    skip?: number
    distinct?: Provider_menu_categoriesScalarFieldEnum | Provider_menu_categoriesScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * provider_menu_categories create
   */
  export type provider_menu_categoriesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the provider_menu_categories
     */
    select?: provider_menu_categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the provider_menu_categories
     */
    omit?: provider_menu_categoriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: provider_menu_categoriesInclude<ExtArgs> | null
    /**
     * The data needed to create a provider_menu_categories.
     */
    data: XOR<provider_menu_categoriesCreateInput, provider_menu_categoriesUncheckedCreateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * provider_menu_categories createMany
   */
  export type provider_menu_categoriesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many provider_menu_categories.
     */
    data: provider_menu_categoriesCreateManyInput | provider_menu_categoriesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * provider_menu_categories createManyAndReturn
   */
  export type provider_menu_categoriesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the provider_menu_categories
     */
    select?: provider_menu_categoriesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the provider_menu_categories
     */
    omit?: provider_menu_categoriesOmit<ExtArgs> | null
    /**
     * The data used to create many provider_menu_categories.
     */
    data: provider_menu_categoriesCreateManyInput | provider_menu_categoriesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: provider_menu_categoriesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * provider_menu_categories update
   */
  export type provider_menu_categoriesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the provider_menu_categories
     */
    select?: provider_menu_categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the provider_menu_categories
     */
    omit?: provider_menu_categoriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: provider_menu_categoriesInclude<ExtArgs> | null
    /**
     * The data needed to update a provider_menu_categories.
     */
    data: XOR<provider_menu_categoriesUpdateInput, provider_menu_categoriesUncheckedUpdateInput>
    /**
     * Choose, which provider_menu_categories to update.
     */
    where: provider_menu_categoriesWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * provider_menu_categories updateMany
   */
  export type provider_menu_categoriesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update provider_menu_categories.
     */
    data: XOR<provider_menu_categoriesUpdateManyMutationInput, provider_menu_categoriesUncheckedUpdateManyInput>
    /**
     * Filter which provider_menu_categories to update
     */
    where?: provider_menu_categoriesWhereInput
    /**
     * Limit how many provider_menu_categories to update.
     */
    limit?: number
  }

  /**
   * provider_menu_categories updateManyAndReturn
   */
  export type provider_menu_categoriesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the provider_menu_categories
     */
    select?: provider_menu_categoriesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the provider_menu_categories
     */
    omit?: provider_menu_categoriesOmit<ExtArgs> | null
    /**
     * The data used to update provider_menu_categories.
     */
    data: XOR<provider_menu_categoriesUpdateManyMutationInput, provider_menu_categoriesUncheckedUpdateManyInput>
    /**
     * Filter which provider_menu_categories to update
     */
    where?: provider_menu_categoriesWhereInput
    /**
     * Limit how many provider_menu_categories to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: provider_menu_categoriesIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * provider_menu_categories upsert
   */
  export type provider_menu_categoriesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the provider_menu_categories
     */
    select?: provider_menu_categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the provider_menu_categories
     */
    omit?: provider_menu_categoriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: provider_menu_categoriesInclude<ExtArgs> | null
    /**
     * The filter to search for the provider_menu_categories to update in case it exists.
     */
    where: provider_menu_categoriesWhereUniqueInput
    /**
     * In case the provider_menu_categories found by the `where` argument doesn't exist, create a new provider_menu_categories with this data.
     */
    create: XOR<provider_menu_categoriesCreateInput, provider_menu_categoriesUncheckedCreateInput>
    /**
     * In case the provider_menu_categories was found with the provided `where` argument, update it with this data.
     */
    update: XOR<provider_menu_categoriesUpdateInput, provider_menu_categoriesUncheckedUpdateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * provider_menu_categories delete
   */
  export type provider_menu_categoriesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the provider_menu_categories
     */
    select?: provider_menu_categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the provider_menu_categories
     */
    omit?: provider_menu_categoriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: provider_menu_categoriesInclude<ExtArgs> | null
    /**
     * Filter which provider_menu_categories to delete.
     */
    where: provider_menu_categoriesWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * provider_menu_categories deleteMany
   */
  export type provider_menu_categoriesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which provider_menu_categories to delete
     */
    where?: provider_menu_categoriesWhereInput
    /**
     * Limit how many provider_menu_categories to delete.
     */
    limit?: number
  }

  /**
   * provider_menu_categories.provider_menu_items
   */
  export type provider_menu_categories$provider_menu_itemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the provider_menu_items
     */
    select?: provider_menu_itemsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the provider_menu_items
     */
    omit?: provider_menu_itemsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: provider_menu_itemsInclude<ExtArgs> | null
    where?: provider_menu_itemsWhereInput
    orderBy?: provider_menu_itemsOrderByWithRelationInput | provider_menu_itemsOrderByWithRelationInput[]
    cursor?: provider_menu_itemsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Provider_menu_itemsScalarFieldEnum | Provider_menu_itemsScalarFieldEnum[]
  }

  /**
   * provider_menu_categories without action
   */
  export type provider_menu_categoriesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the provider_menu_categories
     */
    select?: provider_menu_categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the provider_menu_categories
     */
    omit?: provider_menu_categoriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: provider_menu_categoriesInclude<ExtArgs> | null
  }


  /**
   * Model role_has_permissions
   */

  export type AggregateRole_has_permissions = {
    _count: Role_has_permissionsCountAggregateOutputType | null
    _avg: Role_has_permissionsAvgAggregateOutputType | null
    _sum: Role_has_permissionsSumAggregateOutputType | null
    _min: Role_has_permissionsMinAggregateOutputType | null
    _max: Role_has_permissionsMaxAggregateOutputType | null
  }

  export type Role_has_permissionsAvgAggregateOutputType = {
    permission_id: number | null
    role_id: number | null
  }

  export type Role_has_permissionsSumAggregateOutputType = {
    permission_id: bigint | null
    role_id: bigint | null
  }

  export type Role_has_permissionsMinAggregateOutputType = {
    permission_id: bigint | null
    role_id: bigint | null
  }

  export type Role_has_permissionsMaxAggregateOutputType = {
    permission_id: bigint | null
    role_id: bigint | null
  }

  export type Role_has_permissionsCountAggregateOutputType = {
    permission_id: number
    role_id: number
    _all: number
  }


  export type Role_has_permissionsAvgAggregateInputType = {
    permission_id?: true
    role_id?: true
  }

  export type Role_has_permissionsSumAggregateInputType = {
    permission_id?: true
    role_id?: true
  }

  export type Role_has_permissionsMinAggregateInputType = {
    permission_id?: true
    role_id?: true
  }

  export type Role_has_permissionsMaxAggregateInputType = {
    permission_id?: true
    role_id?: true
  }

  export type Role_has_permissionsCountAggregateInputType = {
    permission_id?: true
    role_id?: true
    _all?: true
  }

  export type Role_has_permissionsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which role_has_permissions to aggregate.
     */
    where?: role_has_permissionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of role_has_permissions to fetch.
     */
    orderBy?: role_has_permissionsOrderByWithRelationInput | role_has_permissionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: role_has_permissionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` role_has_permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` role_has_permissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned role_has_permissions
    **/
    _count?: true | Role_has_permissionsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Role_has_permissionsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Role_has_permissionsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Role_has_permissionsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Role_has_permissionsMaxAggregateInputType
  }

  export type GetRole_has_permissionsAggregateType<T extends Role_has_permissionsAggregateArgs> = {
        [P in keyof T & keyof AggregateRole_has_permissions]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRole_has_permissions[P]>
      : GetScalarType<T[P], AggregateRole_has_permissions[P]>
  }




  export type role_has_permissionsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: role_has_permissionsWhereInput
    orderBy?: role_has_permissionsOrderByWithAggregationInput | role_has_permissionsOrderByWithAggregationInput[]
    by: Role_has_permissionsScalarFieldEnum[] | Role_has_permissionsScalarFieldEnum
    having?: role_has_permissionsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Role_has_permissionsCountAggregateInputType | true
    _avg?: Role_has_permissionsAvgAggregateInputType
    _sum?: Role_has_permissionsSumAggregateInputType
    _min?: Role_has_permissionsMinAggregateInputType
    _max?: Role_has_permissionsMaxAggregateInputType
  }

  export type Role_has_permissionsGroupByOutputType = {
    permission_id: bigint
    role_id: bigint
    _count: Role_has_permissionsCountAggregateOutputType | null
    _avg: Role_has_permissionsAvgAggregateOutputType | null
    _sum: Role_has_permissionsSumAggregateOutputType | null
    _min: Role_has_permissionsMinAggregateOutputType | null
    _max: Role_has_permissionsMaxAggregateOutputType | null
  }

  type GetRole_has_permissionsGroupByPayload<T extends role_has_permissionsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Role_has_permissionsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Role_has_permissionsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Role_has_permissionsGroupByOutputType[P]>
            : GetScalarType<T[P], Role_has_permissionsGroupByOutputType[P]>
        }
      >
    >


  export type role_has_permissionsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    permission_id?: boolean
    role_id?: boolean
    permissions?: boolean | permissionsDefaultArgs<ExtArgs>
    roles?: boolean | rolesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["role_has_permissions"]>

  export type role_has_permissionsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    permission_id?: boolean
    role_id?: boolean
    permissions?: boolean | permissionsDefaultArgs<ExtArgs>
    roles?: boolean | rolesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["role_has_permissions"]>

  export type role_has_permissionsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    permission_id?: boolean
    role_id?: boolean
    permissions?: boolean | permissionsDefaultArgs<ExtArgs>
    roles?: boolean | rolesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["role_has_permissions"]>

  export type role_has_permissionsSelectScalar = {
    permission_id?: boolean
    role_id?: boolean
  }

  export type role_has_permissionsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"permission_id" | "role_id", ExtArgs["result"]["role_has_permissions"]>
  export type role_has_permissionsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    permissions?: boolean | permissionsDefaultArgs<ExtArgs>
    roles?: boolean | rolesDefaultArgs<ExtArgs>
  }
  export type role_has_permissionsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    permissions?: boolean | permissionsDefaultArgs<ExtArgs>
    roles?: boolean | rolesDefaultArgs<ExtArgs>
  }
  export type role_has_permissionsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    permissions?: boolean | permissionsDefaultArgs<ExtArgs>
    roles?: boolean | rolesDefaultArgs<ExtArgs>
  }

  export type $role_has_permissionsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "role_has_permissions"
    objects: {
      permissions: Prisma.$permissionsPayload<ExtArgs>
      roles: Prisma.$rolesPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      permission_id: bigint
      role_id: bigint
    }, ExtArgs["result"]["role_has_permissions"]>
    composites: {}
  }

  type role_has_permissionsGetPayload<S extends boolean | null | undefined | role_has_permissionsDefaultArgs> = $Result.GetResult<Prisma.$role_has_permissionsPayload, S>

  type role_has_permissionsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<role_has_permissionsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit' | 'relationLoadStrategy'> & {
      select?: Role_has_permissionsCountAggregateInputType | true
    }

  export interface role_has_permissionsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['role_has_permissions'], meta: { name: 'role_has_permissions' } }
    /**
     * Find zero or one Role_has_permissions that matches the filter.
     * @param {role_has_permissionsFindUniqueArgs} args - Arguments to find a Role_has_permissions
     * @example
     * // Get one Role_has_permissions
     * const role_has_permissions = await prisma.role_has_permissions.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends role_has_permissionsFindUniqueArgs>(args: SelectSubset<T, role_has_permissionsFindUniqueArgs<ExtArgs>>): Prisma__role_has_permissionsClient<$Result.GetResult<Prisma.$role_has_permissionsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Role_has_permissions that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {role_has_permissionsFindUniqueOrThrowArgs} args - Arguments to find a Role_has_permissions
     * @example
     * // Get one Role_has_permissions
     * const role_has_permissions = await prisma.role_has_permissions.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends role_has_permissionsFindUniqueOrThrowArgs>(args: SelectSubset<T, role_has_permissionsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__role_has_permissionsClient<$Result.GetResult<Prisma.$role_has_permissionsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Role_has_permissions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {role_has_permissionsFindFirstArgs} args - Arguments to find a Role_has_permissions
     * @example
     * // Get one Role_has_permissions
     * const role_has_permissions = await prisma.role_has_permissions.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends role_has_permissionsFindFirstArgs>(args?: SelectSubset<T, role_has_permissionsFindFirstArgs<ExtArgs>>): Prisma__role_has_permissionsClient<$Result.GetResult<Prisma.$role_has_permissionsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Role_has_permissions that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {role_has_permissionsFindFirstOrThrowArgs} args - Arguments to find a Role_has_permissions
     * @example
     * // Get one Role_has_permissions
     * const role_has_permissions = await prisma.role_has_permissions.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends role_has_permissionsFindFirstOrThrowArgs>(args?: SelectSubset<T, role_has_permissionsFindFirstOrThrowArgs<ExtArgs>>): Prisma__role_has_permissionsClient<$Result.GetResult<Prisma.$role_has_permissionsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Role_has_permissions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {role_has_permissionsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Role_has_permissions
     * const role_has_permissions = await prisma.role_has_permissions.findMany()
     * 
     * // Get first 10 Role_has_permissions
     * const role_has_permissions = await prisma.role_has_permissions.findMany({ take: 10 })
     * 
     * // Only select the `permission_id`
     * const role_has_permissionsWithPermission_idOnly = await prisma.role_has_permissions.findMany({ select: { permission_id: true } })
     * 
     */
    findMany<T extends role_has_permissionsFindManyArgs>(args?: SelectSubset<T, role_has_permissionsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$role_has_permissionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Role_has_permissions.
     * @param {role_has_permissionsCreateArgs} args - Arguments to create a Role_has_permissions.
     * @example
     * // Create one Role_has_permissions
     * const Role_has_permissions = await prisma.role_has_permissions.create({
     *   data: {
     *     // ... data to create a Role_has_permissions
     *   }
     * })
     * 
     */
    create<T extends role_has_permissionsCreateArgs>(args: SelectSubset<T, role_has_permissionsCreateArgs<ExtArgs>>): Prisma__role_has_permissionsClient<$Result.GetResult<Prisma.$role_has_permissionsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Role_has_permissions.
     * @param {role_has_permissionsCreateManyArgs} args - Arguments to create many Role_has_permissions.
     * @example
     * // Create many Role_has_permissions
     * const role_has_permissions = await prisma.role_has_permissions.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends role_has_permissionsCreateManyArgs>(args?: SelectSubset<T, role_has_permissionsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Role_has_permissions and returns the data saved in the database.
     * @param {role_has_permissionsCreateManyAndReturnArgs} args - Arguments to create many Role_has_permissions.
     * @example
     * // Create many Role_has_permissions
     * const role_has_permissions = await prisma.role_has_permissions.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Role_has_permissions and only return the `permission_id`
     * const role_has_permissionsWithPermission_idOnly = await prisma.role_has_permissions.createManyAndReturn({
     *   select: { permission_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends role_has_permissionsCreateManyAndReturnArgs>(args?: SelectSubset<T, role_has_permissionsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$role_has_permissionsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Role_has_permissions.
     * @param {role_has_permissionsDeleteArgs} args - Arguments to delete one Role_has_permissions.
     * @example
     * // Delete one Role_has_permissions
     * const Role_has_permissions = await prisma.role_has_permissions.delete({
     *   where: {
     *     // ... filter to delete one Role_has_permissions
     *   }
     * })
     * 
     */
    delete<T extends role_has_permissionsDeleteArgs>(args: SelectSubset<T, role_has_permissionsDeleteArgs<ExtArgs>>): Prisma__role_has_permissionsClient<$Result.GetResult<Prisma.$role_has_permissionsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Role_has_permissions.
     * @param {role_has_permissionsUpdateArgs} args - Arguments to update one Role_has_permissions.
     * @example
     * // Update one Role_has_permissions
     * const role_has_permissions = await prisma.role_has_permissions.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends role_has_permissionsUpdateArgs>(args: SelectSubset<T, role_has_permissionsUpdateArgs<ExtArgs>>): Prisma__role_has_permissionsClient<$Result.GetResult<Prisma.$role_has_permissionsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Role_has_permissions.
     * @param {role_has_permissionsDeleteManyArgs} args - Arguments to filter Role_has_permissions to delete.
     * @example
     * // Delete a few Role_has_permissions
     * const { count } = await prisma.role_has_permissions.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends role_has_permissionsDeleteManyArgs>(args?: SelectSubset<T, role_has_permissionsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Role_has_permissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {role_has_permissionsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Role_has_permissions
     * const role_has_permissions = await prisma.role_has_permissions.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends role_has_permissionsUpdateManyArgs>(args: SelectSubset<T, role_has_permissionsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Role_has_permissions and returns the data updated in the database.
     * @param {role_has_permissionsUpdateManyAndReturnArgs} args - Arguments to update many Role_has_permissions.
     * @example
     * // Update many Role_has_permissions
     * const role_has_permissions = await prisma.role_has_permissions.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Role_has_permissions and only return the `permission_id`
     * const role_has_permissionsWithPermission_idOnly = await prisma.role_has_permissions.updateManyAndReturn({
     *   select: { permission_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends role_has_permissionsUpdateManyAndReturnArgs>(args: SelectSubset<T, role_has_permissionsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$role_has_permissionsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Role_has_permissions.
     * @param {role_has_permissionsUpsertArgs} args - Arguments to update or create a Role_has_permissions.
     * @example
     * // Update or create a Role_has_permissions
     * const role_has_permissions = await prisma.role_has_permissions.upsert({
     *   create: {
     *     // ... data to create a Role_has_permissions
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Role_has_permissions we want to update
     *   }
     * })
     */
    upsert<T extends role_has_permissionsUpsertArgs>(args: SelectSubset<T, role_has_permissionsUpsertArgs<ExtArgs>>): Prisma__role_has_permissionsClient<$Result.GetResult<Prisma.$role_has_permissionsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Role_has_permissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {role_has_permissionsCountArgs} args - Arguments to filter Role_has_permissions to count.
     * @example
     * // Count the number of Role_has_permissions
     * const count = await prisma.role_has_permissions.count({
     *   where: {
     *     // ... the filter for the Role_has_permissions we want to count
     *   }
     * })
    **/
    count<T extends role_has_permissionsCountArgs>(
      args?: Subset<T, role_has_permissionsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Role_has_permissionsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Role_has_permissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Role_has_permissionsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Role_has_permissionsAggregateArgs>(args: Subset<T, Role_has_permissionsAggregateArgs>): Prisma.PrismaPromise<GetRole_has_permissionsAggregateType<T>>

    /**
     * Group by Role_has_permissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {role_has_permissionsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends role_has_permissionsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: role_has_permissionsGroupByArgs['orderBy'] }
        : { orderBy?: role_has_permissionsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, role_has_permissionsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRole_has_permissionsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the role_has_permissions model
   */
  readonly fields: role_has_permissionsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for role_has_permissions.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__role_has_permissionsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    permissions<T extends permissionsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, permissionsDefaultArgs<ExtArgs>>): Prisma__permissionsClient<$Result.GetResult<Prisma.$permissionsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    roles<T extends rolesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, rolesDefaultArgs<ExtArgs>>): Prisma__rolesClient<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the role_has_permissions model
   */ 
  interface role_has_permissionsFieldRefs {
    readonly permission_id: FieldRef<"role_has_permissions", 'BigInt'>
    readonly role_id: FieldRef<"role_has_permissions", 'BigInt'>
  }
    

  // Custom InputTypes
  /**
   * role_has_permissions findUnique
   */
  export type role_has_permissionsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role_has_permissions
     */
    select?: role_has_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the role_has_permissions
     */
    omit?: role_has_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: role_has_permissionsInclude<ExtArgs> | null
    /**
     * Filter, which role_has_permissions to fetch.
     */
    where: role_has_permissionsWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * role_has_permissions findUniqueOrThrow
   */
  export type role_has_permissionsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role_has_permissions
     */
    select?: role_has_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the role_has_permissions
     */
    omit?: role_has_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: role_has_permissionsInclude<ExtArgs> | null
    /**
     * Filter, which role_has_permissions to fetch.
     */
    where: role_has_permissionsWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * role_has_permissions findFirst
   */
  export type role_has_permissionsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role_has_permissions
     */
    select?: role_has_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the role_has_permissions
     */
    omit?: role_has_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: role_has_permissionsInclude<ExtArgs> | null
    /**
     * Filter, which role_has_permissions to fetch.
     */
    where?: role_has_permissionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of role_has_permissions to fetch.
     */
    orderBy?: role_has_permissionsOrderByWithRelationInput | role_has_permissionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for role_has_permissions.
     */
    cursor?: role_has_permissionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` role_has_permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` role_has_permissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of role_has_permissions.
     */
    distinct?: Role_has_permissionsScalarFieldEnum | Role_has_permissionsScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * role_has_permissions findFirstOrThrow
   */
  export type role_has_permissionsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role_has_permissions
     */
    select?: role_has_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the role_has_permissions
     */
    omit?: role_has_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: role_has_permissionsInclude<ExtArgs> | null
    /**
     * Filter, which role_has_permissions to fetch.
     */
    where?: role_has_permissionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of role_has_permissions to fetch.
     */
    orderBy?: role_has_permissionsOrderByWithRelationInput | role_has_permissionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for role_has_permissions.
     */
    cursor?: role_has_permissionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` role_has_permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` role_has_permissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of role_has_permissions.
     */
    distinct?: Role_has_permissionsScalarFieldEnum | Role_has_permissionsScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * role_has_permissions findMany
   */
  export type role_has_permissionsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role_has_permissions
     */
    select?: role_has_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the role_has_permissions
     */
    omit?: role_has_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: role_has_permissionsInclude<ExtArgs> | null
    /**
     * Filter, which role_has_permissions to fetch.
     */
    where?: role_has_permissionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of role_has_permissions to fetch.
     */
    orderBy?: role_has_permissionsOrderByWithRelationInput | role_has_permissionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing role_has_permissions.
     */
    cursor?: role_has_permissionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` role_has_permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` role_has_permissions.
     */
    skip?: number
    distinct?: Role_has_permissionsScalarFieldEnum | Role_has_permissionsScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * role_has_permissions create
   */
  export type role_has_permissionsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role_has_permissions
     */
    select?: role_has_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the role_has_permissions
     */
    omit?: role_has_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: role_has_permissionsInclude<ExtArgs> | null
    /**
     * The data needed to create a role_has_permissions.
     */
    data: XOR<role_has_permissionsCreateInput, role_has_permissionsUncheckedCreateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * role_has_permissions createMany
   */
  export type role_has_permissionsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many role_has_permissions.
     */
    data: role_has_permissionsCreateManyInput | role_has_permissionsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * role_has_permissions createManyAndReturn
   */
  export type role_has_permissionsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role_has_permissions
     */
    select?: role_has_permissionsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the role_has_permissions
     */
    omit?: role_has_permissionsOmit<ExtArgs> | null
    /**
     * The data used to create many role_has_permissions.
     */
    data: role_has_permissionsCreateManyInput | role_has_permissionsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: role_has_permissionsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * role_has_permissions update
   */
  export type role_has_permissionsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role_has_permissions
     */
    select?: role_has_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the role_has_permissions
     */
    omit?: role_has_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: role_has_permissionsInclude<ExtArgs> | null
    /**
     * The data needed to update a role_has_permissions.
     */
    data: XOR<role_has_permissionsUpdateInput, role_has_permissionsUncheckedUpdateInput>
    /**
     * Choose, which role_has_permissions to update.
     */
    where: role_has_permissionsWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * role_has_permissions updateMany
   */
  export type role_has_permissionsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update role_has_permissions.
     */
    data: XOR<role_has_permissionsUpdateManyMutationInput, role_has_permissionsUncheckedUpdateManyInput>
    /**
     * Filter which role_has_permissions to update
     */
    where?: role_has_permissionsWhereInput
    /**
     * Limit how many role_has_permissions to update.
     */
    limit?: number
  }

  /**
   * role_has_permissions updateManyAndReturn
   */
  export type role_has_permissionsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role_has_permissions
     */
    select?: role_has_permissionsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the role_has_permissions
     */
    omit?: role_has_permissionsOmit<ExtArgs> | null
    /**
     * The data used to update role_has_permissions.
     */
    data: XOR<role_has_permissionsUpdateManyMutationInput, role_has_permissionsUncheckedUpdateManyInput>
    /**
     * Filter which role_has_permissions to update
     */
    where?: role_has_permissionsWhereInput
    /**
     * Limit how many role_has_permissions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: role_has_permissionsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * role_has_permissions upsert
   */
  export type role_has_permissionsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role_has_permissions
     */
    select?: role_has_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the role_has_permissions
     */
    omit?: role_has_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: role_has_permissionsInclude<ExtArgs> | null
    /**
     * The filter to search for the role_has_permissions to update in case it exists.
     */
    where: role_has_permissionsWhereUniqueInput
    /**
     * In case the role_has_permissions found by the `where` argument doesn't exist, create a new role_has_permissions with this data.
     */
    create: XOR<role_has_permissionsCreateInput, role_has_permissionsUncheckedCreateInput>
    /**
     * In case the role_has_permissions was found with the provided `where` argument, update it with this data.
     */
    update: XOR<role_has_permissionsUpdateInput, role_has_permissionsUncheckedUpdateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * role_has_permissions delete
   */
  export type role_has_permissionsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role_has_permissions
     */
    select?: role_has_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the role_has_permissions
     */
    omit?: role_has_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: role_has_permissionsInclude<ExtArgs> | null
    /**
     * Filter which role_has_permissions to delete.
     */
    where: role_has_permissionsWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * role_has_permissions deleteMany
   */
  export type role_has_permissionsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which role_has_permissions to delete
     */
    where?: role_has_permissionsWhereInput
    /**
     * Limit how many role_has_permissions to delete.
     */
    limit?: number
  }

  /**
   * role_has_permissions without action
   */
  export type role_has_permissionsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role_has_permissions
     */
    select?: role_has_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the role_has_permissions
     */
    omit?: role_has_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: role_has_permissionsInclude<ExtArgs> | null
  }


  /**
   * Model roles
   */

  export type AggregateRoles = {
    _count: RolesCountAggregateOutputType | null
    _avg: RolesAvgAggregateOutputType | null
    _sum: RolesSumAggregateOutputType | null
    _min: RolesMinAggregateOutputType | null
    _max: RolesMaxAggregateOutputType | null
  }

  export type RolesAvgAggregateOutputType = {
    id: number | null
  }

  export type RolesSumAggregateOutputType = {
    id: bigint | null
  }

  export type RolesMinAggregateOutputType = {
    id: bigint | null
    name: string | null
    guard_name: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type RolesMaxAggregateOutputType = {
    id: bigint | null
    name: string | null
    guard_name: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type RolesCountAggregateOutputType = {
    id: number
    name: number
    guard_name: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type RolesAvgAggregateInputType = {
    id?: true
  }

  export type RolesSumAggregateInputType = {
    id?: true
  }

  export type RolesMinAggregateInputType = {
    id?: true
    name?: true
    guard_name?: true
    created_at?: true
    updated_at?: true
  }

  export type RolesMaxAggregateInputType = {
    id?: true
    name?: true
    guard_name?: true
    created_at?: true
    updated_at?: true
  }

  export type RolesCountAggregateInputType = {
    id?: true
    name?: true
    guard_name?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type RolesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which roles to aggregate.
     */
    where?: rolesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of roles to fetch.
     */
    orderBy?: rolesOrderByWithRelationInput | rolesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: rolesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned roles
    **/
    _count?: true | RolesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RolesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RolesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RolesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RolesMaxAggregateInputType
  }

  export type GetRolesAggregateType<T extends RolesAggregateArgs> = {
        [P in keyof T & keyof AggregateRoles]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRoles[P]>
      : GetScalarType<T[P], AggregateRoles[P]>
  }




  export type rolesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: rolesWhereInput
    orderBy?: rolesOrderByWithAggregationInput | rolesOrderByWithAggregationInput[]
    by: RolesScalarFieldEnum[] | RolesScalarFieldEnum
    having?: rolesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RolesCountAggregateInputType | true
    _avg?: RolesAvgAggregateInputType
    _sum?: RolesSumAggregateInputType
    _min?: RolesMinAggregateInputType
    _max?: RolesMaxAggregateInputType
  }

  export type RolesGroupByOutputType = {
    id: bigint
    name: string
    guard_name: string
    created_at: Date | null
    updated_at: Date | null
    _count: RolesCountAggregateOutputType | null
    _avg: RolesAvgAggregateOutputType | null
    _sum: RolesSumAggregateOutputType | null
    _min: RolesMinAggregateOutputType | null
    _max: RolesMaxAggregateOutputType | null
  }

  type GetRolesGroupByPayload<T extends rolesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RolesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RolesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RolesGroupByOutputType[P]>
            : GetScalarType<T[P], RolesGroupByOutputType[P]>
        }
      >
    >


  export type rolesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    guard_name?: boolean
    created_at?: boolean
    updated_at?: boolean
    model_has_roles?: boolean | roles$model_has_rolesArgs<ExtArgs>
    role_has_permissions?: boolean | roles$role_has_permissionsArgs<ExtArgs>
    _count?: boolean | RolesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["roles"]>

  export type rolesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    guard_name?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["roles"]>

  export type rolesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    guard_name?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["roles"]>

  export type rolesSelectScalar = {
    id?: boolean
    name?: boolean
    guard_name?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type rolesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "guard_name" | "created_at" | "updated_at", ExtArgs["result"]["roles"]>
  export type rolesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    model_has_roles?: boolean | roles$model_has_rolesArgs<ExtArgs>
    role_has_permissions?: boolean | roles$role_has_permissionsArgs<ExtArgs>
    _count?: boolean | RolesCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type rolesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type rolesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $rolesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "roles"
    objects: {
      model_has_roles: Prisma.$model_has_rolesPayload<ExtArgs>[]
      role_has_permissions: Prisma.$role_has_permissionsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      name: string
      guard_name: string
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["roles"]>
    composites: {}
  }

  type rolesGetPayload<S extends boolean | null | undefined | rolesDefaultArgs> = $Result.GetResult<Prisma.$rolesPayload, S>

  type rolesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<rolesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit' | 'relationLoadStrategy'> & {
      select?: RolesCountAggregateInputType | true
    }

  export interface rolesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['roles'], meta: { name: 'roles' } }
    /**
     * Find zero or one Roles that matches the filter.
     * @param {rolesFindUniqueArgs} args - Arguments to find a Roles
     * @example
     * // Get one Roles
     * const roles = await prisma.roles.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends rolesFindUniqueArgs>(args: SelectSubset<T, rolesFindUniqueArgs<ExtArgs>>): Prisma__rolesClient<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Roles that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {rolesFindUniqueOrThrowArgs} args - Arguments to find a Roles
     * @example
     * // Get one Roles
     * const roles = await prisma.roles.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends rolesFindUniqueOrThrowArgs>(args: SelectSubset<T, rolesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__rolesClient<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Roles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rolesFindFirstArgs} args - Arguments to find a Roles
     * @example
     * // Get one Roles
     * const roles = await prisma.roles.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends rolesFindFirstArgs>(args?: SelectSubset<T, rolesFindFirstArgs<ExtArgs>>): Prisma__rolesClient<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Roles that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rolesFindFirstOrThrowArgs} args - Arguments to find a Roles
     * @example
     * // Get one Roles
     * const roles = await prisma.roles.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends rolesFindFirstOrThrowArgs>(args?: SelectSubset<T, rolesFindFirstOrThrowArgs<ExtArgs>>): Prisma__rolesClient<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Roles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rolesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Roles
     * const roles = await prisma.roles.findMany()
     * 
     * // Get first 10 Roles
     * const roles = await prisma.roles.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const rolesWithIdOnly = await prisma.roles.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends rolesFindManyArgs>(args?: SelectSubset<T, rolesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Roles.
     * @param {rolesCreateArgs} args - Arguments to create a Roles.
     * @example
     * // Create one Roles
     * const Roles = await prisma.roles.create({
     *   data: {
     *     // ... data to create a Roles
     *   }
     * })
     * 
     */
    create<T extends rolesCreateArgs>(args: SelectSubset<T, rolesCreateArgs<ExtArgs>>): Prisma__rolesClient<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Roles.
     * @param {rolesCreateManyArgs} args - Arguments to create many Roles.
     * @example
     * // Create many Roles
     * const roles = await prisma.roles.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends rolesCreateManyArgs>(args?: SelectSubset<T, rolesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Roles and returns the data saved in the database.
     * @param {rolesCreateManyAndReturnArgs} args - Arguments to create many Roles.
     * @example
     * // Create many Roles
     * const roles = await prisma.roles.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Roles and only return the `id`
     * const rolesWithIdOnly = await prisma.roles.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends rolesCreateManyAndReturnArgs>(args?: SelectSubset<T, rolesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Roles.
     * @param {rolesDeleteArgs} args - Arguments to delete one Roles.
     * @example
     * // Delete one Roles
     * const Roles = await prisma.roles.delete({
     *   where: {
     *     // ... filter to delete one Roles
     *   }
     * })
     * 
     */
    delete<T extends rolesDeleteArgs>(args: SelectSubset<T, rolesDeleteArgs<ExtArgs>>): Prisma__rolesClient<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Roles.
     * @param {rolesUpdateArgs} args - Arguments to update one Roles.
     * @example
     * // Update one Roles
     * const roles = await prisma.roles.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends rolesUpdateArgs>(args: SelectSubset<T, rolesUpdateArgs<ExtArgs>>): Prisma__rolesClient<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Roles.
     * @param {rolesDeleteManyArgs} args - Arguments to filter Roles to delete.
     * @example
     * // Delete a few Roles
     * const { count } = await prisma.roles.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends rolesDeleteManyArgs>(args?: SelectSubset<T, rolesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rolesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Roles
     * const roles = await prisma.roles.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends rolesUpdateManyArgs>(args: SelectSubset<T, rolesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Roles and returns the data updated in the database.
     * @param {rolesUpdateManyAndReturnArgs} args - Arguments to update many Roles.
     * @example
     * // Update many Roles
     * const roles = await prisma.roles.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Roles and only return the `id`
     * const rolesWithIdOnly = await prisma.roles.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends rolesUpdateManyAndReturnArgs>(args: SelectSubset<T, rolesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Roles.
     * @param {rolesUpsertArgs} args - Arguments to update or create a Roles.
     * @example
     * // Update or create a Roles
     * const roles = await prisma.roles.upsert({
     *   create: {
     *     // ... data to create a Roles
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Roles we want to update
     *   }
     * })
     */
    upsert<T extends rolesUpsertArgs>(args: SelectSubset<T, rolesUpsertArgs<ExtArgs>>): Prisma__rolesClient<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rolesCountArgs} args - Arguments to filter Roles to count.
     * @example
     * // Count the number of Roles
     * const count = await prisma.roles.count({
     *   where: {
     *     // ... the filter for the Roles we want to count
     *   }
     * })
    **/
    count<T extends rolesCountArgs>(
      args?: Subset<T, rolesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RolesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RolesAggregateArgs>(args: Subset<T, RolesAggregateArgs>): Prisma.PrismaPromise<GetRolesAggregateType<T>>

    /**
     * Group by Roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rolesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends rolesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: rolesGroupByArgs['orderBy'] }
        : { orderBy?: rolesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, rolesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRolesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the roles model
   */
  readonly fields: rolesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for roles.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__rolesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    model_has_roles<T extends roles$model_has_rolesArgs<ExtArgs> = {}>(args?: Subset<T, roles$model_has_rolesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$model_has_rolesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    role_has_permissions<T extends roles$role_has_permissionsArgs<ExtArgs> = {}>(args?: Subset<T, roles$role_has_permissionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$role_has_permissionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the roles model
   */ 
  interface rolesFieldRefs {
    readonly id: FieldRef<"roles", 'BigInt'>
    readonly name: FieldRef<"roles", 'String'>
    readonly guard_name: FieldRef<"roles", 'String'>
    readonly created_at: FieldRef<"roles", 'DateTime'>
    readonly updated_at: FieldRef<"roles", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * roles findUnique
   */
  export type rolesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles
     */
    omit?: rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolesInclude<ExtArgs> | null
    /**
     * Filter, which roles to fetch.
     */
    where: rolesWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * roles findUniqueOrThrow
   */
  export type rolesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles
     */
    omit?: rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolesInclude<ExtArgs> | null
    /**
     * Filter, which roles to fetch.
     */
    where: rolesWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * roles findFirst
   */
  export type rolesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles
     */
    omit?: rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolesInclude<ExtArgs> | null
    /**
     * Filter, which roles to fetch.
     */
    where?: rolesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of roles to fetch.
     */
    orderBy?: rolesOrderByWithRelationInput | rolesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for roles.
     */
    cursor?: rolesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of roles.
     */
    distinct?: RolesScalarFieldEnum | RolesScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * roles findFirstOrThrow
   */
  export type rolesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles
     */
    omit?: rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolesInclude<ExtArgs> | null
    /**
     * Filter, which roles to fetch.
     */
    where?: rolesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of roles to fetch.
     */
    orderBy?: rolesOrderByWithRelationInput | rolesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for roles.
     */
    cursor?: rolesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of roles.
     */
    distinct?: RolesScalarFieldEnum | RolesScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * roles findMany
   */
  export type rolesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles
     */
    omit?: rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolesInclude<ExtArgs> | null
    /**
     * Filter, which roles to fetch.
     */
    where?: rolesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of roles to fetch.
     */
    orderBy?: rolesOrderByWithRelationInput | rolesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing roles.
     */
    cursor?: rolesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` roles.
     */
    skip?: number
    distinct?: RolesScalarFieldEnum | RolesScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * roles create
   */
  export type rolesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles
     */
    omit?: rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolesInclude<ExtArgs> | null
    /**
     * The data needed to create a roles.
     */
    data: XOR<rolesCreateInput, rolesUncheckedCreateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * roles createMany
   */
  export type rolesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many roles.
     */
    data: rolesCreateManyInput | rolesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * roles createManyAndReturn
   */
  export type rolesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the roles
     */
    omit?: rolesOmit<ExtArgs> | null
    /**
     * The data used to create many roles.
     */
    data: rolesCreateManyInput | rolesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * roles update
   */
  export type rolesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles
     */
    omit?: rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolesInclude<ExtArgs> | null
    /**
     * The data needed to update a roles.
     */
    data: XOR<rolesUpdateInput, rolesUncheckedUpdateInput>
    /**
     * Choose, which roles to update.
     */
    where: rolesWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * roles updateMany
   */
  export type rolesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update roles.
     */
    data: XOR<rolesUpdateManyMutationInput, rolesUncheckedUpdateManyInput>
    /**
     * Filter which roles to update
     */
    where?: rolesWhereInput
    /**
     * Limit how many roles to update.
     */
    limit?: number
  }

  /**
   * roles updateManyAndReturn
   */
  export type rolesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the roles
     */
    omit?: rolesOmit<ExtArgs> | null
    /**
     * The data used to update roles.
     */
    data: XOR<rolesUpdateManyMutationInput, rolesUncheckedUpdateManyInput>
    /**
     * Filter which roles to update
     */
    where?: rolesWhereInput
    /**
     * Limit how many roles to update.
     */
    limit?: number
  }

  /**
   * roles upsert
   */
  export type rolesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles
     */
    omit?: rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolesInclude<ExtArgs> | null
    /**
     * The filter to search for the roles to update in case it exists.
     */
    where: rolesWhereUniqueInput
    /**
     * In case the roles found by the `where` argument doesn't exist, create a new roles with this data.
     */
    create: XOR<rolesCreateInput, rolesUncheckedCreateInput>
    /**
     * In case the roles was found with the provided `where` argument, update it with this data.
     */
    update: XOR<rolesUpdateInput, rolesUncheckedUpdateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * roles delete
   */
  export type rolesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles
     */
    omit?: rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolesInclude<ExtArgs> | null
    /**
     * Filter which roles to delete.
     */
    where: rolesWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * roles deleteMany
   */
  export type rolesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which roles to delete
     */
    where?: rolesWhereInput
    /**
     * Limit how many roles to delete.
     */
    limit?: number
  }

  /**
   * roles.model_has_roles
   */
  export type roles$model_has_rolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the model_has_roles
     */
    select?: model_has_rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the model_has_roles
     */
    omit?: model_has_rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: model_has_rolesInclude<ExtArgs> | null
    where?: model_has_rolesWhereInput
    orderBy?: model_has_rolesOrderByWithRelationInput | model_has_rolesOrderByWithRelationInput[]
    cursor?: model_has_rolesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Model_has_rolesScalarFieldEnum | Model_has_rolesScalarFieldEnum[]
  }

  /**
   * roles.role_has_permissions
   */
  export type roles$role_has_permissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the role_has_permissions
     */
    select?: role_has_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the role_has_permissions
     */
    omit?: role_has_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: role_has_permissionsInclude<ExtArgs> | null
    where?: role_has_permissionsWhereInput
    orderBy?: role_has_permissionsOrderByWithRelationInput | role_has_permissionsOrderByWithRelationInput[]
    cursor?: role_has_permissionsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Role_has_permissionsScalarFieldEnum | Role_has_permissionsScalarFieldEnum[]
  }

  /**
   * roles without action
   */
  export type rolesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles
     */
    omit?: rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolesInclude<ExtArgs> | null
  }


  /**
   * Model subscription_plan_offers
   */

  export type AggregateSubscription_plan_offers = {
    _count: Subscription_plan_offersCountAggregateOutputType | null
    _avg: Subscription_plan_offersAvgAggregateOutputType | null
    _sum: Subscription_plan_offersSumAggregateOutputType | null
    _min: Subscription_plan_offersMinAggregateOutputType | null
    _max: Subscription_plan_offersMaxAggregateOutputType | null
  }

  export type Subscription_plan_offersAvgAggregateOutputType = {
    id: number | null
    subscription_plan_id: number | null
    offer_id: number | null
    discount_percentage: number | null
  }

  export type Subscription_plan_offersSumAggregateOutputType = {
    id: bigint | null
    subscription_plan_id: bigint | null
    offer_id: bigint | null
    discount_percentage: number | null
  }

  export type Subscription_plan_offersMinAggregateOutputType = {
    id: bigint | null
    subscription_plan_id: bigint | null
    offer_id: bigint | null
    discount_percentage: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Subscription_plan_offersMaxAggregateOutputType = {
    id: bigint | null
    subscription_plan_id: bigint | null
    offer_id: bigint | null
    discount_percentage: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Subscription_plan_offersCountAggregateOutputType = {
    id: number
    subscription_plan_id: number
    offer_id: number
    discount_percentage: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Subscription_plan_offersAvgAggregateInputType = {
    id?: true
    subscription_plan_id?: true
    offer_id?: true
    discount_percentage?: true
  }

  export type Subscription_plan_offersSumAggregateInputType = {
    id?: true
    subscription_plan_id?: true
    offer_id?: true
    discount_percentage?: true
  }

  export type Subscription_plan_offersMinAggregateInputType = {
    id?: true
    subscription_plan_id?: true
    offer_id?: true
    discount_percentage?: true
    created_at?: true
    updated_at?: true
  }

  export type Subscription_plan_offersMaxAggregateInputType = {
    id?: true
    subscription_plan_id?: true
    offer_id?: true
    discount_percentage?: true
    created_at?: true
    updated_at?: true
  }

  export type Subscription_plan_offersCountAggregateInputType = {
    id?: true
    subscription_plan_id?: true
    offer_id?: true
    discount_percentage?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Subscription_plan_offersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which subscription_plan_offers to aggregate.
     */
    where?: subscription_plan_offersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of subscription_plan_offers to fetch.
     */
    orderBy?: subscription_plan_offersOrderByWithRelationInput | subscription_plan_offersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: subscription_plan_offersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` subscription_plan_offers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` subscription_plan_offers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned subscription_plan_offers
    **/
    _count?: true | Subscription_plan_offersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Subscription_plan_offersAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Subscription_plan_offersSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Subscription_plan_offersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Subscription_plan_offersMaxAggregateInputType
  }

  export type GetSubscription_plan_offersAggregateType<T extends Subscription_plan_offersAggregateArgs> = {
        [P in keyof T & keyof AggregateSubscription_plan_offers]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSubscription_plan_offers[P]>
      : GetScalarType<T[P], AggregateSubscription_plan_offers[P]>
  }




  export type subscription_plan_offersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: subscription_plan_offersWhereInput
    orderBy?: subscription_plan_offersOrderByWithAggregationInput | subscription_plan_offersOrderByWithAggregationInput[]
    by: Subscription_plan_offersScalarFieldEnum[] | Subscription_plan_offersScalarFieldEnum
    having?: subscription_plan_offersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Subscription_plan_offersCountAggregateInputType | true
    _avg?: Subscription_plan_offersAvgAggregateInputType
    _sum?: Subscription_plan_offersSumAggregateInputType
    _min?: Subscription_plan_offersMinAggregateInputType
    _max?: Subscription_plan_offersMaxAggregateInputType
  }

  export type Subscription_plan_offersGroupByOutputType = {
    id: bigint
    subscription_plan_id: bigint
    offer_id: bigint
    discount_percentage: number
    created_at: Date | null
    updated_at: Date | null
    _count: Subscription_plan_offersCountAggregateOutputType | null
    _avg: Subscription_plan_offersAvgAggregateOutputType | null
    _sum: Subscription_plan_offersSumAggregateOutputType | null
    _min: Subscription_plan_offersMinAggregateOutputType | null
    _max: Subscription_plan_offersMaxAggregateOutputType | null
  }

  type GetSubscription_plan_offersGroupByPayload<T extends subscription_plan_offersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Subscription_plan_offersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Subscription_plan_offersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Subscription_plan_offersGroupByOutputType[P]>
            : GetScalarType<T[P], Subscription_plan_offersGroupByOutputType[P]>
        }
      >
    >


  export type subscription_plan_offersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    subscription_plan_id?: boolean
    offer_id?: boolean
    discount_percentage?: boolean
    created_at?: boolean
    updated_at?: boolean
    offers?: boolean | offersDefaultArgs<ExtArgs>
    subscription_plans?: boolean | subscription_plansDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["subscription_plan_offers"]>

  export type subscription_plan_offersSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    subscription_plan_id?: boolean
    offer_id?: boolean
    discount_percentage?: boolean
    created_at?: boolean
    updated_at?: boolean
    offers?: boolean | offersDefaultArgs<ExtArgs>
    subscription_plans?: boolean | subscription_plansDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["subscription_plan_offers"]>

  export type subscription_plan_offersSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    subscription_plan_id?: boolean
    offer_id?: boolean
    discount_percentage?: boolean
    created_at?: boolean
    updated_at?: boolean
    offers?: boolean | offersDefaultArgs<ExtArgs>
    subscription_plans?: boolean | subscription_plansDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["subscription_plan_offers"]>

  export type subscription_plan_offersSelectScalar = {
    id?: boolean
    subscription_plan_id?: boolean
    offer_id?: boolean
    discount_percentage?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type subscription_plan_offersOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "subscription_plan_id" | "offer_id" | "discount_percentage" | "created_at" | "updated_at", ExtArgs["result"]["subscription_plan_offers"]>
  export type subscription_plan_offersInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    offers?: boolean | offersDefaultArgs<ExtArgs>
    subscription_plans?: boolean | subscription_plansDefaultArgs<ExtArgs>
  }
  export type subscription_plan_offersIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    offers?: boolean | offersDefaultArgs<ExtArgs>
    subscription_plans?: boolean | subscription_plansDefaultArgs<ExtArgs>
  }
  export type subscription_plan_offersIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    offers?: boolean | offersDefaultArgs<ExtArgs>
    subscription_plans?: boolean | subscription_plansDefaultArgs<ExtArgs>
  }

  export type $subscription_plan_offersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "subscription_plan_offers"
    objects: {
      offers: Prisma.$offersPayload<ExtArgs>
      subscription_plans: Prisma.$subscription_plansPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      subscription_plan_id: bigint
      offer_id: bigint
      discount_percentage: number
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["subscription_plan_offers"]>
    composites: {}
  }

  type subscription_plan_offersGetPayload<S extends boolean | null | undefined | subscription_plan_offersDefaultArgs> = $Result.GetResult<Prisma.$subscription_plan_offersPayload, S>

  type subscription_plan_offersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<subscription_plan_offersFindManyArgs, 'select' | 'include' | 'distinct' | 'omit' | 'relationLoadStrategy'> & {
      select?: Subscription_plan_offersCountAggregateInputType | true
    }

  export interface subscription_plan_offersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['subscription_plan_offers'], meta: { name: 'subscription_plan_offers' } }
    /**
     * Find zero or one Subscription_plan_offers that matches the filter.
     * @param {subscription_plan_offersFindUniqueArgs} args - Arguments to find a Subscription_plan_offers
     * @example
     * // Get one Subscription_plan_offers
     * const subscription_plan_offers = await prisma.subscription_plan_offers.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends subscription_plan_offersFindUniqueArgs>(args: SelectSubset<T, subscription_plan_offersFindUniqueArgs<ExtArgs>>): Prisma__subscription_plan_offersClient<$Result.GetResult<Prisma.$subscription_plan_offersPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Subscription_plan_offers that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {subscription_plan_offersFindUniqueOrThrowArgs} args - Arguments to find a Subscription_plan_offers
     * @example
     * // Get one Subscription_plan_offers
     * const subscription_plan_offers = await prisma.subscription_plan_offers.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends subscription_plan_offersFindUniqueOrThrowArgs>(args: SelectSubset<T, subscription_plan_offersFindUniqueOrThrowArgs<ExtArgs>>): Prisma__subscription_plan_offersClient<$Result.GetResult<Prisma.$subscription_plan_offersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Subscription_plan_offers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {subscription_plan_offersFindFirstArgs} args - Arguments to find a Subscription_plan_offers
     * @example
     * // Get one Subscription_plan_offers
     * const subscription_plan_offers = await prisma.subscription_plan_offers.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends subscription_plan_offersFindFirstArgs>(args?: SelectSubset<T, subscription_plan_offersFindFirstArgs<ExtArgs>>): Prisma__subscription_plan_offersClient<$Result.GetResult<Prisma.$subscription_plan_offersPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Subscription_plan_offers that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {subscription_plan_offersFindFirstOrThrowArgs} args - Arguments to find a Subscription_plan_offers
     * @example
     * // Get one Subscription_plan_offers
     * const subscription_plan_offers = await prisma.subscription_plan_offers.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends subscription_plan_offersFindFirstOrThrowArgs>(args?: SelectSubset<T, subscription_plan_offersFindFirstOrThrowArgs<ExtArgs>>): Prisma__subscription_plan_offersClient<$Result.GetResult<Prisma.$subscription_plan_offersPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Subscription_plan_offers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {subscription_plan_offersFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Subscription_plan_offers
     * const subscription_plan_offers = await prisma.subscription_plan_offers.findMany()
     * 
     * // Get first 10 Subscription_plan_offers
     * const subscription_plan_offers = await prisma.subscription_plan_offers.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const subscription_plan_offersWithIdOnly = await prisma.subscription_plan_offers.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends subscription_plan_offersFindManyArgs>(args?: SelectSubset<T, subscription_plan_offersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$subscription_plan_offersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Subscription_plan_offers.
     * @param {subscription_plan_offersCreateArgs} args - Arguments to create a Subscription_plan_offers.
     * @example
     * // Create one Subscription_plan_offers
     * const Subscription_plan_offers = await prisma.subscription_plan_offers.create({
     *   data: {
     *     // ... data to create a Subscription_plan_offers
     *   }
     * })
     * 
     */
    create<T extends subscription_plan_offersCreateArgs>(args: SelectSubset<T, subscription_plan_offersCreateArgs<ExtArgs>>): Prisma__subscription_plan_offersClient<$Result.GetResult<Prisma.$subscription_plan_offersPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Subscription_plan_offers.
     * @param {subscription_plan_offersCreateManyArgs} args - Arguments to create many Subscription_plan_offers.
     * @example
     * // Create many Subscription_plan_offers
     * const subscription_plan_offers = await prisma.subscription_plan_offers.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends subscription_plan_offersCreateManyArgs>(args?: SelectSubset<T, subscription_plan_offersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Subscription_plan_offers and returns the data saved in the database.
     * @param {subscription_plan_offersCreateManyAndReturnArgs} args - Arguments to create many Subscription_plan_offers.
     * @example
     * // Create many Subscription_plan_offers
     * const subscription_plan_offers = await prisma.subscription_plan_offers.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Subscription_plan_offers and only return the `id`
     * const subscription_plan_offersWithIdOnly = await prisma.subscription_plan_offers.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends subscription_plan_offersCreateManyAndReturnArgs>(args?: SelectSubset<T, subscription_plan_offersCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$subscription_plan_offersPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Subscription_plan_offers.
     * @param {subscription_plan_offersDeleteArgs} args - Arguments to delete one Subscription_plan_offers.
     * @example
     * // Delete one Subscription_plan_offers
     * const Subscription_plan_offers = await prisma.subscription_plan_offers.delete({
     *   where: {
     *     // ... filter to delete one Subscription_plan_offers
     *   }
     * })
     * 
     */
    delete<T extends subscription_plan_offersDeleteArgs>(args: SelectSubset<T, subscription_plan_offersDeleteArgs<ExtArgs>>): Prisma__subscription_plan_offersClient<$Result.GetResult<Prisma.$subscription_plan_offersPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Subscription_plan_offers.
     * @param {subscription_plan_offersUpdateArgs} args - Arguments to update one Subscription_plan_offers.
     * @example
     * // Update one Subscription_plan_offers
     * const subscription_plan_offers = await prisma.subscription_plan_offers.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends subscription_plan_offersUpdateArgs>(args: SelectSubset<T, subscription_plan_offersUpdateArgs<ExtArgs>>): Prisma__subscription_plan_offersClient<$Result.GetResult<Prisma.$subscription_plan_offersPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Subscription_plan_offers.
     * @param {subscription_plan_offersDeleteManyArgs} args - Arguments to filter Subscription_plan_offers to delete.
     * @example
     * // Delete a few Subscription_plan_offers
     * const { count } = await prisma.subscription_plan_offers.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends subscription_plan_offersDeleteManyArgs>(args?: SelectSubset<T, subscription_plan_offersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Subscription_plan_offers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {subscription_plan_offersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Subscription_plan_offers
     * const subscription_plan_offers = await prisma.subscription_plan_offers.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends subscription_plan_offersUpdateManyArgs>(args: SelectSubset<T, subscription_plan_offersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Subscription_plan_offers and returns the data updated in the database.
     * @param {subscription_plan_offersUpdateManyAndReturnArgs} args - Arguments to update many Subscription_plan_offers.
     * @example
     * // Update many Subscription_plan_offers
     * const subscription_plan_offers = await prisma.subscription_plan_offers.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Subscription_plan_offers and only return the `id`
     * const subscription_plan_offersWithIdOnly = await prisma.subscription_plan_offers.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends subscription_plan_offersUpdateManyAndReturnArgs>(args: SelectSubset<T, subscription_plan_offersUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$subscription_plan_offersPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Subscription_plan_offers.
     * @param {subscription_plan_offersUpsertArgs} args - Arguments to update or create a Subscription_plan_offers.
     * @example
     * // Update or create a Subscription_plan_offers
     * const subscription_plan_offers = await prisma.subscription_plan_offers.upsert({
     *   create: {
     *     // ... data to create a Subscription_plan_offers
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Subscription_plan_offers we want to update
     *   }
     * })
     */
    upsert<T extends subscription_plan_offersUpsertArgs>(args: SelectSubset<T, subscription_plan_offersUpsertArgs<ExtArgs>>): Prisma__subscription_plan_offersClient<$Result.GetResult<Prisma.$subscription_plan_offersPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Subscription_plan_offers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {subscription_plan_offersCountArgs} args - Arguments to filter Subscription_plan_offers to count.
     * @example
     * // Count the number of Subscription_plan_offers
     * const count = await prisma.subscription_plan_offers.count({
     *   where: {
     *     // ... the filter for the Subscription_plan_offers we want to count
     *   }
     * })
    **/
    count<T extends subscription_plan_offersCountArgs>(
      args?: Subset<T, subscription_plan_offersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Subscription_plan_offersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Subscription_plan_offers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Subscription_plan_offersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Subscription_plan_offersAggregateArgs>(args: Subset<T, Subscription_plan_offersAggregateArgs>): Prisma.PrismaPromise<GetSubscription_plan_offersAggregateType<T>>

    /**
     * Group by Subscription_plan_offers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {subscription_plan_offersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends subscription_plan_offersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: subscription_plan_offersGroupByArgs['orderBy'] }
        : { orderBy?: subscription_plan_offersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, subscription_plan_offersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSubscription_plan_offersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the subscription_plan_offers model
   */
  readonly fields: subscription_plan_offersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for subscription_plan_offers.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__subscription_plan_offersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    offers<T extends offersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, offersDefaultArgs<ExtArgs>>): Prisma__offersClient<$Result.GetResult<Prisma.$offersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    subscription_plans<T extends subscription_plansDefaultArgs<ExtArgs> = {}>(args?: Subset<T, subscription_plansDefaultArgs<ExtArgs>>): Prisma__subscription_plansClient<$Result.GetResult<Prisma.$subscription_plansPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the subscription_plan_offers model
   */ 
  interface subscription_plan_offersFieldRefs {
    readonly id: FieldRef<"subscription_plan_offers", 'BigInt'>
    readonly subscription_plan_id: FieldRef<"subscription_plan_offers", 'BigInt'>
    readonly offer_id: FieldRef<"subscription_plan_offers", 'BigInt'>
    readonly discount_percentage: FieldRef<"subscription_plan_offers", 'Int'>
    readonly created_at: FieldRef<"subscription_plan_offers", 'DateTime'>
    readonly updated_at: FieldRef<"subscription_plan_offers", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * subscription_plan_offers findUnique
   */
  export type subscription_plan_offersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscription_plan_offers
     */
    select?: subscription_plan_offersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subscription_plan_offers
     */
    omit?: subscription_plan_offersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subscription_plan_offersInclude<ExtArgs> | null
    /**
     * Filter, which subscription_plan_offers to fetch.
     */
    where: subscription_plan_offersWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * subscription_plan_offers findUniqueOrThrow
   */
  export type subscription_plan_offersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscription_plan_offers
     */
    select?: subscription_plan_offersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subscription_plan_offers
     */
    omit?: subscription_plan_offersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subscription_plan_offersInclude<ExtArgs> | null
    /**
     * Filter, which subscription_plan_offers to fetch.
     */
    where: subscription_plan_offersWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * subscription_plan_offers findFirst
   */
  export type subscription_plan_offersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscription_plan_offers
     */
    select?: subscription_plan_offersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subscription_plan_offers
     */
    omit?: subscription_plan_offersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subscription_plan_offersInclude<ExtArgs> | null
    /**
     * Filter, which subscription_plan_offers to fetch.
     */
    where?: subscription_plan_offersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of subscription_plan_offers to fetch.
     */
    orderBy?: subscription_plan_offersOrderByWithRelationInput | subscription_plan_offersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for subscription_plan_offers.
     */
    cursor?: subscription_plan_offersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` subscription_plan_offers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` subscription_plan_offers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of subscription_plan_offers.
     */
    distinct?: Subscription_plan_offersScalarFieldEnum | Subscription_plan_offersScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * subscription_plan_offers findFirstOrThrow
   */
  export type subscription_plan_offersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscription_plan_offers
     */
    select?: subscription_plan_offersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subscription_plan_offers
     */
    omit?: subscription_plan_offersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subscription_plan_offersInclude<ExtArgs> | null
    /**
     * Filter, which subscription_plan_offers to fetch.
     */
    where?: subscription_plan_offersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of subscription_plan_offers to fetch.
     */
    orderBy?: subscription_plan_offersOrderByWithRelationInput | subscription_plan_offersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for subscription_plan_offers.
     */
    cursor?: subscription_plan_offersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` subscription_plan_offers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` subscription_plan_offers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of subscription_plan_offers.
     */
    distinct?: Subscription_plan_offersScalarFieldEnum | Subscription_plan_offersScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * subscription_plan_offers findMany
   */
  export type subscription_plan_offersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscription_plan_offers
     */
    select?: subscription_plan_offersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subscription_plan_offers
     */
    omit?: subscription_plan_offersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subscription_plan_offersInclude<ExtArgs> | null
    /**
     * Filter, which subscription_plan_offers to fetch.
     */
    where?: subscription_plan_offersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of subscription_plan_offers to fetch.
     */
    orderBy?: subscription_plan_offersOrderByWithRelationInput | subscription_plan_offersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing subscription_plan_offers.
     */
    cursor?: subscription_plan_offersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` subscription_plan_offers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` subscription_plan_offers.
     */
    skip?: number
    distinct?: Subscription_plan_offersScalarFieldEnum | Subscription_plan_offersScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * subscription_plan_offers create
   */
  export type subscription_plan_offersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscription_plan_offers
     */
    select?: subscription_plan_offersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subscription_plan_offers
     */
    omit?: subscription_plan_offersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subscription_plan_offersInclude<ExtArgs> | null
    /**
     * The data needed to create a subscription_plan_offers.
     */
    data: XOR<subscription_plan_offersCreateInput, subscription_plan_offersUncheckedCreateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * subscription_plan_offers createMany
   */
  export type subscription_plan_offersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many subscription_plan_offers.
     */
    data: subscription_plan_offersCreateManyInput | subscription_plan_offersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * subscription_plan_offers createManyAndReturn
   */
  export type subscription_plan_offersCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscription_plan_offers
     */
    select?: subscription_plan_offersSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the subscription_plan_offers
     */
    omit?: subscription_plan_offersOmit<ExtArgs> | null
    /**
     * The data used to create many subscription_plan_offers.
     */
    data: subscription_plan_offersCreateManyInput | subscription_plan_offersCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subscription_plan_offersIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * subscription_plan_offers update
   */
  export type subscription_plan_offersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscription_plan_offers
     */
    select?: subscription_plan_offersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subscription_plan_offers
     */
    omit?: subscription_plan_offersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subscription_plan_offersInclude<ExtArgs> | null
    /**
     * The data needed to update a subscription_plan_offers.
     */
    data: XOR<subscription_plan_offersUpdateInput, subscription_plan_offersUncheckedUpdateInput>
    /**
     * Choose, which subscription_plan_offers to update.
     */
    where: subscription_plan_offersWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * subscription_plan_offers updateMany
   */
  export type subscription_plan_offersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update subscription_plan_offers.
     */
    data: XOR<subscription_plan_offersUpdateManyMutationInput, subscription_plan_offersUncheckedUpdateManyInput>
    /**
     * Filter which subscription_plan_offers to update
     */
    where?: subscription_plan_offersWhereInput
    /**
     * Limit how many subscription_plan_offers to update.
     */
    limit?: number
  }

  /**
   * subscription_plan_offers updateManyAndReturn
   */
  export type subscription_plan_offersUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscription_plan_offers
     */
    select?: subscription_plan_offersSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the subscription_plan_offers
     */
    omit?: subscription_plan_offersOmit<ExtArgs> | null
    /**
     * The data used to update subscription_plan_offers.
     */
    data: XOR<subscription_plan_offersUpdateManyMutationInput, subscription_plan_offersUncheckedUpdateManyInput>
    /**
     * Filter which subscription_plan_offers to update
     */
    where?: subscription_plan_offersWhereInput
    /**
     * Limit how many subscription_plan_offers to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subscription_plan_offersIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * subscription_plan_offers upsert
   */
  export type subscription_plan_offersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscription_plan_offers
     */
    select?: subscription_plan_offersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subscription_plan_offers
     */
    omit?: subscription_plan_offersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subscription_plan_offersInclude<ExtArgs> | null
    /**
     * The filter to search for the subscription_plan_offers to update in case it exists.
     */
    where: subscription_plan_offersWhereUniqueInput
    /**
     * In case the subscription_plan_offers found by the `where` argument doesn't exist, create a new subscription_plan_offers with this data.
     */
    create: XOR<subscription_plan_offersCreateInput, subscription_plan_offersUncheckedCreateInput>
    /**
     * In case the subscription_plan_offers was found with the provided `where` argument, update it with this data.
     */
    update: XOR<subscription_plan_offersUpdateInput, subscription_plan_offersUncheckedUpdateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * subscription_plan_offers delete
   */
  export type subscription_plan_offersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscription_plan_offers
     */
    select?: subscription_plan_offersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subscription_plan_offers
     */
    omit?: subscription_plan_offersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subscription_plan_offersInclude<ExtArgs> | null
    /**
     * Filter which subscription_plan_offers to delete.
     */
    where: subscription_plan_offersWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * subscription_plan_offers deleteMany
   */
  export type subscription_plan_offersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which subscription_plan_offers to delete
     */
    where?: subscription_plan_offersWhereInput
    /**
     * Limit how many subscription_plan_offers to delete.
     */
    limit?: number
  }

  /**
   * subscription_plan_offers without action
   */
  export type subscription_plan_offersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscription_plan_offers
     */
    select?: subscription_plan_offersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subscription_plan_offers
     */
    omit?: subscription_plan_offersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subscription_plan_offersInclude<ExtArgs> | null
  }


  /**
   * Model subscription_plans
   */

  export type AggregateSubscription_plans = {
    _count: Subscription_plansCountAggregateOutputType | null
    _avg: Subscription_plansAvgAggregateOutputType | null
    _sum: Subscription_plansSumAggregateOutputType | null
    _min: Subscription_plansMinAggregateOutputType | null
    _max: Subscription_plansMaxAggregateOutputType | null
  }

  export type Subscription_plansAvgAggregateOutputType = {
    id: number | null
    duration: number | null
    price: Decimal | null
    status: number | null
  }

  export type Subscription_plansSumAggregateOutputType = {
    id: bigint | null
    duration: number | null
    price: Decimal | null
    status: number | null
  }

  export type Subscription_plansMinAggregateOutputType = {
    id: bigint | null
    title: string | null
    duration: number | null
    price: Decimal | null
    status: number | null
    description: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Subscription_plansMaxAggregateOutputType = {
    id: bigint | null
    title: string | null
    duration: number | null
    price: Decimal | null
    status: number | null
    description: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Subscription_plansCountAggregateOutputType = {
    id: number
    title: number
    duration: number
    price: number
    status: number
    description: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Subscription_plansAvgAggregateInputType = {
    id?: true
    duration?: true
    price?: true
    status?: true
  }

  export type Subscription_plansSumAggregateInputType = {
    id?: true
    duration?: true
    price?: true
    status?: true
  }

  export type Subscription_plansMinAggregateInputType = {
    id?: true
    title?: true
    duration?: true
    price?: true
    status?: true
    description?: true
    created_at?: true
    updated_at?: true
  }

  export type Subscription_plansMaxAggregateInputType = {
    id?: true
    title?: true
    duration?: true
    price?: true
    status?: true
    description?: true
    created_at?: true
    updated_at?: true
  }

  export type Subscription_plansCountAggregateInputType = {
    id?: true
    title?: true
    duration?: true
    price?: true
    status?: true
    description?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Subscription_plansAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which subscription_plans to aggregate.
     */
    where?: subscription_plansWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of subscription_plans to fetch.
     */
    orderBy?: subscription_plansOrderByWithRelationInput | subscription_plansOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: subscription_plansWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` subscription_plans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` subscription_plans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned subscription_plans
    **/
    _count?: true | Subscription_plansCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Subscription_plansAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Subscription_plansSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Subscription_plansMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Subscription_plansMaxAggregateInputType
  }

  export type GetSubscription_plansAggregateType<T extends Subscription_plansAggregateArgs> = {
        [P in keyof T & keyof AggregateSubscription_plans]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSubscription_plans[P]>
      : GetScalarType<T[P], AggregateSubscription_plans[P]>
  }




  export type subscription_plansGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: subscription_plansWhereInput
    orderBy?: subscription_plansOrderByWithAggregationInput | subscription_plansOrderByWithAggregationInput[]
    by: Subscription_plansScalarFieldEnum[] | Subscription_plansScalarFieldEnum
    having?: subscription_plansScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Subscription_plansCountAggregateInputType | true
    _avg?: Subscription_plansAvgAggregateInputType
    _sum?: Subscription_plansSumAggregateInputType
    _min?: Subscription_plansMinAggregateInputType
    _max?: Subscription_plansMaxAggregateInputType
  }

  export type Subscription_plansGroupByOutputType = {
    id: bigint
    title: string
    duration: number
    price: Decimal
    status: number
    description: string | null
    created_at: Date | null
    updated_at: Date | null
    _count: Subscription_plansCountAggregateOutputType | null
    _avg: Subscription_plansAvgAggregateOutputType | null
    _sum: Subscription_plansSumAggregateOutputType | null
    _min: Subscription_plansMinAggregateOutputType | null
    _max: Subscription_plansMaxAggregateOutputType | null
  }

  type GetSubscription_plansGroupByPayload<T extends subscription_plansGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Subscription_plansGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Subscription_plansGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Subscription_plansGroupByOutputType[P]>
            : GetScalarType<T[P], Subscription_plansGroupByOutputType[P]>
        }
      >
    >


  export type subscription_plansSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    duration?: boolean
    price?: boolean
    status?: boolean
    description?: boolean
    created_at?: boolean
    updated_at?: boolean
    customer_subscriptions?: boolean | subscription_plans$customer_subscriptionsArgs<ExtArgs>
    subscription_plan_offers?: boolean | subscription_plans$subscription_plan_offersArgs<ExtArgs>
    _count?: boolean | Subscription_plansCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["subscription_plans"]>

  export type subscription_plansSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    duration?: boolean
    price?: boolean
    status?: boolean
    description?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["subscription_plans"]>

  export type subscription_plansSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    duration?: boolean
    price?: boolean
    status?: boolean
    description?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["subscription_plans"]>

  export type subscription_plansSelectScalar = {
    id?: boolean
    title?: boolean
    duration?: boolean
    price?: boolean
    status?: boolean
    description?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type subscription_plansOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "title" | "duration" | "price" | "status" | "description" | "created_at" | "updated_at", ExtArgs["result"]["subscription_plans"]>
  export type subscription_plansInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    customer_subscriptions?: boolean | subscription_plans$customer_subscriptionsArgs<ExtArgs>
    subscription_plan_offers?: boolean | subscription_plans$subscription_plan_offersArgs<ExtArgs>
    _count?: boolean | Subscription_plansCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type subscription_plansIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type subscription_plansIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $subscription_plansPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "subscription_plans"
    objects: {
      customer_subscriptions: Prisma.$customer_subscriptionsPayload<ExtArgs>[]
      subscription_plan_offers: Prisma.$subscription_plan_offersPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      title: string
      duration: number
      price: Prisma.Decimal
      status: number
      description: string | null
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["subscription_plans"]>
    composites: {}
  }

  type subscription_plansGetPayload<S extends boolean | null | undefined | subscription_plansDefaultArgs> = $Result.GetResult<Prisma.$subscription_plansPayload, S>

  type subscription_plansCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<subscription_plansFindManyArgs, 'select' | 'include' | 'distinct' | 'omit' | 'relationLoadStrategy'> & {
      select?: Subscription_plansCountAggregateInputType | true
    }

  export interface subscription_plansDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['subscription_plans'], meta: { name: 'subscription_plans' } }
    /**
     * Find zero or one Subscription_plans that matches the filter.
     * @param {subscription_plansFindUniqueArgs} args - Arguments to find a Subscription_plans
     * @example
     * // Get one Subscription_plans
     * const subscription_plans = await prisma.subscription_plans.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends subscription_plansFindUniqueArgs>(args: SelectSubset<T, subscription_plansFindUniqueArgs<ExtArgs>>): Prisma__subscription_plansClient<$Result.GetResult<Prisma.$subscription_plansPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Subscription_plans that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {subscription_plansFindUniqueOrThrowArgs} args - Arguments to find a Subscription_plans
     * @example
     * // Get one Subscription_plans
     * const subscription_plans = await prisma.subscription_plans.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends subscription_plansFindUniqueOrThrowArgs>(args: SelectSubset<T, subscription_plansFindUniqueOrThrowArgs<ExtArgs>>): Prisma__subscription_plansClient<$Result.GetResult<Prisma.$subscription_plansPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Subscription_plans that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {subscription_plansFindFirstArgs} args - Arguments to find a Subscription_plans
     * @example
     * // Get one Subscription_plans
     * const subscription_plans = await prisma.subscription_plans.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends subscription_plansFindFirstArgs>(args?: SelectSubset<T, subscription_plansFindFirstArgs<ExtArgs>>): Prisma__subscription_plansClient<$Result.GetResult<Prisma.$subscription_plansPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Subscription_plans that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {subscription_plansFindFirstOrThrowArgs} args - Arguments to find a Subscription_plans
     * @example
     * // Get one Subscription_plans
     * const subscription_plans = await prisma.subscription_plans.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends subscription_plansFindFirstOrThrowArgs>(args?: SelectSubset<T, subscription_plansFindFirstOrThrowArgs<ExtArgs>>): Prisma__subscription_plansClient<$Result.GetResult<Prisma.$subscription_plansPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Subscription_plans that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {subscription_plansFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Subscription_plans
     * const subscription_plans = await prisma.subscription_plans.findMany()
     * 
     * // Get first 10 Subscription_plans
     * const subscription_plans = await prisma.subscription_plans.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const subscription_plansWithIdOnly = await prisma.subscription_plans.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends subscription_plansFindManyArgs>(args?: SelectSubset<T, subscription_plansFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$subscription_plansPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Subscription_plans.
     * @param {subscription_plansCreateArgs} args - Arguments to create a Subscription_plans.
     * @example
     * // Create one Subscription_plans
     * const Subscription_plans = await prisma.subscription_plans.create({
     *   data: {
     *     // ... data to create a Subscription_plans
     *   }
     * })
     * 
     */
    create<T extends subscription_plansCreateArgs>(args: SelectSubset<T, subscription_plansCreateArgs<ExtArgs>>): Prisma__subscription_plansClient<$Result.GetResult<Prisma.$subscription_plansPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Subscription_plans.
     * @param {subscription_plansCreateManyArgs} args - Arguments to create many Subscription_plans.
     * @example
     * // Create many Subscription_plans
     * const subscription_plans = await prisma.subscription_plans.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends subscription_plansCreateManyArgs>(args?: SelectSubset<T, subscription_plansCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Subscription_plans and returns the data saved in the database.
     * @param {subscription_plansCreateManyAndReturnArgs} args - Arguments to create many Subscription_plans.
     * @example
     * // Create many Subscription_plans
     * const subscription_plans = await prisma.subscription_plans.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Subscription_plans and only return the `id`
     * const subscription_plansWithIdOnly = await prisma.subscription_plans.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends subscription_plansCreateManyAndReturnArgs>(args?: SelectSubset<T, subscription_plansCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$subscription_plansPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Subscription_plans.
     * @param {subscription_plansDeleteArgs} args - Arguments to delete one Subscription_plans.
     * @example
     * // Delete one Subscription_plans
     * const Subscription_plans = await prisma.subscription_plans.delete({
     *   where: {
     *     // ... filter to delete one Subscription_plans
     *   }
     * })
     * 
     */
    delete<T extends subscription_plansDeleteArgs>(args: SelectSubset<T, subscription_plansDeleteArgs<ExtArgs>>): Prisma__subscription_plansClient<$Result.GetResult<Prisma.$subscription_plansPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Subscription_plans.
     * @param {subscription_plansUpdateArgs} args - Arguments to update one Subscription_plans.
     * @example
     * // Update one Subscription_plans
     * const subscription_plans = await prisma.subscription_plans.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends subscription_plansUpdateArgs>(args: SelectSubset<T, subscription_plansUpdateArgs<ExtArgs>>): Prisma__subscription_plansClient<$Result.GetResult<Prisma.$subscription_plansPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Subscription_plans.
     * @param {subscription_plansDeleteManyArgs} args - Arguments to filter Subscription_plans to delete.
     * @example
     * // Delete a few Subscription_plans
     * const { count } = await prisma.subscription_plans.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends subscription_plansDeleteManyArgs>(args?: SelectSubset<T, subscription_plansDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Subscription_plans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {subscription_plansUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Subscription_plans
     * const subscription_plans = await prisma.subscription_plans.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends subscription_plansUpdateManyArgs>(args: SelectSubset<T, subscription_plansUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Subscription_plans and returns the data updated in the database.
     * @param {subscription_plansUpdateManyAndReturnArgs} args - Arguments to update many Subscription_plans.
     * @example
     * // Update many Subscription_plans
     * const subscription_plans = await prisma.subscription_plans.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Subscription_plans and only return the `id`
     * const subscription_plansWithIdOnly = await prisma.subscription_plans.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends subscription_plansUpdateManyAndReturnArgs>(args: SelectSubset<T, subscription_plansUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$subscription_plansPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Subscription_plans.
     * @param {subscription_plansUpsertArgs} args - Arguments to update or create a Subscription_plans.
     * @example
     * // Update or create a Subscription_plans
     * const subscription_plans = await prisma.subscription_plans.upsert({
     *   create: {
     *     // ... data to create a Subscription_plans
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Subscription_plans we want to update
     *   }
     * })
     */
    upsert<T extends subscription_plansUpsertArgs>(args: SelectSubset<T, subscription_plansUpsertArgs<ExtArgs>>): Prisma__subscription_plansClient<$Result.GetResult<Prisma.$subscription_plansPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Subscription_plans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {subscription_plansCountArgs} args - Arguments to filter Subscription_plans to count.
     * @example
     * // Count the number of Subscription_plans
     * const count = await prisma.subscription_plans.count({
     *   where: {
     *     // ... the filter for the Subscription_plans we want to count
     *   }
     * })
    **/
    count<T extends subscription_plansCountArgs>(
      args?: Subset<T, subscription_plansCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Subscription_plansCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Subscription_plans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Subscription_plansAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Subscription_plansAggregateArgs>(args: Subset<T, Subscription_plansAggregateArgs>): Prisma.PrismaPromise<GetSubscription_plansAggregateType<T>>

    /**
     * Group by Subscription_plans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {subscription_plansGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends subscription_plansGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: subscription_plansGroupByArgs['orderBy'] }
        : { orderBy?: subscription_plansGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, subscription_plansGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSubscription_plansGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the subscription_plans model
   */
  readonly fields: subscription_plansFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for subscription_plans.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__subscription_plansClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    customer_subscriptions<T extends subscription_plans$customer_subscriptionsArgs<ExtArgs> = {}>(args?: Subset<T, subscription_plans$customer_subscriptionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$customer_subscriptionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    subscription_plan_offers<T extends subscription_plans$subscription_plan_offersArgs<ExtArgs> = {}>(args?: Subset<T, subscription_plans$subscription_plan_offersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$subscription_plan_offersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the subscription_plans model
   */ 
  interface subscription_plansFieldRefs {
    readonly id: FieldRef<"subscription_plans", 'BigInt'>
    readonly title: FieldRef<"subscription_plans", 'String'>
    readonly duration: FieldRef<"subscription_plans", 'Int'>
    readonly price: FieldRef<"subscription_plans", 'Decimal'>
    readonly status: FieldRef<"subscription_plans", 'Int'>
    readonly description: FieldRef<"subscription_plans", 'String'>
    readonly created_at: FieldRef<"subscription_plans", 'DateTime'>
    readonly updated_at: FieldRef<"subscription_plans", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * subscription_plans findUnique
   */
  export type subscription_plansFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscription_plans
     */
    select?: subscription_plansSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subscription_plans
     */
    omit?: subscription_plansOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subscription_plansInclude<ExtArgs> | null
    /**
     * Filter, which subscription_plans to fetch.
     */
    where: subscription_plansWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * subscription_plans findUniqueOrThrow
   */
  export type subscription_plansFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscription_plans
     */
    select?: subscription_plansSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subscription_plans
     */
    omit?: subscription_plansOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subscription_plansInclude<ExtArgs> | null
    /**
     * Filter, which subscription_plans to fetch.
     */
    where: subscription_plansWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * subscription_plans findFirst
   */
  export type subscription_plansFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscription_plans
     */
    select?: subscription_plansSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subscription_plans
     */
    omit?: subscription_plansOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subscription_plansInclude<ExtArgs> | null
    /**
     * Filter, which subscription_plans to fetch.
     */
    where?: subscription_plansWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of subscription_plans to fetch.
     */
    orderBy?: subscription_plansOrderByWithRelationInput | subscription_plansOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for subscription_plans.
     */
    cursor?: subscription_plansWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` subscription_plans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` subscription_plans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of subscription_plans.
     */
    distinct?: Subscription_plansScalarFieldEnum | Subscription_plansScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * subscription_plans findFirstOrThrow
   */
  export type subscription_plansFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscription_plans
     */
    select?: subscription_plansSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subscription_plans
     */
    omit?: subscription_plansOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subscription_plansInclude<ExtArgs> | null
    /**
     * Filter, which subscription_plans to fetch.
     */
    where?: subscription_plansWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of subscription_plans to fetch.
     */
    orderBy?: subscription_plansOrderByWithRelationInput | subscription_plansOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for subscription_plans.
     */
    cursor?: subscription_plansWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` subscription_plans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` subscription_plans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of subscription_plans.
     */
    distinct?: Subscription_plansScalarFieldEnum | Subscription_plansScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * subscription_plans findMany
   */
  export type subscription_plansFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscription_plans
     */
    select?: subscription_plansSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subscription_plans
     */
    omit?: subscription_plansOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subscription_plansInclude<ExtArgs> | null
    /**
     * Filter, which subscription_plans to fetch.
     */
    where?: subscription_plansWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of subscription_plans to fetch.
     */
    orderBy?: subscription_plansOrderByWithRelationInput | subscription_plansOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing subscription_plans.
     */
    cursor?: subscription_plansWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` subscription_plans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` subscription_plans.
     */
    skip?: number
    distinct?: Subscription_plansScalarFieldEnum | Subscription_plansScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * subscription_plans create
   */
  export type subscription_plansCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscription_plans
     */
    select?: subscription_plansSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subscription_plans
     */
    omit?: subscription_plansOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subscription_plansInclude<ExtArgs> | null
    /**
     * The data needed to create a subscription_plans.
     */
    data: XOR<subscription_plansCreateInput, subscription_plansUncheckedCreateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * subscription_plans createMany
   */
  export type subscription_plansCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many subscription_plans.
     */
    data: subscription_plansCreateManyInput | subscription_plansCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * subscription_plans createManyAndReturn
   */
  export type subscription_plansCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscription_plans
     */
    select?: subscription_plansSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the subscription_plans
     */
    omit?: subscription_plansOmit<ExtArgs> | null
    /**
     * The data used to create many subscription_plans.
     */
    data: subscription_plansCreateManyInput | subscription_plansCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * subscription_plans update
   */
  export type subscription_plansUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscription_plans
     */
    select?: subscription_plansSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subscription_plans
     */
    omit?: subscription_plansOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subscription_plansInclude<ExtArgs> | null
    /**
     * The data needed to update a subscription_plans.
     */
    data: XOR<subscription_plansUpdateInput, subscription_plansUncheckedUpdateInput>
    /**
     * Choose, which subscription_plans to update.
     */
    where: subscription_plansWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * subscription_plans updateMany
   */
  export type subscription_plansUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update subscription_plans.
     */
    data: XOR<subscription_plansUpdateManyMutationInput, subscription_plansUncheckedUpdateManyInput>
    /**
     * Filter which subscription_plans to update
     */
    where?: subscription_plansWhereInput
    /**
     * Limit how many subscription_plans to update.
     */
    limit?: number
  }

  /**
   * subscription_plans updateManyAndReturn
   */
  export type subscription_plansUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscription_plans
     */
    select?: subscription_plansSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the subscription_plans
     */
    omit?: subscription_plansOmit<ExtArgs> | null
    /**
     * The data used to update subscription_plans.
     */
    data: XOR<subscription_plansUpdateManyMutationInput, subscription_plansUncheckedUpdateManyInput>
    /**
     * Filter which subscription_plans to update
     */
    where?: subscription_plansWhereInput
    /**
     * Limit how many subscription_plans to update.
     */
    limit?: number
  }

  /**
   * subscription_plans upsert
   */
  export type subscription_plansUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscription_plans
     */
    select?: subscription_plansSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subscription_plans
     */
    omit?: subscription_plansOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subscription_plansInclude<ExtArgs> | null
    /**
     * The filter to search for the subscription_plans to update in case it exists.
     */
    where: subscription_plansWhereUniqueInput
    /**
     * In case the subscription_plans found by the `where` argument doesn't exist, create a new subscription_plans with this data.
     */
    create: XOR<subscription_plansCreateInput, subscription_plansUncheckedCreateInput>
    /**
     * In case the subscription_plans was found with the provided `where` argument, update it with this data.
     */
    update: XOR<subscription_plansUpdateInput, subscription_plansUncheckedUpdateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * subscription_plans delete
   */
  export type subscription_plansDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscription_plans
     */
    select?: subscription_plansSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subscription_plans
     */
    omit?: subscription_plansOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subscription_plansInclude<ExtArgs> | null
    /**
     * Filter which subscription_plans to delete.
     */
    where: subscription_plansWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * subscription_plans deleteMany
   */
  export type subscription_plansDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which subscription_plans to delete
     */
    where?: subscription_plansWhereInput
    /**
     * Limit how many subscription_plans to delete.
     */
    limit?: number
  }

  /**
   * subscription_plans.customer_subscriptions
   */
  export type subscription_plans$customer_subscriptionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the customer_subscriptions
     */
    select?: customer_subscriptionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the customer_subscriptions
     */
    omit?: customer_subscriptionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: customer_subscriptionsInclude<ExtArgs> | null
    where?: customer_subscriptionsWhereInput
    orderBy?: customer_subscriptionsOrderByWithRelationInput | customer_subscriptionsOrderByWithRelationInput[]
    cursor?: customer_subscriptionsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Customer_subscriptionsScalarFieldEnum | Customer_subscriptionsScalarFieldEnum[]
  }

  /**
   * subscription_plans.subscription_plan_offers
   */
  export type subscription_plans$subscription_plan_offersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscription_plan_offers
     */
    select?: subscription_plan_offersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subscription_plan_offers
     */
    omit?: subscription_plan_offersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subscription_plan_offersInclude<ExtArgs> | null
    where?: subscription_plan_offersWhereInput
    orderBy?: subscription_plan_offersOrderByWithRelationInput | subscription_plan_offersOrderByWithRelationInput[]
    cursor?: subscription_plan_offersWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Subscription_plan_offersScalarFieldEnum | Subscription_plan_offersScalarFieldEnum[]
  }

  /**
   * subscription_plans without action
   */
  export type subscription_plansDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscription_plans
     */
    select?: subscription_plansSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subscription_plans
     */
    omit?: subscription_plansOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subscription_plansInclude<ExtArgs> | null
  }


  /**
   * Model subscription_usages
   */

  export type AggregateSubscription_usages = {
    _count: Subscription_usagesCountAggregateOutputType | null
    _avg: Subscription_usagesAvgAggregateOutputType | null
    _sum: Subscription_usagesSumAggregateOutputType | null
    _min: Subscription_usagesMinAggregateOutputType | null
    _max: Subscription_usagesMaxAggregateOutputType | null
  }

  export type Subscription_usagesAvgAggregateOutputType = {
    id: number | null
    provider_agent_id: number | null
    customer_id: number | null
    customer_subscription_id: number | null
    provider_id: number | null
    offer_id: number | null
  }

  export type Subscription_usagesSumAggregateOutputType = {
    id: bigint | null
    provider_agent_id: bigint | null
    customer_id: bigint | null
    customer_subscription_id: bigint | null
    provider_id: bigint | null
    offer_id: bigint | null
  }

  export type Subscription_usagesMinAggregateOutputType = {
    id: bigint | null
    provider_agent_id: bigint | null
    customer_id: bigint | null
    customer_subscription_id: bigint | null
    provider_id: bigint | null
    offer_id: bigint | null
    total_amount: string | null
    status: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Subscription_usagesMaxAggregateOutputType = {
    id: bigint | null
    provider_agent_id: bigint | null
    customer_id: bigint | null
    customer_subscription_id: bigint | null
    provider_id: bigint | null
    offer_id: bigint | null
    total_amount: string | null
    status: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Subscription_usagesCountAggregateOutputType = {
    id: number
    provider_agent_id: number
    customer_id: number
    customer_subscription_id: number
    provider_id: number
    offer_id: number
    total_amount: number
    status: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Subscription_usagesAvgAggregateInputType = {
    id?: true
    provider_agent_id?: true
    customer_id?: true
    customer_subscription_id?: true
    provider_id?: true
    offer_id?: true
  }

  export type Subscription_usagesSumAggregateInputType = {
    id?: true
    provider_agent_id?: true
    customer_id?: true
    customer_subscription_id?: true
    provider_id?: true
    offer_id?: true
  }

  export type Subscription_usagesMinAggregateInputType = {
    id?: true
    provider_agent_id?: true
    customer_id?: true
    customer_subscription_id?: true
    provider_id?: true
    offer_id?: true
    total_amount?: true
    status?: true
    created_at?: true
    updated_at?: true
  }

  export type Subscription_usagesMaxAggregateInputType = {
    id?: true
    provider_agent_id?: true
    customer_id?: true
    customer_subscription_id?: true
    provider_id?: true
    offer_id?: true
    total_amount?: true
    status?: true
    created_at?: true
    updated_at?: true
  }

  export type Subscription_usagesCountAggregateInputType = {
    id?: true
    provider_agent_id?: true
    customer_id?: true
    customer_subscription_id?: true
    provider_id?: true
    offer_id?: true
    total_amount?: true
    status?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Subscription_usagesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which subscription_usages to aggregate.
     */
    where?: subscription_usagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of subscription_usages to fetch.
     */
    orderBy?: subscription_usagesOrderByWithRelationInput | subscription_usagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: subscription_usagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` subscription_usages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` subscription_usages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned subscription_usages
    **/
    _count?: true | Subscription_usagesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Subscription_usagesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Subscription_usagesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Subscription_usagesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Subscription_usagesMaxAggregateInputType
  }

  export type GetSubscription_usagesAggregateType<T extends Subscription_usagesAggregateArgs> = {
        [P in keyof T & keyof AggregateSubscription_usages]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSubscription_usages[P]>
      : GetScalarType<T[P], AggregateSubscription_usages[P]>
  }




  export type subscription_usagesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: subscription_usagesWhereInput
    orderBy?: subscription_usagesOrderByWithAggregationInput | subscription_usagesOrderByWithAggregationInput[]
    by: Subscription_usagesScalarFieldEnum[] | Subscription_usagesScalarFieldEnum
    having?: subscription_usagesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Subscription_usagesCountAggregateInputType | true
    _avg?: Subscription_usagesAvgAggregateInputType
    _sum?: Subscription_usagesSumAggregateInputType
    _min?: Subscription_usagesMinAggregateInputType
    _max?: Subscription_usagesMaxAggregateInputType
  }

  export type Subscription_usagesGroupByOutputType = {
    id: bigint
    provider_agent_id: bigint
    customer_id: bigint
    customer_subscription_id: bigint
    provider_id: bigint
    offer_id: bigint
    total_amount: string
    status: string
    created_at: Date | null
    updated_at: Date | null
    _count: Subscription_usagesCountAggregateOutputType | null
    _avg: Subscription_usagesAvgAggregateOutputType | null
    _sum: Subscription_usagesSumAggregateOutputType | null
    _min: Subscription_usagesMinAggregateOutputType | null
    _max: Subscription_usagesMaxAggregateOutputType | null
  }

  type GetSubscription_usagesGroupByPayload<T extends subscription_usagesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Subscription_usagesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Subscription_usagesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Subscription_usagesGroupByOutputType[P]>
            : GetScalarType<T[P], Subscription_usagesGroupByOutputType[P]>
        }
      >
    >


  export type subscription_usagesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    provider_agent_id?: boolean
    customer_id?: boolean
    customer_subscription_id?: boolean
    provider_id?: boolean
    offer_id?: boolean
    total_amount?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
    customers?: boolean | customersDefaultArgs<ExtArgs>
    customer_subscriptions?: boolean | customer_subscriptionsDefaultArgs<ExtArgs>
    offers?: boolean | offersDefaultArgs<ExtArgs>
    provider_agents?: boolean | provider_agentsDefaultArgs<ExtArgs>
    providers?: boolean | providersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["subscription_usages"]>

  export type subscription_usagesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    provider_agent_id?: boolean
    customer_id?: boolean
    customer_subscription_id?: boolean
    provider_id?: boolean
    offer_id?: boolean
    total_amount?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
    customers?: boolean | customersDefaultArgs<ExtArgs>
    customer_subscriptions?: boolean | customer_subscriptionsDefaultArgs<ExtArgs>
    offers?: boolean | offersDefaultArgs<ExtArgs>
    provider_agents?: boolean | provider_agentsDefaultArgs<ExtArgs>
    providers?: boolean | providersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["subscription_usages"]>

  export type subscription_usagesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    provider_agent_id?: boolean
    customer_id?: boolean
    customer_subscription_id?: boolean
    provider_id?: boolean
    offer_id?: boolean
    total_amount?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
    customers?: boolean | customersDefaultArgs<ExtArgs>
    customer_subscriptions?: boolean | customer_subscriptionsDefaultArgs<ExtArgs>
    offers?: boolean | offersDefaultArgs<ExtArgs>
    provider_agents?: boolean | provider_agentsDefaultArgs<ExtArgs>
    providers?: boolean | providersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["subscription_usages"]>

  export type subscription_usagesSelectScalar = {
    id?: boolean
    provider_agent_id?: boolean
    customer_id?: boolean
    customer_subscription_id?: boolean
    provider_id?: boolean
    offer_id?: boolean
    total_amount?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type subscription_usagesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "provider_agent_id" | "customer_id" | "customer_subscription_id" | "provider_id" | "offer_id" | "total_amount" | "status" | "created_at" | "updated_at", ExtArgs["result"]["subscription_usages"]>
  export type subscription_usagesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    customers?: boolean | customersDefaultArgs<ExtArgs>
    customer_subscriptions?: boolean | customer_subscriptionsDefaultArgs<ExtArgs>
    offers?: boolean | offersDefaultArgs<ExtArgs>
    provider_agents?: boolean | provider_agentsDefaultArgs<ExtArgs>
    providers?: boolean | providersDefaultArgs<ExtArgs>
  }
  export type subscription_usagesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    customers?: boolean | customersDefaultArgs<ExtArgs>
    customer_subscriptions?: boolean | customer_subscriptionsDefaultArgs<ExtArgs>
    offers?: boolean | offersDefaultArgs<ExtArgs>
    provider_agents?: boolean | provider_agentsDefaultArgs<ExtArgs>
    providers?: boolean | providersDefaultArgs<ExtArgs>
  }
  export type subscription_usagesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    customers?: boolean | customersDefaultArgs<ExtArgs>
    customer_subscriptions?: boolean | customer_subscriptionsDefaultArgs<ExtArgs>
    offers?: boolean | offersDefaultArgs<ExtArgs>
    provider_agents?: boolean | provider_agentsDefaultArgs<ExtArgs>
    providers?: boolean | providersDefaultArgs<ExtArgs>
  }

  export type $subscription_usagesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "subscription_usages"
    objects: {
      customers: Prisma.$customersPayload<ExtArgs>
      customer_subscriptions: Prisma.$customer_subscriptionsPayload<ExtArgs>
      offers: Prisma.$offersPayload<ExtArgs>
      provider_agents: Prisma.$provider_agentsPayload<ExtArgs>
      providers: Prisma.$providersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      provider_agent_id: bigint
      customer_id: bigint
      customer_subscription_id: bigint
      provider_id: bigint
      offer_id: bigint
      total_amount: string
      status: string
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["subscription_usages"]>
    composites: {}
  }

  type subscription_usagesGetPayload<S extends boolean | null | undefined | subscription_usagesDefaultArgs> = $Result.GetResult<Prisma.$subscription_usagesPayload, S>

  type subscription_usagesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<subscription_usagesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit' | 'relationLoadStrategy'> & {
      select?: Subscription_usagesCountAggregateInputType | true
    }

  export interface subscription_usagesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['subscription_usages'], meta: { name: 'subscription_usages' } }
    /**
     * Find zero or one Subscription_usages that matches the filter.
     * @param {subscription_usagesFindUniqueArgs} args - Arguments to find a Subscription_usages
     * @example
     * // Get one Subscription_usages
     * const subscription_usages = await prisma.subscription_usages.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends subscription_usagesFindUniqueArgs>(args: SelectSubset<T, subscription_usagesFindUniqueArgs<ExtArgs>>): Prisma__subscription_usagesClient<$Result.GetResult<Prisma.$subscription_usagesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Subscription_usages that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {subscription_usagesFindUniqueOrThrowArgs} args - Arguments to find a Subscription_usages
     * @example
     * // Get one Subscription_usages
     * const subscription_usages = await prisma.subscription_usages.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends subscription_usagesFindUniqueOrThrowArgs>(args: SelectSubset<T, subscription_usagesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__subscription_usagesClient<$Result.GetResult<Prisma.$subscription_usagesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Subscription_usages that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {subscription_usagesFindFirstArgs} args - Arguments to find a Subscription_usages
     * @example
     * // Get one Subscription_usages
     * const subscription_usages = await prisma.subscription_usages.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends subscription_usagesFindFirstArgs>(args?: SelectSubset<T, subscription_usagesFindFirstArgs<ExtArgs>>): Prisma__subscription_usagesClient<$Result.GetResult<Prisma.$subscription_usagesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Subscription_usages that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {subscription_usagesFindFirstOrThrowArgs} args - Arguments to find a Subscription_usages
     * @example
     * // Get one Subscription_usages
     * const subscription_usages = await prisma.subscription_usages.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends subscription_usagesFindFirstOrThrowArgs>(args?: SelectSubset<T, subscription_usagesFindFirstOrThrowArgs<ExtArgs>>): Prisma__subscription_usagesClient<$Result.GetResult<Prisma.$subscription_usagesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Subscription_usages that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {subscription_usagesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Subscription_usages
     * const subscription_usages = await prisma.subscription_usages.findMany()
     * 
     * // Get first 10 Subscription_usages
     * const subscription_usages = await prisma.subscription_usages.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const subscription_usagesWithIdOnly = await prisma.subscription_usages.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends subscription_usagesFindManyArgs>(args?: SelectSubset<T, subscription_usagesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$subscription_usagesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Subscription_usages.
     * @param {subscription_usagesCreateArgs} args - Arguments to create a Subscription_usages.
     * @example
     * // Create one Subscription_usages
     * const Subscription_usages = await prisma.subscription_usages.create({
     *   data: {
     *     // ... data to create a Subscription_usages
     *   }
     * })
     * 
     */
    create<T extends subscription_usagesCreateArgs>(args: SelectSubset<T, subscription_usagesCreateArgs<ExtArgs>>): Prisma__subscription_usagesClient<$Result.GetResult<Prisma.$subscription_usagesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Subscription_usages.
     * @param {subscription_usagesCreateManyArgs} args - Arguments to create many Subscription_usages.
     * @example
     * // Create many Subscription_usages
     * const subscription_usages = await prisma.subscription_usages.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends subscription_usagesCreateManyArgs>(args?: SelectSubset<T, subscription_usagesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Subscription_usages and returns the data saved in the database.
     * @param {subscription_usagesCreateManyAndReturnArgs} args - Arguments to create many Subscription_usages.
     * @example
     * // Create many Subscription_usages
     * const subscription_usages = await prisma.subscription_usages.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Subscription_usages and only return the `id`
     * const subscription_usagesWithIdOnly = await prisma.subscription_usages.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends subscription_usagesCreateManyAndReturnArgs>(args?: SelectSubset<T, subscription_usagesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$subscription_usagesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Subscription_usages.
     * @param {subscription_usagesDeleteArgs} args - Arguments to delete one Subscription_usages.
     * @example
     * // Delete one Subscription_usages
     * const Subscription_usages = await prisma.subscription_usages.delete({
     *   where: {
     *     // ... filter to delete one Subscription_usages
     *   }
     * })
     * 
     */
    delete<T extends subscription_usagesDeleteArgs>(args: SelectSubset<T, subscription_usagesDeleteArgs<ExtArgs>>): Prisma__subscription_usagesClient<$Result.GetResult<Prisma.$subscription_usagesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Subscription_usages.
     * @param {subscription_usagesUpdateArgs} args - Arguments to update one Subscription_usages.
     * @example
     * // Update one Subscription_usages
     * const subscription_usages = await prisma.subscription_usages.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends subscription_usagesUpdateArgs>(args: SelectSubset<T, subscription_usagesUpdateArgs<ExtArgs>>): Prisma__subscription_usagesClient<$Result.GetResult<Prisma.$subscription_usagesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Subscription_usages.
     * @param {subscription_usagesDeleteManyArgs} args - Arguments to filter Subscription_usages to delete.
     * @example
     * // Delete a few Subscription_usages
     * const { count } = await prisma.subscription_usages.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends subscription_usagesDeleteManyArgs>(args?: SelectSubset<T, subscription_usagesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Subscription_usages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {subscription_usagesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Subscription_usages
     * const subscription_usages = await prisma.subscription_usages.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends subscription_usagesUpdateManyArgs>(args: SelectSubset<T, subscription_usagesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Subscription_usages and returns the data updated in the database.
     * @param {subscription_usagesUpdateManyAndReturnArgs} args - Arguments to update many Subscription_usages.
     * @example
     * // Update many Subscription_usages
     * const subscription_usages = await prisma.subscription_usages.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Subscription_usages and only return the `id`
     * const subscription_usagesWithIdOnly = await prisma.subscription_usages.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends subscription_usagesUpdateManyAndReturnArgs>(args: SelectSubset<T, subscription_usagesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$subscription_usagesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Subscription_usages.
     * @param {subscription_usagesUpsertArgs} args - Arguments to update or create a Subscription_usages.
     * @example
     * // Update or create a Subscription_usages
     * const subscription_usages = await prisma.subscription_usages.upsert({
     *   create: {
     *     // ... data to create a Subscription_usages
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Subscription_usages we want to update
     *   }
     * })
     */
    upsert<T extends subscription_usagesUpsertArgs>(args: SelectSubset<T, subscription_usagesUpsertArgs<ExtArgs>>): Prisma__subscription_usagesClient<$Result.GetResult<Prisma.$subscription_usagesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Subscription_usages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {subscription_usagesCountArgs} args - Arguments to filter Subscription_usages to count.
     * @example
     * // Count the number of Subscription_usages
     * const count = await prisma.subscription_usages.count({
     *   where: {
     *     // ... the filter for the Subscription_usages we want to count
     *   }
     * })
    **/
    count<T extends subscription_usagesCountArgs>(
      args?: Subset<T, subscription_usagesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Subscription_usagesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Subscription_usages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Subscription_usagesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Subscription_usagesAggregateArgs>(args: Subset<T, Subscription_usagesAggregateArgs>): Prisma.PrismaPromise<GetSubscription_usagesAggregateType<T>>

    /**
     * Group by Subscription_usages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {subscription_usagesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends subscription_usagesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: subscription_usagesGroupByArgs['orderBy'] }
        : { orderBy?: subscription_usagesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, subscription_usagesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSubscription_usagesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the subscription_usages model
   */
  readonly fields: subscription_usagesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for subscription_usages.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__subscription_usagesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    customers<T extends customersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, customersDefaultArgs<ExtArgs>>): Prisma__customersClient<$Result.GetResult<Prisma.$customersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    customer_subscriptions<T extends customer_subscriptionsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, customer_subscriptionsDefaultArgs<ExtArgs>>): Prisma__customer_subscriptionsClient<$Result.GetResult<Prisma.$customer_subscriptionsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    offers<T extends offersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, offersDefaultArgs<ExtArgs>>): Prisma__offersClient<$Result.GetResult<Prisma.$offersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    provider_agents<T extends provider_agentsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, provider_agentsDefaultArgs<ExtArgs>>): Prisma__provider_agentsClient<$Result.GetResult<Prisma.$provider_agentsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    providers<T extends providersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, providersDefaultArgs<ExtArgs>>): Prisma__providersClient<$Result.GetResult<Prisma.$providersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the subscription_usages model
   */ 
  interface subscription_usagesFieldRefs {
    readonly id: FieldRef<"subscription_usages", 'BigInt'>
    readonly provider_agent_id: FieldRef<"subscription_usages", 'BigInt'>
    readonly customer_id: FieldRef<"subscription_usages", 'BigInt'>
    readonly customer_subscription_id: FieldRef<"subscription_usages", 'BigInt'>
    readonly provider_id: FieldRef<"subscription_usages", 'BigInt'>
    readonly offer_id: FieldRef<"subscription_usages", 'BigInt'>
    readonly total_amount: FieldRef<"subscription_usages", 'String'>
    readonly status: FieldRef<"subscription_usages", 'String'>
    readonly created_at: FieldRef<"subscription_usages", 'DateTime'>
    readonly updated_at: FieldRef<"subscription_usages", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * subscription_usages findUnique
   */
  export type subscription_usagesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscription_usages
     */
    select?: subscription_usagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subscription_usages
     */
    omit?: subscription_usagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subscription_usagesInclude<ExtArgs> | null
    /**
     * Filter, which subscription_usages to fetch.
     */
    where: subscription_usagesWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * subscription_usages findUniqueOrThrow
   */
  export type subscription_usagesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscription_usages
     */
    select?: subscription_usagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subscription_usages
     */
    omit?: subscription_usagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subscription_usagesInclude<ExtArgs> | null
    /**
     * Filter, which subscription_usages to fetch.
     */
    where: subscription_usagesWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * subscription_usages findFirst
   */
  export type subscription_usagesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscription_usages
     */
    select?: subscription_usagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subscription_usages
     */
    omit?: subscription_usagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subscription_usagesInclude<ExtArgs> | null
    /**
     * Filter, which subscription_usages to fetch.
     */
    where?: subscription_usagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of subscription_usages to fetch.
     */
    orderBy?: subscription_usagesOrderByWithRelationInput | subscription_usagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for subscription_usages.
     */
    cursor?: subscription_usagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` subscription_usages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` subscription_usages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of subscription_usages.
     */
    distinct?: Subscription_usagesScalarFieldEnum | Subscription_usagesScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * subscription_usages findFirstOrThrow
   */
  export type subscription_usagesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscription_usages
     */
    select?: subscription_usagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subscription_usages
     */
    omit?: subscription_usagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subscription_usagesInclude<ExtArgs> | null
    /**
     * Filter, which subscription_usages to fetch.
     */
    where?: subscription_usagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of subscription_usages to fetch.
     */
    orderBy?: subscription_usagesOrderByWithRelationInput | subscription_usagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for subscription_usages.
     */
    cursor?: subscription_usagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` subscription_usages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` subscription_usages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of subscription_usages.
     */
    distinct?: Subscription_usagesScalarFieldEnum | Subscription_usagesScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * subscription_usages findMany
   */
  export type subscription_usagesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscription_usages
     */
    select?: subscription_usagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subscription_usages
     */
    omit?: subscription_usagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subscription_usagesInclude<ExtArgs> | null
    /**
     * Filter, which subscription_usages to fetch.
     */
    where?: subscription_usagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of subscription_usages to fetch.
     */
    orderBy?: subscription_usagesOrderByWithRelationInput | subscription_usagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing subscription_usages.
     */
    cursor?: subscription_usagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` subscription_usages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` subscription_usages.
     */
    skip?: number
    distinct?: Subscription_usagesScalarFieldEnum | Subscription_usagesScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * subscription_usages create
   */
  export type subscription_usagesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscription_usages
     */
    select?: subscription_usagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subscription_usages
     */
    omit?: subscription_usagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subscription_usagesInclude<ExtArgs> | null
    /**
     * The data needed to create a subscription_usages.
     */
    data: XOR<subscription_usagesCreateInput, subscription_usagesUncheckedCreateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * subscription_usages createMany
   */
  export type subscription_usagesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many subscription_usages.
     */
    data: subscription_usagesCreateManyInput | subscription_usagesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * subscription_usages createManyAndReturn
   */
  export type subscription_usagesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscription_usages
     */
    select?: subscription_usagesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the subscription_usages
     */
    omit?: subscription_usagesOmit<ExtArgs> | null
    /**
     * The data used to create many subscription_usages.
     */
    data: subscription_usagesCreateManyInput | subscription_usagesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subscription_usagesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * subscription_usages update
   */
  export type subscription_usagesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscription_usages
     */
    select?: subscription_usagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subscription_usages
     */
    omit?: subscription_usagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subscription_usagesInclude<ExtArgs> | null
    /**
     * The data needed to update a subscription_usages.
     */
    data: XOR<subscription_usagesUpdateInput, subscription_usagesUncheckedUpdateInput>
    /**
     * Choose, which subscription_usages to update.
     */
    where: subscription_usagesWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * subscription_usages updateMany
   */
  export type subscription_usagesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update subscription_usages.
     */
    data: XOR<subscription_usagesUpdateManyMutationInput, subscription_usagesUncheckedUpdateManyInput>
    /**
     * Filter which subscription_usages to update
     */
    where?: subscription_usagesWhereInput
    /**
     * Limit how many subscription_usages to update.
     */
    limit?: number
  }

  /**
   * subscription_usages updateManyAndReturn
   */
  export type subscription_usagesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscription_usages
     */
    select?: subscription_usagesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the subscription_usages
     */
    omit?: subscription_usagesOmit<ExtArgs> | null
    /**
     * The data used to update subscription_usages.
     */
    data: XOR<subscription_usagesUpdateManyMutationInput, subscription_usagesUncheckedUpdateManyInput>
    /**
     * Filter which subscription_usages to update
     */
    where?: subscription_usagesWhereInput
    /**
     * Limit how many subscription_usages to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subscription_usagesIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * subscription_usages upsert
   */
  export type subscription_usagesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscription_usages
     */
    select?: subscription_usagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subscription_usages
     */
    omit?: subscription_usagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subscription_usagesInclude<ExtArgs> | null
    /**
     * The filter to search for the subscription_usages to update in case it exists.
     */
    where: subscription_usagesWhereUniqueInput
    /**
     * In case the subscription_usages found by the `where` argument doesn't exist, create a new subscription_usages with this data.
     */
    create: XOR<subscription_usagesCreateInput, subscription_usagesUncheckedCreateInput>
    /**
     * In case the subscription_usages was found with the provided `where` argument, update it with this data.
     */
    update: XOR<subscription_usagesUpdateInput, subscription_usagesUncheckedUpdateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * subscription_usages delete
   */
  export type subscription_usagesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscription_usages
     */
    select?: subscription_usagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subscription_usages
     */
    omit?: subscription_usagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subscription_usagesInclude<ExtArgs> | null
    /**
     * Filter which subscription_usages to delete.
     */
    where: subscription_usagesWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * subscription_usages deleteMany
   */
  export type subscription_usagesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which subscription_usages to delete
     */
    where?: subscription_usagesWhereInput
    /**
     * Limit how many subscription_usages to delete.
     */
    limit?: number
  }

  /**
   * subscription_usages without action
   */
  export type subscription_usagesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the subscription_usages
     */
    select?: subscription_usagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the subscription_usages
     */
    omit?: subscription_usagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: subscription_usagesInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const AdminsScalarFieldEnum: {
    id: 'id',
    first_name: 'first_name',
    last_name: 'last_name',
    gender: 'gender',
    email: 'email',
    mobile_number: 'mobile_number',
    password: 'password',
    birthdate: 'birthdate',
    ssn: 'ssn',
    otp_secret: 'otp_secret',
    status: 'status',
    is_verified: 'is_verified',
    deleted_at: 'deleted_at',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type AdminsScalarFieldEnum = (typeof AdminsScalarFieldEnum)[keyof typeof AdminsScalarFieldEnum]


  export const RelationLoadStrategy: {
    query: 'query',
    join: 'join'
  };

  export type RelationLoadStrategy = (typeof RelationLoadStrategy)[keyof typeof RelationLoadStrategy]


  export const CacheScalarFieldEnum: {
    key: 'key',
    value: 'value',
    expiration: 'expiration'
  };

  export type CacheScalarFieldEnum = (typeof CacheScalarFieldEnum)[keyof typeof CacheScalarFieldEnum]


  export const Cache_locksScalarFieldEnum: {
    key: 'key',
    owner: 'owner',
    expiration: 'expiration'
  };

  export type Cache_locksScalarFieldEnum = (typeof Cache_locksScalarFieldEnum)[keyof typeof Cache_locksScalarFieldEnum]


  export const Customer_subscriptionsScalarFieldEnum: {
    id: 'id',
    customer_id: 'customer_id',
    subscription_plan_id: 'subscription_plan_id',
    order_id: 'order_id',
    start_date: 'start_date',
    end_date: 'end_date',
    status: 'status',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Customer_subscriptionsScalarFieldEnum = (typeof Customer_subscriptionsScalarFieldEnum)[keyof typeof Customer_subscriptionsScalarFieldEnum]


  export const CustomersScalarFieldEnum: {
    id: 'id',
    first_name: 'first_name',
    last_name: 'last_name',
    gender: 'gender',
    email: 'email',
    mobile_number: 'mobile_number',
    password: 'password',
    birthdate: 'birthdate',
    ssn: 'ssn',
    otp_secret: 'otp_secret',
    status: 'status',
    is_verified: 'is_verified',
    deleted_at: 'deleted_at',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type CustomersScalarFieldEnum = (typeof CustomersScalarFieldEnum)[keyof typeof CustomersScalarFieldEnum]


  export const Failed_jobsScalarFieldEnum: {
    id: 'id',
    uuid: 'uuid',
    connection: 'connection',
    queue: 'queue',
    payload: 'payload',
    exception: 'exception',
    failed_at: 'failed_at'
  };

  export type Failed_jobsScalarFieldEnum = (typeof Failed_jobsScalarFieldEnum)[keyof typeof Failed_jobsScalarFieldEnum]


  export const Job_batchesScalarFieldEnum: {
    id: 'id',
    name: 'name',
    total_jobs: 'total_jobs',
    pending_jobs: 'pending_jobs',
    failed_jobs: 'failed_jobs',
    failed_job_ids: 'failed_job_ids',
    options: 'options',
    cancelled_at: 'cancelled_at',
    created_at: 'created_at',
    finished_at: 'finished_at'
  };

  export type Job_batchesScalarFieldEnum = (typeof Job_batchesScalarFieldEnum)[keyof typeof Job_batchesScalarFieldEnum]


  export const JobsScalarFieldEnum: {
    id: 'id',
    queue: 'queue',
    payload: 'payload',
    attempts: 'attempts',
    reserved_at: 'reserved_at',
    available_at: 'available_at',
    created_at: 'created_at'
  };

  export type JobsScalarFieldEnum = (typeof JobsScalarFieldEnum)[keyof typeof JobsScalarFieldEnum]


  export const MigrationsScalarFieldEnum: {
    id: 'id',
    migration: 'migration',
    batch: 'batch'
  };

  export type MigrationsScalarFieldEnum = (typeof MigrationsScalarFieldEnum)[keyof typeof MigrationsScalarFieldEnum]


  export const Model_has_permissionsScalarFieldEnum: {
    permission_id: 'permission_id',
    model_type: 'model_type',
    model_id: 'model_id'
  };

  export type Model_has_permissionsScalarFieldEnum = (typeof Model_has_permissionsScalarFieldEnum)[keyof typeof Model_has_permissionsScalarFieldEnum]


  export const Model_has_rolesScalarFieldEnum: {
    role_id: 'role_id',
    model_type: 'model_type',
    model_id: 'model_id'
  };

  export type Model_has_rolesScalarFieldEnum = (typeof Model_has_rolesScalarFieldEnum)[keyof typeof Model_has_rolesScalarFieldEnum]


  export const Oauth_access_tokensScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    client_id: 'client_id',
    name: 'name',
    scopes: 'scopes',
    revoked: 'revoked',
    created_at: 'created_at',
    updated_at: 'updated_at',
    expires_at: 'expires_at'
  };

  export type Oauth_access_tokensScalarFieldEnum = (typeof Oauth_access_tokensScalarFieldEnum)[keyof typeof Oauth_access_tokensScalarFieldEnum]


  export const Oauth_auth_codesScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    client_id: 'client_id',
    scopes: 'scopes',
    revoked: 'revoked',
    expires_at: 'expires_at'
  };

  export type Oauth_auth_codesScalarFieldEnum = (typeof Oauth_auth_codesScalarFieldEnum)[keyof typeof Oauth_auth_codesScalarFieldEnum]


  export const Oauth_clientsScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    name: 'name',
    secret: 'secret',
    provider: 'provider',
    redirect: 'redirect',
    personal_access_client: 'personal_access_client',
    password_client: 'password_client',
    revoked: 'revoked',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Oauth_clientsScalarFieldEnum = (typeof Oauth_clientsScalarFieldEnum)[keyof typeof Oauth_clientsScalarFieldEnum]


  export const Oauth_personal_access_clientsScalarFieldEnum: {
    id: 'id',
    client_id: 'client_id',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Oauth_personal_access_clientsScalarFieldEnum = (typeof Oauth_personal_access_clientsScalarFieldEnum)[keyof typeof Oauth_personal_access_clientsScalarFieldEnum]


  export const Oauth_refresh_tokensScalarFieldEnum: {
    id: 'id',
    access_token_id: 'access_token_id',
    revoked: 'revoked',
    expires_at: 'expires_at'
  };

  export type Oauth_refresh_tokensScalarFieldEnum = (typeof Oauth_refresh_tokensScalarFieldEnum)[keyof typeof Oauth_refresh_tokensScalarFieldEnum]


  export const Offer_categoriesScalarFieldEnum: {
    id: 'id',
    title: 'title',
    icon: 'icon',
    description: 'description',
    status: 'status',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Offer_categoriesScalarFieldEnum = (typeof Offer_categoriesScalarFieldEnum)[keyof typeof Offer_categoriesScalarFieldEnum]


  export const OffersScalarFieldEnum: {
    id: 'id',
    category_id: 'category_id',
    title: 'title',
    icon: 'icon',
    description: 'description',
    price: 'price',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type OffersScalarFieldEnum = (typeof OffersScalarFieldEnum)[keyof typeof OffersScalarFieldEnum]


  export const OrdersScalarFieldEnum: {
    id: 'id',
    buyer_type: 'buyer_type',
    buyer_id: 'buyer_id',
    purchasable_type: 'purchasable_type',
    purchasable_id: 'purchasable_id',
    amount: 'amount',
    status: 'status',
    created_at: 'created_at',
    updated_at: 'updated_at',
    tracking_code: 'tracking_code'
  };

  export type OrdersScalarFieldEnum = (typeof OrdersScalarFieldEnum)[keyof typeof OrdersScalarFieldEnum]


  export const OtpsScalarFieldEnum: {
    id: 'id',
    code: 'code',
    channel: 'channel',
    reason: 'reason',
    expires_at: 'expires_at',
    authenticatable_type: 'authenticatable_type',
    authenticatable_id: 'authenticatable_id',
    is_used: 'is_used',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type OtpsScalarFieldEnum = (typeof OtpsScalarFieldEnum)[keyof typeof OtpsScalarFieldEnum]


  export const PaymentsScalarFieldEnum: {
    id: 'id',
    order_id: 'order_id',
    transaction_id: 'transaction_id',
    res_num: 'res_num',
    status: 'status',
    amount: 'amount',
    payment_method: 'payment_method',
    payment_gateway: 'payment_gateway',
    paid_at: 'paid_at',
    created_at: 'created_at',
    updated_at: 'updated_at',
    receipt_photo: 'receipt_photo'
  };

  export type PaymentsScalarFieldEnum = (typeof PaymentsScalarFieldEnum)[keyof typeof PaymentsScalarFieldEnum]


  export const PermissionsScalarFieldEnum: {
    id: 'id',
    name: 'name',
    guard_name: 'guard_name',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type PermissionsScalarFieldEnum = (typeof PermissionsScalarFieldEnum)[keyof typeof PermissionsScalarFieldEnum]


  export const Personal_access_tokensScalarFieldEnum: {
    id: 'id',
    tokenable_type: 'tokenable_type',
    tokenable_id: 'tokenable_id',
    name: 'name',
    token: 'token',
    abilities: 'abilities',
    last_used_at: 'last_used_at',
    expires_at: 'expires_at',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Personal_access_tokensScalarFieldEnum = (typeof Personal_access_tokensScalarFieldEnum)[keyof typeof Personal_access_tokensScalarFieldEnum]


  export const Provider_agentsScalarFieldEnum: {
    id: 'id',
    provider_id: 'provider_id',
    user_id: 'user_id',
    role: 'role',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Provider_agentsScalarFieldEnum = (typeof Provider_agentsScalarFieldEnum)[keyof typeof Provider_agentsScalarFieldEnum]


  export const Provider_offersScalarFieldEnum: {
    id: 'id',
    provider_id: 'provider_id',
    offer_id: 'offer_id',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Provider_offersScalarFieldEnum = (typeof Provider_offersScalarFieldEnum)[keyof typeof Provider_offersScalarFieldEnum]


  export const ProvidersScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    category_id: 'category_id',
    address: 'address',
    phone_number: 'phone_number',
    main_image: 'main_image',
    slider_images: 'slider_images',
    latitude: 'latitude',
    longitude: 'longitude',
    is_verified: 'is_verified',
    status: 'status',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type ProvidersScalarFieldEnum = (typeof ProvidersScalarFieldEnum)[keyof typeof ProvidersScalarFieldEnum]


  export const Provider_menuScalarFieldEnum: {
    id: 'id',
    provider_id: 'provider_id',
    title: 'title',
    description: 'description',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Provider_menuScalarFieldEnum = (typeof Provider_menuScalarFieldEnum)[keyof typeof Provider_menuScalarFieldEnum]


  export const Provider_menu_itemsScalarFieldEnum: {
    id: 'id',
    menu_id: 'menu_id',
    title: 'title',
    description: 'description',
    created_at: 'created_at',
    updated_at: 'updated_at',
    category_id: 'category_id',
    price: 'price'
  };

  export type Provider_menu_itemsScalarFieldEnum = (typeof Provider_menu_itemsScalarFieldEnum)[keyof typeof Provider_menu_itemsScalarFieldEnum]


  export const Provider_menu_categoriesScalarFieldEnum: {
    id: 'id',
    menu_id: 'menu_id',
    title: 'title',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Provider_menu_categoriesScalarFieldEnum = (typeof Provider_menu_categoriesScalarFieldEnum)[keyof typeof Provider_menu_categoriesScalarFieldEnum]


  export const Role_has_permissionsScalarFieldEnum: {
    permission_id: 'permission_id',
    role_id: 'role_id'
  };

  export type Role_has_permissionsScalarFieldEnum = (typeof Role_has_permissionsScalarFieldEnum)[keyof typeof Role_has_permissionsScalarFieldEnum]


  export const RolesScalarFieldEnum: {
    id: 'id',
    name: 'name',
    guard_name: 'guard_name',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type RolesScalarFieldEnum = (typeof RolesScalarFieldEnum)[keyof typeof RolesScalarFieldEnum]


  export const Subscription_plan_offersScalarFieldEnum: {
    id: 'id',
    subscription_plan_id: 'subscription_plan_id',
    offer_id: 'offer_id',
    discount_percentage: 'discount_percentage',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Subscription_plan_offersScalarFieldEnum = (typeof Subscription_plan_offersScalarFieldEnum)[keyof typeof Subscription_plan_offersScalarFieldEnum]


  export const Subscription_plansScalarFieldEnum: {
    id: 'id',
    title: 'title',
    duration: 'duration',
    price: 'price',
    status: 'status',
    description: 'description',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Subscription_plansScalarFieldEnum = (typeof Subscription_plansScalarFieldEnum)[keyof typeof Subscription_plansScalarFieldEnum]


  export const Subscription_usagesScalarFieldEnum: {
    id: 'id',
    provider_agent_id: 'provider_agent_id',
    customer_id: 'customer_id',
    customer_subscription_id: 'customer_subscription_id',
    provider_id: 'provider_id',
    offer_id: 'offer_id',
    total_amount: 'total_amount',
    status: 'status',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Subscription_usagesScalarFieldEnum = (typeof Subscription_usagesScalarFieldEnum)[keyof typeof Subscription_usagesScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const JsonNullValueInput: {
    JsonNull: typeof JsonNull
  };

  export type JsonNullValueInput = (typeof JsonNullValueInput)[keyof typeof JsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'BigInt'
   */
  export type BigIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'BigInt'>
    


  /**
   * Reference to a field of type 'BigInt[]'
   */
  export type ListBigIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'BigInt[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Decimal[]'
   */
  export type ListDecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal[]'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'QueryMode'
   */
  export type EnumQueryModeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'QueryMode'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type adminsWhereInput = {
    AND?: adminsWhereInput | adminsWhereInput[]
    OR?: adminsWhereInput[]
    NOT?: adminsWhereInput | adminsWhereInput[]
    id?: BigIntFilter<"admins"> | bigint | number
    first_name?: StringNullableFilter<"admins"> | string | null
    last_name?: StringNullableFilter<"admins"> | string | null
    gender?: StringNullableFilter<"admins"> | string | null
    email?: StringNullableFilter<"admins"> | string | null
    mobile_number?: StringFilter<"admins"> | string
    password?: StringNullableFilter<"admins"> | string | null
    birthdate?: DateTimeNullableFilter<"admins"> | Date | string | null
    ssn?: StringNullableFilter<"admins"> | string | null
    otp_secret?: StringNullableFilter<"admins"> | string | null
    status?: IntFilter<"admins"> | number
    is_verified?: BoolFilter<"admins"> | boolean
    deleted_at?: DateTimeNullableFilter<"admins"> | Date | string | null
    created_at?: DateTimeNullableFilter<"admins"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"admins"> | Date | string | null
    provider_agents?: Provider_agentsListRelationFilter
  }

  export type adminsOrderByWithRelationInput = {
    id?: SortOrder
    first_name?: SortOrderInput | SortOrder
    last_name?: SortOrderInput | SortOrder
    gender?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    mobile_number?: SortOrder
    password?: SortOrderInput | SortOrder
    birthdate?: SortOrderInput | SortOrder
    ssn?: SortOrderInput | SortOrder
    otp_secret?: SortOrderInput | SortOrder
    status?: SortOrder
    is_verified?: SortOrder
    deleted_at?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    provider_agents?: provider_agentsOrderByRelationAggregateInput
  }

  export type adminsWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    email_deleted_at?: adminsEmailDeleted_atCompoundUniqueInput
    mobile_number_deleted_at?: adminsMobile_numberDeleted_atCompoundUniqueInput
    ssn_deleted_at?: adminsSsnDeleted_atCompoundUniqueInput
    AND?: adminsWhereInput | adminsWhereInput[]
    OR?: adminsWhereInput[]
    NOT?: adminsWhereInput | adminsWhereInput[]
    first_name?: StringNullableFilter<"admins"> | string | null
    last_name?: StringNullableFilter<"admins"> | string | null
    gender?: StringNullableFilter<"admins"> | string | null
    email?: StringNullableFilter<"admins"> | string | null
    mobile_number?: StringFilter<"admins"> | string
    password?: StringNullableFilter<"admins"> | string | null
    birthdate?: DateTimeNullableFilter<"admins"> | Date | string | null
    ssn?: StringNullableFilter<"admins"> | string | null
    otp_secret?: StringNullableFilter<"admins"> | string | null
    status?: IntFilter<"admins"> | number
    is_verified?: BoolFilter<"admins"> | boolean
    deleted_at?: DateTimeNullableFilter<"admins"> | Date | string | null
    created_at?: DateTimeNullableFilter<"admins"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"admins"> | Date | string | null
    provider_agents?: Provider_agentsListRelationFilter
  }, "id" | "email_deleted_at" | "mobile_number_deleted_at" | "ssn_deleted_at">

  export type adminsOrderByWithAggregationInput = {
    id?: SortOrder
    first_name?: SortOrderInput | SortOrder
    last_name?: SortOrderInput | SortOrder
    gender?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    mobile_number?: SortOrder
    password?: SortOrderInput | SortOrder
    birthdate?: SortOrderInput | SortOrder
    ssn?: SortOrderInput | SortOrder
    otp_secret?: SortOrderInput | SortOrder
    status?: SortOrder
    is_verified?: SortOrder
    deleted_at?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: adminsCountOrderByAggregateInput
    _avg?: adminsAvgOrderByAggregateInput
    _max?: adminsMaxOrderByAggregateInput
    _min?: adminsMinOrderByAggregateInput
    _sum?: adminsSumOrderByAggregateInput
  }

  export type adminsScalarWhereWithAggregatesInput = {
    AND?: adminsScalarWhereWithAggregatesInput | adminsScalarWhereWithAggregatesInput[]
    OR?: adminsScalarWhereWithAggregatesInput[]
    NOT?: adminsScalarWhereWithAggregatesInput | adminsScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"admins"> | bigint | number
    first_name?: StringNullableWithAggregatesFilter<"admins"> | string | null
    last_name?: StringNullableWithAggregatesFilter<"admins"> | string | null
    gender?: StringNullableWithAggregatesFilter<"admins"> | string | null
    email?: StringNullableWithAggregatesFilter<"admins"> | string | null
    mobile_number?: StringWithAggregatesFilter<"admins"> | string
    password?: StringNullableWithAggregatesFilter<"admins"> | string | null
    birthdate?: DateTimeNullableWithAggregatesFilter<"admins"> | Date | string | null
    ssn?: StringNullableWithAggregatesFilter<"admins"> | string | null
    otp_secret?: StringNullableWithAggregatesFilter<"admins"> | string | null
    status?: IntWithAggregatesFilter<"admins"> | number
    is_verified?: BoolWithAggregatesFilter<"admins"> | boolean
    deleted_at?: DateTimeNullableWithAggregatesFilter<"admins"> | Date | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"admins"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"admins"> | Date | string | null
  }

  export type cacheWhereInput = {
    AND?: cacheWhereInput | cacheWhereInput[]
    OR?: cacheWhereInput[]
    NOT?: cacheWhereInput | cacheWhereInput[]
    key?: StringFilter<"cache"> | string
    value?: StringFilter<"cache"> | string
    expiration?: IntFilter<"cache"> | number
  }

  export type cacheOrderByWithRelationInput = {
    key?: SortOrder
    value?: SortOrder
    expiration?: SortOrder
  }

  export type cacheWhereUniqueInput = Prisma.AtLeast<{
    key?: string
    AND?: cacheWhereInput | cacheWhereInput[]
    OR?: cacheWhereInput[]
    NOT?: cacheWhereInput | cacheWhereInput[]
    value?: StringFilter<"cache"> | string
    expiration?: IntFilter<"cache"> | number
  }, "key">

  export type cacheOrderByWithAggregationInput = {
    key?: SortOrder
    value?: SortOrder
    expiration?: SortOrder
    _count?: cacheCountOrderByAggregateInput
    _avg?: cacheAvgOrderByAggregateInput
    _max?: cacheMaxOrderByAggregateInput
    _min?: cacheMinOrderByAggregateInput
    _sum?: cacheSumOrderByAggregateInput
  }

  export type cacheScalarWhereWithAggregatesInput = {
    AND?: cacheScalarWhereWithAggregatesInput | cacheScalarWhereWithAggregatesInput[]
    OR?: cacheScalarWhereWithAggregatesInput[]
    NOT?: cacheScalarWhereWithAggregatesInput | cacheScalarWhereWithAggregatesInput[]
    key?: StringWithAggregatesFilter<"cache"> | string
    value?: StringWithAggregatesFilter<"cache"> | string
    expiration?: IntWithAggregatesFilter<"cache"> | number
  }

  export type cache_locksWhereInput = {
    AND?: cache_locksWhereInput | cache_locksWhereInput[]
    OR?: cache_locksWhereInput[]
    NOT?: cache_locksWhereInput | cache_locksWhereInput[]
    key?: StringFilter<"cache_locks"> | string
    owner?: StringFilter<"cache_locks"> | string
    expiration?: IntFilter<"cache_locks"> | number
  }

  export type cache_locksOrderByWithRelationInput = {
    key?: SortOrder
    owner?: SortOrder
    expiration?: SortOrder
  }

  export type cache_locksWhereUniqueInput = Prisma.AtLeast<{
    key?: string
    AND?: cache_locksWhereInput | cache_locksWhereInput[]
    OR?: cache_locksWhereInput[]
    NOT?: cache_locksWhereInput | cache_locksWhereInput[]
    owner?: StringFilter<"cache_locks"> | string
    expiration?: IntFilter<"cache_locks"> | number
  }, "key">

  export type cache_locksOrderByWithAggregationInput = {
    key?: SortOrder
    owner?: SortOrder
    expiration?: SortOrder
    _count?: cache_locksCountOrderByAggregateInput
    _avg?: cache_locksAvgOrderByAggregateInput
    _max?: cache_locksMaxOrderByAggregateInput
    _min?: cache_locksMinOrderByAggregateInput
    _sum?: cache_locksSumOrderByAggregateInput
  }

  export type cache_locksScalarWhereWithAggregatesInput = {
    AND?: cache_locksScalarWhereWithAggregatesInput | cache_locksScalarWhereWithAggregatesInput[]
    OR?: cache_locksScalarWhereWithAggregatesInput[]
    NOT?: cache_locksScalarWhereWithAggregatesInput | cache_locksScalarWhereWithAggregatesInput[]
    key?: StringWithAggregatesFilter<"cache_locks"> | string
    owner?: StringWithAggregatesFilter<"cache_locks"> | string
    expiration?: IntWithAggregatesFilter<"cache_locks"> | number
  }

  export type customer_subscriptionsWhereInput = {
    AND?: customer_subscriptionsWhereInput | customer_subscriptionsWhereInput[]
    OR?: customer_subscriptionsWhereInput[]
    NOT?: customer_subscriptionsWhereInput | customer_subscriptionsWhereInput[]
    id?: BigIntFilter<"customer_subscriptions"> | bigint | number
    customer_id?: BigIntFilter<"customer_subscriptions"> | bigint | number
    subscription_plan_id?: BigIntFilter<"customer_subscriptions"> | bigint | number
    order_id?: BigIntFilter<"customer_subscriptions"> | bigint | number
    start_date?: DateTimeFilter<"customer_subscriptions"> | Date | string
    end_date?: DateTimeFilter<"customer_subscriptions"> | Date | string
    status?: IntFilter<"customer_subscriptions"> | number
    created_at?: DateTimeNullableFilter<"customer_subscriptions"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"customer_subscriptions"> | Date | string | null
    customers?: XOR<CustomersScalarRelationFilter, customersWhereInput>
    orders?: XOR<OrdersScalarRelationFilter, ordersWhereInput>
    subscription_plans?: XOR<Subscription_plansScalarRelationFilter, subscription_plansWhereInput>
    subscription_usages?: Subscription_usagesListRelationFilter
  }

  export type customer_subscriptionsOrderByWithRelationInput = {
    id?: SortOrder
    customer_id?: SortOrder
    subscription_plan_id?: SortOrder
    order_id?: SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    status?: SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    customers?: customersOrderByWithRelationInput
    orders?: ordersOrderByWithRelationInput
    subscription_plans?: subscription_plansOrderByWithRelationInput
    subscription_usages?: subscription_usagesOrderByRelationAggregateInput
  }

  export type customer_subscriptionsWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    order_id?: bigint | number
    customer_id_subscription_plan_id_status?: customer_subscriptionsCustomer_idSubscription_plan_idStatusCompoundUniqueInput
    AND?: customer_subscriptionsWhereInput | customer_subscriptionsWhereInput[]
    OR?: customer_subscriptionsWhereInput[]
    NOT?: customer_subscriptionsWhereInput | customer_subscriptionsWhereInput[]
    customer_id?: BigIntFilter<"customer_subscriptions"> | bigint | number
    subscription_plan_id?: BigIntFilter<"customer_subscriptions"> | bigint | number
    start_date?: DateTimeFilter<"customer_subscriptions"> | Date | string
    end_date?: DateTimeFilter<"customer_subscriptions"> | Date | string
    status?: IntFilter<"customer_subscriptions"> | number
    created_at?: DateTimeNullableFilter<"customer_subscriptions"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"customer_subscriptions"> | Date | string | null
    customers?: XOR<CustomersScalarRelationFilter, customersWhereInput>
    orders?: XOR<OrdersScalarRelationFilter, ordersWhereInput>
    subscription_plans?: XOR<Subscription_plansScalarRelationFilter, subscription_plansWhereInput>
    subscription_usages?: Subscription_usagesListRelationFilter
  }, "id" | "order_id" | "customer_id_subscription_plan_id_status">

  export type customer_subscriptionsOrderByWithAggregationInput = {
    id?: SortOrder
    customer_id?: SortOrder
    subscription_plan_id?: SortOrder
    order_id?: SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    status?: SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: customer_subscriptionsCountOrderByAggregateInput
    _avg?: customer_subscriptionsAvgOrderByAggregateInput
    _max?: customer_subscriptionsMaxOrderByAggregateInput
    _min?: customer_subscriptionsMinOrderByAggregateInput
    _sum?: customer_subscriptionsSumOrderByAggregateInput
  }

  export type customer_subscriptionsScalarWhereWithAggregatesInput = {
    AND?: customer_subscriptionsScalarWhereWithAggregatesInput | customer_subscriptionsScalarWhereWithAggregatesInput[]
    OR?: customer_subscriptionsScalarWhereWithAggregatesInput[]
    NOT?: customer_subscriptionsScalarWhereWithAggregatesInput | customer_subscriptionsScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"customer_subscriptions"> | bigint | number
    customer_id?: BigIntWithAggregatesFilter<"customer_subscriptions"> | bigint | number
    subscription_plan_id?: BigIntWithAggregatesFilter<"customer_subscriptions"> | bigint | number
    order_id?: BigIntWithAggregatesFilter<"customer_subscriptions"> | bigint | number
    start_date?: DateTimeWithAggregatesFilter<"customer_subscriptions"> | Date | string
    end_date?: DateTimeWithAggregatesFilter<"customer_subscriptions"> | Date | string
    status?: IntWithAggregatesFilter<"customer_subscriptions"> | number
    created_at?: DateTimeNullableWithAggregatesFilter<"customer_subscriptions"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"customer_subscriptions"> | Date | string | null
  }

  export type customersWhereInput = {
    AND?: customersWhereInput | customersWhereInput[]
    OR?: customersWhereInput[]
    NOT?: customersWhereInput | customersWhereInput[]
    id?: BigIntFilter<"customers"> | bigint | number
    first_name?: StringNullableFilter<"customers"> | string | null
    last_name?: StringNullableFilter<"customers"> | string | null
    gender?: StringNullableFilter<"customers"> | string | null
    email?: StringNullableFilter<"customers"> | string | null
    mobile_number?: StringFilter<"customers"> | string
    password?: StringNullableFilter<"customers"> | string | null
    birthdate?: DateTimeNullableFilter<"customers"> | Date | string | null
    ssn?: StringNullableFilter<"customers"> | string | null
    otp_secret?: StringNullableFilter<"customers"> | string | null
    status?: IntFilter<"customers"> | number
    is_verified?: BoolFilter<"customers"> | boolean
    deleted_at?: DateTimeNullableFilter<"customers"> | Date | string | null
    created_at?: DateTimeNullableFilter<"customers"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"customers"> | Date | string | null
    customer_subscriptions?: Customer_subscriptionsListRelationFilter
    subscription_usages?: Subscription_usagesListRelationFilter
  }

  export type customersOrderByWithRelationInput = {
    id?: SortOrder
    first_name?: SortOrderInput | SortOrder
    last_name?: SortOrderInput | SortOrder
    gender?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    mobile_number?: SortOrder
    password?: SortOrderInput | SortOrder
    birthdate?: SortOrderInput | SortOrder
    ssn?: SortOrderInput | SortOrder
    otp_secret?: SortOrderInput | SortOrder
    status?: SortOrder
    is_verified?: SortOrder
    deleted_at?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    customer_subscriptions?: customer_subscriptionsOrderByRelationAggregateInput
    subscription_usages?: subscription_usagesOrderByRelationAggregateInput
  }

  export type customersWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    email_deleted_at?: customersEmailDeleted_atCompoundUniqueInput
    mobile_number_deleted_at?: customersMobile_numberDeleted_atCompoundUniqueInput
    ssn_deleted_at?: customersSsnDeleted_atCompoundUniqueInput
    AND?: customersWhereInput | customersWhereInput[]
    OR?: customersWhereInput[]
    NOT?: customersWhereInput | customersWhereInput[]
    first_name?: StringNullableFilter<"customers"> | string | null
    last_name?: StringNullableFilter<"customers"> | string | null
    gender?: StringNullableFilter<"customers"> | string | null
    email?: StringNullableFilter<"customers"> | string | null
    mobile_number?: StringFilter<"customers"> | string
    password?: StringNullableFilter<"customers"> | string | null
    birthdate?: DateTimeNullableFilter<"customers"> | Date | string | null
    ssn?: StringNullableFilter<"customers"> | string | null
    otp_secret?: StringNullableFilter<"customers"> | string | null
    status?: IntFilter<"customers"> | number
    is_verified?: BoolFilter<"customers"> | boolean
    deleted_at?: DateTimeNullableFilter<"customers"> | Date | string | null
    created_at?: DateTimeNullableFilter<"customers"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"customers"> | Date | string | null
    customer_subscriptions?: Customer_subscriptionsListRelationFilter
    subscription_usages?: Subscription_usagesListRelationFilter
  }, "id" | "email_deleted_at" | "mobile_number_deleted_at" | "ssn_deleted_at">

  export type customersOrderByWithAggregationInput = {
    id?: SortOrder
    first_name?: SortOrderInput | SortOrder
    last_name?: SortOrderInput | SortOrder
    gender?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    mobile_number?: SortOrder
    password?: SortOrderInput | SortOrder
    birthdate?: SortOrderInput | SortOrder
    ssn?: SortOrderInput | SortOrder
    otp_secret?: SortOrderInput | SortOrder
    status?: SortOrder
    is_verified?: SortOrder
    deleted_at?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: customersCountOrderByAggregateInput
    _avg?: customersAvgOrderByAggregateInput
    _max?: customersMaxOrderByAggregateInput
    _min?: customersMinOrderByAggregateInput
    _sum?: customersSumOrderByAggregateInput
  }

  export type customersScalarWhereWithAggregatesInput = {
    AND?: customersScalarWhereWithAggregatesInput | customersScalarWhereWithAggregatesInput[]
    OR?: customersScalarWhereWithAggregatesInput[]
    NOT?: customersScalarWhereWithAggregatesInput | customersScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"customers"> | bigint | number
    first_name?: StringNullableWithAggregatesFilter<"customers"> | string | null
    last_name?: StringNullableWithAggregatesFilter<"customers"> | string | null
    gender?: StringNullableWithAggregatesFilter<"customers"> | string | null
    email?: StringNullableWithAggregatesFilter<"customers"> | string | null
    mobile_number?: StringWithAggregatesFilter<"customers"> | string
    password?: StringNullableWithAggregatesFilter<"customers"> | string | null
    birthdate?: DateTimeNullableWithAggregatesFilter<"customers"> | Date | string | null
    ssn?: StringNullableWithAggregatesFilter<"customers"> | string | null
    otp_secret?: StringNullableWithAggregatesFilter<"customers"> | string | null
    status?: IntWithAggregatesFilter<"customers"> | number
    is_verified?: BoolWithAggregatesFilter<"customers"> | boolean
    deleted_at?: DateTimeNullableWithAggregatesFilter<"customers"> | Date | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"customers"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"customers"> | Date | string | null
  }

  export type failed_jobsWhereInput = {
    AND?: failed_jobsWhereInput | failed_jobsWhereInput[]
    OR?: failed_jobsWhereInput[]
    NOT?: failed_jobsWhereInput | failed_jobsWhereInput[]
    id?: BigIntFilter<"failed_jobs"> | bigint | number
    uuid?: StringFilter<"failed_jobs"> | string
    connection?: StringFilter<"failed_jobs"> | string
    queue?: StringFilter<"failed_jobs"> | string
    payload?: StringFilter<"failed_jobs"> | string
    exception?: StringFilter<"failed_jobs"> | string
    failed_at?: DateTimeFilter<"failed_jobs"> | Date | string
  }

  export type failed_jobsOrderByWithRelationInput = {
    id?: SortOrder
    uuid?: SortOrder
    connection?: SortOrder
    queue?: SortOrder
    payload?: SortOrder
    exception?: SortOrder
    failed_at?: SortOrder
  }

  export type failed_jobsWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    uuid?: string
    AND?: failed_jobsWhereInput | failed_jobsWhereInput[]
    OR?: failed_jobsWhereInput[]
    NOT?: failed_jobsWhereInput | failed_jobsWhereInput[]
    connection?: StringFilter<"failed_jobs"> | string
    queue?: StringFilter<"failed_jobs"> | string
    payload?: StringFilter<"failed_jobs"> | string
    exception?: StringFilter<"failed_jobs"> | string
    failed_at?: DateTimeFilter<"failed_jobs"> | Date | string
  }, "id" | "uuid">

  export type failed_jobsOrderByWithAggregationInput = {
    id?: SortOrder
    uuid?: SortOrder
    connection?: SortOrder
    queue?: SortOrder
    payload?: SortOrder
    exception?: SortOrder
    failed_at?: SortOrder
    _count?: failed_jobsCountOrderByAggregateInput
    _avg?: failed_jobsAvgOrderByAggregateInput
    _max?: failed_jobsMaxOrderByAggregateInput
    _min?: failed_jobsMinOrderByAggregateInput
    _sum?: failed_jobsSumOrderByAggregateInput
  }

  export type failed_jobsScalarWhereWithAggregatesInput = {
    AND?: failed_jobsScalarWhereWithAggregatesInput | failed_jobsScalarWhereWithAggregatesInput[]
    OR?: failed_jobsScalarWhereWithAggregatesInput[]
    NOT?: failed_jobsScalarWhereWithAggregatesInput | failed_jobsScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"failed_jobs"> | bigint | number
    uuid?: StringWithAggregatesFilter<"failed_jobs"> | string
    connection?: StringWithAggregatesFilter<"failed_jobs"> | string
    queue?: StringWithAggregatesFilter<"failed_jobs"> | string
    payload?: StringWithAggregatesFilter<"failed_jobs"> | string
    exception?: StringWithAggregatesFilter<"failed_jobs"> | string
    failed_at?: DateTimeWithAggregatesFilter<"failed_jobs"> | Date | string
  }

  export type job_batchesWhereInput = {
    AND?: job_batchesWhereInput | job_batchesWhereInput[]
    OR?: job_batchesWhereInput[]
    NOT?: job_batchesWhereInput | job_batchesWhereInput[]
    id?: StringFilter<"job_batches"> | string
    name?: StringFilter<"job_batches"> | string
    total_jobs?: IntFilter<"job_batches"> | number
    pending_jobs?: IntFilter<"job_batches"> | number
    failed_jobs?: IntFilter<"job_batches"> | number
    failed_job_ids?: StringFilter<"job_batches"> | string
    options?: StringNullableFilter<"job_batches"> | string | null
    cancelled_at?: IntNullableFilter<"job_batches"> | number | null
    created_at?: IntFilter<"job_batches"> | number
    finished_at?: IntNullableFilter<"job_batches"> | number | null
  }

  export type job_batchesOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    total_jobs?: SortOrder
    pending_jobs?: SortOrder
    failed_jobs?: SortOrder
    failed_job_ids?: SortOrder
    options?: SortOrderInput | SortOrder
    cancelled_at?: SortOrderInput | SortOrder
    created_at?: SortOrder
    finished_at?: SortOrderInput | SortOrder
  }

  export type job_batchesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: job_batchesWhereInput | job_batchesWhereInput[]
    OR?: job_batchesWhereInput[]
    NOT?: job_batchesWhereInput | job_batchesWhereInput[]
    name?: StringFilter<"job_batches"> | string
    total_jobs?: IntFilter<"job_batches"> | number
    pending_jobs?: IntFilter<"job_batches"> | number
    failed_jobs?: IntFilter<"job_batches"> | number
    failed_job_ids?: StringFilter<"job_batches"> | string
    options?: StringNullableFilter<"job_batches"> | string | null
    cancelled_at?: IntNullableFilter<"job_batches"> | number | null
    created_at?: IntFilter<"job_batches"> | number
    finished_at?: IntNullableFilter<"job_batches"> | number | null
  }, "id">

  export type job_batchesOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    total_jobs?: SortOrder
    pending_jobs?: SortOrder
    failed_jobs?: SortOrder
    failed_job_ids?: SortOrder
    options?: SortOrderInput | SortOrder
    cancelled_at?: SortOrderInput | SortOrder
    created_at?: SortOrder
    finished_at?: SortOrderInput | SortOrder
    _count?: job_batchesCountOrderByAggregateInput
    _avg?: job_batchesAvgOrderByAggregateInput
    _max?: job_batchesMaxOrderByAggregateInput
    _min?: job_batchesMinOrderByAggregateInput
    _sum?: job_batchesSumOrderByAggregateInput
  }

  export type job_batchesScalarWhereWithAggregatesInput = {
    AND?: job_batchesScalarWhereWithAggregatesInput | job_batchesScalarWhereWithAggregatesInput[]
    OR?: job_batchesScalarWhereWithAggregatesInput[]
    NOT?: job_batchesScalarWhereWithAggregatesInput | job_batchesScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"job_batches"> | string
    name?: StringWithAggregatesFilter<"job_batches"> | string
    total_jobs?: IntWithAggregatesFilter<"job_batches"> | number
    pending_jobs?: IntWithAggregatesFilter<"job_batches"> | number
    failed_jobs?: IntWithAggregatesFilter<"job_batches"> | number
    failed_job_ids?: StringWithAggregatesFilter<"job_batches"> | string
    options?: StringNullableWithAggregatesFilter<"job_batches"> | string | null
    cancelled_at?: IntNullableWithAggregatesFilter<"job_batches"> | number | null
    created_at?: IntWithAggregatesFilter<"job_batches"> | number
    finished_at?: IntNullableWithAggregatesFilter<"job_batches"> | number | null
  }

  export type jobsWhereInput = {
    AND?: jobsWhereInput | jobsWhereInput[]
    OR?: jobsWhereInput[]
    NOT?: jobsWhereInput | jobsWhereInput[]
    id?: BigIntFilter<"jobs"> | bigint | number
    queue?: StringFilter<"jobs"> | string
    payload?: StringFilter<"jobs"> | string
    attempts?: IntFilter<"jobs"> | number
    reserved_at?: IntNullableFilter<"jobs"> | number | null
    available_at?: IntFilter<"jobs"> | number
    created_at?: IntFilter<"jobs"> | number
  }

  export type jobsOrderByWithRelationInput = {
    id?: SortOrder
    queue?: SortOrder
    payload?: SortOrder
    attempts?: SortOrder
    reserved_at?: SortOrderInput | SortOrder
    available_at?: SortOrder
    created_at?: SortOrder
  }

  export type jobsWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: jobsWhereInput | jobsWhereInput[]
    OR?: jobsWhereInput[]
    NOT?: jobsWhereInput | jobsWhereInput[]
    queue?: StringFilter<"jobs"> | string
    payload?: StringFilter<"jobs"> | string
    attempts?: IntFilter<"jobs"> | number
    reserved_at?: IntNullableFilter<"jobs"> | number | null
    available_at?: IntFilter<"jobs"> | number
    created_at?: IntFilter<"jobs"> | number
  }, "id">

  export type jobsOrderByWithAggregationInput = {
    id?: SortOrder
    queue?: SortOrder
    payload?: SortOrder
    attempts?: SortOrder
    reserved_at?: SortOrderInput | SortOrder
    available_at?: SortOrder
    created_at?: SortOrder
    _count?: jobsCountOrderByAggregateInput
    _avg?: jobsAvgOrderByAggregateInput
    _max?: jobsMaxOrderByAggregateInput
    _min?: jobsMinOrderByAggregateInput
    _sum?: jobsSumOrderByAggregateInput
  }

  export type jobsScalarWhereWithAggregatesInput = {
    AND?: jobsScalarWhereWithAggregatesInput | jobsScalarWhereWithAggregatesInput[]
    OR?: jobsScalarWhereWithAggregatesInput[]
    NOT?: jobsScalarWhereWithAggregatesInput | jobsScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"jobs"> | bigint | number
    queue?: StringWithAggregatesFilter<"jobs"> | string
    payload?: StringWithAggregatesFilter<"jobs"> | string
    attempts?: IntWithAggregatesFilter<"jobs"> | number
    reserved_at?: IntNullableWithAggregatesFilter<"jobs"> | number | null
    available_at?: IntWithAggregatesFilter<"jobs"> | number
    created_at?: IntWithAggregatesFilter<"jobs"> | number
  }

  export type migrationsWhereInput = {
    AND?: migrationsWhereInput | migrationsWhereInput[]
    OR?: migrationsWhereInput[]
    NOT?: migrationsWhereInput | migrationsWhereInput[]
    id?: IntFilter<"migrations"> | number
    migration?: StringFilter<"migrations"> | string
    batch?: IntFilter<"migrations"> | number
  }

  export type migrationsOrderByWithRelationInput = {
    id?: SortOrder
    migration?: SortOrder
    batch?: SortOrder
  }

  export type migrationsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: migrationsWhereInput | migrationsWhereInput[]
    OR?: migrationsWhereInput[]
    NOT?: migrationsWhereInput | migrationsWhereInput[]
    migration?: StringFilter<"migrations"> | string
    batch?: IntFilter<"migrations"> | number
  }, "id">

  export type migrationsOrderByWithAggregationInput = {
    id?: SortOrder
    migration?: SortOrder
    batch?: SortOrder
    _count?: migrationsCountOrderByAggregateInput
    _avg?: migrationsAvgOrderByAggregateInput
    _max?: migrationsMaxOrderByAggregateInput
    _min?: migrationsMinOrderByAggregateInput
    _sum?: migrationsSumOrderByAggregateInput
  }

  export type migrationsScalarWhereWithAggregatesInput = {
    AND?: migrationsScalarWhereWithAggregatesInput | migrationsScalarWhereWithAggregatesInput[]
    OR?: migrationsScalarWhereWithAggregatesInput[]
    NOT?: migrationsScalarWhereWithAggregatesInput | migrationsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"migrations"> | number
    migration?: StringWithAggregatesFilter<"migrations"> | string
    batch?: IntWithAggregatesFilter<"migrations"> | number
  }

  export type model_has_permissionsWhereInput = {
    AND?: model_has_permissionsWhereInput | model_has_permissionsWhereInput[]
    OR?: model_has_permissionsWhereInput[]
    NOT?: model_has_permissionsWhereInput | model_has_permissionsWhereInput[]
    permission_id?: BigIntFilter<"model_has_permissions"> | bigint | number
    model_type?: StringFilter<"model_has_permissions"> | string
    model_id?: BigIntFilter<"model_has_permissions"> | bigint | number
    permissions?: XOR<PermissionsScalarRelationFilter, permissionsWhereInput>
  }

  export type model_has_permissionsOrderByWithRelationInput = {
    permission_id?: SortOrder
    model_type?: SortOrder
    model_id?: SortOrder
    permissions?: permissionsOrderByWithRelationInput
  }

  export type model_has_permissionsWhereUniqueInput = Prisma.AtLeast<{
    permission_id_model_id_model_type?: model_has_permissionsPermission_idModel_idModel_typeCompoundUniqueInput
    AND?: model_has_permissionsWhereInput | model_has_permissionsWhereInput[]
    OR?: model_has_permissionsWhereInput[]
    NOT?: model_has_permissionsWhereInput | model_has_permissionsWhereInput[]
    permission_id?: BigIntFilter<"model_has_permissions"> | bigint | number
    model_type?: StringFilter<"model_has_permissions"> | string
    model_id?: BigIntFilter<"model_has_permissions"> | bigint | number
    permissions?: XOR<PermissionsScalarRelationFilter, permissionsWhereInput>
  }, "permission_id_model_id_model_type">

  export type model_has_permissionsOrderByWithAggregationInput = {
    permission_id?: SortOrder
    model_type?: SortOrder
    model_id?: SortOrder
    _count?: model_has_permissionsCountOrderByAggregateInput
    _avg?: model_has_permissionsAvgOrderByAggregateInput
    _max?: model_has_permissionsMaxOrderByAggregateInput
    _min?: model_has_permissionsMinOrderByAggregateInput
    _sum?: model_has_permissionsSumOrderByAggregateInput
  }

  export type model_has_permissionsScalarWhereWithAggregatesInput = {
    AND?: model_has_permissionsScalarWhereWithAggregatesInput | model_has_permissionsScalarWhereWithAggregatesInput[]
    OR?: model_has_permissionsScalarWhereWithAggregatesInput[]
    NOT?: model_has_permissionsScalarWhereWithAggregatesInput | model_has_permissionsScalarWhereWithAggregatesInput[]
    permission_id?: BigIntWithAggregatesFilter<"model_has_permissions"> | bigint | number
    model_type?: StringWithAggregatesFilter<"model_has_permissions"> | string
    model_id?: BigIntWithAggregatesFilter<"model_has_permissions"> | bigint | number
  }

  export type model_has_rolesWhereInput = {
    AND?: model_has_rolesWhereInput | model_has_rolesWhereInput[]
    OR?: model_has_rolesWhereInput[]
    NOT?: model_has_rolesWhereInput | model_has_rolesWhereInput[]
    role_id?: BigIntFilter<"model_has_roles"> | bigint | number
    model_type?: StringFilter<"model_has_roles"> | string
    model_id?: BigIntFilter<"model_has_roles"> | bigint | number
    roles?: XOR<RolesScalarRelationFilter, rolesWhereInput>
  }

  export type model_has_rolesOrderByWithRelationInput = {
    role_id?: SortOrder
    model_type?: SortOrder
    model_id?: SortOrder
    roles?: rolesOrderByWithRelationInput
  }

  export type model_has_rolesWhereUniqueInput = Prisma.AtLeast<{
    role_id_model_id_model_type?: model_has_rolesRole_idModel_idModel_typeCompoundUniqueInput
    AND?: model_has_rolesWhereInput | model_has_rolesWhereInput[]
    OR?: model_has_rolesWhereInput[]
    NOT?: model_has_rolesWhereInput | model_has_rolesWhereInput[]
    role_id?: BigIntFilter<"model_has_roles"> | bigint | number
    model_type?: StringFilter<"model_has_roles"> | string
    model_id?: BigIntFilter<"model_has_roles"> | bigint | number
    roles?: XOR<RolesScalarRelationFilter, rolesWhereInput>
  }, "role_id_model_id_model_type">

  export type model_has_rolesOrderByWithAggregationInput = {
    role_id?: SortOrder
    model_type?: SortOrder
    model_id?: SortOrder
    _count?: model_has_rolesCountOrderByAggregateInput
    _avg?: model_has_rolesAvgOrderByAggregateInput
    _max?: model_has_rolesMaxOrderByAggregateInput
    _min?: model_has_rolesMinOrderByAggregateInput
    _sum?: model_has_rolesSumOrderByAggregateInput
  }

  export type model_has_rolesScalarWhereWithAggregatesInput = {
    AND?: model_has_rolesScalarWhereWithAggregatesInput | model_has_rolesScalarWhereWithAggregatesInput[]
    OR?: model_has_rolesScalarWhereWithAggregatesInput[]
    NOT?: model_has_rolesScalarWhereWithAggregatesInput | model_has_rolesScalarWhereWithAggregatesInput[]
    role_id?: BigIntWithAggregatesFilter<"model_has_roles"> | bigint | number
    model_type?: StringWithAggregatesFilter<"model_has_roles"> | string
    model_id?: BigIntWithAggregatesFilter<"model_has_roles"> | bigint | number
  }

  export type oauth_access_tokensWhereInput = {
    AND?: oauth_access_tokensWhereInput | oauth_access_tokensWhereInput[]
    OR?: oauth_access_tokensWhereInput[]
    NOT?: oauth_access_tokensWhereInput | oauth_access_tokensWhereInput[]
    id?: StringFilter<"oauth_access_tokens"> | string
    user_id?: BigIntNullableFilter<"oauth_access_tokens"> | bigint | number | null
    client_id?: BigIntFilter<"oauth_access_tokens"> | bigint | number
    name?: StringNullableFilter<"oauth_access_tokens"> | string | null
    scopes?: StringNullableFilter<"oauth_access_tokens"> | string | null
    revoked?: BoolFilter<"oauth_access_tokens"> | boolean
    created_at?: DateTimeNullableFilter<"oauth_access_tokens"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"oauth_access_tokens"> | Date | string | null
    expires_at?: DateTimeNullableFilter<"oauth_access_tokens"> | Date | string | null
  }

  export type oauth_access_tokensOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrderInput | SortOrder
    client_id?: SortOrder
    name?: SortOrderInput | SortOrder
    scopes?: SortOrderInput | SortOrder
    revoked?: SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    expires_at?: SortOrderInput | SortOrder
  }

  export type oauth_access_tokensWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: oauth_access_tokensWhereInput | oauth_access_tokensWhereInput[]
    OR?: oauth_access_tokensWhereInput[]
    NOT?: oauth_access_tokensWhereInput | oauth_access_tokensWhereInput[]
    user_id?: BigIntNullableFilter<"oauth_access_tokens"> | bigint | number | null
    client_id?: BigIntFilter<"oauth_access_tokens"> | bigint | number
    name?: StringNullableFilter<"oauth_access_tokens"> | string | null
    scopes?: StringNullableFilter<"oauth_access_tokens"> | string | null
    revoked?: BoolFilter<"oauth_access_tokens"> | boolean
    created_at?: DateTimeNullableFilter<"oauth_access_tokens"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"oauth_access_tokens"> | Date | string | null
    expires_at?: DateTimeNullableFilter<"oauth_access_tokens"> | Date | string | null
  }, "id">

  export type oauth_access_tokensOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrderInput | SortOrder
    client_id?: SortOrder
    name?: SortOrderInput | SortOrder
    scopes?: SortOrderInput | SortOrder
    revoked?: SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    expires_at?: SortOrderInput | SortOrder
    _count?: oauth_access_tokensCountOrderByAggregateInput
    _avg?: oauth_access_tokensAvgOrderByAggregateInput
    _max?: oauth_access_tokensMaxOrderByAggregateInput
    _min?: oauth_access_tokensMinOrderByAggregateInput
    _sum?: oauth_access_tokensSumOrderByAggregateInput
  }

  export type oauth_access_tokensScalarWhereWithAggregatesInput = {
    AND?: oauth_access_tokensScalarWhereWithAggregatesInput | oauth_access_tokensScalarWhereWithAggregatesInput[]
    OR?: oauth_access_tokensScalarWhereWithAggregatesInput[]
    NOT?: oauth_access_tokensScalarWhereWithAggregatesInput | oauth_access_tokensScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"oauth_access_tokens"> | string
    user_id?: BigIntNullableWithAggregatesFilter<"oauth_access_tokens"> | bigint | number | null
    client_id?: BigIntWithAggregatesFilter<"oauth_access_tokens"> | bigint | number
    name?: StringNullableWithAggregatesFilter<"oauth_access_tokens"> | string | null
    scopes?: StringNullableWithAggregatesFilter<"oauth_access_tokens"> | string | null
    revoked?: BoolWithAggregatesFilter<"oauth_access_tokens"> | boolean
    created_at?: DateTimeNullableWithAggregatesFilter<"oauth_access_tokens"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"oauth_access_tokens"> | Date | string | null
    expires_at?: DateTimeNullableWithAggregatesFilter<"oauth_access_tokens"> | Date | string | null
  }

  export type oauth_auth_codesWhereInput = {
    AND?: oauth_auth_codesWhereInput | oauth_auth_codesWhereInput[]
    OR?: oauth_auth_codesWhereInput[]
    NOT?: oauth_auth_codesWhereInput | oauth_auth_codesWhereInput[]
    id?: StringFilter<"oauth_auth_codes"> | string
    user_id?: BigIntFilter<"oauth_auth_codes"> | bigint | number
    client_id?: BigIntFilter<"oauth_auth_codes"> | bigint | number
    scopes?: StringNullableFilter<"oauth_auth_codes"> | string | null
    revoked?: BoolFilter<"oauth_auth_codes"> | boolean
    expires_at?: DateTimeNullableFilter<"oauth_auth_codes"> | Date | string | null
  }

  export type oauth_auth_codesOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    client_id?: SortOrder
    scopes?: SortOrderInput | SortOrder
    revoked?: SortOrder
    expires_at?: SortOrderInput | SortOrder
  }

  export type oauth_auth_codesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: oauth_auth_codesWhereInput | oauth_auth_codesWhereInput[]
    OR?: oauth_auth_codesWhereInput[]
    NOT?: oauth_auth_codesWhereInput | oauth_auth_codesWhereInput[]
    user_id?: BigIntFilter<"oauth_auth_codes"> | bigint | number
    client_id?: BigIntFilter<"oauth_auth_codes"> | bigint | number
    scopes?: StringNullableFilter<"oauth_auth_codes"> | string | null
    revoked?: BoolFilter<"oauth_auth_codes"> | boolean
    expires_at?: DateTimeNullableFilter<"oauth_auth_codes"> | Date | string | null
  }, "id">

  export type oauth_auth_codesOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    client_id?: SortOrder
    scopes?: SortOrderInput | SortOrder
    revoked?: SortOrder
    expires_at?: SortOrderInput | SortOrder
    _count?: oauth_auth_codesCountOrderByAggregateInput
    _avg?: oauth_auth_codesAvgOrderByAggregateInput
    _max?: oauth_auth_codesMaxOrderByAggregateInput
    _min?: oauth_auth_codesMinOrderByAggregateInput
    _sum?: oauth_auth_codesSumOrderByAggregateInput
  }

  export type oauth_auth_codesScalarWhereWithAggregatesInput = {
    AND?: oauth_auth_codesScalarWhereWithAggregatesInput | oauth_auth_codesScalarWhereWithAggregatesInput[]
    OR?: oauth_auth_codesScalarWhereWithAggregatesInput[]
    NOT?: oauth_auth_codesScalarWhereWithAggregatesInput | oauth_auth_codesScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"oauth_auth_codes"> | string
    user_id?: BigIntWithAggregatesFilter<"oauth_auth_codes"> | bigint | number
    client_id?: BigIntWithAggregatesFilter<"oauth_auth_codes"> | bigint | number
    scopes?: StringNullableWithAggregatesFilter<"oauth_auth_codes"> | string | null
    revoked?: BoolWithAggregatesFilter<"oauth_auth_codes"> | boolean
    expires_at?: DateTimeNullableWithAggregatesFilter<"oauth_auth_codes"> | Date | string | null
  }

  export type oauth_clientsWhereInput = {
    AND?: oauth_clientsWhereInput | oauth_clientsWhereInput[]
    OR?: oauth_clientsWhereInput[]
    NOT?: oauth_clientsWhereInput | oauth_clientsWhereInput[]
    id?: BigIntFilter<"oauth_clients"> | bigint | number
    user_id?: BigIntNullableFilter<"oauth_clients"> | bigint | number | null
    name?: StringFilter<"oauth_clients"> | string
    secret?: StringNullableFilter<"oauth_clients"> | string | null
    provider?: StringNullableFilter<"oauth_clients"> | string | null
    redirect?: StringFilter<"oauth_clients"> | string
    personal_access_client?: BoolFilter<"oauth_clients"> | boolean
    password_client?: BoolFilter<"oauth_clients"> | boolean
    revoked?: BoolFilter<"oauth_clients"> | boolean
    created_at?: DateTimeNullableFilter<"oauth_clients"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"oauth_clients"> | Date | string | null
  }

  export type oauth_clientsOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrderInput | SortOrder
    name?: SortOrder
    secret?: SortOrderInput | SortOrder
    provider?: SortOrderInput | SortOrder
    redirect?: SortOrder
    personal_access_client?: SortOrder
    password_client?: SortOrder
    revoked?: SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
  }

  export type oauth_clientsWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: oauth_clientsWhereInput | oauth_clientsWhereInput[]
    OR?: oauth_clientsWhereInput[]
    NOT?: oauth_clientsWhereInput | oauth_clientsWhereInput[]
    user_id?: BigIntNullableFilter<"oauth_clients"> | bigint | number | null
    name?: StringFilter<"oauth_clients"> | string
    secret?: StringNullableFilter<"oauth_clients"> | string | null
    provider?: StringNullableFilter<"oauth_clients"> | string | null
    redirect?: StringFilter<"oauth_clients"> | string
    personal_access_client?: BoolFilter<"oauth_clients"> | boolean
    password_client?: BoolFilter<"oauth_clients"> | boolean
    revoked?: BoolFilter<"oauth_clients"> | boolean
    created_at?: DateTimeNullableFilter<"oauth_clients"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"oauth_clients"> | Date | string | null
  }, "id">

  export type oauth_clientsOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrderInput | SortOrder
    name?: SortOrder
    secret?: SortOrderInput | SortOrder
    provider?: SortOrderInput | SortOrder
    redirect?: SortOrder
    personal_access_client?: SortOrder
    password_client?: SortOrder
    revoked?: SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: oauth_clientsCountOrderByAggregateInput
    _avg?: oauth_clientsAvgOrderByAggregateInput
    _max?: oauth_clientsMaxOrderByAggregateInput
    _min?: oauth_clientsMinOrderByAggregateInput
    _sum?: oauth_clientsSumOrderByAggregateInput
  }

  export type oauth_clientsScalarWhereWithAggregatesInput = {
    AND?: oauth_clientsScalarWhereWithAggregatesInput | oauth_clientsScalarWhereWithAggregatesInput[]
    OR?: oauth_clientsScalarWhereWithAggregatesInput[]
    NOT?: oauth_clientsScalarWhereWithAggregatesInput | oauth_clientsScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"oauth_clients"> | bigint | number
    user_id?: BigIntNullableWithAggregatesFilter<"oauth_clients"> | bigint | number | null
    name?: StringWithAggregatesFilter<"oauth_clients"> | string
    secret?: StringNullableWithAggregatesFilter<"oauth_clients"> | string | null
    provider?: StringNullableWithAggregatesFilter<"oauth_clients"> | string | null
    redirect?: StringWithAggregatesFilter<"oauth_clients"> | string
    personal_access_client?: BoolWithAggregatesFilter<"oauth_clients"> | boolean
    password_client?: BoolWithAggregatesFilter<"oauth_clients"> | boolean
    revoked?: BoolWithAggregatesFilter<"oauth_clients"> | boolean
    created_at?: DateTimeNullableWithAggregatesFilter<"oauth_clients"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"oauth_clients"> | Date | string | null
  }

  export type oauth_personal_access_clientsWhereInput = {
    AND?: oauth_personal_access_clientsWhereInput | oauth_personal_access_clientsWhereInput[]
    OR?: oauth_personal_access_clientsWhereInput[]
    NOT?: oauth_personal_access_clientsWhereInput | oauth_personal_access_clientsWhereInput[]
    id?: BigIntFilter<"oauth_personal_access_clients"> | bigint | number
    client_id?: BigIntFilter<"oauth_personal_access_clients"> | bigint | number
    created_at?: DateTimeNullableFilter<"oauth_personal_access_clients"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"oauth_personal_access_clients"> | Date | string | null
  }

  export type oauth_personal_access_clientsOrderByWithRelationInput = {
    id?: SortOrder
    client_id?: SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
  }

  export type oauth_personal_access_clientsWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: oauth_personal_access_clientsWhereInput | oauth_personal_access_clientsWhereInput[]
    OR?: oauth_personal_access_clientsWhereInput[]
    NOT?: oauth_personal_access_clientsWhereInput | oauth_personal_access_clientsWhereInput[]
    client_id?: BigIntFilter<"oauth_personal_access_clients"> | bigint | number
    created_at?: DateTimeNullableFilter<"oauth_personal_access_clients"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"oauth_personal_access_clients"> | Date | string | null
  }, "id">

  export type oauth_personal_access_clientsOrderByWithAggregationInput = {
    id?: SortOrder
    client_id?: SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: oauth_personal_access_clientsCountOrderByAggregateInput
    _avg?: oauth_personal_access_clientsAvgOrderByAggregateInput
    _max?: oauth_personal_access_clientsMaxOrderByAggregateInput
    _min?: oauth_personal_access_clientsMinOrderByAggregateInput
    _sum?: oauth_personal_access_clientsSumOrderByAggregateInput
  }

  export type oauth_personal_access_clientsScalarWhereWithAggregatesInput = {
    AND?: oauth_personal_access_clientsScalarWhereWithAggregatesInput | oauth_personal_access_clientsScalarWhereWithAggregatesInput[]
    OR?: oauth_personal_access_clientsScalarWhereWithAggregatesInput[]
    NOT?: oauth_personal_access_clientsScalarWhereWithAggregatesInput | oauth_personal_access_clientsScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"oauth_personal_access_clients"> | bigint | number
    client_id?: BigIntWithAggregatesFilter<"oauth_personal_access_clients"> | bigint | number
    created_at?: DateTimeNullableWithAggregatesFilter<"oauth_personal_access_clients"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"oauth_personal_access_clients"> | Date | string | null
  }

  export type oauth_refresh_tokensWhereInput = {
    AND?: oauth_refresh_tokensWhereInput | oauth_refresh_tokensWhereInput[]
    OR?: oauth_refresh_tokensWhereInput[]
    NOT?: oauth_refresh_tokensWhereInput | oauth_refresh_tokensWhereInput[]
    id?: StringFilter<"oauth_refresh_tokens"> | string
    access_token_id?: StringFilter<"oauth_refresh_tokens"> | string
    revoked?: BoolFilter<"oauth_refresh_tokens"> | boolean
    expires_at?: DateTimeNullableFilter<"oauth_refresh_tokens"> | Date | string | null
  }

  export type oauth_refresh_tokensOrderByWithRelationInput = {
    id?: SortOrder
    access_token_id?: SortOrder
    revoked?: SortOrder
    expires_at?: SortOrderInput | SortOrder
  }

  export type oauth_refresh_tokensWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: oauth_refresh_tokensWhereInput | oauth_refresh_tokensWhereInput[]
    OR?: oauth_refresh_tokensWhereInput[]
    NOT?: oauth_refresh_tokensWhereInput | oauth_refresh_tokensWhereInput[]
    access_token_id?: StringFilter<"oauth_refresh_tokens"> | string
    revoked?: BoolFilter<"oauth_refresh_tokens"> | boolean
    expires_at?: DateTimeNullableFilter<"oauth_refresh_tokens"> | Date | string | null
  }, "id">

  export type oauth_refresh_tokensOrderByWithAggregationInput = {
    id?: SortOrder
    access_token_id?: SortOrder
    revoked?: SortOrder
    expires_at?: SortOrderInput | SortOrder
    _count?: oauth_refresh_tokensCountOrderByAggregateInput
    _max?: oauth_refresh_tokensMaxOrderByAggregateInput
    _min?: oauth_refresh_tokensMinOrderByAggregateInput
  }

  export type oauth_refresh_tokensScalarWhereWithAggregatesInput = {
    AND?: oauth_refresh_tokensScalarWhereWithAggregatesInput | oauth_refresh_tokensScalarWhereWithAggregatesInput[]
    OR?: oauth_refresh_tokensScalarWhereWithAggregatesInput[]
    NOT?: oauth_refresh_tokensScalarWhereWithAggregatesInput | oauth_refresh_tokensScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"oauth_refresh_tokens"> | string
    access_token_id?: StringWithAggregatesFilter<"oauth_refresh_tokens"> | string
    revoked?: BoolWithAggregatesFilter<"oauth_refresh_tokens"> | boolean
    expires_at?: DateTimeNullableWithAggregatesFilter<"oauth_refresh_tokens"> | Date | string | null
  }

  export type offer_categoriesWhereInput = {
    AND?: offer_categoriesWhereInput | offer_categoriesWhereInput[]
    OR?: offer_categoriesWhereInput[]
    NOT?: offer_categoriesWhereInput | offer_categoriesWhereInput[]
    id?: BigIntFilter<"offer_categories"> | bigint | number
    title?: StringFilter<"offer_categories"> | string
    icon?: StringNullableFilter<"offer_categories"> | string | null
    description?: StringNullableFilter<"offer_categories"> | string | null
    status?: IntFilter<"offer_categories"> | number
    created_at?: DateTimeNullableFilter<"offer_categories"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"offer_categories"> | Date | string | null
    offers?: OffersListRelationFilter
    providers?: ProvidersListRelationFilter
  }

  export type offer_categoriesOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    icon?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    status?: SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    offers?: offersOrderByRelationAggregateInput
    providers?: providersOrderByRelationAggregateInput
  }

  export type offer_categoriesWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    title?: string
    AND?: offer_categoriesWhereInput | offer_categoriesWhereInput[]
    OR?: offer_categoriesWhereInput[]
    NOT?: offer_categoriesWhereInput | offer_categoriesWhereInput[]
    icon?: StringNullableFilter<"offer_categories"> | string | null
    description?: StringNullableFilter<"offer_categories"> | string | null
    status?: IntFilter<"offer_categories"> | number
    created_at?: DateTimeNullableFilter<"offer_categories"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"offer_categories"> | Date | string | null
    offers?: OffersListRelationFilter
    providers?: ProvidersListRelationFilter
  }, "id" | "title">

  export type offer_categoriesOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    icon?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    status?: SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: offer_categoriesCountOrderByAggregateInput
    _avg?: offer_categoriesAvgOrderByAggregateInput
    _max?: offer_categoriesMaxOrderByAggregateInput
    _min?: offer_categoriesMinOrderByAggregateInput
    _sum?: offer_categoriesSumOrderByAggregateInput
  }

  export type offer_categoriesScalarWhereWithAggregatesInput = {
    AND?: offer_categoriesScalarWhereWithAggregatesInput | offer_categoriesScalarWhereWithAggregatesInput[]
    OR?: offer_categoriesScalarWhereWithAggregatesInput[]
    NOT?: offer_categoriesScalarWhereWithAggregatesInput | offer_categoriesScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"offer_categories"> | bigint | number
    title?: StringWithAggregatesFilter<"offer_categories"> | string
    icon?: StringNullableWithAggregatesFilter<"offer_categories"> | string | null
    description?: StringNullableWithAggregatesFilter<"offer_categories"> | string | null
    status?: IntWithAggregatesFilter<"offer_categories"> | number
    created_at?: DateTimeNullableWithAggregatesFilter<"offer_categories"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"offer_categories"> | Date | string | null
  }

  export type offersWhereInput = {
    AND?: offersWhereInput | offersWhereInput[]
    OR?: offersWhereInput[]
    NOT?: offersWhereInput | offersWhereInput[]
    id?: BigIntFilter<"offers"> | bigint | number
    category_id?: BigIntFilter<"offers"> | bigint | number
    title?: StringFilter<"offers"> | string
    icon?: StringNullableFilter<"offers"> | string | null
    description?: StringNullableFilter<"offers"> | string | null
    price?: DecimalNullableFilter<"offers"> | Decimal | DecimalJsLike | number | string | null
    created_at?: DateTimeNullableFilter<"offers"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"offers"> | Date | string | null
    offer_categories?: XOR<Offer_categoriesScalarRelationFilter, offer_categoriesWhereInput>
    provider_offers?: Provider_offersListRelationFilter
    subscription_plan_offers?: Subscription_plan_offersListRelationFilter
    subscription_usages?: Subscription_usagesListRelationFilter
  }

  export type offersOrderByWithRelationInput = {
    id?: SortOrder
    category_id?: SortOrder
    title?: SortOrder
    icon?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    price?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    offer_categories?: offer_categoriesOrderByWithRelationInput
    provider_offers?: provider_offersOrderByRelationAggregateInput
    subscription_plan_offers?: subscription_plan_offersOrderByRelationAggregateInput
    subscription_usages?: subscription_usagesOrderByRelationAggregateInput
  }

  export type offersWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: offersWhereInput | offersWhereInput[]
    OR?: offersWhereInput[]
    NOT?: offersWhereInput | offersWhereInput[]
    category_id?: BigIntFilter<"offers"> | bigint | number
    title?: StringFilter<"offers"> | string
    icon?: StringNullableFilter<"offers"> | string | null
    description?: StringNullableFilter<"offers"> | string | null
    price?: DecimalNullableFilter<"offers"> | Decimal | DecimalJsLike | number | string | null
    created_at?: DateTimeNullableFilter<"offers"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"offers"> | Date | string | null
    offer_categories?: XOR<Offer_categoriesScalarRelationFilter, offer_categoriesWhereInput>
    provider_offers?: Provider_offersListRelationFilter
    subscription_plan_offers?: Subscription_plan_offersListRelationFilter
    subscription_usages?: Subscription_usagesListRelationFilter
  }, "id">

  export type offersOrderByWithAggregationInput = {
    id?: SortOrder
    category_id?: SortOrder
    title?: SortOrder
    icon?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    price?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: offersCountOrderByAggregateInput
    _avg?: offersAvgOrderByAggregateInput
    _max?: offersMaxOrderByAggregateInput
    _min?: offersMinOrderByAggregateInput
    _sum?: offersSumOrderByAggregateInput
  }

  export type offersScalarWhereWithAggregatesInput = {
    AND?: offersScalarWhereWithAggregatesInput | offersScalarWhereWithAggregatesInput[]
    OR?: offersScalarWhereWithAggregatesInput[]
    NOT?: offersScalarWhereWithAggregatesInput | offersScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"offers"> | bigint | number
    category_id?: BigIntWithAggregatesFilter<"offers"> | bigint | number
    title?: StringWithAggregatesFilter<"offers"> | string
    icon?: StringNullableWithAggregatesFilter<"offers"> | string | null
    description?: StringNullableWithAggregatesFilter<"offers"> | string | null
    price?: DecimalNullableWithAggregatesFilter<"offers"> | Decimal | DecimalJsLike | number | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"offers"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"offers"> | Date | string | null
  }

  export type ordersWhereInput = {
    AND?: ordersWhereInput | ordersWhereInput[]
    OR?: ordersWhereInput[]
    NOT?: ordersWhereInput | ordersWhereInput[]
    id?: BigIntFilter<"orders"> | bigint | number
    buyer_type?: StringFilter<"orders"> | string
    buyer_id?: BigIntFilter<"orders"> | bigint | number
    purchasable_type?: StringFilter<"orders"> | string
    purchasable_id?: BigIntFilter<"orders"> | bigint | number
    amount?: DecimalFilter<"orders"> | Decimal | DecimalJsLike | number | string
    status?: IntFilter<"orders"> | number
    created_at?: DateTimeNullableFilter<"orders"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"orders"> | Date | string | null
    tracking_code?: StringNullableFilter<"orders"> | string | null
    customer_subscriptions?: XOR<Customer_subscriptionsNullableScalarRelationFilter, customer_subscriptionsWhereInput> | null
    payments?: PaymentsListRelationFilter
  }

  export type ordersOrderByWithRelationInput = {
    id?: SortOrder
    buyer_type?: SortOrder
    buyer_id?: SortOrder
    purchasable_type?: SortOrder
    purchasable_id?: SortOrder
    amount?: SortOrder
    status?: SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    tracking_code?: SortOrderInput | SortOrder
    customer_subscriptions?: customer_subscriptionsOrderByWithRelationInput
    payments?: paymentsOrderByRelationAggregateInput
  }

  export type ordersWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: ordersWhereInput | ordersWhereInput[]
    OR?: ordersWhereInput[]
    NOT?: ordersWhereInput | ordersWhereInput[]
    buyer_type?: StringFilter<"orders"> | string
    buyer_id?: BigIntFilter<"orders"> | bigint | number
    purchasable_type?: StringFilter<"orders"> | string
    purchasable_id?: BigIntFilter<"orders"> | bigint | number
    amount?: DecimalFilter<"orders"> | Decimal | DecimalJsLike | number | string
    status?: IntFilter<"orders"> | number
    created_at?: DateTimeNullableFilter<"orders"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"orders"> | Date | string | null
    tracking_code?: StringNullableFilter<"orders"> | string | null
    customer_subscriptions?: XOR<Customer_subscriptionsNullableScalarRelationFilter, customer_subscriptionsWhereInput> | null
    payments?: PaymentsListRelationFilter
  }, "id">

  export type ordersOrderByWithAggregationInput = {
    id?: SortOrder
    buyer_type?: SortOrder
    buyer_id?: SortOrder
    purchasable_type?: SortOrder
    purchasable_id?: SortOrder
    amount?: SortOrder
    status?: SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    tracking_code?: SortOrderInput | SortOrder
    _count?: ordersCountOrderByAggregateInput
    _avg?: ordersAvgOrderByAggregateInput
    _max?: ordersMaxOrderByAggregateInput
    _min?: ordersMinOrderByAggregateInput
    _sum?: ordersSumOrderByAggregateInput
  }

  export type ordersScalarWhereWithAggregatesInput = {
    AND?: ordersScalarWhereWithAggregatesInput | ordersScalarWhereWithAggregatesInput[]
    OR?: ordersScalarWhereWithAggregatesInput[]
    NOT?: ordersScalarWhereWithAggregatesInput | ordersScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"orders"> | bigint | number
    buyer_type?: StringWithAggregatesFilter<"orders"> | string
    buyer_id?: BigIntWithAggregatesFilter<"orders"> | bigint | number
    purchasable_type?: StringWithAggregatesFilter<"orders"> | string
    purchasable_id?: BigIntWithAggregatesFilter<"orders"> | bigint | number
    amount?: DecimalWithAggregatesFilter<"orders"> | Decimal | DecimalJsLike | number | string
    status?: IntWithAggregatesFilter<"orders"> | number
    created_at?: DateTimeNullableWithAggregatesFilter<"orders"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"orders"> | Date | string | null
    tracking_code?: StringNullableWithAggregatesFilter<"orders"> | string | null
  }

  export type otpsWhereInput = {
    AND?: otpsWhereInput | otpsWhereInput[]
    OR?: otpsWhereInput[]
    NOT?: otpsWhereInput | otpsWhereInput[]
    id?: BigIntFilter<"otps"> | bigint | number
    code?: StringFilter<"otps"> | string
    channel?: IntFilter<"otps"> | number
    reason?: StringFilter<"otps"> | string
    expires_at?: DateTimeFilter<"otps"> | Date | string
    authenticatable_type?: StringFilter<"otps"> | string
    authenticatable_id?: BigIntFilter<"otps"> | bigint | number
    is_used?: BoolFilter<"otps"> | boolean
    created_at?: DateTimeNullableFilter<"otps"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"otps"> | Date | string | null
  }

  export type otpsOrderByWithRelationInput = {
    id?: SortOrder
    code?: SortOrder
    channel?: SortOrder
    reason?: SortOrder
    expires_at?: SortOrder
    authenticatable_type?: SortOrder
    authenticatable_id?: SortOrder
    is_used?: SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
  }

  export type otpsWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: otpsWhereInput | otpsWhereInput[]
    OR?: otpsWhereInput[]
    NOT?: otpsWhereInput | otpsWhereInput[]
    code?: StringFilter<"otps"> | string
    channel?: IntFilter<"otps"> | number
    reason?: StringFilter<"otps"> | string
    expires_at?: DateTimeFilter<"otps"> | Date | string
    authenticatable_type?: StringFilter<"otps"> | string
    authenticatable_id?: BigIntFilter<"otps"> | bigint | number
    is_used?: BoolFilter<"otps"> | boolean
    created_at?: DateTimeNullableFilter<"otps"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"otps"> | Date | string | null
  }, "id">

  export type otpsOrderByWithAggregationInput = {
    id?: SortOrder
    code?: SortOrder
    channel?: SortOrder
    reason?: SortOrder
    expires_at?: SortOrder
    authenticatable_type?: SortOrder
    authenticatable_id?: SortOrder
    is_used?: SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: otpsCountOrderByAggregateInput
    _avg?: otpsAvgOrderByAggregateInput
    _max?: otpsMaxOrderByAggregateInput
    _min?: otpsMinOrderByAggregateInput
    _sum?: otpsSumOrderByAggregateInput
  }

  export type otpsScalarWhereWithAggregatesInput = {
    AND?: otpsScalarWhereWithAggregatesInput | otpsScalarWhereWithAggregatesInput[]
    OR?: otpsScalarWhereWithAggregatesInput[]
    NOT?: otpsScalarWhereWithAggregatesInput | otpsScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"otps"> | bigint | number
    code?: StringWithAggregatesFilter<"otps"> | string
    channel?: IntWithAggregatesFilter<"otps"> | number
    reason?: StringWithAggregatesFilter<"otps"> | string
    expires_at?: DateTimeWithAggregatesFilter<"otps"> | Date | string
    authenticatable_type?: StringWithAggregatesFilter<"otps"> | string
    authenticatable_id?: BigIntWithAggregatesFilter<"otps"> | bigint | number
    is_used?: BoolWithAggregatesFilter<"otps"> | boolean
    created_at?: DateTimeNullableWithAggregatesFilter<"otps"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"otps"> | Date | string | null
  }

  export type paymentsWhereInput = {
    AND?: paymentsWhereInput | paymentsWhereInput[]
    OR?: paymentsWhereInput[]
    NOT?: paymentsWhereInput | paymentsWhereInput[]
    id?: BigIntFilter<"payments"> | bigint | number
    order_id?: BigIntFilter<"payments"> | bigint | number
    transaction_id?: StringFilter<"payments"> | string
    res_num?: StringFilter<"payments"> | string
    status?: IntFilter<"payments"> | number
    amount?: DecimalFilter<"payments"> | Decimal | DecimalJsLike | number | string
    payment_method?: StringNullableFilter<"payments"> | string | null
    payment_gateway?: StringNullableFilter<"payments"> | string | null
    paid_at?: DateTimeNullableFilter<"payments"> | Date | string | null
    created_at?: DateTimeNullableFilter<"payments"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"payments"> | Date | string | null
    receipt_photo?: StringNullableFilter<"payments"> | string | null
    orders?: XOR<OrdersScalarRelationFilter, ordersWhereInput>
  }

  export type paymentsOrderByWithRelationInput = {
    id?: SortOrder
    order_id?: SortOrder
    transaction_id?: SortOrder
    res_num?: SortOrder
    status?: SortOrder
    amount?: SortOrder
    payment_method?: SortOrderInput | SortOrder
    payment_gateway?: SortOrderInput | SortOrder
    paid_at?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    receipt_photo?: SortOrderInput | SortOrder
    orders?: ordersOrderByWithRelationInput
  }

  export type paymentsWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    transaction_id?: string
    res_num?: string
    AND?: paymentsWhereInput | paymentsWhereInput[]
    OR?: paymentsWhereInput[]
    NOT?: paymentsWhereInput | paymentsWhereInput[]
    order_id?: BigIntFilter<"payments"> | bigint | number
    status?: IntFilter<"payments"> | number
    amount?: DecimalFilter<"payments"> | Decimal | DecimalJsLike | number | string
    payment_method?: StringNullableFilter<"payments"> | string | null
    payment_gateway?: StringNullableFilter<"payments"> | string | null
    paid_at?: DateTimeNullableFilter<"payments"> | Date | string | null
    created_at?: DateTimeNullableFilter<"payments"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"payments"> | Date | string | null
    receipt_photo?: StringNullableFilter<"payments"> | string | null
    orders?: XOR<OrdersScalarRelationFilter, ordersWhereInput>
  }, "id" | "transaction_id" | "res_num">

  export type paymentsOrderByWithAggregationInput = {
    id?: SortOrder
    order_id?: SortOrder
    transaction_id?: SortOrder
    res_num?: SortOrder
    status?: SortOrder
    amount?: SortOrder
    payment_method?: SortOrderInput | SortOrder
    payment_gateway?: SortOrderInput | SortOrder
    paid_at?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    receipt_photo?: SortOrderInput | SortOrder
    _count?: paymentsCountOrderByAggregateInput
    _avg?: paymentsAvgOrderByAggregateInput
    _max?: paymentsMaxOrderByAggregateInput
    _min?: paymentsMinOrderByAggregateInput
    _sum?: paymentsSumOrderByAggregateInput
  }

  export type paymentsScalarWhereWithAggregatesInput = {
    AND?: paymentsScalarWhereWithAggregatesInput | paymentsScalarWhereWithAggregatesInput[]
    OR?: paymentsScalarWhereWithAggregatesInput[]
    NOT?: paymentsScalarWhereWithAggregatesInput | paymentsScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"payments"> | bigint | number
    order_id?: BigIntWithAggregatesFilter<"payments"> | bigint | number
    transaction_id?: StringWithAggregatesFilter<"payments"> | string
    res_num?: StringWithAggregatesFilter<"payments"> | string
    status?: IntWithAggregatesFilter<"payments"> | number
    amount?: DecimalWithAggregatesFilter<"payments"> | Decimal | DecimalJsLike | number | string
    payment_method?: StringNullableWithAggregatesFilter<"payments"> | string | null
    payment_gateway?: StringNullableWithAggregatesFilter<"payments"> | string | null
    paid_at?: DateTimeNullableWithAggregatesFilter<"payments"> | Date | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"payments"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"payments"> | Date | string | null
    receipt_photo?: StringNullableWithAggregatesFilter<"payments"> | string | null
  }

  export type permissionsWhereInput = {
    AND?: permissionsWhereInput | permissionsWhereInput[]
    OR?: permissionsWhereInput[]
    NOT?: permissionsWhereInput | permissionsWhereInput[]
    id?: BigIntFilter<"permissions"> | bigint | number
    name?: StringFilter<"permissions"> | string
    guard_name?: StringFilter<"permissions"> | string
    created_at?: DateTimeNullableFilter<"permissions"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"permissions"> | Date | string | null
    model_has_permissions?: Model_has_permissionsListRelationFilter
    role_has_permissions?: Role_has_permissionsListRelationFilter
  }

  export type permissionsOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    guard_name?: SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    model_has_permissions?: model_has_permissionsOrderByRelationAggregateInput
    role_has_permissions?: role_has_permissionsOrderByRelationAggregateInput
  }

  export type permissionsWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    name_guard_name?: permissionsNameGuard_nameCompoundUniqueInput
    AND?: permissionsWhereInput | permissionsWhereInput[]
    OR?: permissionsWhereInput[]
    NOT?: permissionsWhereInput | permissionsWhereInput[]
    name?: StringFilter<"permissions"> | string
    guard_name?: StringFilter<"permissions"> | string
    created_at?: DateTimeNullableFilter<"permissions"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"permissions"> | Date | string | null
    model_has_permissions?: Model_has_permissionsListRelationFilter
    role_has_permissions?: Role_has_permissionsListRelationFilter
  }, "id" | "name_guard_name">

  export type permissionsOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    guard_name?: SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: permissionsCountOrderByAggregateInput
    _avg?: permissionsAvgOrderByAggregateInput
    _max?: permissionsMaxOrderByAggregateInput
    _min?: permissionsMinOrderByAggregateInput
    _sum?: permissionsSumOrderByAggregateInput
  }

  export type permissionsScalarWhereWithAggregatesInput = {
    AND?: permissionsScalarWhereWithAggregatesInput | permissionsScalarWhereWithAggregatesInput[]
    OR?: permissionsScalarWhereWithAggregatesInput[]
    NOT?: permissionsScalarWhereWithAggregatesInput | permissionsScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"permissions"> | bigint | number
    name?: StringWithAggregatesFilter<"permissions"> | string
    guard_name?: StringWithAggregatesFilter<"permissions"> | string
    created_at?: DateTimeNullableWithAggregatesFilter<"permissions"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"permissions"> | Date | string | null
  }

  export type personal_access_tokensWhereInput = {
    AND?: personal_access_tokensWhereInput | personal_access_tokensWhereInput[]
    OR?: personal_access_tokensWhereInput[]
    NOT?: personal_access_tokensWhereInput | personal_access_tokensWhereInput[]
    id?: BigIntFilter<"personal_access_tokens"> | bigint | number
    tokenable_type?: StringFilter<"personal_access_tokens"> | string
    tokenable_id?: BigIntFilter<"personal_access_tokens"> | bigint | number
    name?: StringFilter<"personal_access_tokens"> | string
    token?: StringFilter<"personal_access_tokens"> | string
    abilities?: StringNullableFilter<"personal_access_tokens"> | string | null
    last_used_at?: DateTimeNullableFilter<"personal_access_tokens"> | Date | string | null
    expires_at?: DateTimeNullableFilter<"personal_access_tokens"> | Date | string | null
    created_at?: DateTimeNullableFilter<"personal_access_tokens"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"personal_access_tokens"> | Date | string | null
  }

  export type personal_access_tokensOrderByWithRelationInput = {
    id?: SortOrder
    tokenable_type?: SortOrder
    tokenable_id?: SortOrder
    name?: SortOrder
    token?: SortOrder
    abilities?: SortOrderInput | SortOrder
    last_used_at?: SortOrderInput | SortOrder
    expires_at?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
  }

  export type personal_access_tokensWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    token?: string
    AND?: personal_access_tokensWhereInput | personal_access_tokensWhereInput[]
    OR?: personal_access_tokensWhereInput[]
    NOT?: personal_access_tokensWhereInput | personal_access_tokensWhereInput[]
    tokenable_type?: StringFilter<"personal_access_tokens"> | string
    tokenable_id?: BigIntFilter<"personal_access_tokens"> | bigint | number
    name?: StringFilter<"personal_access_tokens"> | string
    abilities?: StringNullableFilter<"personal_access_tokens"> | string | null
    last_used_at?: DateTimeNullableFilter<"personal_access_tokens"> | Date | string | null
    expires_at?: DateTimeNullableFilter<"personal_access_tokens"> | Date | string | null
    created_at?: DateTimeNullableFilter<"personal_access_tokens"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"personal_access_tokens"> | Date | string | null
  }, "id" | "token">

  export type personal_access_tokensOrderByWithAggregationInput = {
    id?: SortOrder
    tokenable_type?: SortOrder
    tokenable_id?: SortOrder
    name?: SortOrder
    token?: SortOrder
    abilities?: SortOrderInput | SortOrder
    last_used_at?: SortOrderInput | SortOrder
    expires_at?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: personal_access_tokensCountOrderByAggregateInput
    _avg?: personal_access_tokensAvgOrderByAggregateInput
    _max?: personal_access_tokensMaxOrderByAggregateInput
    _min?: personal_access_tokensMinOrderByAggregateInput
    _sum?: personal_access_tokensSumOrderByAggregateInput
  }

  export type personal_access_tokensScalarWhereWithAggregatesInput = {
    AND?: personal_access_tokensScalarWhereWithAggregatesInput | personal_access_tokensScalarWhereWithAggregatesInput[]
    OR?: personal_access_tokensScalarWhereWithAggregatesInput[]
    NOT?: personal_access_tokensScalarWhereWithAggregatesInput | personal_access_tokensScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"personal_access_tokens"> | bigint | number
    tokenable_type?: StringWithAggregatesFilter<"personal_access_tokens"> | string
    tokenable_id?: BigIntWithAggregatesFilter<"personal_access_tokens"> | bigint | number
    name?: StringWithAggregatesFilter<"personal_access_tokens"> | string
    token?: StringWithAggregatesFilter<"personal_access_tokens"> | string
    abilities?: StringNullableWithAggregatesFilter<"personal_access_tokens"> | string | null
    last_used_at?: DateTimeNullableWithAggregatesFilter<"personal_access_tokens"> | Date | string | null
    expires_at?: DateTimeNullableWithAggregatesFilter<"personal_access_tokens"> | Date | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"personal_access_tokens"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"personal_access_tokens"> | Date | string | null
  }

  export type provider_agentsWhereInput = {
    AND?: provider_agentsWhereInput | provider_agentsWhereInput[]
    OR?: provider_agentsWhereInput[]
    NOT?: provider_agentsWhereInput | provider_agentsWhereInput[]
    id?: BigIntFilter<"provider_agents"> | bigint | number
    provider_id?: BigIntFilter<"provider_agents"> | bigint | number
    user_id?: BigIntFilter<"provider_agents"> | bigint | number
    role?: IntFilter<"provider_agents"> | number
    created_at?: DateTimeNullableFilter<"provider_agents"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"provider_agents"> | Date | string | null
    providers?: XOR<ProvidersScalarRelationFilter, providersWhereInput>
    admins?: XOR<AdminsScalarRelationFilter, adminsWhereInput>
    subscription_usages?: Subscription_usagesListRelationFilter
  }

  export type provider_agentsOrderByWithRelationInput = {
    id?: SortOrder
    provider_id?: SortOrder
    user_id?: SortOrder
    role?: SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    providers?: providersOrderByWithRelationInput
    admins?: adminsOrderByWithRelationInput
    subscription_usages?: subscription_usagesOrderByRelationAggregateInput
  }

  export type provider_agentsWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: provider_agentsWhereInput | provider_agentsWhereInput[]
    OR?: provider_agentsWhereInput[]
    NOT?: provider_agentsWhereInput | provider_agentsWhereInput[]
    provider_id?: BigIntFilter<"provider_agents"> | bigint | number
    user_id?: BigIntFilter<"provider_agents"> | bigint | number
    role?: IntFilter<"provider_agents"> | number
    created_at?: DateTimeNullableFilter<"provider_agents"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"provider_agents"> | Date | string | null
    providers?: XOR<ProvidersScalarRelationFilter, providersWhereInput>
    admins?: XOR<AdminsScalarRelationFilter, adminsWhereInput>
    subscription_usages?: Subscription_usagesListRelationFilter
  }, "id">

  export type provider_agentsOrderByWithAggregationInput = {
    id?: SortOrder
    provider_id?: SortOrder
    user_id?: SortOrder
    role?: SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: provider_agentsCountOrderByAggregateInput
    _avg?: provider_agentsAvgOrderByAggregateInput
    _max?: provider_agentsMaxOrderByAggregateInput
    _min?: provider_agentsMinOrderByAggregateInput
    _sum?: provider_agentsSumOrderByAggregateInput
  }

  export type provider_agentsScalarWhereWithAggregatesInput = {
    AND?: provider_agentsScalarWhereWithAggregatesInput | provider_agentsScalarWhereWithAggregatesInput[]
    OR?: provider_agentsScalarWhereWithAggregatesInput[]
    NOT?: provider_agentsScalarWhereWithAggregatesInput | provider_agentsScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"provider_agents"> | bigint | number
    provider_id?: BigIntWithAggregatesFilter<"provider_agents"> | bigint | number
    user_id?: BigIntWithAggregatesFilter<"provider_agents"> | bigint | number
    role?: IntWithAggregatesFilter<"provider_agents"> | number
    created_at?: DateTimeNullableWithAggregatesFilter<"provider_agents"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"provider_agents"> | Date | string | null
  }

  export type provider_offersWhereInput = {
    AND?: provider_offersWhereInput | provider_offersWhereInput[]
    OR?: provider_offersWhereInput[]
    NOT?: provider_offersWhereInput | provider_offersWhereInput[]
    id?: BigIntFilter<"provider_offers"> | bigint | number
    provider_id?: BigIntFilter<"provider_offers"> | bigint | number
    offer_id?: BigIntFilter<"provider_offers"> | bigint | number
    created_at?: DateTimeNullableFilter<"provider_offers"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"provider_offers"> | Date | string | null
    offers?: XOR<OffersScalarRelationFilter, offersWhereInput>
    providers?: XOR<ProvidersScalarRelationFilter, providersWhereInput>
  }

  export type provider_offersOrderByWithRelationInput = {
    id?: SortOrder
    provider_id?: SortOrder
    offer_id?: SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    offers?: offersOrderByWithRelationInput
    providers?: providersOrderByWithRelationInput
  }

  export type provider_offersWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: provider_offersWhereInput | provider_offersWhereInput[]
    OR?: provider_offersWhereInput[]
    NOT?: provider_offersWhereInput | provider_offersWhereInput[]
    provider_id?: BigIntFilter<"provider_offers"> | bigint | number
    offer_id?: BigIntFilter<"provider_offers"> | bigint | number
    created_at?: DateTimeNullableFilter<"provider_offers"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"provider_offers"> | Date | string | null
    offers?: XOR<OffersScalarRelationFilter, offersWhereInput>
    providers?: XOR<ProvidersScalarRelationFilter, providersWhereInput>
  }, "id">

  export type provider_offersOrderByWithAggregationInput = {
    id?: SortOrder
    provider_id?: SortOrder
    offer_id?: SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: provider_offersCountOrderByAggregateInput
    _avg?: provider_offersAvgOrderByAggregateInput
    _max?: provider_offersMaxOrderByAggregateInput
    _min?: provider_offersMinOrderByAggregateInput
    _sum?: provider_offersSumOrderByAggregateInput
  }

  export type provider_offersScalarWhereWithAggregatesInput = {
    AND?: provider_offersScalarWhereWithAggregatesInput | provider_offersScalarWhereWithAggregatesInput[]
    OR?: provider_offersScalarWhereWithAggregatesInput[]
    NOT?: provider_offersScalarWhereWithAggregatesInput | provider_offersScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"provider_offers"> | bigint | number
    provider_id?: BigIntWithAggregatesFilter<"provider_offers"> | bigint | number
    offer_id?: BigIntWithAggregatesFilter<"provider_offers"> | bigint | number
    created_at?: DateTimeNullableWithAggregatesFilter<"provider_offers"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"provider_offers"> | Date | string | null
  }

  export type providersWhereInput = {
    AND?: providersWhereInput | providersWhereInput[]
    OR?: providersWhereInput[]
    NOT?: providersWhereInput | providersWhereInput[]
    id?: BigIntFilter<"providers"> | bigint | number
    name?: StringFilter<"providers"> | string
    description?: StringNullableFilter<"providers"> | string | null
    category_id?: BigIntFilter<"providers"> | bigint | number
    address?: StringFilter<"providers"> | string
    phone_number?: JsonFilter<"providers">
    main_image?: StringFilter<"providers"> | string
    slider_images?: JsonFilter<"providers">
    latitude?: DecimalFilter<"providers"> | Decimal | DecimalJsLike | number | string
    longitude?: DecimalFilter<"providers"> | Decimal | DecimalJsLike | number | string
    is_verified?: BoolFilter<"providers"> | boolean
    status?: IntFilter<"providers"> | number
    created_at?: DateTimeNullableFilter<"providers"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"providers"> | Date | string | null
    provider_agents?: Provider_agentsListRelationFilter
    provider_menu?: XOR<Provider_menuNullableScalarRelationFilter, provider_menuWhereInput> | null
    provider_offers?: Provider_offersListRelationFilter
    offer_categories?: XOR<Offer_categoriesScalarRelationFilter, offer_categoriesWhereInput>
    subscription_usages?: Subscription_usagesListRelationFilter
  }

  export type providersOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    category_id?: SortOrder
    address?: SortOrder
    phone_number?: SortOrder
    main_image?: SortOrder
    slider_images?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    is_verified?: SortOrder
    status?: SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    provider_agents?: provider_agentsOrderByRelationAggregateInput
    provider_menu?: provider_menuOrderByWithRelationInput
    provider_offers?: provider_offersOrderByRelationAggregateInput
    offer_categories?: offer_categoriesOrderByWithRelationInput
    subscription_usages?: subscription_usagesOrderByRelationAggregateInput
  }

  export type providersWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    name?: string
    AND?: providersWhereInput | providersWhereInput[]
    OR?: providersWhereInput[]
    NOT?: providersWhereInput | providersWhereInput[]
    description?: StringNullableFilter<"providers"> | string | null
    category_id?: BigIntFilter<"providers"> | bigint | number
    address?: StringFilter<"providers"> | string
    phone_number?: JsonFilter<"providers">
    main_image?: StringFilter<"providers"> | string
    slider_images?: JsonFilter<"providers">
    latitude?: DecimalFilter<"providers"> | Decimal | DecimalJsLike | number | string
    longitude?: DecimalFilter<"providers"> | Decimal | DecimalJsLike | number | string
    is_verified?: BoolFilter<"providers"> | boolean
    status?: IntFilter<"providers"> | number
    created_at?: DateTimeNullableFilter<"providers"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"providers"> | Date | string | null
    provider_agents?: Provider_agentsListRelationFilter
    provider_menu?: XOR<Provider_menuNullableScalarRelationFilter, provider_menuWhereInput> | null
    provider_offers?: Provider_offersListRelationFilter
    offer_categories?: XOR<Offer_categoriesScalarRelationFilter, offer_categoriesWhereInput>
    subscription_usages?: Subscription_usagesListRelationFilter
  }, "id" | "name">

  export type providersOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    category_id?: SortOrder
    address?: SortOrder
    phone_number?: SortOrder
    main_image?: SortOrder
    slider_images?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    is_verified?: SortOrder
    status?: SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: providersCountOrderByAggregateInput
    _avg?: providersAvgOrderByAggregateInput
    _max?: providersMaxOrderByAggregateInput
    _min?: providersMinOrderByAggregateInput
    _sum?: providersSumOrderByAggregateInput
  }

  export type providersScalarWhereWithAggregatesInput = {
    AND?: providersScalarWhereWithAggregatesInput | providersScalarWhereWithAggregatesInput[]
    OR?: providersScalarWhereWithAggregatesInput[]
    NOT?: providersScalarWhereWithAggregatesInput | providersScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"providers"> | bigint | number
    name?: StringWithAggregatesFilter<"providers"> | string
    description?: StringNullableWithAggregatesFilter<"providers"> | string | null
    category_id?: BigIntWithAggregatesFilter<"providers"> | bigint | number
    address?: StringWithAggregatesFilter<"providers"> | string
    phone_number?: JsonWithAggregatesFilter<"providers">
    main_image?: StringWithAggregatesFilter<"providers"> | string
    slider_images?: JsonWithAggregatesFilter<"providers">
    latitude?: DecimalWithAggregatesFilter<"providers"> | Decimal | DecimalJsLike | number | string
    longitude?: DecimalWithAggregatesFilter<"providers"> | Decimal | DecimalJsLike | number | string
    is_verified?: BoolWithAggregatesFilter<"providers"> | boolean
    status?: IntWithAggregatesFilter<"providers"> | number
    created_at?: DateTimeNullableWithAggregatesFilter<"providers"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"providers"> | Date | string | null
  }

  export type provider_menuWhereInput = {
    AND?: provider_menuWhereInput | provider_menuWhereInput[]
    OR?: provider_menuWhereInput[]
    NOT?: provider_menuWhereInput | provider_menuWhereInput[]
    id?: BigIntFilter<"provider_menu"> | bigint | number
    provider_id?: BigIntFilter<"provider_menu"> | bigint | number
    title?: StringNullableFilter<"provider_menu"> | string | null
    description?: StringNullableFilter<"provider_menu"> | string | null
    created_at?: DateTimeNullableFilter<"provider_menu"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"provider_menu"> | Date | string | null
    providers?: XOR<ProvidersScalarRelationFilter, providersWhereInput>
    provider_menu_items?: Provider_menu_itemsListRelationFilter
    provider_menu_categories?: Provider_menu_categoriesListRelationFilter
  }

  export type provider_menuOrderByWithRelationInput = {
    id?: SortOrder
    provider_id?: SortOrder
    title?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    providers?: providersOrderByWithRelationInput
    provider_menu_items?: provider_menu_itemsOrderByRelationAggregateInput
    provider_menu_categories?: provider_menu_categoriesOrderByRelationAggregateInput
  }

  export type provider_menuWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    provider_id?: bigint | number
    AND?: provider_menuWhereInput | provider_menuWhereInput[]
    OR?: provider_menuWhereInput[]
    NOT?: provider_menuWhereInput | provider_menuWhereInput[]
    title?: StringNullableFilter<"provider_menu"> | string | null
    description?: StringNullableFilter<"provider_menu"> | string | null
    created_at?: DateTimeNullableFilter<"provider_menu"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"provider_menu"> | Date | string | null
    providers?: XOR<ProvidersScalarRelationFilter, providersWhereInput>
    provider_menu_items?: Provider_menu_itemsListRelationFilter
    provider_menu_categories?: Provider_menu_categoriesListRelationFilter
  }, "id" | "provider_id">

  export type provider_menuOrderByWithAggregationInput = {
    id?: SortOrder
    provider_id?: SortOrder
    title?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: provider_menuCountOrderByAggregateInput
    _avg?: provider_menuAvgOrderByAggregateInput
    _max?: provider_menuMaxOrderByAggregateInput
    _min?: provider_menuMinOrderByAggregateInput
    _sum?: provider_menuSumOrderByAggregateInput
  }

  export type provider_menuScalarWhereWithAggregatesInput = {
    AND?: provider_menuScalarWhereWithAggregatesInput | provider_menuScalarWhereWithAggregatesInput[]
    OR?: provider_menuScalarWhereWithAggregatesInput[]
    NOT?: provider_menuScalarWhereWithAggregatesInput | provider_menuScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"provider_menu"> | bigint | number
    provider_id?: BigIntWithAggregatesFilter<"provider_menu"> | bigint | number
    title?: StringNullableWithAggregatesFilter<"provider_menu"> | string | null
    description?: StringNullableWithAggregatesFilter<"provider_menu"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"provider_menu"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"provider_menu"> | Date | string | null
  }

  export type provider_menu_itemsWhereInput = {
    AND?: provider_menu_itemsWhereInput | provider_menu_itemsWhereInput[]
    OR?: provider_menu_itemsWhereInput[]
    NOT?: provider_menu_itemsWhereInput | provider_menu_itemsWhereInput[]
    id?: BigIntFilter<"provider_menu_items"> | bigint | number
    menu_id?: BigIntFilter<"provider_menu_items"> | bigint | number
    title?: StringFilter<"provider_menu_items"> | string
    description?: StringNullableFilter<"provider_menu_items"> | string | null
    created_at?: DateTimeNullableFilter<"provider_menu_items"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"provider_menu_items"> | Date | string | null
    category_id?: BigIntFilter<"provider_menu_items"> | bigint | number
    price?: DecimalFilter<"provider_menu_items"> | Decimal | DecimalJsLike | number | string
    provider_menu_categories?: XOR<Provider_menu_categoriesScalarRelationFilter, provider_menu_categoriesWhereInput>
    provider_menu?: XOR<Provider_menuScalarRelationFilter, provider_menuWhereInput>
  }

  export type provider_menu_itemsOrderByWithRelationInput = {
    id?: SortOrder
    menu_id?: SortOrder
    title?: SortOrder
    description?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    category_id?: SortOrder
    price?: SortOrder
    provider_menu_categories?: provider_menu_categoriesOrderByWithRelationInput
    provider_menu?: provider_menuOrderByWithRelationInput
  }

  export type provider_menu_itemsWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: provider_menu_itemsWhereInput | provider_menu_itemsWhereInput[]
    OR?: provider_menu_itemsWhereInput[]
    NOT?: provider_menu_itemsWhereInput | provider_menu_itemsWhereInput[]
    menu_id?: BigIntFilter<"provider_menu_items"> | bigint | number
    title?: StringFilter<"provider_menu_items"> | string
    description?: StringNullableFilter<"provider_menu_items"> | string | null
    created_at?: DateTimeNullableFilter<"provider_menu_items"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"provider_menu_items"> | Date | string | null
    category_id?: BigIntFilter<"provider_menu_items"> | bigint | number
    price?: DecimalFilter<"provider_menu_items"> | Decimal | DecimalJsLike | number | string
    provider_menu_categories?: XOR<Provider_menu_categoriesScalarRelationFilter, provider_menu_categoriesWhereInput>
    provider_menu?: XOR<Provider_menuScalarRelationFilter, provider_menuWhereInput>
  }, "id">

  export type provider_menu_itemsOrderByWithAggregationInput = {
    id?: SortOrder
    menu_id?: SortOrder
    title?: SortOrder
    description?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    category_id?: SortOrder
    price?: SortOrder
    _count?: provider_menu_itemsCountOrderByAggregateInput
    _avg?: provider_menu_itemsAvgOrderByAggregateInput
    _max?: provider_menu_itemsMaxOrderByAggregateInput
    _min?: provider_menu_itemsMinOrderByAggregateInput
    _sum?: provider_menu_itemsSumOrderByAggregateInput
  }

  export type provider_menu_itemsScalarWhereWithAggregatesInput = {
    AND?: provider_menu_itemsScalarWhereWithAggregatesInput | provider_menu_itemsScalarWhereWithAggregatesInput[]
    OR?: provider_menu_itemsScalarWhereWithAggregatesInput[]
    NOT?: provider_menu_itemsScalarWhereWithAggregatesInput | provider_menu_itemsScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"provider_menu_items"> | bigint | number
    menu_id?: BigIntWithAggregatesFilter<"provider_menu_items"> | bigint | number
    title?: StringWithAggregatesFilter<"provider_menu_items"> | string
    description?: StringNullableWithAggregatesFilter<"provider_menu_items"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"provider_menu_items"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"provider_menu_items"> | Date | string | null
    category_id?: BigIntWithAggregatesFilter<"provider_menu_items"> | bigint | number
    price?: DecimalWithAggregatesFilter<"provider_menu_items"> | Decimal | DecimalJsLike | number | string
  }

  export type provider_menu_categoriesWhereInput = {
    AND?: provider_menu_categoriesWhereInput | provider_menu_categoriesWhereInput[]
    OR?: provider_menu_categoriesWhereInput[]
    NOT?: provider_menu_categoriesWhereInput | provider_menu_categoriesWhereInput[]
    id?: BigIntFilter<"provider_menu_categories"> | bigint | number
    menu_id?: BigIntFilter<"provider_menu_categories"> | bigint | number
    title?: StringFilter<"provider_menu_categories"> | string
    created_at?: DateTimeNullableFilter<"provider_menu_categories"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"provider_menu_categories"> | Date | string | null
    provider_menu?: XOR<Provider_menuScalarRelationFilter, provider_menuWhereInput>
    provider_menu_items?: Provider_menu_itemsListRelationFilter
  }

  export type provider_menu_categoriesOrderByWithRelationInput = {
    id?: SortOrder
    menu_id?: SortOrder
    title?: SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    provider_menu?: provider_menuOrderByWithRelationInput
    provider_menu_items?: provider_menu_itemsOrderByRelationAggregateInput
  }

  export type provider_menu_categoriesWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: provider_menu_categoriesWhereInput | provider_menu_categoriesWhereInput[]
    OR?: provider_menu_categoriesWhereInput[]
    NOT?: provider_menu_categoriesWhereInput | provider_menu_categoriesWhereInput[]
    menu_id?: BigIntFilter<"provider_menu_categories"> | bigint | number
    title?: StringFilter<"provider_menu_categories"> | string
    created_at?: DateTimeNullableFilter<"provider_menu_categories"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"provider_menu_categories"> | Date | string | null
    provider_menu?: XOR<Provider_menuScalarRelationFilter, provider_menuWhereInput>
    provider_menu_items?: Provider_menu_itemsListRelationFilter
  }, "id">

  export type provider_menu_categoriesOrderByWithAggregationInput = {
    id?: SortOrder
    menu_id?: SortOrder
    title?: SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: provider_menu_categoriesCountOrderByAggregateInput
    _avg?: provider_menu_categoriesAvgOrderByAggregateInput
    _max?: provider_menu_categoriesMaxOrderByAggregateInput
    _min?: provider_menu_categoriesMinOrderByAggregateInput
    _sum?: provider_menu_categoriesSumOrderByAggregateInput
  }

  export type provider_menu_categoriesScalarWhereWithAggregatesInput = {
    AND?: provider_menu_categoriesScalarWhereWithAggregatesInput | provider_menu_categoriesScalarWhereWithAggregatesInput[]
    OR?: provider_menu_categoriesScalarWhereWithAggregatesInput[]
    NOT?: provider_menu_categoriesScalarWhereWithAggregatesInput | provider_menu_categoriesScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"provider_menu_categories"> | bigint | number
    menu_id?: BigIntWithAggregatesFilter<"provider_menu_categories"> | bigint | number
    title?: StringWithAggregatesFilter<"provider_menu_categories"> | string
    created_at?: DateTimeNullableWithAggregatesFilter<"provider_menu_categories"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"provider_menu_categories"> | Date | string | null
  }

  export type role_has_permissionsWhereInput = {
    AND?: role_has_permissionsWhereInput | role_has_permissionsWhereInput[]
    OR?: role_has_permissionsWhereInput[]
    NOT?: role_has_permissionsWhereInput | role_has_permissionsWhereInput[]
    permission_id?: BigIntFilter<"role_has_permissions"> | bigint | number
    role_id?: BigIntFilter<"role_has_permissions"> | bigint | number
    permissions?: XOR<PermissionsScalarRelationFilter, permissionsWhereInput>
    roles?: XOR<RolesScalarRelationFilter, rolesWhereInput>
  }

  export type role_has_permissionsOrderByWithRelationInput = {
    permission_id?: SortOrder
    role_id?: SortOrder
    permissions?: permissionsOrderByWithRelationInput
    roles?: rolesOrderByWithRelationInput
  }

  export type role_has_permissionsWhereUniqueInput = Prisma.AtLeast<{
    permission_id_role_id?: role_has_permissionsPermission_idRole_idCompoundUniqueInput
    AND?: role_has_permissionsWhereInput | role_has_permissionsWhereInput[]
    OR?: role_has_permissionsWhereInput[]
    NOT?: role_has_permissionsWhereInput | role_has_permissionsWhereInput[]
    permission_id?: BigIntFilter<"role_has_permissions"> | bigint | number
    role_id?: BigIntFilter<"role_has_permissions"> | bigint | number
    permissions?: XOR<PermissionsScalarRelationFilter, permissionsWhereInput>
    roles?: XOR<RolesScalarRelationFilter, rolesWhereInput>
  }, "permission_id_role_id">

  export type role_has_permissionsOrderByWithAggregationInput = {
    permission_id?: SortOrder
    role_id?: SortOrder
    _count?: role_has_permissionsCountOrderByAggregateInput
    _avg?: role_has_permissionsAvgOrderByAggregateInput
    _max?: role_has_permissionsMaxOrderByAggregateInput
    _min?: role_has_permissionsMinOrderByAggregateInput
    _sum?: role_has_permissionsSumOrderByAggregateInput
  }

  export type role_has_permissionsScalarWhereWithAggregatesInput = {
    AND?: role_has_permissionsScalarWhereWithAggregatesInput | role_has_permissionsScalarWhereWithAggregatesInput[]
    OR?: role_has_permissionsScalarWhereWithAggregatesInput[]
    NOT?: role_has_permissionsScalarWhereWithAggregatesInput | role_has_permissionsScalarWhereWithAggregatesInput[]
    permission_id?: BigIntWithAggregatesFilter<"role_has_permissions"> | bigint | number
    role_id?: BigIntWithAggregatesFilter<"role_has_permissions"> | bigint | number
  }

  export type rolesWhereInput = {
    AND?: rolesWhereInput | rolesWhereInput[]
    OR?: rolesWhereInput[]
    NOT?: rolesWhereInput | rolesWhereInput[]
    id?: BigIntFilter<"roles"> | bigint | number
    name?: StringFilter<"roles"> | string
    guard_name?: StringFilter<"roles"> | string
    created_at?: DateTimeNullableFilter<"roles"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"roles"> | Date | string | null
    model_has_roles?: Model_has_rolesListRelationFilter
    role_has_permissions?: Role_has_permissionsListRelationFilter
  }

  export type rolesOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    guard_name?: SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    model_has_roles?: model_has_rolesOrderByRelationAggregateInput
    role_has_permissions?: role_has_permissionsOrderByRelationAggregateInput
  }

  export type rolesWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    name_guard_name?: rolesNameGuard_nameCompoundUniqueInput
    AND?: rolesWhereInput | rolesWhereInput[]
    OR?: rolesWhereInput[]
    NOT?: rolesWhereInput | rolesWhereInput[]
    name?: StringFilter<"roles"> | string
    guard_name?: StringFilter<"roles"> | string
    created_at?: DateTimeNullableFilter<"roles"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"roles"> | Date | string | null
    model_has_roles?: Model_has_rolesListRelationFilter
    role_has_permissions?: Role_has_permissionsListRelationFilter
  }, "id" | "name_guard_name">

  export type rolesOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    guard_name?: SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: rolesCountOrderByAggregateInput
    _avg?: rolesAvgOrderByAggregateInput
    _max?: rolesMaxOrderByAggregateInput
    _min?: rolesMinOrderByAggregateInput
    _sum?: rolesSumOrderByAggregateInput
  }

  export type rolesScalarWhereWithAggregatesInput = {
    AND?: rolesScalarWhereWithAggregatesInput | rolesScalarWhereWithAggregatesInput[]
    OR?: rolesScalarWhereWithAggregatesInput[]
    NOT?: rolesScalarWhereWithAggregatesInput | rolesScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"roles"> | bigint | number
    name?: StringWithAggregatesFilter<"roles"> | string
    guard_name?: StringWithAggregatesFilter<"roles"> | string
    created_at?: DateTimeNullableWithAggregatesFilter<"roles"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"roles"> | Date | string | null
  }

  export type subscription_plan_offersWhereInput = {
    AND?: subscription_plan_offersWhereInput | subscription_plan_offersWhereInput[]
    OR?: subscription_plan_offersWhereInput[]
    NOT?: subscription_plan_offersWhereInput | subscription_plan_offersWhereInput[]
    id?: BigIntFilter<"subscription_plan_offers"> | bigint | number
    subscription_plan_id?: BigIntFilter<"subscription_plan_offers"> | bigint | number
    offer_id?: BigIntFilter<"subscription_plan_offers"> | bigint | number
    discount_percentage?: IntFilter<"subscription_plan_offers"> | number
    created_at?: DateTimeNullableFilter<"subscription_plan_offers"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"subscription_plan_offers"> | Date | string | null
    offers?: XOR<OffersScalarRelationFilter, offersWhereInput>
    subscription_plans?: XOR<Subscription_plansScalarRelationFilter, subscription_plansWhereInput>
  }

  export type subscription_plan_offersOrderByWithRelationInput = {
    id?: SortOrder
    subscription_plan_id?: SortOrder
    offer_id?: SortOrder
    discount_percentage?: SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    offers?: offersOrderByWithRelationInput
    subscription_plans?: subscription_plansOrderByWithRelationInput
  }

  export type subscription_plan_offersWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    subscription_plan_id_offer_id?: subscription_plan_offersSubscription_plan_idOffer_idCompoundUniqueInput
    AND?: subscription_plan_offersWhereInput | subscription_plan_offersWhereInput[]
    OR?: subscription_plan_offersWhereInput[]
    NOT?: subscription_plan_offersWhereInput | subscription_plan_offersWhereInput[]
    subscription_plan_id?: BigIntFilter<"subscription_plan_offers"> | bigint | number
    offer_id?: BigIntFilter<"subscription_plan_offers"> | bigint | number
    discount_percentage?: IntFilter<"subscription_plan_offers"> | number
    created_at?: DateTimeNullableFilter<"subscription_plan_offers"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"subscription_plan_offers"> | Date | string | null
    offers?: XOR<OffersScalarRelationFilter, offersWhereInput>
    subscription_plans?: XOR<Subscription_plansScalarRelationFilter, subscription_plansWhereInput>
  }, "id" | "subscription_plan_id_offer_id">

  export type subscription_plan_offersOrderByWithAggregationInput = {
    id?: SortOrder
    subscription_plan_id?: SortOrder
    offer_id?: SortOrder
    discount_percentage?: SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: subscription_plan_offersCountOrderByAggregateInput
    _avg?: subscription_plan_offersAvgOrderByAggregateInput
    _max?: subscription_plan_offersMaxOrderByAggregateInput
    _min?: subscription_plan_offersMinOrderByAggregateInput
    _sum?: subscription_plan_offersSumOrderByAggregateInput
  }

  export type subscription_plan_offersScalarWhereWithAggregatesInput = {
    AND?: subscription_plan_offersScalarWhereWithAggregatesInput | subscription_plan_offersScalarWhereWithAggregatesInput[]
    OR?: subscription_plan_offersScalarWhereWithAggregatesInput[]
    NOT?: subscription_plan_offersScalarWhereWithAggregatesInput | subscription_plan_offersScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"subscription_plan_offers"> | bigint | number
    subscription_plan_id?: BigIntWithAggregatesFilter<"subscription_plan_offers"> | bigint | number
    offer_id?: BigIntWithAggregatesFilter<"subscription_plan_offers"> | bigint | number
    discount_percentage?: IntWithAggregatesFilter<"subscription_plan_offers"> | number
    created_at?: DateTimeNullableWithAggregatesFilter<"subscription_plan_offers"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"subscription_plan_offers"> | Date | string | null
  }

  export type subscription_plansWhereInput = {
    AND?: subscription_plansWhereInput | subscription_plansWhereInput[]
    OR?: subscription_plansWhereInput[]
    NOT?: subscription_plansWhereInput | subscription_plansWhereInput[]
    id?: BigIntFilter<"subscription_plans"> | bigint | number
    title?: StringFilter<"subscription_plans"> | string
    duration?: IntFilter<"subscription_plans"> | number
    price?: DecimalFilter<"subscription_plans"> | Decimal | DecimalJsLike | number | string
    status?: IntFilter<"subscription_plans"> | number
    description?: StringNullableFilter<"subscription_plans"> | string | null
    created_at?: DateTimeNullableFilter<"subscription_plans"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"subscription_plans"> | Date | string | null
    customer_subscriptions?: Customer_subscriptionsListRelationFilter
    subscription_plan_offers?: Subscription_plan_offersListRelationFilter
  }

  export type subscription_plansOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    duration?: SortOrder
    price?: SortOrder
    status?: SortOrder
    description?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    customer_subscriptions?: customer_subscriptionsOrderByRelationAggregateInput
    subscription_plan_offers?: subscription_plan_offersOrderByRelationAggregateInput
  }

  export type subscription_plansWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    title?: string
    AND?: subscription_plansWhereInput | subscription_plansWhereInput[]
    OR?: subscription_plansWhereInput[]
    NOT?: subscription_plansWhereInput | subscription_plansWhereInput[]
    duration?: IntFilter<"subscription_plans"> | number
    price?: DecimalFilter<"subscription_plans"> | Decimal | DecimalJsLike | number | string
    status?: IntFilter<"subscription_plans"> | number
    description?: StringNullableFilter<"subscription_plans"> | string | null
    created_at?: DateTimeNullableFilter<"subscription_plans"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"subscription_plans"> | Date | string | null
    customer_subscriptions?: Customer_subscriptionsListRelationFilter
    subscription_plan_offers?: Subscription_plan_offersListRelationFilter
  }, "id" | "title">

  export type subscription_plansOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    duration?: SortOrder
    price?: SortOrder
    status?: SortOrder
    description?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: subscription_plansCountOrderByAggregateInput
    _avg?: subscription_plansAvgOrderByAggregateInput
    _max?: subscription_plansMaxOrderByAggregateInput
    _min?: subscription_plansMinOrderByAggregateInput
    _sum?: subscription_plansSumOrderByAggregateInput
  }

  export type subscription_plansScalarWhereWithAggregatesInput = {
    AND?: subscription_plansScalarWhereWithAggregatesInput | subscription_plansScalarWhereWithAggregatesInput[]
    OR?: subscription_plansScalarWhereWithAggregatesInput[]
    NOT?: subscription_plansScalarWhereWithAggregatesInput | subscription_plansScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"subscription_plans"> | bigint | number
    title?: StringWithAggregatesFilter<"subscription_plans"> | string
    duration?: IntWithAggregatesFilter<"subscription_plans"> | number
    price?: DecimalWithAggregatesFilter<"subscription_plans"> | Decimal | DecimalJsLike | number | string
    status?: IntWithAggregatesFilter<"subscription_plans"> | number
    description?: StringNullableWithAggregatesFilter<"subscription_plans"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"subscription_plans"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"subscription_plans"> | Date | string | null
  }

  export type subscription_usagesWhereInput = {
    AND?: subscription_usagesWhereInput | subscription_usagesWhereInput[]
    OR?: subscription_usagesWhereInput[]
    NOT?: subscription_usagesWhereInput | subscription_usagesWhereInput[]
    id?: BigIntFilter<"subscription_usages"> | bigint | number
    provider_agent_id?: BigIntFilter<"subscription_usages"> | bigint | number
    customer_id?: BigIntFilter<"subscription_usages"> | bigint | number
    customer_subscription_id?: BigIntFilter<"subscription_usages"> | bigint | number
    provider_id?: BigIntFilter<"subscription_usages"> | bigint | number
    offer_id?: BigIntFilter<"subscription_usages"> | bigint | number
    total_amount?: StringFilter<"subscription_usages"> | string
    status?: StringFilter<"subscription_usages"> | string
    created_at?: DateTimeNullableFilter<"subscription_usages"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"subscription_usages"> | Date | string | null
    customers?: XOR<CustomersScalarRelationFilter, customersWhereInput>
    customer_subscriptions?: XOR<Customer_subscriptionsScalarRelationFilter, customer_subscriptionsWhereInput>
    offers?: XOR<OffersScalarRelationFilter, offersWhereInput>
    provider_agents?: XOR<Provider_agentsScalarRelationFilter, provider_agentsWhereInput>
    providers?: XOR<ProvidersScalarRelationFilter, providersWhereInput>
  }

  export type subscription_usagesOrderByWithRelationInput = {
    id?: SortOrder
    provider_agent_id?: SortOrder
    customer_id?: SortOrder
    customer_subscription_id?: SortOrder
    provider_id?: SortOrder
    offer_id?: SortOrder
    total_amount?: SortOrder
    status?: SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    customers?: customersOrderByWithRelationInput
    customer_subscriptions?: customer_subscriptionsOrderByWithRelationInput
    offers?: offersOrderByWithRelationInput
    provider_agents?: provider_agentsOrderByWithRelationInput
    providers?: providersOrderByWithRelationInput
  }

  export type subscription_usagesWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: subscription_usagesWhereInput | subscription_usagesWhereInput[]
    OR?: subscription_usagesWhereInput[]
    NOT?: subscription_usagesWhereInput | subscription_usagesWhereInput[]
    provider_agent_id?: BigIntFilter<"subscription_usages"> | bigint | number
    customer_id?: BigIntFilter<"subscription_usages"> | bigint | number
    customer_subscription_id?: BigIntFilter<"subscription_usages"> | bigint | number
    provider_id?: BigIntFilter<"subscription_usages"> | bigint | number
    offer_id?: BigIntFilter<"subscription_usages"> | bigint | number
    total_amount?: StringFilter<"subscription_usages"> | string
    status?: StringFilter<"subscription_usages"> | string
    created_at?: DateTimeNullableFilter<"subscription_usages"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"subscription_usages"> | Date | string | null
    customers?: XOR<CustomersScalarRelationFilter, customersWhereInput>
    customer_subscriptions?: XOR<Customer_subscriptionsScalarRelationFilter, customer_subscriptionsWhereInput>
    offers?: XOR<OffersScalarRelationFilter, offersWhereInput>
    provider_agents?: XOR<Provider_agentsScalarRelationFilter, provider_agentsWhereInput>
    providers?: XOR<ProvidersScalarRelationFilter, providersWhereInput>
  }, "id">

  export type subscription_usagesOrderByWithAggregationInput = {
    id?: SortOrder
    provider_agent_id?: SortOrder
    customer_id?: SortOrder
    customer_subscription_id?: SortOrder
    provider_id?: SortOrder
    offer_id?: SortOrder
    total_amount?: SortOrder
    status?: SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: subscription_usagesCountOrderByAggregateInput
    _avg?: subscription_usagesAvgOrderByAggregateInput
    _max?: subscription_usagesMaxOrderByAggregateInput
    _min?: subscription_usagesMinOrderByAggregateInput
    _sum?: subscription_usagesSumOrderByAggregateInput
  }

  export type subscription_usagesScalarWhereWithAggregatesInput = {
    AND?: subscription_usagesScalarWhereWithAggregatesInput | subscription_usagesScalarWhereWithAggregatesInput[]
    OR?: subscription_usagesScalarWhereWithAggregatesInput[]
    NOT?: subscription_usagesScalarWhereWithAggregatesInput | subscription_usagesScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"subscription_usages"> | bigint | number
    provider_agent_id?: BigIntWithAggregatesFilter<"subscription_usages"> | bigint | number
    customer_id?: BigIntWithAggregatesFilter<"subscription_usages"> | bigint | number
    customer_subscription_id?: BigIntWithAggregatesFilter<"subscription_usages"> | bigint | number
    provider_id?: BigIntWithAggregatesFilter<"subscription_usages"> | bigint | number
    offer_id?: BigIntWithAggregatesFilter<"subscription_usages"> | bigint | number
    total_amount?: StringWithAggregatesFilter<"subscription_usages"> | string
    status?: StringWithAggregatesFilter<"subscription_usages"> | string
    created_at?: DateTimeNullableWithAggregatesFilter<"subscription_usages"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"subscription_usages"> | Date | string | null
  }

  export type adminsCreateInput = {
    id?: bigint | number
    first_name?: string | null
    last_name?: string | null
    gender?: string | null
    email?: string | null
    mobile_number: string
    password?: string | null
    birthdate?: Date | string | null
    ssn?: string | null
    otp_secret?: string | null
    status?: number
    is_verified?: boolean
    deleted_at?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    provider_agents?: provider_agentsCreateNestedManyWithoutAdminsInput
  }

  export type adminsUncheckedCreateInput = {
    id?: bigint | number
    first_name?: string | null
    last_name?: string | null
    gender?: string | null
    email?: string | null
    mobile_number: string
    password?: string | null
    birthdate?: Date | string | null
    ssn?: string | null
    otp_secret?: string | null
    status?: number
    is_verified?: boolean
    deleted_at?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    provider_agents?: provider_agentsUncheckedCreateNestedManyWithoutAdminsInput
  }

  export type adminsUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    mobile_number?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ssn?: NullableStringFieldUpdateOperationsInput | string | null
    otp_secret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: IntFieldUpdateOperationsInput | number
    is_verified?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    provider_agents?: provider_agentsUpdateManyWithoutAdminsNestedInput
  }

  export type adminsUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    mobile_number?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ssn?: NullableStringFieldUpdateOperationsInput | string | null
    otp_secret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: IntFieldUpdateOperationsInput | number
    is_verified?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    provider_agents?: provider_agentsUncheckedUpdateManyWithoutAdminsNestedInput
  }

  export type adminsCreateManyInput = {
    id?: bigint | number
    first_name?: string | null
    last_name?: string | null
    gender?: string | null
    email?: string | null
    mobile_number: string
    password?: string | null
    birthdate?: Date | string | null
    ssn?: string | null
    otp_secret?: string | null
    status?: number
    is_verified?: boolean
    deleted_at?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type adminsUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    mobile_number?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ssn?: NullableStringFieldUpdateOperationsInput | string | null
    otp_secret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: IntFieldUpdateOperationsInput | number
    is_verified?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type adminsUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    mobile_number?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ssn?: NullableStringFieldUpdateOperationsInput | string | null
    otp_secret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: IntFieldUpdateOperationsInput | number
    is_verified?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type cacheCreateInput = {
    key: string
    value: string
    expiration: number
  }

  export type cacheUncheckedCreateInput = {
    key: string
    value: string
    expiration: number
  }

  export type cacheUpdateInput = {
    key?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    expiration?: IntFieldUpdateOperationsInput | number
  }

  export type cacheUncheckedUpdateInput = {
    key?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    expiration?: IntFieldUpdateOperationsInput | number
  }

  export type cacheCreateManyInput = {
    key: string
    value: string
    expiration: number
  }

  export type cacheUpdateManyMutationInput = {
    key?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    expiration?: IntFieldUpdateOperationsInput | number
  }

  export type cacheUncheckedUpdateManyInput = {
    key?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    expiration?: IntFieldUpdateOperationsInput | number
  }

  export type cache_locksCreateInput = {
    key: string
    owner: string
    expiration: number
  }

  export type cache_locksUncheckedCreateInput = {
    key: string
    owner: string
    expiration: number
  }

  export type cache_locksUpdateInput = {
    key?: StringFieldUpdateOperationsInput | string
    owner?: StringFieldUpdateOperationsInput | string
    expiration?: IntFieldUpdateOperationsInput | number
  }

  export type cache_locksUncheckedUpdateInput = {
    key?: StringFieldUpdateOperationsInput | string
    owner?: StringFieldUpdateOperationsInput | string
    expiration?: IntFieldUpdateOperationsInput | number
  }

  export type cache_locksCreateManyInput = {
    key: string
    owner: string
    expiration: number
  }

  export type cache_locksUpdateManyMutationInput = {
    key?: StringFieldUpdateOperationsInput | string
    owner?: StringFieldUpdateOperationsInput | string
    expiration?: IntFieldUpdateOperationsInput | number
  }

  export type cache_locksUncheckedUpdateManyInput = {
    key?: StringFieldUpdateOperationsInput | string
    owner?: StringFieldUpdateOperationsInput | string
    expiration?: IntFieldUpdateOperationsInput | number
  }

  export type customer_subscriptionsCreateInput = {
    id?: bigint | number
    start_date: Date | string
    end_date: Date | string
    status?: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
    customers: customersCreateNestedOneWithoutCustomer_subscriptionsInput
    orders: ordersCreateNestedOneWithoutCustomer_subscriptionsInput
    subscription_plans: subscription_plansCreateNestedOneWithoutCustomer_subscriptionsInput
    subscription_usages?: subscription_usagesCreateNestedManyWithoutCustomer_subscriptionsInput
  }

  export type customer_subscriptionsUncheckedCreateInput = {
    id?: bigint | number
    customer_id: bigint | number
    subscription_plan_id: bigint | number
    order_id: bigint | number
    start_date: Date | string
    end_date: Date | string
    status?: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
    subscription_usages?: subscription_usagesUncheckedCreateNestedManyWithoutCustomer_subscriptionsInput
  }

  export type customer_subscriptionsUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    customers?: customersUpdateOneRequiredWithoutCustomer_subscriptionsNestedInput
    orders?: ordersUpdateOneRequiredWithoutCustomer_subscriptionsNestedInput
    subscription_plans?: subscription_plansUpdateOneRequiredWithoutCustomer_subscriptionsNestedInput
    subscription_usages?: subscription_usagesUpdateManyWithoutCustomer_subscriptionsNestedInput
  }

  export type customer_subscriptionsUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    customer_id?: BigIntFieldUpdateOperationsInput | bigint | number
    subscription_plan_id?: BigIntFieldUpdateOperationsInput | bigint | number
    order_id?: BigIntFieldUpdateOperationsInput | bigint | number
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    subscription_usages?: subscription_usagesUncheckedUpdateManyWithoutCustomer_subscriptionsNestedInput
  }

  export type customer_subscriptionsCreateManyInput = {
    id?: bigint | number
    customer_id: bigint | number
    subscription_plan_id: bigint | number
    order_id: bigint | number
    start_date: Date | string
    end_date: Date | string
    status?: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type customer_subscriptionsUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type customer_subscriptionsUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    customer_id?: BigIntFieldUpdateOperationsInput | bigint | number
    subscription_plan_id?: BigIntFieldUpdateOperationsInput | bigint | number
    order_id?: BigIntFieldUpdateOperationsInput | bigint | number
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type customersCreateInput = {
    id?: bigint | number
    first_name?: string | null
    last_name?: string | null
    gender?: string | null
    email?: string | null
    mobile_number: string
    password?: string | null
    birthdate?: Date | string | null
    ssn?: string | null
    otp_secret?: string | null
    status?: number
    is_verified?: boolean
    deleted_at?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    customer_subscriptions?: customer_subscriptionsCreateNestedManyWithoutCustomersInput
    subscription_usages?: subscription_usagesCreateNestedManyWithoutCustomersInput
  }

  export type customersUncheckedCreateInput = {
    id?: bigint | number
    first_name?: string | null
    last_name?: string | null
    gender?: string | null
    email?: string | null
    mobile_number: string
    password?: string | null
    birthdate?: Date | string | null
    ssn?: string | null
    otp_secret?: string | null
    status?: number
    is_verified?: boolean
    deleted_at?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    customer_subscriptions?: customer_subscriptionsUncheckedCreateNestedManyWithoutCustomersInput
    subscription_usages?: subscription_usagesUncheckedCreateNestedManyWithoutCustomersInput
  }

  export type customersUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    mobile_number?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ssn?: NullableStringFieldUpdateOperationsInput | string | null
    otp_secret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: IntFieldUpdateOperationsInput | number
    is_verified?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    customer_subscriptions?: customer_subscriptionsUpdateManyWithoutCustomersNestedInput
    subscription_usages?: subscription_usagesUpdateManyWithoutCustomersNestedInput
  }

  export type customersUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    mobile_number?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ssn?: NullableStringFieldUpdateOperationsInput | string | null
    otp_secret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: IntFieldUpdateOperationsInput | number
    is_verified?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    customer_subscriptions?: customer_subscriptionsUncheckedUpdateManyWithoutCustomersNestedInput
    subscription_usages?: subscription_usagesUncheckedUpdateManyWithoutCustomersNestedInput
  }

  export type customersCreateManyInput = {
    id?: bigint | number
    first_name?: string | null
    last_name?: string | null
    gender?: string | null
    email?: string | null
    mobile_number: string
    password?: string | null
    birthdate?: Date | string | null
    ssn?: string | null
    otp_secret?: string | null
    status?: number
    is_verified?: boolean
    deleted_at?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type customersUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    mobile_number?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ssn?: NullableStringFieldUpdateOperationsInput | string | null
    otp_secret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: IntFieldUpdateOperationsInput | number
    is_verified?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type customersUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    mobile_number?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ssn?: NullableStringFieldUpdateOperationsInput | string | null
    otp_secret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: IntFieldUpdateOperationsInput | number
    is_verified?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type failed_jobsCreateInput = {
    id?: bigint | number
    uuid: string
    connection: string
    queue: string
    payload: string
    exception: string
    failed_at?: Date | string
  }

  export type failed_jobsUncheckedCreateInput = {
    id?: bigint | number
    uuid: string
    connection: string
    queue: string
    payload: string
    exception: string
    failed_at?: Date | string
  }

  export type failed_jobsUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    uuid?: StringFieldUpdateOperationsInput | string
    connection?: StringFieldUpdateOperationsInput | string
    queue?: StringFieldUpdateOperationsInput | string
    payload?: StringFieldUpdateOperationsInput | string
    exception?: StringFieldUpdateOperationsInput | string
    failed_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type failed_jobsUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    uuid?: StringFieldUpdateOperationsInput | string
    connection?: StringFieldUpdateOperationsInput | string
    queue?: StringFieldUpdateOperationsInput | string
    payload?: StringFieldUpdateOperationsInput | string
    exception?: StringFieldUpdateOperationsInput | string
    failed_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type failed_jobsCreateManyInput = {
    id?: bigint | number
    uuid: string
    connection: string
    queue: string
    payload: string
    exception: string
    failed_at?: Date | string
  }

  export type failed_jobsUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    uuid?: StringFieldUpdateOperationsInput | string
    connection?: StringFieldUpdateOperationsInput | string
    queue?: StringFieldUpdateOperationsInput | string
    payload?: StringFieldUpdateOperationsInput | string
    exception?: StringFieldUpdateOperationsInput | string
    failed_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type failed_jobsUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    uuid?: StringFieldUpdateOperationsInput | string
    connection?: StringFieldUpdateOperationsInput | string
    queue?: StringFieldUpdateOperationsInput | string
    payload?: StringFieldUpdateOperationsInput | string
    exception?: StringFieldUpdateOperationsInput | string
    failed_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type job_batchesCreateInput = {
    id: string
    name: string
    total_jobs: number
    pending_jobs: number
    failed_jobs: number
    failed_job_ids: string
    options?: string | null
    cancelled_at?: number | null
    created_at: number
    finished_at?: number | null
  }

  export type job_batchesUncheckedCreateInput = {
    id: string
    name: string
    total_jobs: number
    pending_jobs: number
    failed_jobs: number
    failed_job_ids: string
    options?: string | null
    cancelled_at?: number | null
    created_at: number
    finished_at?: number | null
  }

  export type job_batchesUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    total_jobs?: IntFieldUpdateOperationsInput | number
    pending_jobs?: IntFieldUpdateOperationsInput | number
    failed_jobs?: IntFieldUpdateOperationsInput | number
    failed_job_ids?: StringFieldUpdateOperationsInput | string
    options?: NullableStringFieldUpdateOperationsInput | string | null
    cancelled_at?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: IntFieldUpdateOperationsInput | number
    finished_at?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type job_batchesUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    total_jobs?: IntFieldUpdateOperationsInput | number
    pending_jobs?: IntFieldUpdateOperationsInput | number
    failed_jobs?: IntFieldUpdateOperationsInput | number
    failed_job_ids?: StringFieldUpdateOperationsInput | string
    options?: NullableStringFieldUpdateOperationsInput | string | null
    cancelled_at?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: IntFieldUpdateOperationsInput | number
    finished_at?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type job_batchesCreateManyInput = {
    id: string
    name: string
    total_jobs: number
    pending_jobs: number
    failed_jobs: number
    failed_job_ids: string
    options?: string | null
    cancelled_at?: number | null
    created_at: number
    finished_at?: number | null
  }

  export type job_batchesUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    total_jobs?: IntFieldUpdateOperationsInput | number
    pending_jobs?: IntFieldUpdateOperationsInput | number
    failed_jobs?: IntFieldUpdateOperationsInput | number
    failed_job_ids?: StringFieldUpdateOperationsInput | string
    options?: NullableStringFieldUpdateOperationsInput | string | null
    cancelled_at?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: IntFieldUpdateOperationsInput | number
    finished_at?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type job_batchesUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    total_jobs?: IntFieldUpdateOperationsInput | number
    pending_jobs?: IntFieldUpdateOperationsInput | number
    failed_jobs?: IntFieldUpdateOperationsInput | number
    failed_job_ids?: StringFieldUpdateOperationsInput | string
    options?: NullableStringFieldUpdateOperationsInput | string | null
    cancelled_at?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: IntFieldUpdateOperationsInput | number
    finished_at?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type jobsCreateInput = {
    id?: bigint | number
    queue: string
    payload: string
    attempts: number
    reserved_at?: number | null
    available_at: number
    created_at: number
  }

  export type jobsUncheckedCreateInput = {
    id?: bigint | number
    queue: string
    payload: string
    attempts: number
    reserved_at?: number | null
    available_at: number
    created_at: number
  }

  export type jobsUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    queue?: StringFieldUpdateOperationsInput | string
    payload?: StringFieldUpdateOperationsInput | string
    attempts?: IntFieldUpdateOperationsInput | number
    reserved_at?: NullableIntFieldUpdateOperationsInput | number | null
    available_at?: IntFieldUpdateOperationsInput | number
    created_at?: IntFieldUpdateOperationsInput | number
  }

  export type jobsUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    queue?: StringFieldUpdateOperationsInput | string
    payload?: StringFieldUpdateOperationsInput | string
    attempts?: IntFieldUpdateOperationsInput | number
    reserved_at?: NullableIntFieldUpdateOperationsInput | number | null
    available_at?: IntFieldUpdateOperationsInput | number
    created_at?: IntFieldUpdateOperationsInput | number
  }

  export type jobsCreateManyInput = {
    id?: bigint | number
    queue: string
    payload: string
    attempts: number
    reserved_at?: number | null
    available_at: number
    created_at: number
  }

  export type jobsUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    queue?: StringFieldUpdateOperationsInput | string
    payload?: StringFieldUpdateOperationsInput | string
    attempts?: IntFieldUpdateOperationsInput | number
    reserved_at?: NullableIntFieldUpdateOperationsInput | number | null
    available_at?: IntFieldUpdateOperationsInput | number
    created_at?: IntFieldUpdateOperationsInput | number
  }

  export type jobsUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    queue?: StringFieldUpdateOperationsInput | string
    payload?: StringFieldUpdateOperationsInput | string
    attempts?: IntFieldUpdateOperationsInput | number
    reserved_at?: NullableIntFieldUpdateOperationsInput | number | null
    available_at?: IntFieldUpdateOperationsInput | number
    created_at?: IntFieldUpdateOperationsInput | number
  }

  export type migrationsCreateInput = {
    migration: string
    batch: number
  }

  export type migrationsUncheckedCreateInput = {
    id?: number
    migration: string
    batch: number
  }

  export type migrationsUpdateInput = {
    migration?: StringFieldUpdateOperationsInput | string
    batch?: IntFieldUpdateOperationsInput | number
  }

  export type migrationsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    migration?: StringFieldUpdateOperationsInput | string
    batch?: IntFieldUpdateOperationsInput | number
  }

  export type migrationsCreateManyInput = {
    id?: number
    migration: string
    batch: number
  }

  export type migrationsUpdateManyMutationInput = {
    migration?: StringFieldUpdateOperationsInput | string
    batch?: IntFieldUpdateOperationsInput | number
  }

  export type migrationsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    migration?: StringFieldUpdateOperationsInput | string
    batch?: IntFieldUpdateOperationsInput | number
  }

  export type model_has_permissionsCreateInput = {
    model_type: string
    model_id: bigint | number
    permissions: permissionsCreateNestedOneWithoutModel_has_permissionsInput
  }

  export type model_has_permissionsUncheckedCreateInput = {
    permission_id: bigint | number
    model_type: string
    model_id: bigint | number
  }

  export type model_has_permissionsUpdateInput = {
    model_type?: StringFieldUpdateOperationsInput | string
    model_id?: BigIntFieldUpdateOperationsInput | bigint | number
    permissions?: permissionsUpdateOneRequiredWithoutModel_has_permissionsNestedInput
  }

  export type model_has_permissionsUncheckedUpdateInput = {
    permission_id?: BigIntFieldUpdateOperationsInput | bigint | number
    model_type?: StringFieldUpdateOperationsInput | string
    model_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type model_has_permissionsCreateManyInput = {
    permission_id: bigint | number
    model_type: string
    model_id: bigint | number
  }

  export type model_has_permissionsUpdateManyMutationInput = {
    model_type?: StringFieldUpdateOperationsInput | string
    model_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type model_has_permissionsUncheckedUpdateManyInput = {
    permission_id?: BigIntFieldUpdateOperationsInput | bigint | number
    model_type?: StringFieldUpdateOperationsInput | string
    model_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type model_has_rolesCreateInput = {
    model_type: string
    model_id: bigint | number
    roles: rolesCreateNestedOneWithoutModel_has_rolesInput
  }

  export type model_has_rolesUncheckedCreateInput = {
    role_id: bigint | number
    model_type: string
    model_id: bigint | number
  }

  export type model_has_rolesUpdateInput = {
    model_type?: StringFieldUpdateOperationsInput | string
    model_id?: BigIntFieldUpdateOperationsInput | bigint | number
    roles?: rolesUpdateOneRequiredWithoutModel_has_rolesNestedInput
  }

  export type model_has_rolesUncheckedUpdateInput = {
    role_id?: BigIntFieldUpdateOperationsInput | bigint | number
    model_type?: StringFieldUpdateOperationsInput | string
    model_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type model_has_rolesCreateManyInput = {
    role_id: bigint | number
    model_type: string
    model_id: bigint | number
  }

  export type model_has_rolesUpdateManyMutationInput = {
    model_type?: StringFieldUpdateOperationsInput | string
    model_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type model_has_rolesUncheckedUpdateManyInput = {
    role_id?: BigIntFieldUpdateOperationsInput | bigint | number
    model_type?: StringFieldUpdateOperationsInput | string
    model_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type oauth_access_tokensCreateInput = {
    id: string
    user_id?: bigint | number | null
    client_id: bigint | number
    name?: string | null
    scopes?: string | null
    revoked: boolean
    created_at?: Date | string | null
    updated_at?: Date | string | null
    expires_at?: Date | string | null
  }

  export type oauth_access_tokensUncheckedCreateInput = {
    id: string
    user_id?: bigint | number | null
    client_id: bigint | number
    name?: string | null
    scopes?: string | null
    revoked: boolean
    created_at?: Date | string | null
    updated_at?: Date | string | null
    expires_at?: Date | string | null
  }

  export type oauth_access_tokensUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    client_id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    scopes?: NullableStringFieldUpdateOperationsInput | string | null
    revoked?: BoolFieldUpdateOperationsInput | boolean
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type oauth_access_tokensUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    client_id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    scopes?: NullableStringFieldUpdateOperationsInput | string | null
    revoked?: BoolFieldUpdateOperationsInput | boolean
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type oauth_access_tokensCreateManyInput = {
    id: string
    user_id?: bigint | number | null
    client_id: bigint | number
    name?: string | null
    scopes?: string | null
    revoked: boolean
    created_at?: Date | string | null
    updated_at?: Date | string | null
    expires_at?: Date | string | null
  }

  export type oauth_access_tokensUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    client_id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    scopes?: NullableStringFieldUpdateOperationsInput | string | null
    revoked?: BoolFieldUpdateOperationsInput | boolean
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type oauth_access_tokensUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    client_id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    scopes?: NullableStringFieldUpdateOperationsInput | string | null
    revoked?: BoolFieldUpdateOperationsInput | boolean
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type oauth_auth_codesCreateInput = {
    id: string
    user_id: bigint | number
    client_id: bigint | number
    scopes?: string | null
    revoked: boolean
    expires_at?: Date | string | null
  }

  export type oauth_auth_codesUncheckedCreateInput = {
    id: string
    user_id: bigint | number
    client_id: bigint | number
    scopes?: string | null
    revoked: boolean
    expires_at?: Date | string | null
  }

  export type oauth_auth_codesUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    client_id?: BigIntFieldUpdateOperationsInput | bigint | number
    scopes?: NullableStringFieldUpdateOperationsInput | string | null
    revoked?: BoolFieldUpdateOperationsInput | boolean
    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type oauth_auth_codesUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    client_id?: BigIntFieldUpdateOperationsInput | bigint | number
    scopes?: NullableStringFieldUpdateOperationsInput | string | null
    revoked?: BoolFieldUpdateOperationsInput | boolean
    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type oauth_auth_codesCreateManyInput = {
    id: string
    user_id: bigint | number
    client_id: bigint | number
    scopes?: string | null
    revoked: boolean
    expires_at?: Date | string | null
  }

  export type oauth_auth_codesUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    client_id?: BigIntFieldUpdateOperationsInput | bigint | number
    scopes?: NullableStringFieldUpdateOperationsInput | string | null
    revoked?: BoolFieldUpdateOperationsInput | boolean
    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type oauth_auth_codesUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    client_id?: BigIntFieldUpdateOperationsInput | bigint | number
    scopes?: NullableStringFieldUpdateOperationsInput | string | null
    revoked?: BoolFieldUpdateOperationsInput | boolean
    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type oauth_clientsCreateInput = {
    id?: bigint | number
    user_id?: bigint | number | null
    name: string
    secret?: string | null
    provider?: string | null
    redirect: string
    personal_access_client: boolean
    password_client: boolean
    revoked: boolean
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type oauth_clientsUncheckedCreateInput = {
    id?: bigint | number
    user_id?: bigint | number | null
    name: string
    secret?: string | null
    provider?: string | null
    redirect: string
    personal_access_client: boolean
    password_client: boolean
    revoked: boolean
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type oauth_clientsUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    name?: StringFieldUpdateOperationsInput | string
    secret?: NullableStringFieldUpdateOperationsInput | string | null
    provider?: NullableStringFieldUpdateOperationsInput | string | null
    redirect?: StringFieldUpdateOperationsInput | string
    personal_access_client?: BoolFieldUpdateOperationsInput | boolean
    password_client?: BoolFieldUpdateOperationsInput | boolean
    revoked?: BoolFieldUpdateOperationsInput | boolean
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type oauth_clientsUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    name?: StringFieldUpdateOperationsInput | string
    secret?: NullableStringFieldUpdateOperationsInput | string | null
    provider?: NullableStringFieldUpdateOperationsInput | string | null
    redirect?: StringFieldUpdateOperationsInput | string
    personal_access_client?: BoolFieldUpdateOperationsInput | boolean
    password_client?: BoolFieldUpdateOperationsInput | boolean
    revoked?: BoolFieldUpdateOperationsInput | boolean
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type oauth_clientsCreateManyInput = {
    id?: bigint | number
    user_id?: bigint | number | null
    name: string
    secret?: string | null
    provider?: string | null
    redirect: string
    personal_access_client: boolean
    password_client: boolean
    revoked: boolean
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type oauth_clientsUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    name?: StringFieldUpdateOperationsInput | string
    secret?: NullableStringFieldUpdateOperationsInput | string | null
    provider?: NullableStringFieldUpdateOperationsInput | string | null
    redirect?: StringFieldUpdateOperationsInput | string
    personal_access_client?: BoolFieldUpdateOperationsInput | boolean
    password_client?: BoolFieldUpdateOperationsInput | boolean
    revoked?: BoolFieldUpdateOperationsInput | boolean
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type oauth_clientsUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    name?: StringFieldUpdateOperationsInput | string
    secret?: NullableStringFieldUpdateOperationsInput | string | null
    provider?: NullableStringFieldUpdateOperationsInput | string | null
    redirect?: StringFieldUpdateOperationsInput | string
    personal_access_client?: BoolFieldUpdateOperationsInput | boolean
    password_client?: BoolFieldUpdateOperationsInput | boolean
    revoked?: BoolFieldUpdateOperationsInput | boolean
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type oauth_personal_access_clientsCreateInput = {
    id?: bigint | number
    client_id: bigint | number
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type oauth_personal_access_clientsUncheckedCreateInput = {
    id?: bigint | number
    client_id: bigint | number
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type oauth_personal_access_clientsUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    client_id?: BigIntFieldUpdateOperationsInput | bigint | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type oauth_personal_access_clientsUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    client_id?: BigIntFieldUpdateOperationsInput | bigint | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type oauth_personal_access_clientsCreateManyInput = {
    id?: bigint | number
    client_id: bigint | number
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type oauth_personal_access_clientsUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    client_id?: BigIntFieldUpdateOperationsInput | bigint | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type oauth_personal_access_clientsUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    client_id?: BigIntFieldUpdateOperationsInput | bigint | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type oauth_refresh_tokensCreateInput = {
    id: string
    access_token_id: string
    revoked: boolean
    expires_at?: Date | string | null
  }

  export type oauth_refresh_tokensUncheckedCreateInput = {
    id: string
    access_token_id: string
    revoked: boolean
    expires_at?: Date | string | null
  }

  export type oauth_refresh_tokensUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    access_token_id?: StringFieldUpdateOperationsInput | string
    revoked?: BoolFieldUpdateOperationsInput | boolean
    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type oauth_refresh_tokensUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    access_token_id?: StringFieldUpdateOperationsInput | string
    revoked?: BoolFieldUpdateOperationsInput | boolean
    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type oauth_refresh_tokensCreateManyInput = {
    id: string
    access_token_id: string
    revoked: boolean
    expires_at?: Date | string | null
  }

  export type oauth_refresh_tokensUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    access_token_id?: StringFieldUpdateOperationsInput | string
    revoked?: BoolFieldUpdateOperationsInput | boolean
    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type oauth_refresh_tokensUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    access_token_id?: StringFieldUpdateOperationsInput | string
    revoked?: BoolFieldUpdateOperationsInput | boolean
    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type offer_categoriesCreateInput = {
    id?: bigint | number
    title: string
    icon?: string | null
    description?: string | null
    status?: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
    offers?: offersCreateNestedManyWithoutOffer_categoriesInput
    providers?: providersCreateNestedManyWithoutOffer_categoriesInput
  }

  export type offer_categoriesUncheckedCreateInput = {
    id?: bigint | number
    title: string
    icon?: string | null
    description?: string | null
    status?: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
    offers?: offersUncheckedCreateNestedManyWithoutOffer_categoriesInput
    providers?: providersUncheckedCreateNestedManyWithoutOffer_categoriesInput
  }

  export type offer_categoriesUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    offers?: offersUpdateManyWithoutOffer_categoriesNestedInput
    providers?: providersUpdateManyWithoutOffer_categoriesNestedInput
  }

  export type offer_categoriesUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    offers?: offersUncheckedUpdateManyWithoutOffer_categoriesNestedInput
    providers?: providersUncheckedUpdateManyWithoutOffer_categoriesNestedInput
  }

  export type offer_categoriesCreateManyInput = {
    id?: bigint | number
    title: string
    icon?: string | null
    description?: string | null
    status?: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type offer_categoriesUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type offer_categoriesUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type offersCreateInput = {
    id?: bigint | number
    title: string
    icon?: string | null
    description?: string | null
    price?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    offer_categories: offer_categoriesCreateNestedOneWithoutOffersInput
    provider_offers?: provider_offersCreateNestedManyWithoutOffersInput
    subscription_plan_offers?: subscription_plan_offersCreateNestedManyWithoutOffersInput
    subscription_usages?: subscription_usagesCreateNestedManyWithoutOffersInput
  }

  export type offersUncheckedCreateInput = {
    id?: bigint | number
    category_id: bigint | number
    title: string
    icon?: string | null
    description?: string | null
    price?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    provider_offers?: provider_offersUncheckedCreateNestedManyWithoutOffersInput
    subscription_plan_offers?: subscription_plan_offersUncheckedCreateNestedManyWithoutOffersInput
    subscription_usages?: subscription_usagesUncheckedCreateNestedManyWithoutOffersInput
  }

  export type offersUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    offer_categories?: offer_categoriesUpdateOneRequiredWithoutOffersNestedInput
    provider_offers?: provider_offersUpdateManyWithoutOffersNestedInput
    subscription_plan_offers?: subscription_plan_offersUpdateManyWithoutOffersNestedInput
    subscription_usages?: subscription_usagesUpdateManyWithoutOffersNestedInput
  }

  export type offersUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    category_id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    provider_offers?: provider_offersUncheckedUpdateManyWithoutOffersNestedInput
    subscription_plan_offers?: subscription_plan_offersUncheckedUpdateManyWithoutOffersNestedInput
    subscription_usages?: subscription_usagesUncheckedUpdateManyWithoutOffersNestedInput
  }

  export type offersCreateManyInput = {
    id?: bigint | number
    category_id: bigint | number
    title: string
    icon?: string | null
    description?: string | null
    price?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type offersUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type offersUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    category_id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ordersCreateInput = {
    id?: bigint | number
    buyer_type: string
    buyer_id: bigint | number
    purchasable_type: string
    purchasable_id: bigint | number
    amount: Decimal | DecimalJsLike | number | string
    status: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
    tracking_code?: string | null
    customer_subscriptions?: customer_subscriptionsCreateNestedOneWithoutOrdersInput
    payments?: paymentsCreateNestedManyWithoutOrdersInput
  }

  export type ordersUncheckedCreateInput = {
    id?: bigint | number
    buyer_type: string
    buyer_id: bigint | number
    purchasable_type: string
    purchasable_id: bigint | number
    amount: Decimal | DecimalJsLike | number | string
    status: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
    tracking_code?: string | null
    customer_subscriptions?: customer_subscriptionsUncheckedCreateNestedOneWithoutOrdersInput
    payments?: paymentsUncheckedCreateNestedManyWithoutOrdersInput
  }

  export type ordersUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    buyer_type?: StringFieldUpdateOperationsInput | string
    buyer_id?: BigIntFieldUpdateOperationsInput | bigint | number
    purchasable_type?: StringFieldUpdateOperationsInput | string
    purchasable_id?: BigIntFieldUpdateOperationsInput | bigint | number
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tracking_code?: NullableStringFieldUpdateOperationsInput | string | null
    customer_subscriptions?: customer_subscriptionsUpdateOneWithoutOrdersNestedInput
    payments?: paymentsUpdateManyWithoutOrdersNestedInput
  }

  export type ordersUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    buyer_type?: StringFieldUpdateOperationsInput | string
    buyer_id?: BigIntFieldUpdateOperationsInput | bigint | number
    purchasable_type?: StringFieldUpdateOperationsInput | string
    purchasable_id?: BigIntFieldUpdateOperationsInput | bigint | number
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tracking_code?: NullableStringFieldUpdateOperationsInput | string | null
    customer_subscriptions?: customer_subscriptionsUncheckedUpdateOneWithoutOrdersNestedInput
    payments?: paymentsUncheckedUpdateManyWithoutOrdersNestedInput
  }

  export type ordersCreateManyInput = {
    id?: bigint | number
    buyer_type: string
    buyer_id: bigint | number
    purchasable_type: string
    purchasable_id: bigint | number
    amount: Decimal | DecimalJsLike | number | string
    status: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
    tracking_code?: string | null
  }

  export type ordersUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    buyer_type?: StringFieldUpdateOperationsInput | string
    buyer_id?: BigIntFieldUpdateOperationsInput | bigint | number
    purchasable_type?: StringFieldUpdateOperationsInput | string
    purchasable_id?: BigIntFieldUpdateOperationsInput | bigint | number
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tracking_code?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ordersUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    buyer_type?: StringFieldUpdateOperationsInput | string
    buyer_id?: BigIntFieldUpdateOperationsInput | bigint | number
    purchasable_type?: StringFieldUpdateOperationsInput | string
    purchasable_id?: BigIntFieldUpdateOperationsInput | bigint | number
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tracking_code?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type otpsCreateInput = {
    id?: bigint | number
    code: string
    channel?: number
    reason: string
    expires_at: Date | string
    authenticatable_type: string
    authenticatable_id: bigint | number
    is_used?: boolean
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type otpsUncheckedCreateInput = {
    id?: bigint | number
    code: string
    channel?: number
    reason: string
    expires_at: Date | string
    authenticatable_type: string
    authenticatable_id: bigint | number
    is_used?: boolean
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type otpsUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    code?: StringFieldUpdateOperationsInput | string
    channel?: IntFieldUpdateOperationsInput | number
    reason?: StringFieldUpdateOperationsInput | string
    expires_at?: DateTimeFieldUpdateOperationsInput | Date | string
    authenticatable_type?: StringFieldUpdateOperationsInput | string
    authenticatable_id?: BigIntFieldUpdateOperationsInput | bigint | number
    is_used?: BoolFieldUpdateOperationsInput | boolean
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type otpsUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    code?: StringFieldUpdateOperationsInput | string
    channel?: IntFieldUpdateOperationsInput | number
    reason?: StringFieldUpdateOperationsInput | string
    expires_at?: DateTimeFieldUpdateOperationsInput | Date | string
    authenticatable_type?: StringFieldUpdateOperationsInput | string
    authenticatable_id?: BigIntFieldUpdateOperationsInput | bigint | number
    is_used?: BoolFieldUpdateOperationsInput | boolean
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type otpsCreateManyInput = {
    id?: bigint | number
    code: string
    channel?: number
    reason: string
    expires_at: Date | string
    authenticatable_type: string
    authenticatable_id: bigint | number
    is_used?: boolean
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type otpsUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    code?: StringFieldUpdateOperationsInput | string
    channel?: IntFieldUpdateOperationsInput | number
    reason?: StringFieldUpdateOperationsInput | string
    expires_at?: DateTimeFieldUpdateOperationsInput | Date | string
    authenticatable_type?: StringFieldUpdateOperationsInput | string
    authenticatable_id?: BigIntFieldUpdateOperationsInput | bigint | number
    is_used?: BoolFieldUpdateOperationsInput | boolean
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type otpsUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    code?: StringFieldUpdateOperationsInput | string
    channel?: IntFieldUpdateOperationsInput | number
    reason?: StringFieldUpdateOperationsInput | string
    expires_at?: DateTimeFieldUpdateOperationsInput | Date | string
    authenticatable_type?: StringFieldUpdateOperationsInput | string
    authenticatable_id?: BigIntFieldUpdateOperationsInput | bigint | number
    is_used?: BoolFieldUpdateOperationsInput | boolean
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type paymentsCreateInput = {
    id?: bigint | number
    transaction_id: string
    res_num: string
    status?: number
    amount: Decimal | DecimalJsLike | number | string
    payment_method?: string | null
    payment_gateway?: string | null
    paid_at?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    receipt_photo?: string | null
    orders: ordersCreateNestedOneWithoutPaymentsInput
  }

  export type paymentsUncheckedCreateInput = {
    id?: bigint | number
    order_id: bigint | number
    transaction_id: string
    res_num: string
    status?: number
    amount: Decimal | DecimalJsLike | number | string
    payment_method?: string | null
    payment_gateway?: string | null
    paid_at?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    receipt_photo?: string | null
  }

  export type paymentsUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    transaction_id?: StringFieldUpdateOperationsInput | string
    res_num?: StringFieldUpdateOperationsInput | string
    status?: IntFieldUpdateOperationsInput | number
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    payment_method?: NullableStringFieldUpdateOperationsInput | string | null
    payment_gateway?: NullableStringFieldUpdateOperationsInput | string | null
    paid_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    receipt_photo?: NullableStringFieldUpdateOperationsInput | string | null
    orders?: ordersUpdateOneRequiredWithoutPaymentsNestedInput
  }

  export type paymentsUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    order_id?: BigIntFieldUpdateOperationsInput | bigint | number
    transaction_id?: StringFieldUpdateOperationsInput | string
    res_num?: StringFieldUpdateOperationsInput | string
    status?: IntFieldUpdateOperationsInput | number
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    payment_method?: NullableStringFieldUpdateOperationsInput | string | null
    payment_gateway?: NullableStringFieldUpdateOperationsInput | string | null
    paid_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    receipt_photo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type paymentsCreateManyInput = {
    id?: bigint | number
    order_id: bigint | number
    transaction_id: string
    res_num: string
    status?: number
    amount: Decimal | DecimalJsLike | number | string
    payment_method?: string | null
    payment_gateway?: string | null
    paid_at?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    receipt_photo?: string | null
  }

  export type paymentsUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    transaction_id?: StringFieldUpdateOperationsInput | string
    res_num?: StringFieldUpdateOperationsInput | string
    status?: IntFieldUpdateOperationsInput | number
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    payment_method?: NullableStringFieldUpdateOperationsInput | string | null
    payment_gateway?: NullableStringFieldUpdateOperationsInput | string | null
    paid_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    receipt_photo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type paymentsUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    order_id?: BigIntFieldUpdateOperationsInput | bigint | number
    transaction_id?: StringFieldUpdateOperationsInput | string
    res_num?: StringFieldUpdateOperationsInput | string
    status?: IntFieldUpdateOperationsInput | number
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    payment_method?: NullableStringFieldUpdateOperationsInput | string | null
    payment_gateway?: NullableStringFieldUpdateOperationsInput | string | null
    paid_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    receipt_photo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type permissionsCreateInput = {
    id?: bigint | number
    name: string
    guard_name: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    model_has_permissions?: model_has_permissionsCreateNestedManyWithoutPermissionsInput
    role_has_permissions?: role_has_permissionsCreateNestedManyWithoutPermissionsInput
  }

  export type permissionsUncheckedCreateInput = {
    id?: bigint | number
    name: string
    guard_name: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    model_has_permissions?: model_has_permissionsUncheckedCreateNestedManyWithoutPermissionsInput
    role_has_permissions?: role_has_permissionsUncheckedCreateNestedManyWithoutPermissionsInput
  }

  export type permissionsUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    guard_name?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    model_has_permissions?: model_has_permissionsUpdateManyWithoutPermissionsNestedInput
    role_has_permissions?: role_has_permissionsUpdateManyWithoutPermissionsNestedInput
  }

  export type permissionsUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    guard_name?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    model_has_permissions?: model_has_permissionsUncheckedUpdateManyWithoutPermissionsNestedInput
    role_has_permissions?: role_has_permissionsUncheckedUpdateManyWithoutPermissionsNestedInput
  }

  export type permissionsCreateManyInput = {
    id?: bigint | number
    name: string
    guard_name: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type permissionsUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    guard_name?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type permissionsUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    guard_name?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type personal_access_tokensCreateInput = {
    id?: bigint | number
    tokenable_type: string
    tokenable_id: bigint | number
    name: string
    token: string
    abilities?: string | null
    last_used_at?: Date | string | null
    expires_at?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type personal_access_tokensUncheckedCreateInput = {
    id?: bigint | number
    tokenable_type: string
    tokenable_id: bigint | number
    name: string
    token: string
    abilities?: string | null
    last_used_at?: Date | string | null
    expires_at?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type personal_access_tokensUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    tokenable_type?: StringFieldUpdateOperationsInput | string
    tokenable_id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    abilities?: NullableStringFieldUpdateOperationsInput | string | null
    last_used_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type personal_access_tokensUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    tokenable_type?: StringFieldUpdateOperationsInput | string
    tokenable_id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    abilities?: NullableStringFieldUpdateOperationsInput | string | null
    last_used_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type personal_access_tokensCreateManyInput = {
    id?: bigint | number
    tokenable_type: string
    tokenable_id: bigint | number
    name: string
    token: string
    abilities?: string | null
    last_used_at?: Date | string | null
    expires_at?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type personal_access_tokensUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    tokenable_type?: StringFieldUpdateOperationsInput | string
    tokenable_id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    abilities?: NullableStringFieldUpdateOperationsInput | string | null
    last_used_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type personal_access_tokensUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    tokenable_type?: StringFieldUpdateOperationsInput | string
    tokenable_id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    abilities?: NullableStringFieldUpdateOperationsInput | string | null
    last_used_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type provider_agentsCreateInput = {
    id?: bigint | number
    role?: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
    providers: providersCreateNestedOneWithoutProvider_agentsInput
    admins: adminsCreateNestedOneWithoutProvider_agentsInput
    subscription_usages?: subscription_usagesCreateNestedManyWithoutProvider_agentsInput
  }

  export type provider_agentsUncheckedCreateInput = {
    id?: bigint | number
    provider_id: bigint | number
    user_id: bigint | number
    role?: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
    subscription_usages?: subscription_usagesUncheckedCreateNestedManyWithoutProvider_agentsInput
  }

  export type provider_agentsUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    role?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    providers?: providersUpdateOneRequiredWithoutProvider_agentsNestedInput
    admins?: adminsUpdateOneRequiredWithoutProvider_agentsNestedInput
    subscription_usages?: subscription_usagesUpdateManyWithoutProvider_agentsNestedInput
  }

  export type provider_agentsUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    provider_id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    role?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    subscription_usages?: subscription_usagesUncheckedUpdateManyWithoutProvider_agentsNestedInput
  }

  export type provider_agentsCreateManyInput = {
    id?: bigint | number
    provider_id: bigint | number
    user_id: bigint | number
    role?: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type provider_agentsUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    role?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type provider_agentsUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    provider_id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    role?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type provider_offersCreateInput = {
    id?: bigint | number
    created_at?: Date | string | null
    updated_at?: Date | string | null
    offers: offersCreateNestedOneWithoutProvider_offersInput
    providers: providersCreateNestedOneWithoutProvider_offersInput
  }

  export type provider_offersUncheckedCreateInput = {
    id?: bigint | number
    provider_id: bigint | number
    offer_id: bigint | number
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type provider_offersUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    offers?: offersUpdateOneRequiredWithoutProvider_offersNestedInput
    providers?: providersUpdateOneRequiredWithoutProvider_offersNestedInput
  }

  export type provider_offersUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    provider_id?: BigIntFieldUpdateOperationsInput | bigint | number
    offer_id?: BigIntFieldUpdateOperationsInput | bigint | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type provider_offersCreateManyInput = {
    id?: bigint | number
    provider_id: bigint | number
    offer_id: bigint | number
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type provider_offersUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type provider_offersUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    provider_id?: BigIntFieldUpdateOperationsInput | bigint | number
    offer_id?: BigIntFieldUpdateOperationsInput | bigint | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type providersCreateInput = {
    id?: bigint | number
    name: string
    description?: string | null
    address: string
    phone_number: JsonNullValueInput | InputJsonValue
    main_image: string
    slider_images: JsonNullValueInput | InputJsonValue
    latitude: Decimal | DecimalJsLike | number | string
    longitude: Decimal | DecimalJsLike | number | string
    is_verified?: boolean
    status?: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
    provider_agents?: provider_agentsCreateNestedManyWithoutProvidersInput
    provider_menu?: provider_menuCreateNestedOneWithoutProvidersInput
    provider_offers?: provider_offersCreateNestedManyWithoutProvidersInput
    offer_categories: offer_categoriesCreateNestedOneWithoutProvidersInput
    subscription_usages?: subscription_usagesCreateNestedManyWithoutProvidersInput
  }

  export type providersUncheckedCreateInput = {
    id?: bigint | number
    name: string
    description?: string | null
    category_id: bigint | number
    address: string
    phone_number: JsonNullValueInput | InputJsonValue
    main_image: string
    slider_images: JsonNullValueInput | InputJsonValue
    latitude: Decimal | DecimalJsLike | number | string
    longitude: Decimal | DecimalJsLike | number | string
    is_verified?: boolean
    status?: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
    provider_agents?: provider_agentsUncheckedCreateNestedManyWithoutProvidersInput
    provider_menu?: provider_menuUncheckedCreateNestedOneWithoutProvidersInput
    provider_offers?: provider_offersUncheckedCreateNestedManyWithoutProvidersInput
    subscription_usages?: subscription_usagesUncheckedCreateNestedManyWithoutProvidersInput
  }

  export type providersUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    phone_number?: JsonNullValueInput | InputJsonValue
    main_image?: StringFieldUpdateOperationsInput | string
    slider_images?: JsonNullValueInput | InputJsonValue
    latitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    longitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    is_verified?: BoolFieldUpdateOperationsInput | boolean
    status?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    provider_agents?: provider_agentsUpdateManyWithoutProvidersNestedInput
    provider_menu?: provider_menuUpdateOneWithoutProvidersNestedInput
    provider_offers?: provider_offersUpdateManyWithoutProvidersNestedInput
    offer_categories?: offer_categoriesUpdateOneRequiredWithoutProvidersNestedInput
    subscription_usages?: subscription_usagesUpdateManyWithoutProvidersNestedInput
  }

  export type providersUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category_id?: BigIntFieldUpdateOperationsInput | bigint | number
    address?: StringFieldUpdateOperationsInput | string
    phone_number?: JsonNullValueInput | InputJsonValue
    main_image?: StringFieldUpdateOperationsInput | string
    slider_images?: JsonNullValueInput | InputJsonValue
    latitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    longitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    is_verified?: BoolFieldUpdateOperationsInput | boolean
    status?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    provider_agents?: provider_agentsUncheckedUpdateManyWithoutProvidersNestedInput
    provider_menu?: provider_menuUncheckedUpdateOneWithoutProvidersNestedInput
    provider_offers?: provider_offersUncheckedUpdateManyWithoutProvidersNestedInput
    subscription_usages?: subscription_usagesUncheckedUpdateManyWithoutProvidersNestedInput
  }

  export type providersCreateManyInput = {
    id?: bigint | number
    name: string
    description?: string | null
    category_id: bigint | number
    address: string
    phone_number: JsonNullValueInput | InputJsonValue
    main_image: string
    slider_images: JsonNullValueInput | InputJsonValue
    latitude: Decimal | DecimalJsLike | number | string
    longitude: Decimal | DecimalJsLike | number | string
    is_verified?: boolean
    status?: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type providersUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    phone_number?: JsonNullValueInput | InputJsonValue
    main_image?: StringFieldUpdateOperationsInput | string
    slider_images?: JsonNullValueInput | InputJsonValue
    latitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    longitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    is_verified?: BoolFieldUpdateOperationsInput | boolean
    status?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type providersUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category_id?: BigIntFieldUpdateOperationsInput | bigint | number
    address?: StringFieldUpdateOperationsInput | string
    phone_number?: JsonNullValueInput | InputJsonValue
    main_image?: StringFieldUpdateOperationsInput | string
    slider_images?: JsonNullValueInput | InputJsonValue
    latitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    longitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    is_verified?: BoolFieldUpdateOperationsInput | boolean
    status?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type provider_menuCreateInput = {
    id?: bigint | number
    title?: string | null
    description?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    providers: providersCreateNestedOneWithoutProvider_menuInput
    provider_menu_items?: provider_menu_itemsCreateNestedManyWithoutProvider_menuInput
    provider_menu_categories?: provider_menu_categoriesCreateNestedManyWithoutProvider_menuInput
  }

  export type provider_menuUncheckedCreateInput = {
    id?: bigint | number
    provider_id: bigint | number
    title?: string | null
    description?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    provider_menu_items?: provider_menu_itemsUncheckedCreateNestedManyWithoutProvider_menuInput
    provider_menu_categories?: provider_menu_categoriesUncheckedCreateNestedManyWithoutProvider_menuInput
  }

  export type provider_menuUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    providers?: providersUpdateOneRequiredWithoutProvider_menuNestedInput
    provider_menu_items?: provider_menu_itemsUpdateManyWithoutProvider_menuNestedInput
    provider_menu_categories?: provider_menu_categoriesUpdateManyWithoutProvider_menuNestedInput
  }

  export type provider_menuUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    provider_id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    provider_menu_items?: provider_menu_itemsUncheckedUpdateManyWithoutProvider_menuNestedInput
    provider_menu_categories?: provider_menu_categoriesUncheckedUpdateManyWithoutProvider_menuNestedInput
  }

  export type provider_menuCreateManyInput = {
    id?: bigint | number
    provider_id: bigint | number
    title?: string | null
    description?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type provider_menuUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type provider_menuUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    provider_id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type provider_menu_itemsCreateInput = {
    id?: bigint | number
    title: string
    description?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    price: Decimal | DecimalJsLike | number | string
    provider_menu_categories: provider_menu_categoriesCreateNestedOneWithoutProvider_menu_itemsInput
    provider_menu: provider_menuCreateNestedOneWithoutProvider_menu_itemsInput
  }

  export type provider_menu_itemsUncheckedCreateInput = {
    id?: bigint | number
    menu_id: bigint | number
    title: string
    description?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    category_id: bigint | number
    price: Decimal | DecimalJsLike | number | string
  }

  export type provider_menu_itemsUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    provider_menu_categories?: provider_menu_categoriesUpdateOneRequiredWithoutProvider_menu_itemsNestedInput
    provider_menu?: provider_menuUpdateOneRequiredWithoutProvider_menu_itemsNestedInput
  }

  export type provider_menu_itemsUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    menu_id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    category_id?: BigIntFieldUpdateOperationsInput | bigint | number
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type provider_menu_itemsCreateManyInput = {
    id?: bigint | number
    menu_id: bigint | number
    title: string
    description?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    category_id: bigint | number
    price: Decimal | DecimalJsLike | number | string
  }

  export type provider_menu_itemsUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type provider_menu_itemsUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    menu_id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    category_id?: BigIntFieldUpdateOperationsInput | bigint | number
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type provider_menu_categoriesCreateInput = {
    id?: bigint | number
    title: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    provider_menu: provider_menuCreateNestedOneWithoutProvider_menu_categoriesInput
    provider_menu_items?: provider_menu_itemsCreateNestedManyWithoutProvider_menu_categoriesInput
  }

  export type provider_menu_categoriesUncheckedCreateInput = {
    id?: bigint | number
    menu_id: bigint | number
    title: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    provider_menu_items?: provider_menu_itemsUncheckedCreateNestedManyWithoutProvider_menu_categoriesInput
  }

  export type provider_menu_categoriesUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    provider_menu?: provider_menuUpdateOneRequiredWithoutProvider_menu_categoriesNestedInput
    provider_menu_items?: provider_menu_itemsUpdateManyWithoutProvider_menu_categoriesNestedInput
  }

  export type provider_menu_categoriesUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    menu_id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    provider_menu_items?: provider_menu_itemsUncheckedUpdateManyWithoutProvider_menu_categoriesNestedInput
  }

  export type provider_menu_categoriesCreateManyInput = {
    id?: bigint | number
    menu_id: bigint | number
    title: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type provider_menu_categoriesUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type provider_menu_categoriesUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    menu_id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type role_has_permissionsCreateInput = {
    permissions: permissionsCreateNestedOneWithoutRole_has_permissionsInput
    roles: rolesCreateNestedOneWithoutRole_has_permissionsInput
  }

  export type role_has_permissionsUncheckedCreateInput = {
    permission_id: bigint | number
    role_id: bigint | number
  }

  export type role_has_permissionsUpdateInput = {
    permissions?: permissionsUpdateOneRequiredWithoutRole_has_permissionsNestedInput
    roles?: rolesUpdateOneRequiredWithoutRole_has_permissionsNestedInput
  }

  export type role_has_permissionsUncheckedUpdateInput = {
    permission_id?: BigIntFieldUpdateOperationsInput | bigint | number
    role_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type role_has_permissionsCreateManyInput = {
    permission_id: bigint | number
    role_id: bigint | number
  }

  export type role_has_permissionsUpdateManyMutationInput = {

  }

  export type role_has_permissionsUncheckedUpdateManyInput = {
    permission_id?: BigIntFieldUpdateOperationsInput | bigint | number
    role_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type rolesCreateInput = {
    id?: bigint | number
    name: string
    guard_name: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    model_has_roles?: model_has_rolesCreateNestedManyWithoutRolesInput
    role_has_permissions?: role_has_permissionsCreateNestedManyWithoutRolesInput
  }

  export type rolesUncheckedCreateInput = {
    id?: bigint | number
    name: string
    guard_name: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    model_has_roles?: model_has_rolesUncheckedCreateNestedManyWithoutRolesInput
    role_has_permissions?: role_has_permissionsUncheckedCreateNestedManyWithoutRolesInput
  }

  export type rolesUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    guard_name?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    model_has_roles?: model_has_rolesUpdateManyWithoutRolesNestedInput
    role_has_permissions?: role_has_permissionsUpdateManyWithoutRolesNestedInput
  }

  export type rolesUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    guard_name?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    model_has_roles?: model_has_rolesUncheckedUpdateManyWithoutRolesNestedInput
    role_has_permissions?: role_has_permissionsUncheckedUpdateManyWithoutRolesNestedInput
  }

  export type rolesCreateManyInput = {
    id?: bigint | number
    name: string
    guard_name: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type rolesUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    guard_name?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type rolesUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    guard_name?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type subscription_plan_offersCreateInput = {
    id?: bigint | number
    discount_percentage: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
    offers: offersCreateNestedOneWithoutSubscription_plan_offersInput
    subscription_plans: subscription_plansCreateNestedOneWithoutSubscription_plan_offersInput
  }

  export type subscription_plan_offersUncheckedCreateInput = {
    id?: bigint | number
    subscription_plan_id: bigint | number
    offer_id: bigint | number
    discount_percentage: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type subscription_plan_offersUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    discount_percentage?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    offers?: offersUpdateOneRequiredWithoutSubscription_plan_offersNestedInput
    subscription_plans?: subscription_plansUpdateOneRequiredWithoutSubscription_plan_offersNestedInput
  }

  export type subscription_plan_offersUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    subscription_plan_id?: BigIntFieldUpdateOperationsInput | bigint | number
    offer_id?: BigIntFieldUpdateOperationsInput | bigint | number
    discount_percentage?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type subscription_plan_offersCreateManyInput = {
    id?: bigint | number
    subscription_plan_id: bigint | number
    offer_id: bigint | number
    discount_percentage: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type subscription_plan_offersUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    discount_percentage?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type subscription_plan_offersUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    subscription_plan_id?: BigIntFieldUpdateOperationsInput | bigint | number
    offer_id?: BigIntFieldUpdateOperationsInput | bigint | number
    discount_percentage?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type subscription_plansCreateInput = {
    id?: bigint | number
    title: string
    duration: number
    price: Decimal | DecimalJsLike | number | string
    status?: number
    description?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    customer_subscriptions?: customer_subscriptionsCreateNestedManyWithoutSubscription_plansInput
    subscription_plan_offers?: subscription_plan_offersCreateNestedManyWithoutSubscription_plansInput
  }

  export type subscription_plansUncheckedCreateInput = {
    id?: bigint | number
    title: string
    duration: number
    price: Decimal | DecimalJsLike | number | string
    status?: number
    description?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    customer_subscriptions?: customer_subscriptionsUncheckedCreateNestedManyWithoutSubscription_plansInput
    subscription_plan_offers?: subscription_plan_offersUncheckedCreateNestedManyWithoutSubscription_plansInput
  }

  export type subscription_plansUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    duration?: IntFieldUpdateOperationsInput | number
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: IntFieldUpdateOperationsInput | number
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    customer_subscriptions?: customer_subscriptionsUpdateManyWithoutSubscription_plansNestedInput
    subscription_plan_offers?: subscription_plan_offersUpdateManyWithoutSubscription_plansNestedInput
  }

  export type subscription_plansUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    duration?: IntFieldUpdateOperationsInput | number
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: IntFieldUpdateOperationsInput | number
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    customer_subscriptions?: customer_subscriptionsUncheckedUpdateManyWithoutSubscription_plansNestedInput
    subscription_plan_offers?: subscription_plan_offersUncheckedUpdateManyWithoutSubscription_plansNestedInput
  }

  export type subscription_plansCreateManyInput = {
    id?: bigint | number
    title: string
    duration: number
    price: Decimal | DecimalJsLike | number | string
    status?: number
    description?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type subscription_plansUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    duration?: IntFieldUpdateOperationsInput | number
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: IntFieldUpdateOperationsInput | number
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type subscription_plansUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    duration?: IntFieldUpdateOperationsInput | number
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: IntFieldUpdateOperationsInput | number
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type subscription_usagesCreateInput = {
    id?: bigint | number
    total_amount: string
    status?: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    customers: customersCreateNestedOneWithoutSubscription_usagesInput
    customer_subscriptions: customer_subscriptionsCreateNestedOneWithoutSubscription_usagesInput
    offers: offersCreateNestedOneWithoutSubscription_usagesInput
    provider_agents: provider_agentsCreateNestedOneWithoutSubscription_usagesInput
    providers: providersCreateNestedOneWithoutSubscription_usagesInput
  }

  export type subscription_usagesUncheckedCreateInput = {
    id?: bigint | number
    provider_agent_id: bigint | number
    customer_id: bigint | number
    customer_subscription_id: bigint | number
    provider_id: bigint | number
    offer_id: bigint | number
    total_amount: string
    status?: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type subscription_usagesUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    total_amount?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    customers?: customersUpdateOneRequiredWithoutSubscription_usagesNestedInput
    customer_subscriptions?: customer_subscriptionsUpdateOneRequiredWithoutSubscription_usagesNestedInput
    offers?: offersUpdateOneRequiredWithoutSubscription_usagesNestedInput
    provider_agents?: provider_agentsUpdateOneRequiredWithoutSubscription_usagesNestedInput
    providers?: providersUpdateOneRequiredWithoutSubscription_usagesNestedInput
  }

  export type subscription_usagesUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    provider_agent_id?: BigIntFieldUpdateOperationsInput | bigint | number
    customer_id?: BigIntFieldUpdateOperationsInput | bigint | number
    customer_subscription_id?: BigIntFieldUpdateOperationsInput | bigint | number
    provider_id?: BigIntFieldUpdateOperationsInput | bigint | number
    offer_id?: BigIntFieldUpdateOperationsInput | bigint | number
    total_amount?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type subscription_usagesCreateManyInput = {
    id?: bigint | number
    provider_agent_id: bigint | number
    customer_id: bigint | number
    customer_subscription_id: bigint | number
    provider_id: bigint | number
    offer_id: bigint | number
    total_amount: string
    status?: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type subscription_usagesUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    total_amount?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type subscription_usagesUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    provider_agent_id?: BigIntFieldUpdateOperationsInput | bigint | number
    customer_id?: BigIntFieldUpdateOperationsInput | bigint | number
    customer_subscription_id?: BigIntFieldUpdateOperationsInput | bigint | number
    provider_id?: BigIntFieldUpdateOperationsInput | bigint | number
    offer_id?: BigIntFieldUpdateOperationsInput | bigint | number
    total_amount?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type BigIntFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntFilter<$PrismaModel> | bigint | number
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type Provider_agentsListRelationFilter = {
    every?: provider_agentsWhereInput
    some?: provider_agentsWhereInput
    none?: provider_agentsWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type provider_agentsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type adminsEmailDeleted_atCompoundUniqueInput = {
    email: string
    deleted_at: Date | string
  }

  export type adminsMobile_numberDeleted_atCompoundUniqueInput = {
    mobile_number: string
    deleted_at: Date | string
  }

  export type adminsSsnDeleted_atCompoundUniqueInput = {
    ssn: string
    deleted_at: Date | string
  }

  export type adminsCountOrderByAggregateInput = {
    id?: SortOrder
    first_name?: SortOrder
    last_name?: SortOrder
    gender?: SortOrder
    email?: SortOrder
    mobile_number?: SortOrder
    password?: SortOrder
    birthdate?: SortOrder
    ssn?: SortOrder
    otp_secret?: SortOrder
    status?: SortOrder
    is_verified?: SortOrder
    deleted_at?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type adminsAvgOrderByAggregateInput = {
    id?: SortOrder
    status?: SortOrder
  }

  export type adminsMaxOrderByAggregateInput = {
    id?: SortOrder
    first_name?: SortOrder
    last_name?: SortOrder
    gender?: SortOrder
    email?: SortOrder
    mobile_number?: SortOrder
    password?: SortOrder
    birthdate?: SortOrder
    ssn?: SortOrder
    otp_secret?: SortOrder
    status?: SortOrder
    is_verified?: SortOrder
    deleted_at?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type adminsMinOrderByAggregateInput = {
    id?: SortOrder
    first_name?: SortOrder
    last_name?: SortOrder
    gender?: SortOrder
    email?: SortOrder
    mobile_number?: SortOrder
    password?: SortOrder
    birthdate?: SortOrder
    ssn?: SortOrder
    otp_secret?: SortOrder
    status?: SortOrder
    is_verified?: SortOrder
    deleted_at?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type adminsSumOrderByAggregateInput = {
    id?: SortOrder
    status?: SortOrder
  }

  export type BigIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntWithAggregatesFilter<$PrismaModel> | bigint | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedBigIntFilter<$PrismaModel>
    _min?: NestedBigIntFilter<$PrismaModel>
    _max?: NestedBigIntFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type cacheCountOrderByAggregateInput = {
    key?: SortOrder
    value?: SortOrder
    expiration?: SortOrder
  }

  export type cacheAvgOrderByAggregateInput = {
    expiration?: SortOrder
  }

  export type cacheMaxOrderByAggregateInput = {
    key?: SortOrder
    value?: SortOrder
    expiration?: SortOrder
  }

  export type cacheMinOrderByAggregateInput = {
    key?: SortOrder
    value?: SortOrder
    expiration?: SortOrder
  }

  export type cacheSumOrderByAggregateInput = {
    expiration?: SortOrder
  }

  export type cache_locksCountOrderByAggregateInput = {
    key?: SortOrder
    owner?: SortOrder
    expiration?: SortOrder
  }

  export type cache_locksAvgOrderByAggregateInput = {
    expiration?: SortOrder
  }

  export type cache_locksMaxOrderByAggregateInput = {
    key?: SortOrder
    owner?: SortOrder
    expiration?: SortOrder
  }

  export type cache_locksMinOrderByAggregateInput = {
    key?: SortOrder
    owner?: SortOrder
    expiration?: SortOrder
  }

  export type cache_locksSumOrderByAggregateInput = {
    expiration?: SortOrder
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type CustomersScalarRelationFilter = {
    is?: customersWhereInput
    isNot?: customersWhereInput
  }

  export type OrdersScalarRelationFilter = {
    is?: ordersWhereInput
    isNot?: ordersWhereInput
  }

  export type Subscription_plansScalarRelationFilter = {
    is?: subscription_plansWhereInput
    isNot?: subscription_plansWhereInput
  }

  export type Subscription_usagesListRelationFilter = {
    every?: subscription_usagesWhereInput
    some?: subscription_usagesWhereInput
    none?: subscription_usagesWhereInput
  }

  export type subscription_usagesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type customer_subscriptionsCustomer_idSubscription_plan_idStatusCompoundUniqueInput = {
    customer_id: bigint | number
    subscription_plan_id: bigint | number
    status: number
  }

  export type customer_subscriptionsCountOrderByAggregateInput = {
    id?: SortOrder
    customer_id?: SortOrder
    subscription_plan_id?: SortOrder
    order_id?: SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type customer_subscriptionsAvgOrderByAggregateInput = {
    id?: SortOrder
    customer_id?: SortOrder
    subscription_plan_id?: SortOrder
    order_id?: SortOrder
    status?: SortOrder
  }

  export type customer_subscriptionsMaxOrderByAggregateInput = {
    id?: SortOrder
    customer_id?: SortOrder
    subscription_plan_id?: SortOrder
    order_id?: SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type customer_subscriptionsMinOrderByAggregateInput = {
    id?: SortOrder
    customer_id?: SortOrder
    subscription_plan_id?: SortOrder
    order_id?: SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type customer_subscriptionsSumOrderByAggregateInput = {
    id?: SortOrder
    customer_id?: SortOrder
    subscription_plan_id?: SortOrder
    order_id?: SortOrder
    status?: SortOrder
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type Customer_subscriptionsListRelationFilter = {
    every?: customer_subscriptionsWhereInput
    some?: customer_subscriptionsWhereInput
    none?: customer_subscriptionsWhereInput
  }

  export type customer_subscriptionsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type customersEmailDeleted_atCompoundUniqueInput = {
    email: string
    deleted_at: Date | string
  }

  export type customersMobile_numberDeleted_atCompoundUniqueInput = {
    mobile_number: string
    deleted_at: Date | string
  }

  export type customersSsnDeleted_atCompoundUniqueInput = {
    ssn: string
    deleted_at: Date | string
  }

  export type customersCountOrderByAggregateInput = {
    id?: SortOrder
    first_name?: SortOrder
    last_name?: SortOrder
    gender?: SortOrder
    email?: SortOrder
    mobile_number?: SortOrder
    password?: SortOrder
    birthdate?: SortOrder
    ssn?: SortOrder
    otp_secret?: SortOrder
    status?: SortOrder
    is_verified?: SortOrder
    deleted_at?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type customersAvgOrderByAggregateInput = {
    id?: SortOrder
    status?: SortOrder
  }

  export type customersMaxOrderByAggregateInput = {
    id?: SortOrder
    first_name?: SortOrder
    last_name?: SortOrder
    gender?: SortOrder
    email?: SortOrder
    mobile_number?: SortOrder
    password?: SortOrder
    birthdate?: SortOrder
    ssn?: SortOrder
    otp_secret?: SortOrder
    status?: SortOrder
    is_verified?: SortOrder
    deleted_at?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type customersMinOrderByAggregateInput = {
    id?: SortOrder
    first_name?: SortOrder
    last_name?: SortOrder
    gender?: SortOrder
    email?: SortOrder
    mobile_number?: SortOrder
    password?: SortOrder
    birthdate?: SortOrder
    ssn?: SortOrder
    otp_secret?: SortOrder
    status?: SortOrder
    is_verified?: SortOrder
    deleted_at?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type customersSumOrderByAggregateInput = {
    id?: SortOrder
    status?: SortOrder
  }

  export type failed_jobsCountOrderByAggregateInput = {
    id?: SortOrder
    uuid?: SortOrder
    connection?: SortOrder
    queue?: SortOrder
    payload?: SortOrder
    exception?: SortOrder
    failed_at?: SortOrder
  }

  export type failed_jobsAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type failed_jobsMaxOrderByAggregateInput = {
    id?: SortOrder
    uuid?: SortOrder
    connection?: SortOrder
    queue?: SortOrder
    payload?: SortOrder
    exception?: SortOrder
    failed_at?: SortOrder
  }

  export type failed_jobsMinOrderByAggregateInput = {
    id?: SortOrder
    uuid?: SortOrder
    connection?: SortOrder
    queue?: SortOrder
    payload?: SortOrder
    exception?: SortOrder
    failed_at?: SortOrder
  }

  export type failed_jobsSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type job_batchesCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    total_jobs?: SortOrder
    pending_jobs?: SortOrder
    failed_jobs?: SortOrder
    failed_job_ids?: SortOrder
    options?: SortOrder
    cancelled_at?: SortOrder
    created_at?: SortOrder
    finished_at?: SortOrder
  }

  export type job_batchesAvgOrderByAggregateInput = {
    total_jobs?: SortOrder
    pending_jobs?: SortOrder
    failed_jobs?: SortOrder
    cancelled_at?: SortOrder
    created_at?: SortOrder
    finished_at?: SortOrder
  }

  export type job_batchesMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    total_jobs?: SortOrder
    pending_jobs?: SortOrder
    failed_jobs?: SortOrder
    failed_job_ids?: SortOrder
    options?: SortOrder
    cancelled_at?: SortOrder
    created_at?: SortOrder
    finished_at?: SortOrder
  }

  export type job_batchesMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    total_jobs?: SortOrder
    pending_jobs?: SortOrder
    failed_jobs?: SortOrder
    failed_job_ids?: SortOrder
    options?: SortOrder
    cancelled_at?: SortOrder
    created_at?: SortOrder
    finished_at?: SortOrder
  }

  export type job_batchesSumOrderByAggregateInput = {
    total_jobs?: SortOrder
    pending_jobs?: SortOrder
    failed_jobs?: SortOrder
    cancelled_at?: SortOrder
    created_at?: SortOrder
    finished_at?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type jobsCountOrderByAggregateInput = {
    id?: SortOrder
    queue?: SortOrder
    payload?: SortOrder
    attempts?: SortOrder
    reserved_at?: SortOrder
    available_at?: SortOrder
    created_at?: SortOrder
  }

  export type jobsAvgOrderByAggregateInput = {
    id?: SortOrder
    attempts?: SortOrder
    reserved_at?: SortOrder
    available_at?: SortOrder
    created_at?: SortOrder
  }

  export type jobsMaxOrderByAggregateInput = {
    id?: SortOrder
    queue?: SortOrder
    payload?: SortOrder
    attempts?: SortOrder
    reserved_at?: SortOrder
    available_at?: SortOrder
    created_at?: SortOrder
  }

  export type jobsMinOrderByAggregateInput = {
    id?: SortOrder
    queue?: SortOrder
    payload?: SortOrder
    attempts?: SortOrder
    reserved_at?: SortOrder
    available_at?: SortOrder
    created_at?: SortOrder
  }

  export type jobsSumOrderByAggregateInput = {
    id?: SortOrder
    attempts?: SortOrder
    reserved_at?: SortOrder
    available_at?: SortOrder
    created_at?: SortOrder
  }

  export type migrationsCountOrderByAggregateInput = {
    id?: SortOrder
    migration?: SortOrder
    batch?: SortOrder
  }

  export type migrationsAvgOrderByAggregateInput = {
    id?: SortOrder
    batch?: SortOrder
  }

  export type migrationsMaxOrderByAggregateInput = {
    id?: SortOrder
    migration?: SortOrder
    batch?: SortOrder
  }

  export type migrationsMinOrderByAggregateInput = {
    id?: SortOrder
    migration?: SortOrder
    batch?: SortOrder
  }

  export type migrationsSumOrderByAggregateInput = {
    id?: SortOrder
    batch?: SortOrder
  }

  export type PermissionsScalarRelationFilter = {
    is?: permissionsWhereInput
    isNot?: permissionsWhereInput
  }

  export type model_has_permissionsPermission_idModel_idModel_typeCompoundUniqueInput = {
    permission_id: bigint | number
    model_id: bigint | number
    model_type: string
  }

  export type model_has_permissionsCountOrderByAggregateInput = {
    permission_id?: SortOrder
    model_type?: SortOrder
    model_id?: SortOrder
  }

  export type model_has_permissionsAvgOrderByAggregateInput = {
    permission_id?: SortOrder
    model_id?: SortOrder
  }

  export type model_has_permissionsMaxOrderByAggregateInput = {
    permission_id?: SortOrder
    model_type?: SortOrder
    model_id?: SortOrder
  }

  export type model_has_permissionsMinOrderByAggregateInput = {
    permission_id?: SortOrder
    model_type?: SortOrder
    model_id?: SortOrder
  }

  export type model_has_permissionsSumOrderByAggregateInput = {
    permission_id?: SortOrder
    model_id?: SortOrder
  }

  export type RolesScalarRelationFilter = {
    is?: rolesWhereInput
    isNot?: rolesWhereInput
  }

  export type model_has_rolesRole_idModel_idModel_typeCompoundUniqueInput = {
    role_id: bigint | number
    model_id: bigint | number
    model_type: string
  }

  export type model_has_rolesCountOrderByAggregateInput = {
    role_id?: SortOrder
    model_type?: SortOrder
    model_id?: SortOrder
  }

  export type model_has_rolesAvgOrderByAggregateInput = {
    role_id?: SortOrder
    model_id?: SortOrder
  }

  export type model_has_rolesMaxOrderByAggregateInput = {
    role_id?: SortOrder
    model_type?: SortOrder
    model_id?: SortOrder
  }

  export type model_has_rolesMinOrderByAggregateInput = {
    role_id?: SortOrder
    model_type?: SortOrder
    model_id?: SortOrder
  }

  export type model_has_rolesSumOrderByAggregateInput = {
    role_id?: SortOrder
    model_id?: SortOrder
  }

  export type BigIntNullableFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel> | null
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntNullableFilter<$PrismaModel> | bigint | number | null
  }

  export type oauth_access_tokensCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    client_id?: SortOrder
    name?: SortOrder
    scopes?: SortOrder
    revoked?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    expires_at?: SortOrder
  }

  export type oauth_access_tokensAvgOrderByAggregateInput = {
    user_id?: SortOrder
    client_id?: SortOrder
  }

  export type oauth_access_tokensMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    client_id?: SortOrder
    name?: SortOrder
    scopes?: SortOrder
    revoked?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    expires_at?: SortOrder
  }

  export type oauth_access_tokensMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    client_id?: SortOrder
    name?: SortOrder
    scopes?: SortOrder
    revoked?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    expires_at?: SortOrder
  }

  export type oauth_access_tokensSumOrderByAggregateInput = {
    user_id?: SortOrder
    client_id?: SortOrder
  }

  export type BigIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel> | null
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntNullableWithAggregatesFilter<$PrismaModel> | bigint | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedBigIntNullableFilter<$PrismaModel>
    _min?: NestedBigIntNullableFilter<$PrismaModel>
    _max?: NestedBigIntNullableFilter<$PrismaModel>
  }

  export type oauth_auth_codesCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    client_id?: SortOrder
    scopes?: SortOrder
    revoked?: SortOrder
    expires_at?: SortOrder
  }

  export type oauth_auth_codesAvgOrderByAggregateInput = {
    user_id?: SortOrder
    client_id?: SortOrder
  }

  export type oauth_auth_codesMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    client_id?: SortOrder
    scopes?: SortOrder
    revoked?: SortOrder
    expires_at?: SortOrder
  }

  export type oauth_auth_codesMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    client_id?: SortOrder
    scopes?: SortOrder
    revoked?: SortOrder
    expires_at?: SortOrder
  }

  export type oauth_auth_codesSumOrderByAggregateInput = {
    user_id?: SortOrder
    client_id?: SortOrder
  }

  export type oauth_clientsCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    name?: SortOrder
    secret?: SortOrder
    provider?: SortOrder
    redirect?: SortOrder
    personal_access_client?: SortOrder
    password_client?: SortOrder
    revoked?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type oauth_clientsAvgOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
  }

  export type oauth_clientsMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    name?: SortOrder
    secret?: SortOrder
    provider?: SortOrder
    redirect?: SortOrder
    personal_access_client?: SortOrder
    password_client?: SortOrder
    revoked?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type oauth_clientsMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    name?: SortOrder
    secret?: SortOrder
    provider?: SortOrder
    redirect?: SortOrder
    personal_access_client?: SortOrder
    password_client?: SortOrder
    revoked?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type oauth_clientsSumOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
  }

  export type oauth_personal_access_clientsCountOrderByAggregateInput = {
    id?: SortOrder
    client_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type oauth_personal_access_clientsAvgOrderByAggregateInput = {
    id?: SortOrder
    client_id?: SortOrder
  }

  export type oauth_personal_access_clientsMaxOrderByAggregateInput = {
    id?: SortOrder
    client_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type oauth_personal_access_clientsMinOrderByAggregateInput = {
    id?: SortOrder
    client_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type oauth_personal_access_clientsSumOrderByAggregateInput = {
    id?: SortOrder
    client_id?: SortOrder
  }

  export type oauth_refresh_tokensCountOrderByAggregateInput = {
    id?: SortOrder
    access_token_id?: SortOrder
    revoked?: SortOrder
    expires_at?: SortOrder
  }

  export type oauth_refresh_tokensMaxOrderByAggregateInput = {
    id?: SortOrder
    access_token_id?: SortOrder
    revoked?: SortOrder
    expires_at?: SortOrder
  }

  export type oauth_refresh_tokensMinOrderByAggregateInput = {
    id?: SortOrder
    access_token_id?: SortOrder
    revoked?: SortOrder
    expires_at?: SortOrder
  }

  export type OffersListRelationFilter = {
    every?: offersWhereInput
    some?: offersWhereInput
    none?: offersWhereInput
  }

  export type ProvidersListRelationFilter = {
    every?: providersWhereInput
    some?: providersWhereInput
    none?: providersWhereInput
  }

  export type offersOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type providersOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type offer_categoriesCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    icon?: SortOrder
    description?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type offer_categoriesAvgOrderByAggregateInput = {
    id?: SortOrder
    status?: SortOrder
  }

  export type offer_categoriesMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    icon?: SortOrder
    description?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type offer_categoriesMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    icon?: SortOrder
    description?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type offer_categoriesSumOrderByAggregateInput = {
    id?: SortOrder
    status?: SortOrder
  }

  export type DecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type Offer_categoriesScalarRelationFilter = {
    is?: offer_categoriesWhereInput
    isNot?: offer_categoriesWhereInput
  }

  export type Provider_offersListRelationFilter = {
    every?: provider_offersWhereInput
    some?: provider_offersWhereInput
    none?: provider_offersWhereInput
  }

  export type Subscription_plan_offersListRelationFilter = {
    every?: subscription_plan_offersWhereInput
    some?: subscription_plan_offersWhereInput
    none?: subscription_plan_offersWhereInput
  }

  export type provider_offersOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type subscription_plan_offersOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type offersCountOrderByAggregateInput = {
    id?: SortOrder
    category_id?: SortOrder
    title?: SortOrder
    icon?: SortOrder
    description?: SortOrder
    price?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type offersAvgOrderByAggregateInput = {
    id?: SortOrder
    category_id?: SortOrder
    price?: SortOrder
  }

  export type offersMaxOrderByAggregateInput = {
    id?: SortOrder
    category_id?: SortOrder
    title?: SortOrder
    icon?: SortOrder
    description?: SortOrder
    price?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type offersMinOrderByAggregateInput = {
    id?: SortOrder
    category_id?: SortOrder
    title?: SortOrder
    icon?: SortOrder
    description?: SortOrder
    price?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type offersSumOrderByAggregateInput = {
    id?: SortOrder
    category_id?: SortOrder
    price?: SortOrder
  }

  export type DecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type DecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type Customer_subscriptionsNullableScalarRelationFilter = {
    is?: customer_subscriptionsWhereInput | null
    isNot?: customer_subscriptionsWhereInput | null
  }

  export type PaymentsListRelationFilter = {
    every?: paymentsWhereInput
    some?: paymentsWhereInput
    none?: paymentsWhereInput
  }

  export type paymentsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ordersCountOrderByAggregateInput = {
    id?: SortOrder
    buyer_type?: SortOrder
    buyer_id?: SortOrder
    purchasable_type?: SortOrder
    purchasable_id?: SortOrder
    amount?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    tracking_code?: SortOrder
  }

  export type ordersAvgOrderByAggregateInput = {
    id?: SortOrder
    buyer_id?: SortOrder
    purchasable_id?: SortOrder
    amount?: SortOrder
    status?: SortOrder
  }

  export type ordersMaxOrderByAggregateInput = {
    id?: SortOrder
    buyer_type?: SortOrder
    buyer_id?: SortOrder
    purchasable_type?: SortOrder
    purchasable_id?: SortOrder
    amount?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    tracking_code?: SortOrder
  }

  export type ordersMinOrderByAggregateInput = {
    id?: SortOrder
    buyer_type?: SortOrder
    buyer_id?: SortOrder
    purchasable_type?: SortOrder
    purchasable_id?: SortOrder
    amount?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    tracking_code?: SortOrder
  }

  export type ordersSumOrderByAggregateInput = {
    id?: SortOrder
    buyer_id?: SortOrder
    purchasable_id?: SortOrder
    amount?: SortOrder
    status?: SortOrder
  }

  export type DecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type otpsCountOrderByAggregateInput = {
    id?: SortOrder
    code?: SortOrder
    channel?: SortOrder
    reason?: SortOrder
    expires_at?: SortOrder
    authenticatable_type?: SortOrder
    authenticatable_id?: SortOrder
    is_used?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type otpsAvgOrderByAggregateInput = {
    id?: SortOrder
    channel?: SortOrder
    authenticatable_id?: SortOrder
  }

  export type otpsMaxOrderByAggregateInput = {
    id?: SortOrder
    code?: SortOrder
    channel?: SortOrder
    reason?: SortOrder
    expires_at?: SortOrder
    authenticatable_type?: SortOrder
    authenticatable_id?: SortOrder
    is_used?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type otpsMinOrderByAggregateInput = {
    id?: SortOrder
    code?: SortOrder
    channel?: SortOrder
    reason?: SortOrder
    expires_at?: SortOrder
    authenticatable_type?: SortOrder
    authenticatable_id?: SortOrder
    is_used?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type otpsSumOrderByAggregateInput = {
    id?: SortOrder
    channel?: SortOrder
    authenticatable_id?: SortOrder
  }

  export type paymentsCountOrderByAggregateInput = {
    id?: SortOrder
    order_id?: SortOrder
    transaction_id?: SortOrder
    res_num?: SortOrder
    status?: SortOrder
    amount?: SortOrder
    payment_method?: SortOrder
    payment_gateway?: SortOrder
    paid_at?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    receipt_photo?: SortOrder
  }

  export type paymentsAvgOrderByAggregateInput = {
    id?: SortOrder
    order_id?: SortOrder
    status?: SortOrder
    amount?: SortOrder
  }

  export type paymentsMaxOrderByAggregateInput = {
    id?: SortOrder
    order_id?: SortOrder
    transaction_id?: SortOrder
    res_num?: SortOrder
    status?: SortOrder
    amount?: SortOrder
    payment_method?: SortOrder
    payment_gateway?: SortOrder
    paid_at?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    receipt_photo?: SortOrder
  }

  export type paymentsMinOrderByAggregateInput = {
    id?: SortOrder
    order_id?: SortOrder
    transaction_id?: SortOrder
    res_num?: SortOrder
    status?: SortOrder
    amount?: SortOrder
    payment_method?: SortOrder
    payment_gateway?: SortOrder
    paid_at?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    receipt_photo?: SortOrder
  }

  export type paymentsSumOrderByAggregateInput = {
    id?: SortOrder
    order_id?: SortOrder
    status?: SortOrder
    amount?: SortOrder
  }

  export type Model_has_permissionsListRelationFilter = {
    every?: model_has_permissionsWhereInput
    some?: model_has_permissionsWhereInput
    none?: model_has_permissionsWhereInput
  }

  export type Role_has_permissionsListRelationFilter = {
    every?: role_has_permissionsWhereInput
    some?: role_has_permissionsWhereInput
    none?: role_has_permissionsWhereInput
  }

  export type model_has_permissionsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type role_has_permissionsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type permissionsNameGuard_nameCompoundUniqueInput = {
    name: string
    guard_name: string
  }

  export type permissionsCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    guard_name?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type permissionsAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type permissionsMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    guard_name?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type permissionsMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    guard_name?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type permissionsSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type personal_access_tokensCountOrderByAggregateInput = {
    id?: SortOrder
    tokenable_type?: SortOrder
    tokenable_id?: SortOrder
    name?: SortOrder
    token?: SortOrder
    abilities?: SortOrder
    last_used_at?: SortOrder
    expires_at?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type personal_access_tokensAvgOrderByAggregateInput = {
    id?: SortOrder
    tokenable_id?: SortOrder
  }

  export type personal_access_tokensMaxOrderByAggregateInput = {
    id?: SortOrder
    tokenable_type?: SortOrder
    tokenable_id?: SortOrder
    name?: SortOrder
    token?: SortOrder
    abilities?: SortOrder
    last_used_at?: SortOrder
    expires_at?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type personal_access_tokensMinOrderByAggregateInput = {
    id?: SortOrder
    tokenable_type?: SortOrder
    tokenable_id?: SortOrder
    name?: SortOrder
    token?: SortOrder
    abilities?: SortOrder
    last_used_at?: SortOrder
    expires_at?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type personal_access_tokensSumOrderByAggregateInput = {
    id?: SortOrder
    tokenable_id?: SortOrder
  }

  export type ProvidersScalarRelationFilter = {
    is?: providersWhereInput
    isNot?: providersWhereInput
  }

  export type AdminsScalarRelationFilter = {
    is?: adminsWhereInput
    isNot?: adminsWhereInput
  }

  export type provider_agentsCountOrderByAggregateInput = {
    id?: SortOrder
    provider_id?: SortOrder
    user_id?: SortOrder
    role?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type provider_agentsAvgOrderByAggregateInput = {
    id?: SortOrder
    provider_id?: SortOrder
    user_id?: SortOrder
    role?: SortOrder
  }

  export type provider_agentsMaxOrderByAggregateInput = {
    id?: SortOrder
    provider_id?: SortOrder
    user_id?: SortOrder
    role?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type provider_agentsMinOrderByAggregateInput = {
    id?: SortOrder
    provider_id?: SortOrder
    user_id?: SortOrder
    role?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type provider_agentsSumOrderByAggregateInput = {
    id?: SortOrder
    provider_id?: SortOrder
    user_id?: SortOrder
    role?: SortOrder
  }

  export type OffersScalarRelationFilter = {
    is?: offersWhereInput
    isNot?: offersWhereInput
  }

  export type provider_offersCountOrderByAggregateInput = {
    id?: SortOrder
    provider_id?: SortOrder
    offer_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type provider_offersAvgOrderByAggregateInput = {
    id?: SortOrder
    provider_id?: SortOrder
    offer_id?: SortOrder
  }

  export type provider_offersMaxOrderByAggregateInput = {
    id?: SortOrder
    provider_id?: SortOrder
    offer_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type provider_offersMinOrderByAggregateInput = {
    id?: SortOrder
    provider_id?: SortOrder
    offer_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type provider_offersSumOrderByAggregateInput = {
    id?: SortOrder
    provider_id?: SortOrder
    offer_id?: SortOrder
  }
  export type JsonFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonFilterBase<$PrismaModel>>, 'path'>>

  export type JsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type Provider_menuNullableScalarRelationFilter = {
    is?: provider_menuWhereInput | null
    isNot?: provider_menuWhereInput | null
  }

  export type providersCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    category_id?: SortOrder
    address?: SortOrder
    phone_number?: SortOrder
    main_image?: SortOrder
    slider_images?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    is_verified?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type providersAvgOrderByAggregateInput = {
    id?: SortOrder
    category_id?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    status?: SortOrder
  }

  export type providersMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    category_id?: SortOrder
    address?: SortOrder
    main_image?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    is_verified?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type providersMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    category_id?: SortOrder
    address?: SortOrder
    main_image?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    is_verified?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type providersSumOrderByAggregateInput = {
    id?: SortOrder
    category_id?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    status?: SortOrder
  }
  export type JsonWithAggregatesFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedJsonFilter<$PrismaModel>
    _max?: NestedJsonFilter<$PrismaModel>
  }

  export type Provider_menu_itemsListRelationFilter = {
    every?: provider_menu_itemsWhereInput
    some?: provider_menu_itemsWhereInput
    none?: provider_menu_itemsWhereInput
  }

  export type Provider_menu_categoriesListRelationFilter = {
    every?: provider_menu_categoriesWhereInput
    some?: provider_menu_categoriesWhereInput
    none?: provider_menu_categoriesWhereInput
  }

  export type provider_menu_itemsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type provider_menu_categoriesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type provider_menuCountOrderByAggregateInput = {
    id?: SortOrder
    provider_id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type provider_menuAvgOrderByAggregateInput = {
    id?: SortOrder
    provider_id?: SortOrder
  }

  export type provider_menuMaxOrderByAggregateInput = {
    id?: SortOrder
    provider_id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type provider_menuMinOrderByAggregateInput = {
    id?: SortOrder
    provider_id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type provider_menuSumOrderByAggregateInput = {
    id?: SortOrder
    provider_id?: SortOrder
  }

  export type Provider_menu_categoriesScalarRelationFilter = {
    is?: provider_menu_categoriesWhereInput
    isNot?: provider_menu_categoriesWhereInput
  }

  export type Provider_menuScalarRelationFilter = {
    is?: provider_menuWhereInput
    isNot?: provider_menuWhereInput
  }

  export type provider_menu_itemsCountOrderByAggregateInput = {
    id?: SortOrder
    menu_id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    category_id?: SortOrder
    price?: SortOrder
  }

  export type provider_menu_itemsAvgOrderByAggregateInput = {
    id?: SortOrder
    menu_id?: SortOrder
    category_id?: SortOrder
    price?: SortOrder
  }

  export type provider_menu_itemsMaxOrderByAggregateInput = {
    id?: SortOrder
    menu_id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    category_id?: SortOrder
    price?: SortOrder
  }

  export type provider_menu_itemsMinOrderByAggregateInput = {
    id?: SortOrder
    menu_id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    category_id?: SortOrder
    price?: SortOrder
  }

  export type provider_menu_itemsSumOrderByAggregateInput = {
    id?: SortOrder
    menu_id?: SortOrder
    category_id?: SortOrder
    price?: SortOrder
  }

  export type provider_menu_categoriesCountOrderByAggregateInput = {
    id?: SortOrder
    menu_id?: SortOrder
    title?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type provider_menu_categoriesAvgOrderByAggregateInput = {
    id?: SortOrder
    menu_id?: SortOrder
  }

  export type provider_menu_categoriesMaxOrderByAggregateInput = {
    id?: SortOrder
    menu_id?: SortOrder
    title?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type provider_menu_categoriesMinOrderByAggregateInput = {
    id?: SortOrder
    menu_id?: SortOrder
    title?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type provider_menu_categoriesSumOrderByAggregateInput = {
    id?: SortOrder
    menu_id?: SortOrder
  }

  export type role_has_permissionsPermission_idRole_idCompoundUniqueInput = {
    permission_id: bigint | number
    role_id: bigint | number
  }

  export type role_has_permissionsCountOrderByAggregateInput = {
    permission_id?: SortOrder
    role_id?: SortOrder
  }

  export type role_has_permissionsAvgOrderByAggregateInput = {
    permission_id?: SortOrder
    role_id?: SortOrder
  }

  export type role_has_permissionsMaxOrderByAggregateInput = {
    permission_id?: SortOrder
    role_id?: SortOrder
  }

  export type role_has_permissionsMinOrderByAggregateInput = {
    permission_id?: SortOrder
    role_id?: SortOrder
  }

  export type role_has_permissionsSumOrderByAggregateInput = {
    permission_id?: SortOrder
    role_id?: SortOrder
  }

  export type Model_has_rolesListRelationFilter = {
    every?: model_has_rolesWhereInput
    some?: model_has_rolesWhereInput
    none?: model_has_rolesWhereInput
  }

  export type model_has_rolesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type rolesNameGuard_nameCompoundUniqueInput = {
    name: string
    guard_name: string
  }

  export type rolesCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    guard_name?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type rolesAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type rolesMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    guard_name?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type rolesMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    guard_name?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type rolesSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type subscription_plan_offersSubscription_plan_idOffer_idCompoundUniqueInput = {
    subscription_plan_id: bigint | number
    offer_id: bigint | number
  }

  export type subscription_plan_offersCountOrderByAggregateInput = {
    id?: SortOrder
    subscription_plan_id?: SortOrder
    offer_id?: SortOrder
    discount_percentage?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type subscription_plan_offersAvgOrderByAggregateInput = {
    id?: SortOrder
    subscription_plan_id?: SortOrder
    offer_id?: SortOrder
    discount_percentage?: SortOrder
  }

  export type subscription_plan_offersMaxOrderByAggregateInput = {
    id?: SortOrder
    subscription_plan_id?: SortOrder
    offer_id?: SortOrder
    discount_percentage?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type subscription_plan_offersMinOrderByAggregateInput = {
    id?: SortOrder
    subscription_plan_id?: SortOrder
    offer_id?: SortOrder
    discount_percentage?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type subscription_plan_offersSumOrderByAggregateInput = {
    id?: SortOrder
    subscription_plan_id?: SortOrder
    offer_id?: SortOrder
    discount_percentage?: SortOrder
  }

  export type subscription_plansCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    duration?: SortOrder
    price?: SortOrder
    status?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type subscription_plansAvgOrderByAggregateInput = {
    id?: SortOrder
    duration?: SortOrder
    price?: SortOrder
    status?: SortOrder
  }

  export type subscription_plansMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    duration?: SortOrder
    price?: SortOrder
    status?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type subscription_plansMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    duration?: SortOrder
    price?: SortOrder
    status?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type subscription_plansSumOrderByAggregateInput = {
    id?: SortOrder
    duration?: SortOrder
    price?: SortOrder
    status?: SortOrder
  }

  export type Customer_subscriptionsScalarRelationFilter = {
    is?: customer_subscriptionsWhereInput
    isNot?: customer_subscriptionsWhereInput
  }

  export type Provider_agentsScalarRelationFilter = {
    is?: provider_agentsWhereInput
    isNot?: provider_agentsWhereInput
  }

  export type subscription_usagesCountOrderByAggregateInput = {
    id?: SortOrder
    provider_agent_id?: SortOrder
    customer_id?: SortOrder
    customer_subscription_id?: SortOrder
    provider_id?: SortOrder
    offer_id?: SortOrder
    total_amount?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type subscription_usagesAvgOrderByAggregateInput = {
    id?: SortOrder
    provider_agent_id?: SortOrder
    customer_id?: SortOrder
    customer_subscription_id?: SortOrder
    provider_id?: SortOrder
    offer_id?: SortOrder
  }

  export type subscription_usagesMaxOrderByAggregateInput = {
    id?: SortOrder
    provider_agent_id?: SortOrder
    customer_id?: SortOrder
    customer_subscription_id?: SortOrder
    provider_id?: SortOrder
    offer_id?: SortOrder
    total_amount?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type subscription_usagesMinOrderByAggregateInput = {
    id?: SortOrder
    provider_agent_id?: SortOrder
    customer_id?: SortOrder
    customer_subscription_id?: SortOrder
    provider_id?: SortOrder
    offer_id?: SortOrder
    total_amount?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type subscription_usagesSumOrderByAggregateInput = {
    id?: SortOrder
    provider_agent_id?: SortOrder
    customer_id?: SortOrder
    customer_subscription_id?: SortOrder
    provider_id?: SortOrder
    offer_id?: SortOrder
  }

  export type provider_agentsCreateNestedManyWithoutAdminsInput = {
    create?: XOR<provider_agentsCreateWithoutAdminsInput, provider_agentsUncheckedCreateWithoutAdminsInput> | provider_agentsCreateWithoutAdminsInput[] | provider_agentsUncheckedCreateWithoutAdminsInput[]
    connectOrCreate?: provider_agentsCreateOrConnectWithoutAdminsInput | provider_agentsCreateOrConnectWithoutAdminsInput[]
    createMany?: provider_agentsCreateManyAdminsInputEnvelope
    connect?: provider_agentsWhereUniqueInput | provider_agentsWhereUniqueInput[]
  }

  export type provider_agentsUncheckedCreateNestedManyWithoutAdminsInput = {
    create?: XOR<provider_agentsCreateWithoutAdminsInput, provider_agentsUncheckedCreateWithoutAdminsInput> | provider_agentsCreateWithoutAdminsInput[] | provider_agentsUncheckedCreateWithoutAdminsInput[]
    connectOrCreate?: provider_agentsCreateOrConnectWithoutAdminsInput | provider_agentsCreateOrConnectWithoutAdminsInput[]
    createMany?: provider_agentsCreateManyAdminsInputEnvelope
    connect?: provider_agentsWhereUniqueInput | provider_agentsWhereUniqueInput[]
  }

  export type BigIntFieldUpdateOperationsInput = {
    set?: bigint | number
    increment?: bigint | number
    decrement?: bigint | number
    multiply?: bigint | number
    divide?: bigint | number
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type provider_agentsUpdateManyWithoutAdminsNestedInput = {
    create?: XOR<provider_agentsCreateWithoutAdminsInput, provider_agentsUncheckedCreateWithoutAdminsInput> | provider_agentsCreateWithoutAdminsInput[] | provider_agentsUncheckedCreateWithoutAdminsInput[]
    connectOrCreate?: provider_agentsCreateOrConnectWithoutAdminsInput | provider_agentsCreateOrConnectWithoutAdminsInput[]
    upsert?: provider_agentsUpsertWithWhereUniqueWithoutAdminsInput | provider_agentsUpsertWithWhereUniqueWithoutAdminsInput[]
    createMany?: provider_agentsCreateManyAdminsInputEnvelope
    set?: provider_agentsWhereUniqueInput | provider_agentsWhereUniqueInput[]
    disconnect?: provider_agentsWhereUniqueInput | provider_agentsWhereUniqueInput[]
    delete?: provider_agentsWhereUniqueInput | provider_agentsWhereUniqueInput[]
    connect?: provider_agentsWhereUniqueInput | provider_agentsWhereUniqueInput[]
    update?: provider_agentsUpdateWithWhereUniqueWithoutAdminsInput | provider_agentsUpdateWithWhereUniqueWithoutAdminsInput[]
    updateMany?: provider_agentsUpdateManyWithWhereWithoutAdminsInput | provider_agentsUpdateManyWithWhereWithoutAdminsInput[]
    deleteMany?: provider_agentsScalarWhereInput | provider_agentsScalarWhereInput[]
  }

  export type provider_agentsUncheckedUpdateManyWithoutAdminsNestedInput = {
    create?: XOR<provider_agentsCreateWithoutAdminsInput, provider_agentsUncheckedCreateWithoutAdminsInput> | provider_agentsCreateWithoutAdminsInput[] | provider_agentsUncheckedCreateWithoutAdminsInput[]
    connectOrCreate?: provider_agentsCreateOrConnectWithoutAdminsInput | provider_agentsCreateOrConnectWithoutAdminsInput[]
    upsert?: provider_agentsUpsertWithWhereUniqueWithoutAdminsInput | provider_agentsUpsertWithWhereUniqueWithoutAdminsInput[]
    createMany?: provider_agentsCreateManyAdminsInputEnvelope
    set?: provider_agentsWhereUniqueInput | provider_agentsWhereUniqueInput[]
    disconnect?: provider_agentsWhereUniqueInput | provider_agentsWhereUniqueInput[]
    delete?: provider_agentsWhereUniqueInput | provider_agentsWhereUniqueInput[]
    connect?: provider_agentsWhereUniqueInput | provider_agentsWhereUniqueInput[]
    update?: provider_agentsUpdateWithWhereUniqueWithoutAdminsInput | provider_agentsUpdateWithWhereUniqueWithoutAdminsInput[]
    updateMany?: provider_agentsUpdateManyWithWhereWithoutAdminsInput | provider_agentsUpdateManyWithWhereWithoutAdminsInput[]
    deleteMany?: provider_agentsScalarWhereInput | provider_agentsScalarWhereInput[]
  }

  export type customersCreateNestedOneWithoutCustomer_subscriptionsInput = {
    create?: XOR<customersCreateWithoutCustomer_subscriptionsInput, customersUncheckedCreateWithoutCustomer_subscriptionsInput>
    connectOrCreate?: customersCreateOrConnectWithoutCustomer_subscriptionsInput
    connect?: customersWhereUniqueInput
  }

  export type ordersCreateNestedOneWithoutCustomer_subscriptionsInput = {
    create?: XOR<ordersCreateWithoutCustomer_subscriptionsInput, ordersUncheckedCreateWithoutCustomer_subscriptionsInput>
    connectOrCreate?: ordersCreateOrConnectWithoutCustomer_subscriptionsInput
    connect?: ordersWhereUniqueInput
  }

  export type subscription_plansCreateNestedOneWithoutCustomer_subscriptionsInput = {
    create?: XOR<subscription_plansCreateWithoutCustomer_subscriptionsInput, subscription_plansUncheckedCreateWithoutCustomer_subscriptionsInput>
    connectOrCreate?: subscription_plansCreateOrConnectWithoutCustomer_subscriptionsInput
    connect?: subscription_plansWhereUniqueInput
  }

  export type subscription_usagesCreateNestedManyWithoutCustomer_subscriptionsInput = {
    create?: XOR<subscription_usagesCreateWithoutCustomer_subscriptionsInput, subscription_usagesUncheckedCreateWithoutCustomer_subscriptionsInput> | subscription_usagesCreateWithoutCustomer_subscriptionsInput[] | subscription_usagesUncheckedCreateWithoutCustomer_subscriptionsInput[]
    connectOrCreate?: subscription_usagesCreateOrConnectWithoutCustomer_subscriptionsInput | subscription_usagesCreateOrConnectWithoutCustomer_subscriptionsInput[]
    createMany?: subscription_usagesCreateManyCustomer_subscriptionsInputEnvelope
    connect?: subscription_usagesWhereUniqueInput | subscription_usagesWhereUniqueInput[]
  }

  export type subscription_usagesUncheckedCreateNestedManyWithoutCustomer_subscriptionsInput = {
    create?: XOR<subscription_usagesCreateWithoutCustomer_subscriptionsInput, subscription_usagesUncheckedCreateWithoutCustomer_subscriptionsInput> | subscription_usagesCreateWithoutCustomer_subscriptionsInput[] | subscription_usagesUncheckedCreateWithoutCustomer_subscriptionsInput[]
    connectOrCreate?: subscription_usagesCreateOrConnectWithoutCustomer_subscriptionsInput | subscription_usagesCreateOrConnectWithoutCustomer_subscriptionsInput[]
    createMany?: subscription_usagesCreateManyCustomer_subscriptionsInputEnvelope
    connect?: subscription_usagesWhereUniqueInput | subscription_usagesWhereUniqueInput[]
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type customersUpdateOneRequiredWithoutCustomer_subscriptionsNestedInput = {
    create?: XOR<customersCreateWithoutCustomer_subscriptionsInput, customersUncheckedCreateWithoutCustomer_subscriptionsInput>
    connectOrCreate?: customersCreateOrConnectWithoutCustomer_subscriptionsInput
    upsert?: customersUpsertWithoutCustomer_subscriptionsInput
    connect?: customersWhereUniqueInput
    update?: XOR<XOR<customersUpdateToOneWithWhereWithoutCustomer_subscriptionsInput, customersUpdateWithoutCustomer_subscriptionsInput>, customersUncheckedUpdateWithoutCustomer_subscriptionsInput>
  }

  export type ordersUpdateOneRequiredWithoutCustomer_subscriptionsNestedInput = {
    create?: XOR<ordersCreateWithoutCustomer_subscriptionsInput, ordersUncheckedCreateWithoutCustomer_subscriptionsInput>
    connectOrCreate?: ordersCreateOrConnectWithoutCustomer_subscriptionsInput
    upsert?: ordersUpsertWithoutCustomer_subscriptionsInput
    connect?: ordersWhereUniqueInput
    update?: XOR<XOR<ordersUpdateToOneWithWhereWithoutCustomer_subscriptionsInput, ordersUpdateWithoutCustomer_subscriptionsInput>, ordersUncheckedUpdateWithoutCustomer_subscriptionsInput>
  }

  export type subscription_plansUpdateOneRequiredWithoutCustomer_subscriptionsNestedInput = {
    create?: XOR<subscription_plansCreateWithoutCustomer_subscriptionsInput, subscription_plansUncheckedCreateWithoutCustomer_subscriptionsInput>
    connectOrCreate?: subscription_plansCreateOrConnectWithoutCustomer_subscriptionsInput
    upsert?: subscription_plansUpsertWithoutCustomer_subscriptionsInput
    connect?: subscription_plansWhereUniqueInput
    update?: XOR<XOR<subscription_plansUpdateToOneWithWhereWithoutCustomer_subscriptionsInput, subscription_plansUpdateWithoutCustomer_subscriptionsInput>, subscription_plansUncheckedUpdateWithoutCustomer_subscriptionsInput>
  }

  export type subscription_usagesUpdateManyWithoutCustomer_subscriptionsNestedInput = {
    create?: XOR<subscription_usagesCreateWithoutCustomer_subscriptionsInput, subscription_usagesUncheckedCreateWithoutCustomer_subscriptionsInput> | subscription_usagesCreateWithoutCustomer_subscriptionsInput[] | subscription_usagesUncheckedCreateWithoutCustomer_subscriptionsInput[]
    connectOrCreate?: subscription_usagesCreateOrConnectWithoutCustomer_subscriptionsInput | subscription_usagesCreateOrConnectWithoutCustomer_subscriptionsInput[]
    upsert?: subscription_usagesUpsertWithWhereUniqueWithoutCustomer_subscriptionsInput | subscription_usagesUpsertWithWhereUniqueWithoutCustomer_subscriptionsInput[]
    createMany?: subscription_usagesCreateManyCustomer_subscriptionsInputEnvelope
    set?: subscription_usagesWhereUniqueInput | subscription_usagesWhereUniqueInput[]
    disconnect?: subscription_usagesWhereUniqueInput | subscription_usagesWhereUniqueInput[]
    delete?: subscription_usagesWhereUniqueInput | subscription_usagesWhereUniqueInput[]
    connect?: subscription_usagesWhereUniqueInput | subscription_usagesWhereUniqueInput[]
    update?: subscription_usagesUpdateWithWhereUniqueWithoutCustomer_subscriptionsInput | subscription_usagesUpdateWithWhereUniqueWithoutCustomer_subscriptionsInput[]
    updateMany?: subscription_usagesUpdateManyWithWhereWithoutCustomer_subscriptionsInput | subscription_usagesUpdateManyWithWhereWithoutCustomer_subscriptionsInput[]
    deleteMany?: subscription_usagesScalarWhereInput | subscription_usagesScalarWhereInput[]
  }

  export type subscription_usagesUncheckedUpdateManyWithoutCustomer_subscriptionsNestedInput = {
    create?: XOR<subscription_usagesCreateWithoutCustomer_subscriptionsInput, subscription_usagesUncheckedCreateWithoutCustomer_subscriptionsInput> | subscription_usagesCreateWithoutCustomer_subscriptionsInput[] | subscription_usagesUncheckedCreateWithoutCustomer_subscriptionsInput[]
    connectOrCreate?: subscription_usagesCreateOrConnectWithoutCustomer_subscriptionsInput | subscription_usagesCreateOrConnectWithoutCustomer_subscriptionsInput[]
    upsert?: subscription_usagesUpsertWithWhereUniqueWithoutCustomer_subscriptionsInput | subscription_usagesUpsertWithWhereUniqueWithoutCustomer_subscriptionsInput[]
    createMany?: subscription_usagesCreateManyCustomer_subscriptionsInputEnvelope
    set?: subscription_usagesWhereUniqueInput | subscription_usagesWhereUniqueInput[]
    disconnect?: subscription_usagesWhereUniqueInput | subscription_usagesWhereUniqueInput[]
    delete?: subscription_usagesWhereUniqueInput | subscription_usagesWhereUniqueInput[]
    connect?: subscription_usagesWhereUniqueInput | subscription_usagesWhereUniqueInput[]
    update?: subscription_usagesUpdateWithWhereUniqueWithoutCustomer_subscriptionsInput | subscription_usagesUpdateWithWhereUniqueWithoutCustomer_subscriptionsInput[]
    updateMany?: subscription_usagesUpdateManyWithWhereWithoutCustomer_subscriptionsInput | subscription_usagesUpdateManyWithWhereWithoutCustomer_subscriptionsInput[]
    deleteMany?: subscription_usagesScalarWhereInput | subscription_usagesScalarWhereInput[]
  }

  export type customer_subscriptionsCreateNestedManyWithoutCustomersInput = {
    create?: XOR<customer_subscriptionsCreateWithoutCustomersInput, customer_subscriptionsUncheckedCreateWithoutCustomersInput> | customer_subscriptionsCreateWithoutCustomersInput[] | customer_subscriptionsUncheckedCreateWithoutCustomersInput[]
    connectOrCreate?: customer_subscriptionsCreateOrConnectWithoutCustomersInput | customer_subscriptionsCreateOrConnectWithoutCustomersInput[]
    createMany?: customer_subscriptionsCreateManyCustomersInputEnvelope
    connect?: customer_subscriptionsWhereUniqueInput | customer_subscriptionsWhereUniqueInput[]
  }

  export type subscription_usagesCreateNestedManyWithoutCustomersInput = {
    create?: XOR<subscription_usagesCreateWithoutCustomersInput, subscription_usagesUncheckedCreateWithoutCustomersInput> | subscription_usagesCreateWithoutCustomersInput[] | subscription_usagesUncheckedCreateWithoutCustomersInput[]
    connectOrCreate?: subscription_usagesCreateOrConnectWithoutCustomersInput | subscription_usagesCreateOrConnectWithoutCustomersInput[]
    createMany?: subscription_usagesCreateManyCustomersInputEnvelope
    connect?: subscription_usagesWhereUniqueInput | subscription_usagesWhereUniqueInput[]
  }

  export type customer_subscriptionsUncheckedCreateNestedManyWithoutCustomersInput = {
    create?: XOR<customer_subscriptionsCreateWithoutCustomersInput, customer_subscriptionsUncheckedCreateWithoutCustomersInput> | customer_subscriptionsCreateWithoutCustomersInput[] | customer_subscriptionsUncheckedCreateWithoutCustomersInput[]
    connectOrCreate?: customer_subscriptionsCreateOrConnectWithoutCustomersInput | customer_subscriptionsCreateOrConnectWithoutCustomersInput[]
    createMany?: customer_subscriptionsCreateManyCustomersInputEnvelope
    connect?: customer_subscriptionsWhereUniqueInput | customer_subscriptionsWhereUniqueInput[]
  }

  export type subscription_usagesUncheckedCreateNestedManyWithoutCustomersInput = {
    create?: XOR<subscription_usagesCreateWithoutCustomersInput, subscription_usagesUncheckedCreateWithoutCustomersInput> | subscription_usagesCreateWithoutCustomersInput[] | subscription_usagesUncheckedCreateWithoutCustomersInput[]
    connectOrCreate?: subscription_usagesCreateOrConnectWithoutCustomersInput | subscription_usagesCreateOrConnectWithoutCustomersInput[]
    createMany?: subscription_usagesCreateManyCustomersInputEnvelope
    connect?: subscription_usagesWhereUniqueInput | subscription_usagesWhereUniqueInput[]
  }

  export type customer_subscriptionsUpdateManyWithoutCustomersNestedInput = {
    create?: XOR<customer_subscriptionsCreateWithoutCustomersInput, customer_subscriptionsUncheckedCreateWithoutCustomersInput> | customer_subscriptionsCreateWithoutCustomersInput[] | customer_subscriptionsUncheckedCreateWithoutCustomersInput[]
    connectOrCreate?: customer_subscriptionsCreateOrConnectWithoutCustomersInput | customer_subscriptionsCreateOrConnectWithoutCustomersInput[]
    upsert?: customer_subscriptionsUpsertWithWhereUniqueWithoutCustomersInput | customer_subscriptionsUpsertWithWhereUniqueWithoutCustomersInput[]
    createMany?: customer_subscriptionsCreateManyCustomersInputEnvelope
    set?: customer_subscriptionsWhereUniqueInput | customer_subscriptionsWhereUniqueInput[]
    disconnect?: customer_subscriptionsWhereUniqueInput | customer_subscriptionsWhereUniqueInput[]
    delete?: customer_subscriptionsWhereUniqueInput | customer_subscriptionsWhereUniqueInput[]
    connect?: customer_subscriptionsWhereUniqueInput | customer_subscriptionsWhereUniqueInput[]
    update?: customer_subscriptionsUpdateWithWhereUniqueWithoutCustomersInput | customer_subscriptionsUpdateWithWhereUniqueWithoutCustomersInput[]
    updateMany?: customer_subscriptionsUpdateManyWithWhereWithoutCustomersInput | customer_subscriptionsUpdateManyWithWhereWithoutCustomersInput[]
    deleteMany?: customer_subscriptionsScalarWhereInput | customer_subscriptionsScalarWhereInput[]
  }

  export type subscription_usagesUpdateManyWithoutCustomersNestedInput = {
    create?: XOR<subscription_usagesCreateWithoutCustomersInput, subscription_usagesUncheckedCreateWithoutCustomersInput> | subscription_usagesCreateWithoutCustomersInput[] | subscription_usagesUncheckedCreateWithoutCustomersInput[]
    connectOrCreate?: subscription_usagesCreateOrConnectWithoutCustomersInput | subscription_usagesCreateOrConnectWithoutCustomersInput[]
    upsert?: subscription_usagesUpsertWithWhereUniqueWithoutCustomersInput | subscription_usagesUpsertWithWhereUniqueWithoutCustomersInput[]
    createMany?: subscription_usagesCreateManyCustomersInputEnvelope
    set?: subscription_usagesWhereUniqueInput | subscription_usagesWhereUniqueInput[]
    disconnect?: subscription_usagesWhereUniqueInput | subscription_usagesWhereUniqueInput[]
    delete?: subscription_usagesWhereUniqueInput | subscription_usagesWhereUniqueInput[]
    connect?: subscription_usagesWhereUniqueInput | subscription_usagesWhereUniqueInput[]
    update?: subscription_usagesUpdateWithWhereUniqueWithoutCustomersInput | subscription_usagesUpdateWithWhereUniqueWithoutCustomersInput[]
    updateMany?: subscription_usagesUpdateManyWithWhereWithoutCustomersInput | subscription_usagesUpdateManyWithWhereWithoutCustomersInput[]
    deleteMany?: subscription_usagesScalarWhereInput | subscription_usagesScalarWhereInput[]
  }

  export type customer_subscriptionsUncheckedUpdateManyWithoutCustomersNestedInput = {
    create?: XOR<customer_subscriptionsCreateWithoutCustomersInput, customer_subscriptionsUncheckedCreateWithoutCustomersInput> | customer_subscriptionsCreateWithoutCustomersInput[] | customer_subscriptionsUncheckedCreateWithoutCustomersInput[]
    connectOrCreate?: customer_subscriptionsCreateOrConnectWithoutCustomersInput | customer_subscriptionsCreateOrConnectWithoutCustomersInput[]
    upsert?: customer_subscriptionsUpsertWithWhereUniqueWithoutCustomersInput | customer_subscriptionsUpsertWithWhereUniqueWithoutCustomersInput[]
    createMany?: customer_subscriptionsCreateManyCustomersInputEnvelope
    set?: customer_subscriptionsWhereUniqueInput | customer_subscriptionsWhereUniqueInput[]
    disconnect?: customer_subscriptionsWhereUniqueInput | customer_subscriptionsWhereUniqueInput[]
    delete?: customer_subscriptionsWhereUniqueInput | customer_subscriptionsWhereUniqueInput[]
    connect?: customer_subscriptionsWhereUniqueInput | customer_subscriptionsWhereUniqueInput[]
    update?: customer_subscriptionsUpdateWithWhereUniqueWithoutCustomersInput | customer_subscriptionsUpdateWithWhereUniqueWithoutCustomersInput[]
    updateMany?: customer_subscriptionsUpdateManyWithWhereWithoutCustomersInput | customer_subscriptionsUpdateManyWithWhereWithoutCustomersInput[]
    deleteMany?: customer_subscriptionsScalarWhereInput | customer_subscriptionsScalarWhereInput[]
  }

  export type subscription_usagesUncheckedUpdateManyWithoutCustomersNestedInput = {
    create?: XOR<subscription_usagesCreateWithoutCustomersInput, subscription_usagesUncheckedCreateWithoutCustomersInput> | subscription_usagesCreateWithoutCustomersInput[] | subscription_usagesUncheckedCreateWithoutCustomersInput[]
    connectOrCreate?: subscription_usagesCreateOrConnectWithoutCustomersInput | subscription_usagesCreateOrConnectWithoutCustomersInput[]
    upsert?: subscription_usagesUpsertWithWhereUniqueWithoutCustomersInput | subscription_usagesUpsertWithWhereUniqueWithoutCustomersInput[]
    createMany?: subscription_usagesCreateManyCustomersInputEnvelope
    set?: subscription_usagesWhereUniqueInput | subscription_usagesWhereUniqueInput[]
    disconnect?: subscription_usagesWhereUniqueInput | subscription_usagesWhereUniqueInput[]
    delete?: subscription_usagesWhereUniqueInput | subscription_usagesWhereUniqueInput[]
    connect?: subscription_usagesWhereUniqueInput | subscription_usagesWhereUniqueInput[]
    update?: subscription_usagesUpdateWithWhereUniqueWithoutCustomersInput | subscription_usagesUpdateWithWhereUniqueWithoutCustomersInput[]
    updateMany?: subscription_usagesUpdateManyWithWhereWithoutCustomersInput | subscription_usagesUpdateManyWithWhereWithoutCustomersInput[]
    deleteMany?: subscription_usagesScalarWhereInput | subscription_usagesScalarWhereInput[]
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type permissionsCreateNestedOneWithoutModel_has_permissionsInput = {
    create?: XOR<permissionsCreateWithoutModel_has_permissionsInput, permissionsUncheckedCreateWithoutModel_has_permissionsInput>
    connectOrCreate?: permissionsCreateOrConnectWithoutModel_has_permissionsInput
    connect?: permissionsWhereUniqueInput
  }

  export type permissionsUpdateOneRequiredWithoutModel_has_permissionsNestedInput = {
    create?: XOR<permissionsCreateWithoutModel_has_permissionsInput, permissionsUncheckedCreateWithoutModel_has_permissionsInput>
    connectOrCreate?: permissionsCreateOrConnectWithoutModel_has_permissionsInput
    upsert?: permissionsUpsertWithoutModel_has_permissionsInput
    connect?: permissionsWhereUniqueInput
    update?: XOR<XOR<permissionsUpdateToOneWithWhereWithoutModel_has_permissionsInput, permissionsUpdateWithoutModel_has_permissionsInput>, permissionsUncheckedUpdateWithoutModel_has_permissionsInput>
  }

  export type rolesCreateNestedOneWithoutModel_has_rolesInput = {
    create?: XOR<rolesCreateWithoutModel_has_rolesInput, rolesUncheckedCreateWithoutModel_has_rolesInput>
    connectOrCreate?: rolesCreateOrConnectWithoutModel_has_rolesInput
    connect?: rolesWhereUniqueInput
  }

  export type rolesUpdateOneRequiredWithoutModel_has_rolesNestedInput = {
    create?: XOR<rolesCreateWithoutModel_has_rolesInput, rolesUncheckedCreateWithoutModel_has_rolesInput>
    connectOrCreate?: rolesCreateOrConnectWithoutModel_has_rolesInput
    upsert?: rolesUpsertWithoutModel_has_rolesInput
    connect?: rolesWhereUniqueInput
    update?: XOR<XOR<rolesUpdateToOneWithWhereWithoutModel_has_rolesInput, rolesUpdateWithoutModel_has_rolesInput>, rolesUncheckedUpdateWithoutModel_has_rolesInput>
  }

  export type NullableBigIntFieldUpdateOperationsInput = {
    set?: bigint | number | null
    increment?: bigint | number
    decrement?: bigint | number
    multiply?: bigint | number
    divide?: bigint | number
  }

  export type offersCreateNestedManyWithoutOffer_categoriesInput = {
    create?: XOR<offersCreateWithoutOffer_categoriesInput, offersUncheckedCreateWithoutOffer_categoriesInput> | offersCreateWithoutOffer_categoriesInput[] | offersUncheckedCreateWithoutOffer_categoriesInput[]
    connectOrCreate?: offersCreateOrConnectWithoutOffer_categoriesInput | offersCreateOrConnectWithoutOffer_categoriesInput[]
    createMany?: offersCreateManyOffer_categoriesInputEnvelope
    connect?: offersWhereUniqueInput | offersWhereUniqueInput[]
  }

  export type providersCreateNestedManyWithoutOffer_categoriesInput = {
    create?: XOR<providersCreateWithoutOffer_categoriesInput, providersUncheckedCreateWithoutOffer_categoriesInput> | providersCreateWithoutOffer_categoriesInput[] | providersUncheckedCreateWithoutOffer_categoriesInput[]
    connectOrCreate?: providersCreateOrConnectWithoutOffer_categoriesInput | providersCreateOrConnectWithoutOffer_categoriesInput[]
    createMany?: providersCreateManyOffer_categoriesInputEnvelope
    connect?: providersWhereUniqueInput | providersWhereUniqueInput[]
  }

  export type offersUncheckedCreateNestedManyWithoutOffer_categoriesInput = {
    create?: XOR<offersCreateWithoutOffer_categoriesInput, offersUncheckedCreateWithoutOffer_categoriesInput> | offersCreateWithoutOffer_categoriesInput[] | offersUncheckedCreateWithoutOffer_categoriesInput[]
    connectOrCreate?: offersCreateOrConnectWithoutOffer_categoriesInput | offersCreateOrConnectWithoutOffer_categoriesInput[]
    createMany?: offersCreateManyOffer_categoriesInputEnvelope
    connect?: offersWhereUniqueInput | offersWhereUniqueInput[]
  }

  export type providersUncheckedCreateNestedManyWithoutOffer_categoriesInput = {
    create?: XOR<providersCreateWithoutOffer_categoriesInput, providersUncheckedCreateWithoutOffer_categoriesInput> | providersCreateWithoutOffer_categoriesInput[] | providersUncheckedCreateWithoutOffer_categoriesInput[]
    connectOrCreate?: providersCreateOrConnectWithoutOffer_categoriesInput | providersCreateOrConnectWithoutOffer_categoriesInput[]
    createMany?: providersCreateManyOffer_categoriesInputEnvelope
    connect?: providersWhereUniqueInput | providersWhereUniqueInput[]
  }

  export type offersUpdateManyWithoutOffer_categoriesNestedInput = {
    create?: XOR<offersCreateWithoutOffer_categoriesInput, offersUncheckedCreateWithoutOffer_categoriesInput> | offersCreateWithoutOffer_categoriesInput[] | offersUncheckedCreateWithoutOffer_categoriesInput[]
    connectOrCreate?: offersCreateOrConnectWithoutOffer_categoriesInput | offersCreateOrConnectWithoutOffer_categoriesInput[]
    upsert?: offersUpsertWithWhereUniqueWithoutOffer_categoriesInput | offersUpsertWithWhereUniqueWithoutOffer_categoriesInput[]
    createMany?: offersCreateManyOffer_categoriesInputEnvelope
    set?: offersWhereUniqueInput | offersWhereUniqueInput[]
    disconnect?: offersWhereUniqueInput | offersWhereUniqueInput[]
    delete?: offersWhereUniqueInput | offersWhereUniqueInput[]
    connect?: offersWhereUniqueInput | offersWhereUniqueInput[]
    update?: offersUpdateWithWhereUniqueWithoutOffer_categoriesInput | offersUpdateWithWhereUniqueWithoutOffer_categoriesInput[]
    updateMany?: offersUpdateManyWithWhereWithoutOffer_categoriesInput | offersUpdateManyWithWhereWithoutOffer_categoriesInput[]
    deleteMany?: offersScalarWhereInput | offersScalarWhereInput[]
  }

  export type providersUpdateManyWithoutOffer_categoriesNestedInput = {
    create?: XOR<providersCreateWithoutOffer_categoriesInput, providersUncheckedCreateWithoutOffer_categoriesInput> | providersCreateWithoutOffer_categoriesInput[] | providersUncheckedCreateWithoutOffer_categoriesInput[]
    connectOrCreate?: providersCreateOrConnectWithoutOffer_categoriesInput | providersCreateOrConnectWithoutOffer_categoriesInput[]
    upsert?: providersUpsertWithWhereUniqueWithoutOffer_categoriesInput | providersUpsertWithWhereUniqueWithoutOffer_categoriesInput[]
    createMany?: providersCreateManyOffer_categoriesInputEnvelope
    set?: providersWhereUniqueInput | providersWhereUniqueInput[]
    disconnect?: providersWhereUniqueInput | providersWhereUniqueInput[]
    delete?: providersWhereUniqueInput | providersWhereUniqueInput[]
    connect?: providersWhereUniqueInput | providersWhereUniqueInput[]
    update?: providersUpdateWithWhereUniqueWithoutOffer_categoriesInput | providersUpdateWithWhereUniqueWithoutOffer_categoriesInput[]
    updateMany?: providersUpdateManyWithWhereWithoutOffer_categoriesInput | providersUpdateManyWithWhereWithoutOffer_categoriesInput[]
    deleteMany?: providersScalarWhereInput | providersScalarWhereInput[]
  }

  export type offersUncheckedUpdateManyWithoutOffer_categoriesNestedInput = {
    create?: XOR<offersCreateWithoutOffer_categoriesInput, offersUncheckedCreateWithoutOffer_categoriesInput> | offersCreateWithoutOffer_categoriesInput[] | offersUncheckedCreateWithoutOffer_categoriesInput[]
    connectOrCreate?: offersCreateOrConnectWithoutOffer_categoriesInput | offersCreateOrConnectWithoutOffer_categoriesInput[]
    upsert?: offersUpsertWithWhereUniqueWithoutOffer_categoriesInput | offersUpsertWithWhereUniqueWithoutOffer_categoriesInput[]
    createMany?: offersCreateManyOffer_categoriesInputEnvelope
    set?: offersWhereUniqueInput | offersWhereUniqueInput[]
    disconnect?: offersWhereUniqueInput | offersWhereUniqueInput[]
    delete?: offersWhereUniqueInput | offersWhereUniqueInput[]
    connect?: offersWhereUniqueInput | offersWhereUniqueInput[]
    update?: offersUpdateWithWhereUniqueWithoutOffer_categoriesInput | offersUpdateWithWhereUniqueWithoutOffer_categoriesInput[]
    updateMany?: offersUpdateManyWithWhereWithoutOffer_categoriesInput | offersUpdateManyWithWhereWithoutOffer_categoriesInput[]
    deleteMany?: offersScalarWhereInput | offersScalarWhereInput[]
  }

  export type providersUncheckedUpdateManyWithoutOffer_categoriesNestedInput = {
    create?: XOR<providersCreateWithoutOffer_categoriesInput, providersUncheckedCreateWithoutOffer_categoriesInput> | providersCreateWithoutOffer_categoriesInput[] | providersUncheckedCreateWithoutOffer_categoriesInput[]
    connectOrCreate?: providersCreateOrConnectWithoutOffer_categoriesInput | providersCreateOrConnectWithoutOffer_categoriesInput[]
    upsert?: providersUpsertWithWhereUniqueWithoutOffer_categoriesInput | providersUpsertWithWhereUniqueWithoutOffer_categoriesInput[]
    createMany?: providersCreateManyOffer_categoriesInputEnvelope
    set?: providersWhereUniqueInput | providersWhereUniqueInput[]
    disconnect?: providersWhereUniqueInput | providersWhereUniqueInput[]
    delete?: providersWhereUniqueInput | providersWhereUniqueInput[]
    connect?: providersWhereUniqueInput | providersWhereUniqueInput[]
    update?: providersUpdateWithWhereUniqueWithoutOffer_categoriesInput | providersUpdateWithWhereUniqueWithoutOffer_categoriesInput[]
    updateMany?: providersUpdateManyWithWhereWithoutOffer_categoriesInput | providersUpdateManyWithWhereWithoutOffer_categoriesInput[]
    deleteMany?: providersScalarWhereInput | providersScalarWhereInput[]
  }

  export type offer_categoriesCreateNestedOneWithoutOffersInput = {
    create?: XOR<offer_categoriesCreateWithoutOffersInput, offer_categoriesUncheckedCreateWithoutOffersInput>
    connectOrCreate?: offer_categoriesCreateOrConnectWithoutOffersInput
    connect?: offer_categoriesWhereUniqueInput
  }

  export type provider_offersCreateNestedManyWithoutOffersInput = {
    create?: XOR<provider_offersCreateWithoutOffersInput, provider_offersUncheckedCreateWithoutOffersInput> | provider_offersCreateWithoutOffersInput[] | provider_offersUncheckedCreateWithoutOffersInput[]
    connectOrCreate?: provider_offersCreateOrConnectWithoutOffersInput | provider_offersCreateOrConnectWithoutOffersInput[]
    createMany?: provider_offersCreateManyOffersInputEnvelope
    connect?: provider_offersWhereUniqueInput | provider_offersWhereUniqueInput[]
  }

  export type subscription_plan_offersCreateNestedManyWithoutOffersInput = {
    create?: XOR<subscription_plan_offersCreateWithoutOffersInput, subscription_plan_offersUncheckedCreateWithoutOffersInput> | subscription_plan_offersCreateWithoutOffersInput[] | subscription_plan_offersUncheckedCreateWithoutOffersInput[]
    connectOrCreate?: subscription_plan_offersCreateOrConnectWithoutOffersInput | subscription_plan_offersCreateOrConnectWithoutOffersInput[]
    createMany?: subscription_plan_offersCreateManyOffersInputEnvelope
    connect?: subscription_plan_offersWhereUniqueInput | subscription_plan_offersWhereUniqueInput[]
  }

  export type subscription_usagesCreateNestedManyWithoutOffersInput = {
    create?: XOR<subscription_usagesCreateWithoutOffersInput, subscription_usagesUncheckedCreateWithoutOffersInput> | subscription_usagesCreateWithoutOffersInput[] | subscription_usagesUncheckedCreateWithoutOffersInput[]
    connectOrCreate?: subscription_usagesCreateOrConnectWithoutOffersInput | subscription_usagesCreateOrConnectWithoutOffersInput[]
    createMany?: subscription_usagesCreateManyOffersInputEnvelope
    connect?: subscription_usagesWhereUniqueInput | subscription_usagesWhereUniqueInput[]
  }

  export type provider_offersUncheckedCreateNestedManyWithoutOffersInput = {
    create?: XOR<provider_offersCreateWithoutOffersInput, provider_offersUncheckedCreateWithoutOffersInput> | provider_offersCreateWithoutOffersInput[] | provider_offersUncheckedCreateWithoutOffersInput[]
    connectOrCreate?: provider_offersCreateOrConnectWithoutOffersInput | provider_offersCreateOrConnectWithoutOffersInput[]
    createMany?: provider_offersCreateManyOffersInputEnvelope
    connect?: provider_offersWhereUniqueInput | provider_offersWhereUniqueInput[]
  }

  export type subscription_plan_offersUncheckedCreateNestedManyWithoutOffersInput = {
    create?: XOR<subscription_plan_offersCreateWithoutOffersInput, subscription_plan_offersUncheckedCreateWithoutOffersInput> | subscription_plan_offersCreateWithoutOffersInput[] | subscription_plan_offersUncheckedCreateWithoutOffersInput[]
    connectOrCreate?: subscription_plan_offersCreateOrConnectWithoutOffersInput | subscription_plan_offersCreateOrConnectWithoutOffersInput[]
    createMany?: subscription_plan_offersCreateManyOffersInputEnvelope
    connect?: subscription_plan_offersWhereUniqueInput | subscription_plan_offersWhereUniqueInput[]
  }

  export type subscription_usagesUncheckedCreateNestedManyWithoutOffersInput = {
    create?: XOR<subscription_usagesCreateWithoutOffersInput, subscription_usagesUncheckedCreateWithoutOffersInput> | subscription_usagesCreateWithoutOffersInput[] | subscription_usagesUncheckedCreateWithoutOffersInput[]
    connectOrCreate?: subscription_usagesCreateOrConnectWithoutOffersInput | subscription_usagesCreateOrConnectWithoutOffersInput[]
    createMany?: subscription_usagesCreateManyOffersInputEnvelope
    connect?: subscription_usagesWhereUniqueInput | subscription_usagesWhereUniqueInput[]
  }

  export type NullableDecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string | null
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type offer_categoriesUpdateOneRequiredWithoutOffersNestedInput = {
    create?: XOR<offer_categoriesCreateWithoutOffersInput, offer_categoriesUncheckedCreateWithoutOffersInput>
    connectOrCreate?: offer_categoriesCreateOrConnectWithoutOffersInput
    upsert?: offer_categoriesUpsertWithoutOffersInput
    connect?: offer_categoriesWhereUniqueInput
    update?: XOR<XOR<offer_categoriesUpdateToOneWithWhereWithoutOffersInput, offer_categoriesUpdateWithoutOffersInput>, offer_categoriesUncheckedUpdateWithoutOffersInput>
  }

  export type provider_offersUpdateManyWithoutOffersNestedInput = {
    create?: XOR<provider_offersCreateWithoutOffersInput, provider_offersUncheckedCreateWithoutOffersInput> | provider_offersCreateWithoutOffersInput[] | provider_offersUncheckedCreateWithoutOffersInput[]
    connectOrCreate?: provider_offersCreateOrConnectWithoutOffersInput | provider_offersCreateOrConnectWithoutOffersInput[]
    upsert?: provider_offersUpsertWithWhereUniqueWithoutOffersInput | provider_offersUpsertWithWhereUniqueWithoutOffersInput[]
    createMany?: provider_offersCreateManyOffersInputEnvelope
    set?: provider_offersWhereUniqueInput | provider_offersWhereUniqueInput[]
    disconnect?: provider_offersWhereUniqueInput | provider_offersWhereUniqueInput[]
    delete?: provider_offersWhereUniqueInput | provider_offersWhereUniqueInput[]
    connect?: provider_offersWhereUniqueInput | provider_offersWhereUniqueInput[]
    update?: provider_offersUpdateWithWhereUniqueWithoutOffersInput | provider_offersUpdateWithWhereUniqueWithoutOffersInput[]
    updateMany?: provider_offersUpdateManyWithWhereWithoutOffersInput | provider_offersUpdateManyWithWhereWithoutOffersInput[]
    deleteMany?: provider_offersScalarWhereInput | provider_offersScalarWhereInput[]
  }

  export type subscription_plan_offersUpdateManyWithoutOffersNestedInput = {
    create?: XOR<subscription_plan_offersCreateWithoutOffersInput, subscription_plan_offersUncheckedCreateWithoutOffersInput> | subscription_plan_offersCreateWithoutOffersInput[] | subscription_plan_offersUncheckedCreateWithoutOffersInput[]
    connectOrCreate?: subscription_plan_offersCreateOrConnectWithoutOffersInput | subscription_plan_offersCreateOrConnectWithoutOffersInput[]
    upsert?: subscription_plan_offersUpsertWithWhereUniqueWithoutOffersInput | subscription_plan_offersUpsertWithWhereUniqueWithoutOffersInput[]
    createMany?: subscription_plan_offersCreateManyOffersInputEnvelope
    set?: subscription_plan_offersWhereUniqueInput | subscription_plan_offersWhereUniqueInput[]
    disconnect?: subscription_plan_offersWhereUniqueInput | subscription_plan_offersWhereUniqueInput[]
    delete?: subscription_plan_offersWhereUniqueInput | subscription_plan_offersWhereUniqueInput[]
    connect?: subscription_plan_offersWhereUniqueInput | subscription_plan_offersWhereUniqueInput[]
    update?: subscription_plan_offersUpdateWithWhereUniqueWithoutOffersInput | subscription_plan_offersUpdateWithWhereUniqueWithoutOffersInput[]
    updateMany?: subscription_plan_offersUpdateManyWithWhereWithoutOffersInput | subscription_plan_offersUpdateManyWithWhereWithoutOffersInput[]
    deleteMany?: subscription_plan_offersScalarWhereInput | subscription_plan_offersScalarWhereInput[]
  }

  export type subscription_usagesUpdateManyWithoutOffersNestedInput = {
    create?: XOR<subscription_usagesCreateWithoutOffersInput, subscription_usagesUncheckedCreateWithoutOffersInput> | subscription_usagesCreateWithoutOffersInput[] | subscription_usagesUncheckedCreateWithoutOffersInput[]
    connectOrCreate?: subscription_usagesCreateOrConnectWithoutOffersInput | subscription_usagesCreateOrConnectWithoutOffersInput[]
    upsert?: subscription_usagesUpsertWithWhereUniqueWithoutOffersInput | subscription_usagesUpsertWithWhereUniqueWithoutOffersInput[]
    createMany?: subscription_usagesCreateManyOffersInputEnvelope
    set?: subscription_usagesWhereUniqueInput | subscription_usagesWhereUniqueInput[]
    disconnect?: subscription_usagesWhereUniqueInput | subscription_usagesWhereUniqueInput[]
    delete?: subscription_usagesWhereUniqueInput | subscription_usagesWhereUniqueInput[]
    connect?: subscription_usagesWhereUniqueInput | subscription_usagesWhereUniqueInput[]
    update?: subscription_usagesUpdateWithWhereUniqueWithoutOffersInput | subscription_usagesUpdateWithWhereUniqueWithoutOffersInput[]
    updateMany?: subscription_usagesUpdateManyWithWhereWithoutOffersInput | subscription_usagesUpdateManyWithWhereWithoutOffersInput[]
    deleteMany?: subscription_usagesScalarWhereInput | subscription_usagesScalarWhereInput[]
  }

  export type provider_offersUncheckedUpdateManyWithoutOffersNestedInput = {
    create?: XOR<provider_offersCreateWithoutOffersInput, provider_offersUncheckedCreateWithoutOffersInput> | provider_offersCreateWithoutOffersInput[] | provider_offersUncheckedCreateWithoutOffersInput[]
    connectOrCreate?: provider_offersCreateOrConnectWithoutOffersInput | provider_offersCreateOrConnectWithoutOffersInput[]
    upsert?: provider_offersUpsertWithWhereUniqueWithoutOffersInput | provider_offersUpsertWithWhereUniqueWithoutOffersInput[]
    createMany?: provider_offersCreateManyOffersInputEnvelope
    set?: provider_offersWhereUniqueInput | provider_offersWhereUniqueInput[]
    disconnect?: provider_offersWhereUniqueInput | provider_offersWhereUniqueInput[]
    delete?: provider_offersWhereUniqueInput | provider_offersWhereUniqueInput[]
    connect?: provider_offersWhereUniqueInput | provider_offersWhereUniqueInput[]
    update?: provider_offersUpdateWithWhereUniqueWithoutOffersInput | provider_offersUpdateWithWhereUniqueWithoutOffersInput[]
    updateMany?: provider_offersUpdateManyWithWhereWithoutOffersInput | provider_offersUpdateManyWithWhereWithoutOffersInput[]
    deleteMany?: provider_offersScalarWhereInput | provider_offersScalarWhereInput[]
  }

  export type subscription_plan_offersUncheckedUpdateManyWithoutOffersNestedInput = {
    create?: XOR<subscription_plan_offersCreateWithoutOffersInput, subscription_plan_offersUncheckedCreateWithoutOffersInput> | subscription_plan_offersCreateWithoutOffersInput[] | subscription_plan_offersUncheckedCreateWithoutOffersInput[]
    connectOrCreate?: subscription_plan_offersCreateOrConnectWithoutOffersInput | subscription_plan_offersCreateOrConnectWithoutOffersInput[]
    upsert?: subscription_plan_offersUpsertWithWhereUniqueWithoutOffersInput | subscription_plan_offersUpsertWithWhereUniqueWithoutOffersInput[]
    createMany?: subscription_plan_offersCreateManyOffersInputEnvelope
    set?: subscription_plan_offersWhereUniqueInput | subscription_plan_offersWhereUniqueInput[]
    disconnect?: subscription_plan_offersWhereUniqueInput | subscription_plan_offersWhereUniqueInput[]
    delete?: subscription_plan_offersWhereUniqueInput | subscription_plan_offersWhereUniqueInput[]
    connect?: subscription_plan_offersWhereUniqueInput | subscription_plan_offersWhereUniqueInput[]
    update?: subscription_plan_offersUpdateWithWhereUniqueWithoutOffersInput | subscription_plan_offersUpdateWithWhereUniqueWithoutOffersInput[]
    updateMany?: subscription_plan_offersUpdateManyWithWhereWithoutOffersInput | subscription_plan_offersUpdateManyWithWhereWithoutOffersInput[]
    deleteMany?: subscription_plan_offersScalarWhereInput | subscription_plan_offersScalarWhereInput[]
  }

  export type subscription_usagesUncheckedUpdateManyWithoutOffersNestedInput = {
    create?: XOR<subscription_usagesCreateWithoutOffersInput, subscription_usagesUncheckedCreateWithoutOffersInput> | subscription_usagesCreateWithoutOffersInput[] | subscription_usagesUncheckedCreateWithoutOffersInput[]
    connectOrCreate?: subscription_usagesCreateOrConnectWithoutOffersInput | subscription_usagesCreateOrConnectWithoutOffersInput[]
    upsert?: subscription_usagesUpsertWithWhereUniqueWithoutOffersInput | subscription_usagesUpsertWithWhereUniqueWithoutOffersInput[]
    createMany?: subscription_usagesCreateManyOffersInputEnvelope
    set?: subscription_usagesWhereUniqueInput | subscription_usagesWhereUniqueInput[]
    disconnect?: subscription_usagesWhereUniqueInput | subscription_usagesWhereUniqueInput[]
    delete?: subscription_usagesWhereUniqueInput | subscription_usagesWhereUniqueInput[]
    connect?: subscription_usagesWhereUniqueInput | subscription_usagesWhereUniqueInput[]
    update?: subscription_usagesUpdateWithWhereUniqueWithoutOffersInput | subscription_usagesUpdateWithWhereUniqueWithoutOffersInput[]
    updateMany?: subscription_usagesUpdateManyWithWhereWithoutOffersInput | subscription_usagesUpdateManyWithWhereWithoutOffersInput[]
    deleteMany?: subscription_usagesScalarWhereInput | subscription_usagesScalarWhereInput[]
  }

  export type customer_subscriptionsCreateNestedOneWithoutOrdersInput = {
    create?: XOR<customer_subscriptionsCreateWithoutOrdersInput, customer_subscriptionsUncheckedCreateWithoutOrdersInput>
    connectOrCreate?: customer_subscriptionsCreateOrConnectWithoutOrdersInput
    connect?: customer_subscriptionsWhereUniqueInput
  }

  export type paymentsCreateNestedManyWithoutOrdersInput = {
    create?: XOR<paymentsCreateWithoutOrdersInput, paymentsUncheckedCreateWithoutOrdersInput> | paymentsCreateWithoutOrdersInput[] | paymentsUncheckedCreateWithoutOrdersInput[]
    connectOrCreate?: paymentsCreateOrConnectWithoutOrdersInput | paymentsCreateOrConnectWithoutOrdersInput[]
    createMany?: paymentsCreateManyOrdersInputEnvelope
    connect?: paymentsWhereUniqueInput | paymentsWhereUniqueInput[]
  }

  export type customer_subscriptionsUncheckedCreateNestedOneWithoutOrdersInput = {
    create?: XOR<customer_subscriptionsCreateWithoutOrdersInput, customer_subscriptionsUncheckedCreateWithoutOrdersInput>
    connectOrCreate?: customer_subscriptionsCreateOrConnectWithoutOrdersInput
    connect?: customer_subscriptionsWhereUniqueInput
  }

  export type paymentsUncheckedCreateNestedManyWithoutOrdersInput = {
    create?: XOR<paymentsCreateWithoutOrdersInput, paymentsUncheckedCreateWithoutOrdersInput> | paymentsCreateWithoutOrdersInput[] | paymentsUncheckedCreateWithoutOrdersInput[]
    connectOrCreate?: paymentsCreateOrConnectWithoutOrdersInput | paymentsCreateOrConnectWithoutOrdersInput[]
    createMany?: paymentsCreateManyOrdersInputEnvelope
    connect?: paymentsWhereUniqueInput | paymentsWhereUniqueInput[]
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type customer_subscriptionsUpdateOneWithoutOrdersNestedInput = {
    create?: XOR<customer_subscriptionsCreateWithoutOrdersInput, customer_subscriptionsUncheckedCreateWithoutOrdersInput>
    connectOrCreate?: customer_subscriptionsCreateOrConnectWithoutOrdersInput
    upsert?: customer_subscriptionsUpsertWithoutOrdersInput
    disconnect?: customer_subscriptionsWhereInput | boolean
    delete?: customer_subscriptionsWhereInput | boolean
    connect?: customer_subscriptionsWhereUniqueInput
    update?: XOR<XOR<customer_subscriptionsUpdateToOneWithWhereWithoutOrdersInput, customer_subscriptionsUpdateWithoutOrdersInput>, customer_subscriptionsUncheckedUpdateWithoutOrdersInput>
  }

  export type paymentsUpdateManyWithoutOrdersNestedInput = {
    create?: XOR<paymentsCreateWithoutOrdersInput, paymentsUncheckedCreateWithoutOrdersInput> | paymentsCreateWithoutOrdersInput[] | paymentsUncheckedCreateWithoutOrdersInput[]
    connectOrCreate?: paymentsCreateOrConnectWithoutOrdersInput | paymentsCreateOrConnectWithoutOrdersInput[]
    upsert?: paymentsUpsertWithWhereUniqueWithoutOrdersInput | paymentsUpsertWithWhereUniqueWithoutOrdersInput[]
    createMany?: paymentsCreateManyOrdersInputEnvelope
    set?: paymentsWhereUniqueInput | paymentsWhereUniqueInput[]
    disconnect?: paymentsWhereUniqueInput | paymentsWhereUniqueInput[]
    delete?: paymentsWhereUniqueInput | paymentsWhereUniqueInput[]
    connect?: paymentsWhereUniqueInput | paymentsWhereUniqueInput[]
    update?: paymentsUpdateWithWhereUniqueWithoutOrdersInput | paymentsUpdateWithWhereUniqueWithoutOrdersInput[]
    updateMany?: paymentsUpdateManyWithWhereWithoutOrdersInput | paymentsUpdateManyWithWhereWithoutOrdersInput[]
    deleteMany?: paymentsScalarWhereInput | paymentsScalarWhereInput[]
  }

  export type customer_subscriptionsUncheckedUpdateOneWithoutOrdersNestedInput = {
    create?: XOR<customer_subscriptionsCreateWithoutOrdersInput, customer_subscriptionsUncheckedCreateWithoutOrdersInput>
    connectOrCreate?: customer_subscriptionsCreateOrConnectWithoutOrdersInput
    upsert?: customer_subscriptionsUpsertWithoutOrdersInput
    disconnect?: customer_subscriptionsWhereInput | boolean
    delete?: customer_subscriptionsWhereInput | boolean
    connect?: customer_subscriptionsWhereUniqueInput
    update?: XOR<XOR<customer_subscriptionsUpdateToOneWithWhereWithoutOrdersInput, customer_subscriptionsUpdateWithoutOrdersInput>, customer_subscriptionsUncheckedUpdateWithoutOrdersInput>
  }

  export type paymentsUncheckedUpdateManyWithoutOrdersNestedInput = {
    create?: XOR<paymentsCreateWithoutOrdersInput, paymentsUncheckedCreateWithoutOrdersInput> | paymentsCreateWithoutOrdersInput[] | paymentsUncheckedCreateWithoutOrdersInput[]
    connectOrCreate?: paymentsCreateOrConnectWithoutOrdersInput | paymentsCreateOrConnectWithoutOrdersInput[]
    upsert?: paymentsUpsertWithWhereUniqueWithoutOrdersInput | paymentsUpsertWithWhereUniqueWithoutOrdersInput[]
    createMany?: paymentsCreateManyOrdersInputEnvelope
    set?: paymentsWhereUniqueInput | paymentsWhereUniqueInput[]
    disconnect?: paymentsWhereUniqueInput | paymentsWhereUniqueInput[]
    delete?: paymentsWhereUniqueInput | paymentsWhereUniqueInput[]
    connect?: paymentsWhereUniqueInput | paymentsWhereUniqueInput[]
    update?: paymentsUpdateWithWhereUniqueWithoutOrdersInput | paymentsUpdateWithWhereUniqueWithoutOrdersInput[]
    updateMany?: paymentsUpdateManyWithWhereWithoutOrdersInput | paymentsUpdateManyWithWhereWithoutOrdersInput[]
    deleteMany?: paymentsScalarWhereInput | paymentsScalarWhereInput[]
  }

  export type ordersCreateNestedOneWithoutPaymentsInput = {
    create?: XOR<ordersCreateWithoutPaymentsInput, ordersUncheckedCreateWithoutPaymentsInput>
    connectOrCreate?: ordersCreateOrConnectWithoutPaymentsInput
    connect?: ordersWhereUniqueInput
  }

  export type ordersUpdateOneRequiredWithoutPaymentsNestedInput = {
    create?: XOR<ordersCreateWithoutPaymentsInput, ordersUncheckedCreateWithoutPaymentsInput>
    connectOrCreate?: ordersCreateOrConnectWithoutPaymentsInput
    upsert?: ordersUpsertWithoutPaymentsInput
    connect?: ordersWhereUniqueInput
    update?: XOR<XOR<ordersUpdateToOneWithWhereWithoutPaymentsInput, ordersUpdateWithoutPaymentsInput>, ordersUncheckedUpdateWithoutPaymentsInput>
  }

  export type model_has_permissionsCreateNestedManyWithoutPermissionsInput = {
    create?: XOR<model_has_permissionsCreateWithoutPermissionsInput, model_has_permissionsUncheckedCreateWithoutPermissionsInput> | model_has_permissionsCreateWithoutPermissionsInput[] | model_has_permissionsUncheckedCreateWithoutPermissionsInput[]
    connectOrCreate?: model_has_permissionsCreateOrConnectWithoutPermissionsInput | model_has_permissionsCreateOrConnectWithoutPermissionsInput[]
    createMany?: model_has_permissionsCreateManyPermissionsInputEnvelope
    connect?: model_has_permissionsWhereUniqueInput | model_has_permissionsWhereUniqueInput[]
  }

  export type role_has_permissionsCreateNestedManyWithoutPermissionsInput = {
    create?: XOR<role_has_permissionsCreateWithoutPermissionsInput, role_has_permissionsUncheckedCreateWithoutPermissionsInput> | role_has_permissionsCreateWithoutPermissionsInput[] | role_has_permissionsUncheckedCreateWithoutPermissionsInput[]
    connectOrCreate?: role_has_permissionsCreateOrConnectWithoutPermissionsInput | role_has_permissionsCreateOrConnectWithoutPermissionsInput[]
    createMany?: role_has_permissionsCreateManyPermissionsInputEnvelope
    connect?: role_has_permissionsWhereUniqueInput | role_has_permissionsWhereUniqueInput[]
  }

  export type model_has_permissionsUncheckedCreateNestedManyWithoutPermissionsInput = {
    create?: XOR<model_has_permissionsCreateWithoutPermissionsInput, model_has_permissionsUncheckedCreateWithoutPermissionsInput> | model_has_permissionsCreateWithoutPermissionsInput[] | model_has_permissionsUncheckedCreateWithoutPermissionsInput[]
    connectOrCreate?: model_has_permissionsCreateOrConnectWithoutPermissionsInput | model_has_permissionsCreateOrConnectWithoutPermissionsInput[]
    createMany?: model_has_permissionsCreateManyPermissionsInputEnvelope
    connect?: model_has_permissionsWhereUniqueInput | model_has_permissionsWhereUniqueInput[]
  }

  export type role_has_permissionsUncheckedCreateNestedManyWithoutPermissionsInput = {
    create?: XOR<role_has_permissionsCreateWithoutPermissionsInput, role_has_permissionsUncheckedCreateWithoutPermissionsInput> | role_has_permissionsCreateWithoutPermissionsInput[] | role_has_permissionsUncheckedCreateWithoutPermissionsInput[]
    connectOrCreate?: role_has_permissionsCreateOrConnectWithoutPermissionsInput | role_has_permissionsCreateOrConnectWithoutPermissionsInput[]
    createMany?: role_has_permissionsCreateManyPermissionsInputEnvelope
    connect?: role_has_permissionsWhereUniqueInput | role_has_permissionsWhereUniqueInput[]
  }

  export type model_has_permissionsUpdateManyWithoutPermissionsNestedInput = {
    create?: XOR<model_has_permissionsCreateWithoutPermissionsInput, model_has_permissionsUncheckedCreateWithoutPermissionsInput> | model_has_permissionsCreateWithoutPermissionsInput[] | model_has_permissionsUncheckedCreateWithoutPermissionsInput[]
    connectOrCreate?: model_has_permissionsCreateOrConnectWithoutPermissionsInput | model_has_permissionsCreateOrConnectWithoutPermissionsInput[]
    upsert?: model_has_permissionsUpsertWithWhereUniqueWithoutPermissionsInput | model_has_permissionsUpsertWithWhereUniqueWithoutPermissionsInput[]
    createMany?: model_has_permissionsCreateManyPermissionsInputEnvelope
    set?: model_has_permissionsWhereUniqueInput | model_has_permissionsWhereUniqueInput[]
    disconnect?: model_has_permissionsWhereUniqueInput | model_has_permissionsWhereUniqueInput[]
    delete?: model_has_permissionsWhereUniqueInput | model_has_permissionsWhereUniqueInput[]
    connect?: model_has_permissionsWhereUniqueInput | model_has_permissionsWhereUniqueInput[]
    update?: model_has_permissionsUpdateWithWhereUniqueWithoutPermissionsInput | model_has_permissionsUpdateWithWhereUniqueWithoutPermissionsInput[]
    updateMany?: model_has_permissionsUpdateManyWithWhereWithoutPermissionsInput | model_has_permissionsUpdateManyWithWhereWithoutPermissionsInput[]
    deleteMany?: model_has_permissionsScalarWhereInput | model_has_permissionsScalarWhereInput[]
  }

  export type role_has_permissionsUpdateManyWithoutPermissionsNestedInput = {
    create?: XOR<role_has_permissionsCreateWithoutPermissionsInput, role_has_permissionsUncheckedCreateWithoutPermissionsInput> | role_has_permissionsCreateWithoutPermissionsInput[] | role_has_permissionsUncheckedCreateWithoutPermissionsInput[]
    connectOrCreate?: role_has_permissionsCreateOrConnectWithoutPermissionsInput | role_has_permissionsCreateOrConnectWithoutPermissionsInput[]
    upsert?: role_has_permissionsUpsertWithWhereUniqueWithoutPermissionsInput | role_has_permissionsUpsertWithWhereUniqueWithoutPermissionsInput[]
    createMany?: role_has_permissionsCreateManyPermissionsInputEnvelope
    set?: role_has_permissionsWhereUniqueInput | role_has_permissionsWhereUniqueInput[]
    disconnect?: role_has_permissionsWhereUniqueInput | role_has_permissionsWhereUniqueInput[]
    delete?: role_has_permissionsWhereUniqueInput | role_has_permissionsWhereUniqueInput[]
    connect?: role_has_permissionsWhereUniqueInput | role_has_permissionsWhereUniqueInput[]
    update?: role_has_permissionsUpdateWithWhereUniqueWithoutPermissionsInput | role_has_permissionsUpdateWithWhereUniqueWithoutPermissionsInput[]
    updateMany?: role_has_permissionsUpdateManyWithWhereWithoutPermissionsInput | role_has_permissionsUpdateManyWithWhereWithoutPermissionsInput[]
    deleteMany?: role_has_permissionsScalarWhereInput | role_has_permissionsScalarWhereInput[]
  }

  export type model_has_permissionsUncheckedUpdateManyWithoutPermissionsNestedInput = {
    create?: XOR<model_has_permissionsCreateWithoutPermissionsInput, model_has_permissionsUncheckedCreateWithoutPermissionsInput> | model_has_permissionsCreateWithoutPermissionsInput[] | model_has_permissionsUncheckedCreateWithoutPermissionsInput[]
    connectOrCreate?: model_has_permissionsCreateOrConnectWithoutPermissionsInput | model_has_permissionsCreateOrConnectWithoutPermissionsInput[]
    upsert?: model_has_permissionsUpsertWithWhereUniqueWithoutPermissionsInput | model_has_permissionsUpsertWithWhereUniqueWithoutPermissionsInput[]
    createMany?: model_has_permissionsCreateManyPermissionsInputEnvelope
    set?: model_has_permissionsWhereUniqueInput | model_has_permissionsWhereUniqueInput[]
    disconnect?: model_has_permissionsWhereUniqueInput | model_has_permissionsWhereUniqueInput[]
    delete?: model_has_permissionsWhereUniqueInput | model_has_permissionsWhereUniqueInput[]
    connect?: model_has_permissionsWhereUniqueInput | model_has_permissionsWhereUniqueInput[]
    update?: model_has_permissionsUpdateWithWhereUniqueWithoutPermissionsInput | model_has_permissionsUpdateWithWhereUniqueWithoutPermissionsInput[]
    updateMany?: model_has_permissionsUpdateManyWithWhereWithoutPermissionsInput | model_has_permissionsUpdateManyWithWhereWithoutPermissionsInput[]
    deleteMany?: model_has_permissionsScalarWhereInput | model_has_permissionsScalarWhereInput[]
  }

  export type role_has_permissionsUncheckedUpdateManyWithoutPermissionsNestedInput = {
    create?: XOR<role_has_permissionsCreateWithoutPermissionsInput, role_has_permissionsUncheckedCreateWithoutPermissionsInput> | role_has_permissionsCreateWithoutPermissionsInput[] | role_has_permissionsUncheckedCreateWithoutPermissionsInput[]
    connectOrCreate?: role_has_permissionsCreateOrConnectWithoutPermissionsInput | role_has_permissionsCreateOrConnectWithoutPermissionsInput[]
    upsert?: role_has_permissionsUpsertWithWhereUniqueWithoutPermissionsInput | role_has_permissionsUpsertWithWhereUniqueWithoutPermissionsInput[]
    createMany?: role_has_permissionsCreateManyPermissionsInputEnvelope
    set?: role_has_permissionsWhereUniqueInput | role_has_permissionsWhereUniqueInput[]
    disconnect?: role_has_permissionsWhereUniqueInput | role_has_permissionsWhereUniqueInput[]
    delete?: role_has_permissionsWhereUniqueInput | role_has_permissionsWhereUniqueInput[]
    connect?: role_has_permissionsWhereUniqueInput | role_has_permissionsWhereUniqueInput[]
    update?: role_has_permissionsUpdateWithWhereUniqueWithoutPermissionsInput | role_has_permissionsUpdateWithWhereUniqueWithoutPermissionsInput[]
    updateMany?: role_has_permissionsUpdateManyWithWhereWithoutPermissionsInput | role_has_permissionsUpdateManyWithWhereWithoutPermissionsInput[]
    deleteMany?: role_has_permissionsScalarWhereInput | role_has_permissionsScalarWhereInput[]
  }

  export type providersCreateNestedOneWithoutProvider_agentsInput = {
    create?: XOR<providersCreateWithoutProvider_agentsInput, providersUncheckedCreateWithoutProvider_agentsInput>
    connectOrCreate?: providersCreateOrConnectWithoutProvider_agentsInput
    connect?: providersWhereUniqueInput
  }

  export type adminsCreateNestedOneWithoutProvider_agentsInput = {
    create?: XOR<adminsCreateWithoutProvider_agentsInput, adminsUncheckedCreateWithoutProvider_agentsInput>
    connectOrCreate?: adminsCreateOrConnectWithoutProvider_agentsInput
    connect?: adminsWhereUniqueInput
  }

  export type subscription_usagesCreateNestedManyWithoutProvider_agentsInput = {
    create?: XOR<subscription_usagesCreateWithoutProvider_agentsInput, subscription_usagesUncheckedCreateWithoutProvider_agentsInput> | subscription_usagesCreateWithoutProvider_agentsInput[] | subscription_usagesUncheckedCreateWithoutProvider_agentsInput[]
    connectOrCreate?: subscription_usagesCreateOrConnectWithoutProvider_agentsInput | subscription_usagesCreateOrConnectWithoutProvider_agentsInput[]
    createMany?: subscription_usagesCreateManyProvider_agentsInputEnvelope
    connect?: subscription_usagesWhereUniqueInput | subscription_usagesWhereUniqueInput[]
  }

  export type subscription_usagesUncheckedCreateNestedManyWithoutProvider_agentsInput = {
    create?: XOR<subscription_usagesCreateWithoutProvider_agentsInput, subscription_usagesUncheckedCreateWithoutProvider_agentsInput> | subscription_usagesCreateWithoutProvider_agentsInput[] | subscription_usagesUncheckedCreateWithoutProvider_agentsInput[]
    connectOrCreate?: subscription_usagesCreateOrConnectWithoutProvider_agentsInput | subscription_usagesCreateOrConnectWithoutProvider_agentsInput[]
    createMany?: subscription_usagesCreateManyProvider_agentsInputEnvelope
    connect?: subscription_usagesWhereUniqueInput | subscription_usagesWhereUniqueInput[]
  }

  export type providersUpdateOneRequiredWithoutProvider_agentsNestedInput = {
    create?: XOR<providersCreateWithoutProvider_agentsInput, providersUncheckedCreateWithoutProvider_agentsInput>
    connectOrCreate?: providersCreateOrConnectWithoutProvider_agentsInput
    upsert?: providersUpsertWithoutProvider_agentsInput
    connect?: providersWhereUniqueInput
    update?: XOR<XOR<providersUpdateToOneWithWhereWithoutProvider_agentsInput, providersUpdateWithoutProvider_agentsInput>, providersUncheckedUpdateWithoutProvider_agentsInput>
  }

  export type adminsUpdateOneRequiredWithoutProvider_agentsNestedInput = {
    create?: XOR<adminsCreateWithoutProvider_agentsInput, adminsUncheckedCreateWithoutProvider_agentsInput>
    connectOrCreate?: adminsCreateOrConnectWithoutProvider_agentsInput
    upsert?: adminsUpsertWithoutProvider_agentsInput
    connect?: adminsWhereUniqueInput
    update?: XOR<XOR<adminsUpdateToOneWithWhereWithoutProvider_agentsInput, adminsUpdateWithoutProvider_agentsInput>, adminsUncheckedUpdateWithoutProvider_agentsInput>
  }

  export type subscription_usagesUpdateManyWithoutProvider_agentsNestedInput = {
    create?: XOR<subscription_usagesCreateWithoutProvider_agentsInput, subscription_usagesUncheckedCreateWithoutProvider_agentsInput> | subscription_usagesCreateWithoutProvider_agentsInput[] | subscription_usagesUncheckedCreateWithoutProvider_agentsInput[]
    connectOrCreate?: subscription_usagesCreateOrConnectWithoutProvider_agentsInput | subscription_usagesCreateOrConnectWithoutProvider_agentsInput[]
    upsert?: subscription_usagesUpsertWithWhereUniqueWithoutProvider_agentsInput | subscription_usagesUpsertWithWhereUniqueWithoutProvider_agentsInput[]
    createMany?: subscription_usagesCreateManyProvider_agentsInputEnvelope
    set?: subscription_usagesWhereUniqueInput | subscription_usagesWhereUniqueInput[]
    disconnect?: subscription_usagesWhereUniqueInput | subscription_usagesWhereUniqueInput[]
    delete?: subscription_usagesWhereUniqueInput | subscription_usagesWhereUniqueInput[]
    connect?: subscription_usagesWhereUniqueInput | subscription_usagesWhereUniqueInput[]
    update?: subscription_usagesUpdateWithWhereUniqueWithoutProvider_agentsInput | subscription_usagesUpdateWithWhereUniqueWithoutProvider_agentsInput[]
    updateMany?: subscription_usagesUpdateManyWithWhereWithoutProvider_agentsInput | subscription_usagesUpdateManyWithWhereWithoutProvider_agentsInput[]
    deleteMany?: subscription_usagesScalarWhereInput | subscription_usagesScalarWhereInput[]
  }

  export type subscription_usagesUncheckedUpdateManyWithoutProvider_agentsNestedInput = {
    create?: XOR<subscription_usagesCreateWithoutProvider_agentsInput, subscription_usagesUncheckedCreateWithoutProvider_agentsInput> | subscription_usagesCreateWithoutProvider_agentsInput[] | subscription_usagesUncheckedCreateWithoutProvider_agentsInput[]
    connectOrCreate?: subscription_usagesCreateOrConnectWithoutProvider_agentsInput | subscription_usagesCreateOrConnectWithoutProvider_agentsInput[]
    upsert?: subscription_usagesUpsertWithWhereUniqueWithoutProvider_agentsInput | subscription_usagesUpsertWithWhereUniqueWithoutProvider_agentsInput[]
    createMany?: subscription_usagesCreateManyProvider_agentsInputEnvelope
    set?: subscription_usagesWhereUniqueInput | subscription_usagesWhereUniqueInput[]
    disconnect?: subscription_usagesWhereUniqueInput | subscription_usagesWhereUniqueInput[]
    delete?: subscription_usagesWhereUniqueInput | subscription_usagesWhereUniqueInput[]
    connect?: subscription_usagesWhereUniqueInput | subscription_usagesWhereUniqueInput[]
    update?: subscription_usagesUpdateWithWhereUniqueWithoutProvider_agentsInput | subscription_usagesUpdateWithWhereUniqueWithoutProvider_agentsInput[]
    updateMany?: subscription_usagesUpdateManyWithWhereWithoutProvider_agentsInput | subscription_usagesUpdateManyWithWhereWithoutProvider_agentsInput[]
    deleteMany?: subscription_usagesScalarWhereInput | subscription_usagesScalarWhereInput[]
  }

  export type offersCreateNestedOneWithoutProvider_offersInput = {
    create?: XOR<offersCreateWithoutProvider_offersInput, offersUncheckedCreateWithoutProvider_offersInput>
    connectOrCreate?: offersCreateOrConnectWithoutProvider_offersInput
    connect?: offersWhereUniqueInput
  }

  export type providersCreateNestedOneWithoutProvider_offersInput = {
    create?: XOR<providersCreateWithoutProvider_offersInput, providersUncheckedCreateWithoutProvider_offersInput>
    connectOrCreate?: providersCreateOrConnectWithoutProvider_offersInput
    connect?: providersWhereUniqueInput
  }

  export type offersUpdateOneRequiredWithoutProvider_offersNestedInput = {
    create?: XOR<offersCreateWithoutProvider_offersInput, offersUncheckedCreateWithoutProvider_offersInput>
    connectOrCreate?: offersCreateOrConnectWithoutProvider_offersInput
    upsert?: offersUpsertWithoutProvider_offersInput
    connect?: offersWhereUniqueInput
    update?: XOR<XOR<offersUpdateToOneWithWhereWithoutProvider_offersInput, offersUpdateWithoutProvider_offersInput>, offersUncheckedUpdateWithoutProvider_offersInput>
  }

  export type providersUpdateOneRequiredWithoutProvider_offersNestedInput = {
    create?: XOR<providersCreateWithoutProvider_offersInput, providersUncheckedCreateWithoutProvider_offersInput>
    connectOrCreate?: providersCreateOrConnectWithoutProvider_offersInput
    upsert?: providersUpsertWithoutProvider_offersInput
    connect?: providersWhereUniqueInput
    update?: XOR<XOR<providersUpdateToOneWithWhereWithoutProvider_offersInput, providersUpdateWithoutProvider_offersInput>, providersUncheckedUpdateWithoutProvider_offersInput>
  }

  export type provider_agentsCreateNestedManyWithoutProvidersInput = {
    create?: XOR<provider_agentsCreateWithoutProvidersInput, provider_agentsUncheckedCreateWithoutProvidersInput> | provider_agentsCreateWithoutProvidersInput[] | provider_agentsUncheckedCreateWithoutProvidersInput[]
    connectOrCreate?: provider_agentsCreateOrConnectWithoutProvidersInput | provider_agentsCreateOrConnectWithoutProvidersInput[]
    createMany?: provider_agentsCreateManyProvidersInputEnvelope
    connect?: provider_agentsWhereUniqueInput | provider_agentsWhereUniqueInput[]
  }

  export type provider_menuCreateNestedOneWithoutProvidersInput = {
    create?: XOR<provider_menuCreateWithoutProvidersInput, provider_menuUncheckedCreateWithoutProvidersInput>
    connectOrCreate?: provider_menuCreateOrConnectWithoutProvidersInput
    connect?: provider_menuWhereUniqueInput
  }

  export type provider_offersCreateNestedManyWithoutProvidersInput = {
    create?: XOR<provider_offersCreateWithoutProvidersInput, provider_offersUncheckedCreateWithoutProvidersInput> | provider_offersCreateWithoutProvidersInput[] | provider_offersUncheckedCreateWithoutProvidersInput[]
    connectOrCreate?: provider_offersCreateOrConnectWithoutProvidersInput | provider_offersCreateOrConnectWithoutProvidersInput[]
    createMany?: provider_offersCreateManyProvidersInputEnvelope
    connect?: provider_offersWhereUniqueInput | provider_offersWhereUniqueInput[]
  }

  export type offer_categoriesCreateNestedOneWithoutProvidersInput = {
    create?: XOR<offer_categoriesCreateWithoutProvidersInput, offer_categoriesUncheckedCreateWithoutProvidersInput>
    connectOrCreate?: offer_categoriesCreateOrConnectWithoutProvidersInput
    connect?: offer_categoriesWhereUniqueInput
  }

  export type subscription_usagesCreateNestedManyWithoutProvidersInput = {
    create?: XOR<subscription_usagesCreateWithoutProvidersInput, subscription_usagesUncheckedCreateWithoutProvidersInput> | subscription_usagesCreateWithoutProvidersInput[] | subscription_usagesUncheckedCreateWithoutProvidersInput[]
    connectOrCreate?: subscription_usagesCreateOrConnectWithoutProvidersInput | subscription_usagesCreateOrConnectWithoutProvidersInput[]
    createMany?: subscription_usagesCreateManyProvidersInputEnvelope
    connect?: subscription_usagesWhereUniqueInput | subscription_usagesWhereUniqueInput[]
  }

  export type provider_agentsUncheckedCreateNestedManyWithoutProvidersInput = {
    create?: XOR<provider_agentsCreateWithoutProvidersInput, provider_agentsUncheckedCreateWithoutProvidersInput> | provider_agentsCreateWithoutProvidersInput[] | provider_agentsUncheckedCreateWithoutProvidersInput[]
    connectOrCreate?: provider_agentsCreateOrConnectWithoutProvidersInput | provider_agentsCreateOrConnectWithoutProvidersInput[]
    createMany?: provider_agentsCreateManyProvidersInputEnvelope
    connect?: provider_agentsWhereUniqueInput | provider_agentsWhereUniqueInput[]
  }

  export type provider_menuUncheckedCreateNestedOneWithoutProvidersInput = {
    create?: XOR<provider_menuCreateWithoutProvidersInput, provider_menuUncheckedCreateWithoutProvidersInput>
    connectOrCreate?: provider_menuCreateOrConnectWithoutProvidersInput
    connect?: provider_menuWhereUniqueInput
  }

  export type provider_offersUncheckedCreateNestedManyWithoutProvidersInput = {
    create?: XOR<provider_offersCreateWithoutProvidersInput, provider_offersUncheckedCreateWithoutProvidersInput> | provider_offersCreateWithoutProvidersInput[] | provider_offersUncheckedCreateWithoutProvidersInput[]
    connectOrCreate?: provider_offersCreateOrConnectWithoutProvidersInput | provider_offersCreateOrConnectWithoutProvidersInput[]
    createMany?: provider_offersCreateManyProvidersInputEnvelope
    connect?: provider_offersWhereUniqueInput | provider_offersWhereUniqueInput[]
  }

  export type subscription_usagesUncheckedCreateNestedManyWithoutProvidersInput = {
    create?: XOR<subscription_usagesCreateWithoutProvidersInput, subscription_usagesUncheckedCreateWithoutProvidersInput> | subscription_usagesCreateWithoutProvidersInput[] | subscription_usagesUncheckedCreateWithoutProvidersInput[]
    connectOrCreate?: subscription_usagesCreateOrConnectWithoutProvidersInput | subscription_usagesCreateOrConnectWithoutProvidersInput[]
    createMany?: subscription_usagesCreateManyProvidersInputEnvelope
    connect?: subscription_usagesWhereUniqueInput | subscription_usagesWhereUniqueInput[]
  }

  export type provider_agentsUpdateManyWithoutProvidersNestedInput = {
    create?: XOR<provider_agentsCreateWithoutProvidersInput, provider_agentsUncheckedCreateWithoutProvidersInput> | provider_agentsCreateWithoutProvidersInput[] | provider_agentsUncheckedCreateWithoutProvidersInput[]
    connectOrCreate?: provider_agentsCreateOrConnectWithoutProvidersInput | provider_agentsCreateOrConnectWithoutProvidersInput[]
    upsert?: provider_agentsUpsertWithWhereUniqueWithoutProvidersInput | provider_agentsUpsertWithWhereUniqueWithoutProvidersInput[]
    createMany?: provider_agentsCreateManyProvidersInputEnvelope
    set?: provider_agentsWhereUniqueInput | provider_agentsWhereUniqueInput[]
    disconnect?: provider_agentsWhereUniqueInput | provider_agentsWhereUniqueInput[]
    delete?: provider_agentsWhereUniqueInput | provider_agentsWhereUniqueInput[]
    connect?: provider_agentsWhereUniqueInput | provider_agentsWhereUniqueInput[]
    update?: provider_agentsUpdateWithWhereUniqueWithoutProvidersInput | provider_agentsUpdateWithWhereUniqueWithoutProvidersInput[]
    updateMany?: provider_agentsUpdateManyWithWhereWithoutProvidersInput | provider_agentsUpdateManyWithWhereWithoutProvidersInput[]
    deleteMany?: provider_agentsScalarWhereInput | provider_agentsScalarWhereInput[]
  }

  export type provider_menuUpdateOneWithoutProvidersNestedInput = {
    create?: XOR<provider_menuCreateWithoutProvidersInput, provider_menuUncheckedCreateWithoutProvidersInput>
    connectOrCreate?: provider_menuCreateOrConnectWithoutProvidersInput
    upsert?: provider_menuUpsertWithoutProvidersInput
    disconnect?: provider_menuWhereInput | boolean
    delete?: provider_menuWhereInput | boolean
    connect?: provider_menuWhereUniqueInput
    update?: XOR<XOR<provider_menuUpdateToOneWithWhereWithoutProvidersInput, provider_menuUpdateWithoutProvidersInput>, provider_menuUncheckedUpdateWithoutProvidersInput>
  }

  export type provider_offersUpdateManyWithoutProvidersNestedInput = {
    create?: XOR<provider_offersCreateWithoutProvidersInput, provider_offersUncheckedCreateWithoutProvidersInput> | provider_offersCreateWithoutProvidersInput[] | provider_offersUncheckedCreateWithoutProvidersInput[]
    connectOrCreate?: provider_offersCreateOrConnectWithoutProvidersInput | provider_offersCreateOrConnectWithoutProvidersInput[]
    upsert?: provider_offersUpsertWithWhereUniqueWithoutProvidersInput | provider_offersUpsertWithWhereUniqueWithoutProvidersInput[]
    createMany?: provider_offersCreateManyProvidersInputEnvelope
    set?: provider_offersWhereUniqueInput | provider_offersWhereUniqueInput[]
    disconnect?: provider_offersWhereUniqueInput | provider_offersWhereUniqueInput[]
    delete?: provider_offersWhereUniqueInput | provider_offersWhereUniqueInput[]
    connect?: provider_offersWhereUniqueInput | provider_offersWhereUniqueInput[]
    update?: provider_offersUpdateWithWhereUniqueWithoutProvidersInput | provider_offersUpdateWithWhereUniqueWithoutProvidersInput[]
    updateMany?: provider_offersUpdateManyWithWhereWithoutProvidersInput | provider_offersUpdateManyWithWhereWithoutProvidersInput[]
    deleteMany?: provider_offersScalarWhereInput | provider_offersScalarWhereInput[]
  }

  export type offer_categoriesUpdateOneRequiredWithoutProvidersNestedInput = {
    create?: XOR<offer_categoriesCreateWithoutProvidersInput, offer_categoriesUncheckedCreateWithoutProvidersInput>
    connectOrCreate?: offer_categoriesCreateOrConnectWithoutProvidersInput
    upsert?: offer_categoriesUpsertWithoutProvidersInput
    connect?: offer_categoriesWhereUniqueInput
    update?: XOR<XOR<offer_categoriesUpdateToOneWithWhereWithoutProvidersInput, offer_categoriesUpdateWithoutProvidersInput>, offer_categoriesUncheckedUpdateWithoutProvidersInput>
  }

  export type subscription_usagesUpdateManyWithoutProvidersNestedInput = {
    create?: XOR<subscription_usagesCreateWithoutProvidersInput, subscription_usagesUncheckedCreateWithoutProvidersInput> | subscription_usagesCreateWithoutProvidersInput[] | subscription_usagesUncheckedCreateWithoutProvidersInput[]
    connectOrCreate?: subscription_usagesCreateOrConnectWithoutProvidersInput | subscription_usagesCreateOrConnectWithoutProvidersInput[]
    upsert?: subscription_usagesUpsertWithWhereUniqueWithoutProvidersInput | subscription_usagesUpsertWithWhereUniqueWithoutProvidersInput[]
    createMany?: subscription_usagesCreateManyProvidersInputEnvelope
    set?: subscription_usagesWhereUniqueInput | subscription_usagesWhereUniqueInput[]
    disconnect?: subscription_usagesWhereUniqueInput | subscription_usagesWhereUniqueInput[]
    delete?: subscription_usagesWhereUniqueInput | subscription_usagesWhereUniqueInput[]
    connect?: subscription_usagesWhereUniqueInput | subscription_usagesWhereUniqueInput[]
    update?: subscription_usagesUpdateWithWhereUniqueWithoutProvidersInput | subscription_usagesUpdateWithWhereUniqueWithoutProvidersInput[]
    updateMany?: subscription_usagesUpdateManyWithWhereWithoutProvidersInput | subscription_usagesUpdateManyWithWhereWithoutProvidersInput[]
    deleteMany?: subscription_usagesScalarWhereInput | subscription_usagesScalarWhereInput[]
  }

  export type provider_agentsUncheckedUpdateManyWithoutProvidersNestedInput = {
    create?: XOR<provider_agentsCreateWithoutProvidersInput, provider_agentsUncheckedCreateWithoutProvidersInput> | provider_agentsCreateWithoutProvidersInput[] | provider_agentsUncheckedCreateWithoutProvidersInput[]
    connectOrCreate?: provider_agentsCreateOrConnectWithoutProvidersInput | provider_agentsCreateOrConnectWithoutProvidersInput[]
    upsert?: provider_agentsUpsertWithWhereUniqueWithoutProvidersInput | provider_agentsUpsertWithWhereUniqueWithoutProvidersInput[]
    createMany?: provider_agentsCreateManyProvidersInputEnvelope
    set?: provider_agentsWhereUniqueInput | provider_agentsWhereUniqueInput[]
    disconnect?: provider_agentsWhereUniqueInput | provider_agentsWhereUniqueInput[]
    delete?: provider_agentsWhereUniqueInput | provider_agentsWhereUniqueInput[]
    connect?: provider_agentsWhereUniqueInput | provider_agentsWhereUniqueInput[]
    update?: provider_agentsUpdateWithWhereUniqueWithoutProvidersInput | provider_agentsUpdateWithWhereUniqueWithoutProvidersInput[]
    updateMany?: provider_agentsUpdateManyWithWhereWithoutProvidersInput | provider_agentsUpdateManyWithWhereWithoutProvidersInput[]
    deleteMany?: provider_agentsScalarWhereInput | provider_agentsScalarWhereInput[]
  }

  export type provider_menuUncheckedUpdateOneWithoutProvidersNestedInput = {
    create?: XOR<provider_menuCreateWithoutProvidersInput, provider_menuUncheckedCreateWithoutProvidersInput>
    connectOrCreate?: provider_menuCreateOrConnectWithoutProvidersInput
    upsert?: provider_menuUpsertWithoutProvidersInput
    disconnect?: provider_menuWhereInput | boolean
    delete?: provider_menuWhereInput | boolean
    connect?: provider_menuWhereUniqueInput
    update?: XOR<XOR<provider_menuUpdateToOneWithWhereWithoutProvidersInput, provider_menuUpdateWithoutProvidersInput>, provider_menuUncheckedUpdateWithoutProvidersInput>
  }

  export type provider_offersUncheckedUpdateManyWithoutProvidersNestedInput = {
    create?: XOR<provider_offersCreateWithoutProvidersInput, provider_offersUncheckedCreateWithoutProvidersInput> | provider_offersCreateWithoutProvidersInput[] | provider_offersUncheckedCreateWithoutProvidersInput[]
    connectOrCreate?: provider_offersCreateOrConnectWithoutProvidersInput | provider_offersCreateOrConnectWithoutProvidersInput[]
    upsert?: provider_offersUpsertWithWhereUniqueWithoutProvidersInput | provider_offersUpsertWithWhereUniqueWithoutProvidersInput[]
    createMany?: provider_offersCreateManyProvidersInputEnvelope
    set?: provider_offersWhereUniqueInput | provider_offersWhereUniqueInput[]
    disconnect?: provider_offersWhereUniqueInput | provider_offersWhereUniqueInput[]
    delete?: provider_offersWhereUniqueInput | provider_offersWhereUniqueInput[]
    connect?: provider_offersWhereUniqueInput | provider_offersWhereUniqueInput[]
    update?: provider_offersUpdateWithWhereUniqueWithoutProvidersInput | provider_offersUpdateWithWhereUniqueWithoutProvidersInput[]
    updateMany?: provider_offersUpdateManyWithWhereWithoutProvidersInput | provider_offersUpdateManyWithWhereWithoutProvidersInput[]
    deleteMany?: provider_offersScalarWhereInput | provider_offersScalarWhereInput[]
  }

  export type subscription_usagesUncheckedUpdateManyWithoutProvidersNestedInput = {
    create?: XOR<subscription_usagesCreateWithoutProvidersInput, subscription_usagesUncheckedCreateWithoutProvidersInput> | subscription_usagesCreateWithoutProvidersInput[] | subscription_usagesUncheckedCreateWithoutProvidersInput[]
    connectOrCreate?: subscription_usagesCreateOrConnectWithoutProvidersInput | subscription_usagesCreateOrConnectWithoutProvidersInput[]
    upsert?: subscription_usagesUpsertWithWhereUniqueWithoutProvidersInput | subscription_usagesUpsertWithWhereUniqueWithoutProvidersInput[]
    createMany?: subscription_usagesCreateManyProvidersInputEnvelope
    set?: subscription_usagesWhereUniqueInput | subscription_usagesWhereUniqueInput[]
    disconnect?: subscription_usagesWhereUniqueInput | subscription_usagesWhereUniqueInput[]
    delete?: subscription_usagesWhereUniqueInput | subscription_usagesWhereUniqueInput[]
    connect?: subscription_usagesWhereUniqueInput | subscription_usagesWhereUniqueInput[]
    update?: subscription_usagesUpdateWithWhereUniqueWithoutProvidersInput | subscription_usagesUpdateWithWhereUniqueWithoutProvidersInput[]
    updateMany?: subscription_usagesUpdateManyWithWhereWithoutProvidersInput | subscription_usagesUpdateManyWithWhereWithoutProvidersInput[]
    deleteMany?: subscription_usagesScalarWhereInput | subscription_usagesScalarWhereInput[]
  }

  export type providersCreateNestedOneWithoutProvider_menuInput = {
    create?: XOR<providersCreateWithoutProvider_menuInput, providersUncheckedCreateWithoutProvider_menuInput>
    connectOrCreate?: providersCreateOrConnectWithoutProvider_menuInput
    connect?: providersWhereUniqueInput
  }

  export type provider_menu_itemsCreateNestedManyWithoutProvider_menuInput = {
    create?: XOR<provider_menu_itemsCreateWithoutProvider_menuInput, provider_menu_itemsUncheckedCreateWithoutProvider_menuInput> | provider_menu_itemsCreateWithoutProvider_menuInput[] | provider_menu_itemsUncheckedCreateWithoutProvider_menuInput[]
    connectOrCreate?: provider_menu_itemsCreateOrConnectWithoutProvider_menuInput | provider_menu_itemsCreateOrConnectWithoutProvider_menuInput[]
    createMany?: provider_menu_itemsCreateManyProvider_menuInputEnvelope
    connect?: provider_menu_itemsWhereUniqueInput | provider_menu_itemsWhereUniqueInput[]
  }

  export type provider_menu_categoriesCreateNestedManyWithoutProvider_menuInput = {
    create?: XOR<provider_menu_categoriesCreateWithoutProvider_menuInput, provider_menu_categoriesUncheckedCreateWithoutProvider_menuInput> | provider_menu_categoriesCreateWithoutProvider_menuInput[] | provider_menu_categoriesUncheckedCreateWithoutProvider_menuInput[]
    connectOrCreate?: provider_menu_categoriesCreateOrConnectWithoutProvider_menuInput | provider_menu_categoriesCreateOrConnectWithoutProvider_menuInput[]
    createMany?: provider_menu_categoriesCreateManyProvider_menuInputEnvelope
    connect?: provider_menu_categoriesWhereUniqueInput | provider_menu_categoriesWhereUniqueInput[]
  }

  export type provider_menu_itemsUncheckedCreateNestedManyWithoutProvider_menuInput = {
    create?: XOR<provider_menu_itemsCreateWithoutProvider_menuInput, provider_menu_itemsUncheckedCreateWithoutProvider_menuInput> | provider_menu_itemsCreateWithoutProvider_menuInput[] | provider_menu_itemsUncheckedCreateWithoutProvider_menuInput[]
    connectOrCreate?: provider_menu_itemsCreateOrConnectWithoutProvider_menuInput | provider_menu_itemsCreateOrConnectWithoutProvider_menuInput[]
    createMany?: provider_menu_itemsCreateManyProvider_menuInputEnvelope
    connect?: provider_menu_itemsWhereUniqueInput | provider_menu_itemsWhereUniqueInput[]
  }

  export type provider_menu_categoriesUncheckedCreateNestedManyWithoutProvider_menuInput = {
    create?: XOR<provider_menu_categoriesCreateWithoutProvider_menuInput, provider_menu_categoriesUncheckedCreateWithoutProvider_menuInput> | provider_menu_categoriesCreateWithoutProvider_menuInput[] | provider_menu_categoriesUncheckedCreateWithoutProvider_menuInput[]
    connectOrCreate?: provider_menu_categoriesCreateOrConnectWithoutProvider_menuInput | provider_menu_categoriesCreateOrConnectWithoutProvider_menuInput[]
    createMany?: provider_menu_categoriesCreateManyProvider_menuInputEnvelope
    connect?: provider_menu_categoriesWhereUniqueInput | provider_menu_categoriesWhereUniqueInput[]
  }

  export type providersUpdateOneRequiredWithoutProvider_menuNestedInput = {
    create?: XOR<providersCreateWithoutProvider_menuInput, providersUncheckedCreateWithoutProvider_menuInput>
    connectOrCreate?: providersCreateOrConnectWithoutProvider_menuInput
    upsert?: providersUpsertWithoutProvider_menuInput
    connect?: providersWhereUniqueInput
    update?: XOR<XOR<providersUpdateToOneWithWhereWithoutProvider_menuInput, providersUpdateWithoutProvider_menuInput>, providersUncheckedUpdateWithoutProvider_menuInput>
  }

  export type provider_menu_itemsUpdateManyWithoutProvider_menuNestedInput = {
    create?: XOR<provider_menu_itemsCreateWithoutProvider_menuInput, provider_menu_itemsUncheckedCreateWithoutProvider_menuInput> | provider_menu_itemsCreateWithoutProvider_menuInput[] | provider_menu_itemsUncheckedCreateWithoutProvider_menuInput[]
    connectOrCreate?: provider_menu_itemsCreateOrConnectWithoutProvider_menuInput | provider_menu_itemsCreateOrConnectWithoutProvider_menuInput[]
    upsert?: provider_menu_itemsUpsertWithWhereUniqueWithoutProvider_menuInput | provider_menu_itemsUpsertWithWhereUniqueWithoutProvider_menuInput[]
    createMany?: provider_menu_itemsCreateManyProvider_menuInputEnvelope
    set?: provider_menu_itemsWhereUniqueInput | provider_menu_itemsWhereUniqueInput[]
    disconnect?: provider_menu_itemsWhereUniqueInput | provider_menu_itemsWhereUniqueInput[]
    delete?: provider_menu_itemsWhereUniqueInput | provider_menu_itemsWhereUniqueInput[]
    connect?: provider_menu_itemsWhereUniqueInput | provider_menu_itemsWhereUniqueInput[]
    update?: provider_menu_itemsUpdateWithWhereUniqueWithoutProvider_menuInput | provider_menu_itemsUpdateWithWhereUniqueWithoutProvider_menuInput[]
    updateMany?: provider_menu_itemsUpdateManyWithWhereWithoutProvider_menuInput | provider_menu_itemsUpdateManyWithWhereWithoutProvider_menuInput[]
    deleteMany?: provider_menu_itemsScalarWhereInput | provider_menu_itemsScalarWhereInput[]
  }

  export type provider_menu_categoriesUpdateManyWithoutProvider_menuNestedInput = {
    create?: XOR<provider_menu_categoriesCreateWithoutProvider_menuInput, provider_menu_categoriesUncheckedCreateWithoutProvider_menuInput> | provider_menu_categoriesCreateWithoutProvider_menuInput[] | provider_menu_categoriesUncheckedCreateWithoutProvider_menuInput[]
    connectOrCreate?: provider_menu_categoriesCreateOrConnectWithoutProvider_menuInput | provider_menu_categoriesCreateOrConnectWithoutProvider_menuInput[]
    upsert?: provider_menu_categoriesUpsertWithWhereUniqueWithoutProvider_menuInput | provider_menu_categoriesUpsertWithWhereUniqueWithoutProvider_menuInput[]
    createMany?: provider_menu_categoriesCreateManyProvider_menuInputEnvelope
    set?: provider_menu_categoriesWhereUniqueInput | provider_menu_categoriesWhereUniqueInput[]
    disconnect?: provider_menu_categoriesWhereUniqueInput | provider_menu_categoriesWhereUniqueInput[]
    delete?: provider_menu_categoriesWhereUniqueInput | provider_menu_categoriesWhereUniqueInput[]
    connect?: provider_menu_categoriesWhereUniqueInput | provider_menu_categoriesWhereUniqueInput[]
    update?: provider_menu_categoriesUpdateWithWhereUniqueWithoutProvider_menuInput | provider_menu_categoriesUpdateWithWhereUniqueWithoutProvider_menuInput[]
    updateMany?: provider_menu_categoriesUpdateManyWithWhereWithoutProvider_menuInput | provider_menu_categoriesUpdateManyWithWhereWithoutProvider_menuInput[]
    deleteMany?: provider_menu_categoriesScalarWhereInput | provider_menu_categoriesScalarWhereInput[]
  }

  export type provider_menu_itemsUncheckedUpdateManyWithoutProvider_menuNestedInput = {
    create?: XOR<provider_menu_itemsCreateWithoutProvider_menuInput, provider_menu_itemsUncheckedCreateWithoutProvider_menuInput> | provider_menu_itemsCreateWithoutProvider_menuInput[] | provider_menu_itemsUncheckedCreateWithoutProvider_menuInput[]
    connectOrCreate?: provider_menu_itemsCreateOrConnectWithoutProvider_menuInput | provider_menu_itemsCreateOrConnectWithoutProvider_menuInput[]
    upsert?: provider_menu_itemsUpsertWithWhereUniqueWithoutProvider_menuInput | provider_menu_itemsUpsertWithWhereUniqueWithoutProvider_menuInput[]
    createMany?: provider_menu_itemsCreateManyProvider_menuInputEnvelope
    set?: provider_menu_itemsWhereUniqueInput | provider_menu_itemsWhereUniqueInput[]
    disconnect?: provider_menu_itemsWhereUniqueInput | provider_menu_itemsWhereUniqueInput[]
    delete?: provider_menu_itemsWhereUniqueInput | provider_menu_itemsWhereUniqueInput[]
    connect?: provider_menu_itemsWhereUniqueInput | provider_menu_itemsWhereUniqueInput[]
    update?: provider_menu_itemsUpdateWithWhereUniqueWithoutProvider_menuInput | provider_menu_itemsUpdateWithWhereUniqueWithoutProvider_menuInput[]
    updateMany?: provider_menu_itemsUpdateManyWithWhereWithoutProvider_menuInput | provider_menu_itemsUpdateManyWithWhereWithoutProvider_menuInput[]
    deleteMany?: provider_menu_itemsScalarWhereInput | provider_menu_itemsScalarWhereInput[]
  }

  export type provider_menu_categoriesUncheckedUpdateManyWithoutProvider_menuNestedInput = {
    create?: XOR<provider_menu_categoriesCreateWithoutProvider_menuInput, provider_menu_categoriesUncheckedCreateWithoutProvider_menuInput> | provider_menu_categoriesCreateWithoutProvider_menuInput[] | provider_menu_categoriesUncheckedCreateWithoutProvider_menuInput[]
    connectOrCreate?: provider_menu_categoriesCreateOrConnectWithoutProvider_menuInput | provider_menu_categoriesCreateOrConnectWithoutProvider_menuInput[]
    upsert?: provider_menu_categoriesUpsertWithWhereUniqueWithoutProvider_menuInput | provider_menu_categoriesUpsertWithWhereUniqueWithoutProvider_menuInput[]
    createMany?: provider_menu_categoriesCreateManyProvider_menuInputEnvelope
    set?: provider_menu_categoriesWhereUniqueInput | provider_menu_categoriesWhereUniqueInput[]
    disconnect?: provider_menu_categoriesWhereUniqueInput | provider_menu_categoriesWhereUniqueInput[]
    delete?: provider_menu_categoriesWhereUniqueInput | provider_menu_categoriesWhereUniqueInput[]
    connect?: provider_menu_categoriesWhereUniqueInput | provider_menu_categoriesWhereUniqueInput[]
    update?: provider_menu_categoriesUpdateWithWhereUniqueWithoutProvider_menuInput | provider_menu_categoriesUpdateWithWhereUniqueWithoutProvider_menuInput[]
    updateMany?: provider_menu_categoriesUpdateManyWithWhereWithoutProvider_menuInput | provider_menu_categoriesUpdateManyWithWhereWithoutProvider_menuInput[]
    deleteMany?: provider_menu_categoriesScalarWhereInput | provider_menu_categoriesScalarWhereInput[]
  }

  export type provider_menu_categoriesCreateNestedOneWithoutProvider_menu_itemsInput = {
    create?: XOR<provider_menu_categoriesCreateWithoutProvider_menu_itemsInput, provider_menu_categoriesUncheckedCreateWithoutProvider_menu_itemsInput>
    connectOrCreate?: provider_menu_categoriesCreateOrConnectWithoutProvider_menu_itemsInput
    connect?: provider_menu_categoriesWhereUniqueInput
  }

  export type provider_menuCreateNestedOneWithoutProvider_menu_itemsInput = {
    create?: XOR<provider_menuCreateWithoutProvider_menu_itemsInput, provider_menuUncheckedCreateWithoutProvider_menu_itemsInput>
    connectOrCreate?: provider_menuCreateOrConnectWithoutProvider_menu_itemsInput
    connect?: provider_menuWhereUniqueInput
  }

  export type provider_menu_categoriesUpdateOneRequiredWithoutProvider_menu_itemsNestedInput = {
    create?: XOR<provider_menu_categoriesCreateWithoutProvider_menu_itemsInput, provider_menu_categoriesUncheckedCreateWithoutProvider_menu_itemsInput>
    connectOrCreate?: provider_menu_categoriesCreateOrConnectWithoutProvider_menu_itemsInput
    upsert?: provider_menu_categoriesUpsertWithoutProvider_menu_itemsInput
    connect?: provider_menu_categoriesWhereUniqueInput
    update?: XOR<XOR<provider_menu_categoriesUpdateToOneWithWhereWithoutProvider_menu_itemsInput, provider_menu_categoriesUpdateWithoutProvider_menu_itemsInput>, provider_menu_categoriesUncheckedUpdateWithoutProvider_menu_itemsInput>
  }

  export type provider_menuUpdateOneRequiredWithoutProvider_menu_itemsNestedInput = {
    create?: XOR<provider_menuCreateWithoutProvider_menu_itemsInput, provider_menuUncheckedCreateWithoutProvider_menu_itemsInput>
    connectOrCreate?: provider_menuCreateOrConnectWithoutProvider_menu_itemsInput
    upsert?: provider_menuUpsertWithoutProvider_menu_itemsInput
    connect?: provider_menuWhereUniqueInput
    update?: XOR<XOR<provider_menuUpdateToOneWithWhereWithoutProvider_menu_itemsInput, provider_menuUpdateWithoutProvider_menu_itemsInput>, provider_menuUncheckedUpdateWithoutProvider_menu_itemsInput>
  }

  export type provider_menuCreateNestedOneWithoutProvider_menu_categoriesInput = {
    create?: XOR<provider_menuCreateWithoutProvider_menu_categoriesInput, provider_menuUncheckedCreateWithoutProvider_menu_categoriesInput>
    connectOrCreate?: provider_menuCreateOrConnectWithoutProvider_menu_categoriesInput
    connect?: provider_menuWhereUniqueInput
  }

  export type provider_menu_itemsCreateNestedManyWithoutProvider_menu_categoriesInput = {
    create?: XOR<provider_menu_itemsCreateWithoutProvider_menu_categoriesInput, provider_menu_itemsUncheckedCreateWithoutProvider_menu_categoriesInput> | provider_menu_itemsCreateWithoutProvider_menu_categoriesInput[] | provider_menu_itemsUncheckedCreateWithoutProvider_menu_categoriesInput[]
    connectOrCreate?: provider_menu_itemsCreateOrConnectWithoutProvider_menu_categoriesInput | provider_menu_itemsCreateOrConnectWithoutProvider_menu_categoriesInput[]
    createMany?: provider_menu_itemsCreateManyProvider_menu_categoriesInputEnvelope
    connect?: provider_menu_itemsWhereUniqueInput | provider_menu_itemsWhereUniqueInput[]
  }

  export type provider_menu_itemsUncheckedCreateNestedManyWithoutProvider_menu_categoriesInput = {
    create?: XOR<provider_menu_itemsCreateWithoutProvider_menu_categoriesInput, provider_menu_itemsUncheckedCreateWithoutProvider_menu_categoriesInput> | provider_menu_itemsCreateWithoutProvider_menu_categoriesInput[] | provider_menu_itemsUncheckedCreateWithoutProvider_menu_categoriesInput[]
    connectOrCreate?: provider_menu_itemsCreateOrConnectWithoutProvider_menu_categoriesInput | provider_menu_itemsCreateOrConnectWithoutProvider_menu_categoriesInput[]
    createMany?: provider_menu_itemsCreateManyProvider_menu_categoriesInputEnvelope
    connect?: provider_menu_itemsWhereUniqueInput | provider_menu_itemsWhereUniqueInput[]
  }

  export type provider_menuUpdateOneRequiredWithoutProvider_menu_categoriesNestedInput = {
    create?: XOR<provider_menuCreateWithoutProvider_menu_categoriesInput, provider_menuUncheckedCreateWithoutProvider_menu_categoriesInput>
    connectOrCreate?: provider_menuCreateOrConnectWithoutProvider_menu_categoriesInput
    upsert?: provider_menuUpsertWithoutProvider_menu_categoriesInput
    connect?: provider_menuWhereUniqueInput
    update?: XOR<XOR<provider_menuUpdateToOneWithWhereWithoutProvider_menu_categoriesInput, provider_menuUpdateWithoutProvider_menu_categoriesInput>, provider_menuUncheckedUpdateWithoutProvider_menu_categoriesInput>
  }

  export type provider_menu_itemsUpdateManyWithoutProvider_menu_categoriesNestedInput = {
    create?: XOR<provider_menu_itemsCreateWithoutProvider_menu_categoriesInput, provider_menu_itemsUncheckedCreateWithoutProvider_menu_categoriesInput> | provider_menu_itemsCreateWithoutProvider_menu_categoriesInput[] | provider_menu_itemsUncheckedCreateWithoutProvider_menu_categoriesInput[]
    connectOrCreate?: provider_menu_itemsCreateOrConnectWithoutProvider_menu_categoriesInput | provider_menu_itemsCreateOrConnectWithoutProvider_menu_categoriesInput[]
    upsert?: provider_menu_itemsUpsertWithWhereUniqueWithoutProvider_menu_categoriesInput | provider_menu_itemsUpsertWithWhereUniqueWithoutProvider_menu_categoriesInput[]
    createMany?: provider_menu_itemsCreateManyProvider_menu_categoriesInputEnvelope
    set?: provider_menu_itemsWhereUniqueInput | provider_menu_itemsWhereUniqueInput[]
    disconnect?: provider_menu_itemsWhereUniqueInput | provider_menu_itemsWhereUniqueInput[]
    delete?: provider_menu_itemsWhereUniqueInput | provider_menu_itemsWhereUniqueInput[]
    connect?: provider_menu_itemsWhereUniqueInput | provider_menu_itemsWhereUniqueInput[]
    update?: provider_menu_itemsUpdateWithWhereUniqueWithoutProvider_menu_categoriesInput | provider_menu_itemsUpdateWithWhereUniqueWithoutProvider_menu_categoriesInput[]
    updateMany?: provider_menu_itemsUpdateManyWithWhereWithoutProvider_menu_categoriesInput | provider_menu_itemsUpdateManyWithWhereWithoutProvider_menu_categoriesInput[]
    deleteMany?: provider_menu_itemsScalarWhereInput | provider_menu_itemsScalarWhereInput[]
  }

  export type provider_menu_itemsUncheckedUpdateManyWithoutProvider_menu_categoriesNestedInput = {
    create?: XOR<provider_menu_itemsCreateWithoutProvider_menu_categoriesInput, provider_menu_itemsUncheckedCreateWithoutProvider_menu_categoriesInput> | provider_menu_itemsCreateWithoutProvider_menu_categoriesInput[] | provider_menu_itemsUncheckedCreateWithoutProvider_menu_categoriesInput[]
    connectOrCreate?: provider_menu_itemsCreateOrConnectWithoutProvider_menu_categoriesInput | provider_menu_itemsCreateOrConnectWithoutProvider_menu_categoriesInput[]
    upsert?: provider_menu_itemsUpsertWithWhereUniqueWithoutProvider_menu_categoriesInput | provider_menu_itemsUpsertWithWhereUniqueWithoutProvider_menu_categoriesInput[]
    createMany?: provider_menu_itemsCreateManyProvider_menu_categoriesInputEnvelope
    set?: provider_menu_itemsWhereUniqueInput | provider_menu_itemsWhereUniqueInput[]
    disconnect?: provider_menu_itemsWhereUniqueInput | provider_menu_itemsWhereUniqueInput[]
    delete?: provider_menu_itemsWhereUniqueInput | provider_menu_itemsWhereUniqueInput[]
    connect?: provider_menu_itemsWhereUniqueInput | provider_menu_itemsWhereUniqueInput[]
    update?: provider_menu_itemsUpdateWithWhereUniqueWithoutProvider_menu_categoriesInput | provider_menu_itemsUpdateWithWhereUniqueWithoutProvider_menu_categoriesInput[]
    updateMany?: provider_menu_itemsUpdateManyWithWhereWithoutProvider_menu_categoriesInput | provider_menu_itemsUpdateManyWithWhereWithoutProvider_menu_categoriesInput[]
    deleteMany?: provider_menu_itemsScalarWhereInput | provider_menu_itemsScalarWhereInput[]
  }

  export type permissionsCreateNestedOneWithoutRole_has_permissionsInput = {
    create?: XOR<permissionsCreateWithoutRole_has_permissionsInput, permissionsUncheckedCreateWithoutRole_has_permissionsInput>
    connectOrCreate?: permissionsCreateOrConnectWithoutRole_has_permissionsInput
    connect?: permissionsWhereUniqueInput
  }

  export type rolesCreateNestedOneWithoutRole_has_permissionsInput = {
    create?: XOR<rolesCreateWithoutRole_has_permissionsInput, rolesUncheckedCreateWithoutRole_has_permissionsInput>
    connectOrCreate?: rolesCreateOrConnectWithoutRole_has_permissionsInput
    connect?: rolesWhereUniqueInput
  }

  export type permissionsUpdateOneRequiredWithoutRole_has_permissionsNestedInput = {
    create?: XOR<permissionsCreateWithoutRole_has_permissionsInput, permissionsUncheckedCreateWithoutRole_has_permissionsInput>
    connectOrCreate?: permissionsCreateOrConnectWithoutRole_has_permissionsInput
    upsert?: permissionsUpsertWithoutRole_has_permissionsInput
    connect?: permissionsWhereUniqueInput
    update?: XOR<XOR<permissionsUpdateToOneWithWhereWithoutRole_has_permissionsInput, permissionsUpdateWithoutRole_has_permissionsInput>, permissionsUncheckedUpdateWithoutRole_has_permissionsInput>
  }

  export type rolesUpdateOneRequiredWithoutRole_has_permissionsNestedInput = {
    create?: XOR<rolesCreateWithoutRole_has_permissionsInput, rolesUncheckedCreateWithoutRole_has_permissionsInput>
    connectOrCreate?: rolesCreateOrConnectWithoutRole_has_permissionsInput
    upsert?: rolesUpsertWithoutRole_has_permissionsInput
    connect?: rolesWhereUniqueInput
    update?: XOR<XOR<rolesUpdateToOneWithWhereWithoutRole_has_permissionsInput, rolesUpdateWithoutRole_has_permissionsInput>, rolesUncheckedUpdateWithoutRole_has_permissionsInput>
  }

  export type model_has_rolesCreateNestedManyWithoutRolesInput = {
    create?: XOR<model_has_rolesCreateWithoutRolesInput, model_has_rolesUncheckedCreateWithoutRolesInput> | model_has_rolesCreateWithoutRolesInput[] | model_has_rolesUncheckedCreateWithoutRolesInput[]
    connectOrCreate?: model_has_rolesCreateOrConnectWithoutRolesInput | model_has_rolesCreateOrConnectWithoutRolesInput[]
    createMany?: model_has_rolesCreateManyRolesInputEnvelope
    connect?: model_has_rolesWhereUniqueInput | model_has_rolesWhereUniqueInput[]
  }

  export type role_has_permissionsCreateNestedManyWithoutRolesInput = {
    create?: XOR<role_has_permissionsCreateWithoutRolesInput, role_has_permissionsUncheckedCreateWithoutRolesInput> | role_has_permissionsCreateWithoutRolesInput[] | role_has_permissionsUncheckedCreateWithoutRolesInput[]
    connectOrCreate?: role_has_permissionsCreateOrConnectWithoutRolesInput | role_has_permissionsCreateOrConnectWithoutRolesInput[]
    createMany?: role_has_permissionsCreateManyRolesInputEnvelope
    connect?: role_has_permissionsWhereUniqueInput | role_has_permissionsWhereUniqueInput[]
  }

  export type model_has_rolesUncheckedCreateNestedManyWithoutRolesInput = {
    create?: XOR<model_has_rolesCreateWithoutRolesInput, model_has_rolesUncheckedCreateWithoutRolesInput> | model_has_rolesCreateWithoutRolesInput[] | model_has_rolesUncheckedCreateWithoutRolesInput[]
    connectOrCreate?: model_has_rolesCreateOrConnectWithoutRolesInput | model_has_rolesCreateOrConnectWithoutRolesInput[]
    createMany?: model_has_rolesCreateManyRolesInputEnvelope
    connect?: model_has_rolesWhereUniqueInput | model_has_rolesWhereUniqueInput[]
  }

  export type role_has_permissionsUncheckedCreateNestedManyWithoutRolesInput = {
    create?: XOR<role_has_permissionsCreateWithoutRolesInput, role_has_permissionsUncheckedCreateWithoutRolesInput> | role_has_permissionsCreateWithoutRolesInput[] | role_has_permissionsUncheckedCreateWithoutRolesInput[]
    connectOrCreate?: role_has_permissionsCreateOrConnectWithoutRolesInput | role_has_permissionsCreateOrConnectWithoutRolesInput[]
    createMany?: role_has_permissionsCreateManyRolesInputEnvelope
    connect?: role_has_permissionsWhereUniqueInput | role_has_permissionsWhereUniqueInput[]
  }

  export type model_has_rolesUpdateManyWithoutRolesNestedInput = {
    create?: XOR<model_has_rolesCreateWithoutRolesInput, model_has_rolesUncheckedCreateWithoutRolesInput> | model_has_rolesCreateWithoutRolesInput[] | model_has_rolesUncheckedCreateWithoutRolesInput[]
    connectOrCreate?: model_has_rolesCreateOrConnectWithoutRolesInput | model_has_rolesCreateOrConnectWithoutRolesInput[]
    upsert?: model_has_rolesUpsertWithWhereUniqueWithoutRolesInput | model_has_rolesUpsertWithWhereUniqueWithoutRolesInput[]
    createMany?: model_has_rolesCreateManyRolesInputEnvelope
    set?: model_has_rolesWhereUniqueInput | model_has_rolesWhereUniqueInput[]
    disconnect?: model_has_rolesWhereUniqueInput | model_has_rolesWhereUniqueInput[]
    delete?: model_has_rolesWhereUniqueInput | model_has_rolesWhereUniqueInput[]
    connect?: model_has_rolesWhereUniqueInput | model_has_rolesWhereUniqueInput[]
    update?: model_has_rolesUpdateWithWhereUniqueWithoutRolesInput | model_has_rolesUpdateWithWhereUniqueWithoutRolesInput[]
    updateMany?: model_has_rolesUpdateManyWithWhereWithoutRolesInput | model_has_rolesUpdateManyWithWhereWithoutRolesInput[]
    deleteMany?: model_has_rolesScalarWhereInput | model_has_rolesScalarWhereInput[]
  }

  export type role_has_permissionsUpdateManyWithoutRolesNestedInput = {
    create?: XOR<role_has_permissionsCreateWithoutRolesInput, role_has_permissionsUncheckedCreateWithoutRolesInput> | role_has_permissionsCreateWithoutRolesInput[] | role_has_permissionsUncheckedCreateWithoutRolesInput[]
    connectOrCreate?: role_has_permissionsCreateOrConnectWithoutRolesInput | role_has_permissionsCreateOrConnectWithoutRolesInput[]
    upsert?: role_has_permissionsUpsertWithWhereUniqueWithoutRolesInput | role_has_permissionsUpsertWithWhereUniqueWithoutRolesInput[]
    createMany?: role_has_permissionsCreateManyRolesInputEnvelope
    set?: role_has_permissionsWhereUniqueInput | role_has_permissionsWhereUniqueInput[]
    disconnect?: role_has_permissionsWhereUniqueInput | role_has_permissionsWhereUniqueInput[]
    delete?: role_has_permissionsWhereUniqueInput | role_has_permissionsWhereUniqueInput[]
    connect?: role_has_permissionsWhereUniqueInput | role_has_permissionsWhereUniqueInput[]
    update?: role_has_permissionsUpdateWithWhereUniqueWithoutRolesInput | role_has_permissionsUpdateWithWhereUniqueWithoutRolesInput[]
    updateMany?: role_has_permissionsUpdateManyWithWhereWithoutRolesInput | role_has_permissionsUpdateManyWithWhereWithoutRolesInput[]
    deleteMany?: role_has_permissionsScalarWhereInput | role_has_permissionsScalarWhereInput[]
  }

  export type model_has_rolesUncheckedUpdateManyWithoutRolesNestedInput = {
    create?: XOR<model_has_rolesCreateWithoutRolesInput, model_has_rolesUncheckedCreateWithoutRolesInput> | model_has_rolesCreateWithoutRolesInput[] | model_has_rolesUncheckedCreateWithoutRolesInput[]
    connectOrCreate?: model_has_rolesCreateOrConnectWithoutRolesInput | model_has_rolesCreateOrConnectWithoutRolesInput[]
    upsert?: model_has_rolesUpsertWithWhereUniqueWithoutRolesInput | model_has_rolesUpsertWithWhereUniqueWithoutRolesInput[]
    createMany?: model_has_rolesCreateManyRolesInputEnvelope
    set?: model_has_rolesWhereUniqueInput | model_has_rolesWhereUniqueInput[]
    disconnect?: model_has_rolesWhereUniqueInput | model_has_rolesWhereUniqueInput[]
    delete?: model_has_rolesWhereUniqueInput | model_has_rolesWhereUniqueInput[]
    connect?: model_has_rolesWhereUniqueInput | model_has_rolesWhereUniqueInput[]
    update?: model_has_rolesUpdateWithWhereUniqueWithoutRolesInput | model_has_rolesUpdateWithWhereUniqueWithoutRolesInput[]
    updateMany?: model_has_rolesUpdateManyWithWhereWithoutRolesInput | model_has_rolesUpdateManyWithWhereWithoutRolesInput[]
    deleteMany?: model_has_rolesScalarWhereInput | model_has_rolesScalarWhereInput[]
  }

  export type role_has_permissionsUncheckedUpdateManyWithoutRolesNestedInput = {
    create?: XOR<role_has_permissionsCreateWithoutRolesInput, role_has_permissionsUncheckedCreateWithoutRolesInput> | role_has_permissionsCreateWithoutRolesInput[] | role_has_permissionsUncheckedCreateWithoutRolesInput[]
    connectOrCreate?: role_has_permissionsCreateOrConnectWithoutRolesInput | role_has_permissionsCreateOrConnectWithoutRolesInput[]
    upsert?: role_has_permissionsUpsertWithWhereUniqueWithoutRolesInput | role_has_permissionsUpsertWithWhereUniqueWithoutRolesInput[]
    createMany?: role_has_permissionsCreateManyRolesInputEnvelope
    set?: role_has_permissionsWhereUniqueInput | role_has_permissionsWhereUniqueInput[]
    disconnect?: role_has_permissionsWhereUniqueInput | role_has_permissionsWhereUniqueInput[]
    delete?: role_has_permissionsWhereUniqueInput | role_has_permissionsWhereUniqueInput[]
    connect?: role_has_permissionsWhereUniqueInput | role_has_permissionsWhereUniqueInput[]
    update?: role_has_permissionsUpdateWithWhereUniqueWithoutRolesInput | role_has_permissionsUpdateWithWhereUniqueWithoutRolesInput[]
    updateMany?: role_has_permissionsUpdateManyWithWhereWithoutRolesInput | role_has_permissionsUpdateManyWithWhereWithoutRolesInput[]
    deleteMany?: role_has_permissionsScalarWhereInput | role_has_permissionsScalarWhereInput[]
  }

  export type offersCreateNestedOneWithoutSubscription_plan_offersInput = {
    create?: XOR<offersCreateWithoutSubscription_plan_offersInput, offersUncheckedCreateWithoutSubscription_plan_offersInput>
    connectOrCreate?: offersCreateOrConnectWithoutSubscription_plan_offersInput
    connect?: offersWhereUniqueInput
  }

  export type subscription_plansCreateNestedOneWithoutSubscription_plan_offersInput = {
    create?: XOR<subscription_plansCreateWithoutSubscription_plan_offersInput, subscription_plansUncheckedCreateWithoutSubscription_plan_offersInput>
    connectOrCreate?: subscription_plansCreateOrConnectWithoutSubscription_plan_offersInput
    connect?: subscription_plansWhereUniqueInput
  }

  export type offersUpdateOneRequiredWithoutSubscription_plan_offersNestedInput = {
    create?: XOR<offersCreateWithoutSubscription_plan_offersInput, offersUncheckedCreateWithoutSubscription_plan_offersInput>
    connectOrCreate?: offersCreateOrConnectWithoutSubscription_plan_offersInput
    upsert?: offersUpsertWithoutSubscription_plan_offersInput
    connect?: offersWhereUniqueInput
    update?: XOR<XOR<offersUpdateToOneWithWhereWithoutSubscription_plan_offersInput, offersUpdateWithoutSubscription_plan_offersInput>, offersUncheckedUpdateWithoutSubscription_plan_offersInput>
  }

  export type subscription_plansUpdateOneRequiredWithoutSubscription_plan_offersNestedInput = {
    create?: XOR<subscription_plansCreateWithoutSubscription_plan_offersInput, subscription_plansUncheckedCreateWithoutSubscription_plan_offersInput>
    connectOrCreate?: subscription_plansCreateOrConnectWithoutSubscription_plan_offersInput
    upsert?: subscription_plansUpsertWithoutSubscription_plan_offersInput
    connect?: subscription_plansWhereUniqueInput
    update?: XOR<XOR<subscription_plansUpdateToOneWithWhereWithoutSubscription_plan_offersInput, subscription_plansUpdateWithoutSubscription_plan_offersInput>, subscription_plansUncheckedUpdateWithoutSubscription_plan_offersInput>
  }

  export type customer_subscriptionsCreateNestedManyWithoutSubscription_plansInput = {
    create?: XOR<customer_subscriptionsCreateWithoutSubscription_plansInput, customer_subscriptionsUncheckedCreateWithoutSubscription_plansInput> | customer_subscriptionsCreateWithoutSubscription_plansInput[] | customer_subscriptionsUncheckedCreateWithoutSubscription_plansInput[]
    connectOrCreate?: customer_subscriptionsCreateOrConnectWithoutSubscription_plansInput | customer_subscriptionsCreateOrConnectWithoutSubscription_plansInput[]
    createMany?: customer_subscriptionsCreateManySubscription_plansInputEnvelope
    connect?: customer_subscriptionsWhereUniqueInput | customer_subscriptionsWhereUniqueInput[]
  }

  export type subscription_plan_offersCreateNestedManyWithoutSubscription_plansInput = {
    create?: XOR<subscription_plan_offersCreateWithoutSubscription_plansInput, subscription_plan_offersUncheckedCreateWithoutSubscription_plansInput> | subscription_plan_offersCreateWithoutSubscription_plansInput[] | subscription_plan_offersUncheckedCreateWithoutSubscription_plansInput[]
    connectOrCreate?: subscription_plan_offersCreateOrConnectWithoutSubscription_plansInput | subscription_plan_offersCreateOrConnectWithoutSubscription_plansInput[]
    createMany?: subscription_plan_offersCreateManySubscription_plansInputEnvelope
    connect?: subscription_plan_offersWhereUniqueInput | subscription_plan_offersWhereUniqueInput[]
  }

  export type customer_subscriptionsUncheckedCreateNestedManyWithoutSubscription_plansInput = {
    create?: XOR<customer_subscriptionsCreateWithoutSubscription_plansInput, customer_subscriptionsUncheckedCreateWithoutSubscription_plansInput> | customer_subscriptionsCreateWithoutSubscription_plansInput[] | customer_subscriptionsUncheckedCreateWithoutSubscription_plansInput[]
    connectOrCreate?: customer_subscriptionsCreateOrConnectWithoutSubscription_plansInput | customer_subscriptionsCreateOrConnectWithoutSubscription_plansInput[]
    createMany?: customer_subscriptionsCreateManySubscription_plansInputEnvelope
    connect?: customer_subscriptionsWhereUniqueInput | customer_subscriptionsWhereUniqueInput[]
  }

  export type subscription_plan_offersUncheckedCreateNestedManyWithoutSubscription_plansInput = {
    create?: XOR<subscription_plan_offersCreateWithoutSubscription_plansInput, subscription_plan_offersUncheckedCreateWithoutSubscription_plansInput> | subscription_plan_offersCreateWithoutSubscription_plansInput[] | subscription_plan_offersUncheckedCreateWithoutSubscription_plansInput[]
    connectOrCreate?: subscription_plan_offersCreateOrConnectWithoutSubscription_plansInput | subscription_plan_offersCreateOrConnectWithoutSubscription_plansInput[]
    createMany?: subscription_plan_offersCreateManySubscription_plansInputEnvelope
    connect?: subscription_plan_offersWhereUniqueInput | subscription_plan_offersWhereUniqueInput[]
  }

  export type customer_subscriptionsUpdateManyWithoutSubscription_plansNestedInput = {
    create?: XOR<customer_subscriptionsCreateWithoutSubscription_plansInput, customer_subscriptionsUncheckedCreateWithoutSubscription_plansInput> | customer_subscriptionsCreateWithoutSubscription_plansInput[] | customer_subscriptionsUncheckedCreateWithoutSubscription_plansInput[]
    connectOrCreate?: customer_subscriptionsCreateOrConnectWithoutSubscription_plansInput | customer_subscriptionsCreateOrConnectWithoutSubscription_plansInput[]
    upsert?: customer_subscriptionsUpsertWithWhereUniqueWithoutSubscription_plansInput | customer_subscriptionsUpsertWithWhereUniqueWithoutSubscription_plansInput[]
    createMany?: customer_subscriptionsCreateManySubscription_plansInputEnvelope
    set?: customer_subscriptionsWhereUniqueInput | customer_subscriptionsWhereUniqueInput[]
    disconnect?: customer_subscriptionsWhereUniqueInput | customer_subscriptionsWhereUniqueInput[]
    delete?: customer_subscriptionsWhereUniqueInput | customer_subscriptionsWhereUniqueInput[]
    connect?: customer_subscriptionsWhereUniqueInput | customer_subscriptionsWhereUniqueInput[]
    update?: customer_subscriptionsUpdateWithWhereUniqueWithoutSubscription_plansInput | customer_subscriptionsUpdateWithWhereUniqueWithoutSubscription_plansInput[]
    updateMany?: customer_subscriptionsUpdateManyWithWhereWithoutSubscription_plansInput | customer_subscriptionsUpdateManyWithWhereWithoutSubscription_plansInput[]
    deleteMany?: customer_subscriptionsScalarWhereInput | customer_subscriptionsScalarWhereInput[]
  }

  export type subscription_plan_offersUpdateManyWithoutSubscription_plansNestedInput = {
    create?: XOR<subscription_plan_offersCreateWithoutSubscription_plansInput, subscription_plan_offersUncheckedCreateWithoutSubscription_plansInput> | subscription_plan_offersCreateWithoutSubscription_plansInput[] | subscription_plan_offersUncheckedCreateWithoutSubscription_plansInput[]
    connectOrCreate?: subscription_plan_offersCreateOrConnectWithoutSubscription_plansInput | subscription_plan_offersCreateOrConnectWithoutSubscription_plansInput[]
    upsert?: subscription_plan_offersUpsertWithWhereUniqueWithoutSubscription_plansInput | subscription_plan_offersUpsertWithWhereUniqueWithoutSubscription_plansInput[]
    createMany?: subscription_plan_offersCreateManySubscription_plansInputEnvelope
    set?: subscription_plan_offersWhereUniqueInput | subscription_plan_offersWhereUniqueInput[]
    disconnect?: subscription_plan_offersWhereUniqueInput | subscription_plan_offersWhereUniqueInput[]
    delete?: subscription_plan_offersWhereUniqueInput | subscription_plan_offersWhereUniqueInput[]
    connect?: subscription_plan_offersWhereUniqueInput | subscription_plan_offersWhereUniqueInput[]
    update?: subscription_plan_offersUpdateWithWhereUniqueWithoutSubscription_plansInput | subscription_plan_offersUpdateWithWhereUniqueWithoutSubscription_plansInput[]
    updateMany?: subscription_plan_offersUpdateManyWithWhereWithoutSubscription_plansInput | subscription_plan_offersUpdateManyWithWhereWithoutSubscription_plansInput[]
    deleteMany?: subscription_plan_offersScalarWhereInput | subscription_plan_offersScalarWhereInput[]
  }

  export type customer_subscriptionsUncheckedUpdateManyWithoutSubscription_plansNestedInput = {
    create?: XOR<customer_subscriptionsCreateWithoutSubscription_plansInput, customer_subscriptionsUncheckedCreateWithoutSubscription_plansInput> | customer_subscriptionsCreateWithoutSubscription_plansInput[] | customer_subscriptionsUncheckedCreateWithoutSubscription_plansInput[]
    connectOrCreate?: customer_subscriptionsCreateOrConnectWithoutSubscription_plansInput | customer_subscriptionsCreateOrConnectWithoutSubscription_plansInput[]
    upsert?: customer_subscriptionsUpsertWithWhereUniqueWithoutSubscription_plansInput | customer_subscriptionsUpsertWithWhereUniqueWithoutSubscription_plansInput[]
    createMany?: customer_subscriptionsCreateManySubscription_plansInputEnvelope
    set?: customer_subscriptionsWhereUniqueInput | customer_subscriptionsWhereUniqueInput[]
    disconnect?: customer_subscriptionsWhereUniqueInput | customer_subscriptionsWhereUniqueInput[]
    delete?: customer_subscriptionsWhereUniqueInput | customer_subscriptionsWhereUniqueInput[]
    connect?: customer_subscriptionsWhereUniqueInput | customer_subscriptionsWhereUniqueInput[]
    update?: customer_subscriptionsUpdateWithWhereUniqueWithoutSubscription_plansInput | customer_subscriptionsUpdateWithWhereUniqueWithoutSubscription_plansInput[]
    updateMany?: customer_subscriptionsUpdateManyWithWhereWithoutSubscription_plansInput | customer_subscriptionsUpdateManyWithWhereWithoutSubscription_plansInput[]
    deleteMany?: customer_subscriptionsScalarWhereInput | customer_subscriptionsScalarWhereInput[]
  }

  export type subscription_plan_offersUncheckedUpdateManyWithoutSubscription_plansNestedInput = {
    create?: XOR<subscription_plan_offersCreateWithoutSubscription_plansInput, subscription_plan_offersUncheckedCreateWithoutSubscription_plansInput> | subscription_plan_offersCreateWithoutSubscription_plansInput[] | subscription_plan_offersUncheckedCreateWithoutSubscription_plansInput[]
    connectOrCreate?: subscription_plan_offersCreateOrConnectWithoutSubscription_plansInput | subscription_plan_offersCreateOrConnectWithoutSubscription_plansInput[]
    upsert?: subscription_plan_offersUpsertWithWhereUniqueWithoutSubscription_plansInput | subscription_plan_offersUpsertWithWhereUniqueWithoutSubscription_plansInput[]
    createMany?: subscription_plan_offersCreateManySubscription_plansInputEnvelope
    set?: subscription_plan_offersWhereUniqueInput | subscription_plan_offersWhereUniqueInput[]
    disconnect?: subscription_plan_offersWhereUniqueInput | subscription_plan_offersWhereUniqueInput[]
    delete?: subscription_plan_offersWhereUniqueInput | subscription_plan_offersWhereUniqueInput[]
    connect?: subscription_plan_offersWhereUniqueInput | subscription_plan_offersWhereUniqueInput[]
    update?: subscription_plan_offersUpdateWithWhereUniqueWithoutSubscription_plansInput | subscription_plan_offersUpdateWithWhereUniqueWithoutSubscription_plansInput[]
    updateMany?: subscription_plan_offersUpdateManyWithWhereWithoutSubscription_plansInput | subscription_plan_offersUpdateManyWithWhereWithoutSubscription_plansInput[]
    deleteMany?: subscription_plan_offersScalarWhereInput | subscription_plan_offersScalarWhereInput[]
  }

  export type customersCreateNestedOneWithoutSubscription_usagesInput = {
    create?: XOR<customersCreateWithoutSubscription_usagesInput, customersUncheckedCreateWithoutSubscription_usagesInput>
    connectOrCreate?: customersCreateOrConnectWithoutSubscription_usagesInput
    connect?: customersWhereUniqueInput
  }

  export type customer_subscriptionsCreateNestedOneWithoutSubscription_usagesInput = {
    create?: XOR<customer_subscriptionsCreateWithoutSubscription_usagesInput, customer_subscriptionsUncheckedCreateWithoutSubscription_usagesInput>
    connectOrCreate?: customer_subscriptionsCreateOrConnectWithoutSubscription_usagesInput
    connect?: customer_subscriptionsWhereUniqueInput
  }

  export type offersCreateNestedOneWithoutSubscription_usagesInput = {
    create?: XOR<offersCreateWithoutSubscription_usagesInput, offersUncheckedCreateWithoutSubscription_usagesInput>
    connectOrCreate?: offersCreateOrConnectWithoutSubscription_usagesInput
    connect?: offersWhereUniqueInput
  }

  export type provider_agentsCreateNestedOneWithoutSubscription_usagesInput = {
    create?: XOR<provider_agentsCreateWithoutSubscription_usagesInput, provider_agentsUncheckedCreateWithoutSubscription_usagesInput>
    connectOrCreate?: provider_agentsCreateOrConnectWithoutSubscription_usagesInput
    connect?: provider_agentsWhereUniqueInput
  }

  export type providersCreateNestedOneWithoutSubscription_usagesInput = {
    create?: XOR<providersCreateWithoutSubscription_usagesInput, providersUncheckedCreateWithoutSubscription_usagesInput>
    connectOrCreate?: providersCreateOrConnectWithoutSubscription_usagesInput
    connect?: providersWhereUniqueInput
  }

  export type customersUpdateOneRequiredWithoutSubscription_usagesNestedInput = {
    create?: XOR<customersCreateWithoutSubscription_usagesInput, customersUncheckedCreateWithoutSubscription_usagesInput>
    connectOrCreate?: customersCreateOrConnectWithoutSubscription_usagesInput
    upsert?: customersUpsertWithoutSubscription_usagesInput
    connect?: customersWhereUniqueInput
    update?: XOR<XOR<customersUpdateToOneWithWhereWithoutSubscription_usagesInput, customersUpdateWithoutSubscription_usagesInput>, customersUncheckedUpdateWithoutSubscription_usagesInput>
  }

  export type customer_subscriptionsUpdateOneRequiredWithoutSubscription_usagesNestedInput = {
    create?: XOR<customer_subscriptionsCreateWithoutSubscription_usagesInput, customer_subscriptionsUncheckedCreateWithoutSubscription_usagesInput>
    connectOrCreate?: customer_subscriptionsCreateOrConnectWithoutSubscription_usagesInput
    upsert?: customer_subscriptionsUpsertWithoutSubscription_usagesInput
    connect?: customer_subscriptionsWhereUniqueInput
    update?: XOR<XOR<customer_subscriptionsUpdateToOneWithWhereWithoutSubscription_usagesInput, customer_subscriptionsUpdateWithoutSubscription_usagesInput>, customer_subscriptionsUncheckedUpdateWithoutSubscription_usagesInput>
  }

  export type offersUpdateOneRequiredWithoutSubscription_usagesNestedInput = {
    create?: XOR<offersCreateWithoutSubscription_usagesInput, offersUncheckedCreateWithoutSubscription_usagesInput>
    connectOrCreate?: offersCreateOrConnectWithoutSubscription_usagesInput
    upsert?: offersUpsertWithoutSubscription_usagesInput
    connect?: offersWhereUniqueInput
    update?: XOR<XOR<offersUpdateToOneWithWhereWithoutSubscription_usagesInput, offersUpdateWithoutSubscription_usagesInput>, offersUncheckedUpdateWithoutSubscription_usagesInput>
  }

  export type provider_agentsUpdateOneRequiredWithoutSubscription_usagesNestedInput = {
    create?: XOR<provider_agentsCreateWithoutSubscription_usagesInput, provider_agentsUncheckedCreateWithoutSubscription_usagesInput>
    connectOrCreate?: provider_agentsCreateOrConnectWithoutSubscription_usagesInput
    upsert?: provider_agentsUpsertWithoutSubscription_usagesInput
    connect?: provider_agentsWhereUniqueInput
    update?: XOR<XOR<provider_agentsUpdateToOneWithWhereWithoutSubscription_usagesInput, provider_agentsUpdateWithoutSubscription_usagesInput>, provider_agentsUncheckedUpdateWithoutSubscription_usagesInput>
  }

  export type providersUpdateOneRequiredWithoutSubscription_usagesNestedInput = {
    create?: XOR<providersCreateWithoutSubscription_usagesInput, providersUncheckedCreateWithoutSubscription_usagesInput>
    connectOrCreate?: providersCreateOrConnectWithoutSubscription_usagesInput
    upsert?: providersUpsertWithoutSubscription_usagesInput
    connect?: providersWhereUniqueInput
    update?: XOR<XOR<providersUpdateToOneWithWhereWithoutSubscription_usagesInput, providersUpdateWithoutSubscription_usagesInput>, providersUncheckedUpdateWithoutSubscription_usagesInput>
  }

  export type NestedBigIntFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntFilter<$PrismaModel> | bigint | number
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedBigIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntWithAggregatesFilter<$PrismaModel> | bigint | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedBigIntFilter<$PrismaModel>
    _min?: NestedBigIntFilter<$PrismaModel>
    _max?: NestedBigIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedBigIntNullableFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel> | null
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntNullableFilter<$PrismaModel> | bigint | number | null
  }

  export type NestedBigIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel> | null
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntNullableWithAggregatesFilter<$PrismaModel> | bigint | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedBigIntNullableFilter<$PrismaModel>
    _min?: NestedBigIntNullableFilter<$PrismaModel>
    _max?: NestedBigIntNullableFilter<$PrismaModel>
  }

  export type NestedDecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type NestedDecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type NestedDecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NestedDecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }
  export type NestedJsonFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<NestedJsonFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type provider_agentsCreateWithoutAdminsInput = {
    id?: bigint | number
    role?: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
    providers: providersCreateNestedOneWithoutProvider_agentsInput
    subscription_usages?: subscription_usagesCreateNestedManyWithoutProvider_agentsInput
  }

  export type provider_agentsUncheckedCreateWithoutAdminsInput = {
    id?: bigint | number
    provider_id: bigint | number
    role?: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
    subscription_usages?: subscription_usagesUncheckedCreateNestedManyWithoutProvider_agentsInput
  }

  export type provider_agentsCreateOrConnectWithoutAdminsInput = {
    where: provider_agentsWhereUniqueInput
    create: XOR<provider_agentsCreateWithoutAdminsInput, provider_agentsUncheckedCreateWithoutAdminsInput>
  }

  export type provider_agentsCreateManyAdminsInputEnvelope = {
    data: provider_agentsCreateManyAdminsInput | provider_agentsCreateManyAdminsInput[]
    skipDuplicates?: boolean
  }

  export type provider_agentsUpsertWithWhereUniqueWithoutAdminsInput = {
    where: provider_agentsWhereUniqueInput
    update: XOR<provider_agentsUpdateWithoutAdminsInput, provider_agentsUncheckedUpdateWithoutAdminsInput>
    create: XOR<provider_agentsCreateWithoutAdminsInput, provider_agentsUncheckedCreateWithoutAdminsInput>
  }

  export type provider_agentsUpdateWithWhereUniqueWithoutAdminsInput = {
    where: provider_agentsWhereUniqueInput
    data: XOR<provider_agentsUpdateWithoutAdminsInput, provider_agentsUncheckedUpdateWithoutAdminsInput>
  }

  export type provider_agentsUpdateManyWithWhereWithoutAdminsInput = {
    where: provider_agentsScalarWhereInput
    data: XOR<provider_agentsUpdateManyMutationInput, provider_agentsUncheckedUpdateManyWithoutAdminsInput>
  }

  export type provider_agentsScalarWhereInput = {
    AND?: provider_agentsScalarWhereInput | provider_agentsScalarWhereInput[]
    OR?: provider_agentsScalarWhereInput[]
    NOT?: provider_agentsScalarWhereInput | provider_agentsScalarWhereInput[]
    id?: BigIntFilter<"provider_agents"> | bigint | number
    provider_id?: BigIntFilter<"provider_agents"> | bigint | number
    user_id?: BigIntFilter<"provider_agents"> | bigint | number
    role?: IntFilter<"provider_agents"> | number
    created_at?: DateTimeNullableFilter<"provider_agents"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"provider_agents"> | Date | string | null
  }

  export type customersCreateWithoutCustomer_subscriptionsInput = {
    id?: bigint | number
    first_name?: string | null
    last_name?: string | null
    gender?: string | null
    email?: string | null
    mobile_number: string
    password?: string | null
    birthdate?: Date | string | null
    ssn?: string | null
    otp_secret?: string | null
    status?: number
    is_verified?: boolean
    deleted_at?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    subscription_usages?: subscription_usagesCreateNestedManyWithoutCustomersInput
  }

  export type customersUncheckedCreateWithoutCustomer_subscriptionsInput = {
    id?: bigint | number
    first_name?: string | null
    last_name?: string | null
    gender?: string | null
    email?: string | null
    mobile_number: string
    password?: string | null
    birthdate?: Date | string | null
    ssn?: string | null
    otp_secret?: string | null
    status?: number
    is_verified?: boolean
    deleted_at?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    subscription_usages?: subscription_usagesUncheckedCreateNestedManyWithoutCustomersInput
  }

  export type customersCreateOrConnectWithoutCustomer_subscriptionsInput = {
    where: customersWhereUniqueInput
    create: XOR<customersCreateWithoutCustomer_subscriptionsInput, customersUncheckedCreateWithoutCustomer_subscriptionsInput>
  }

  export type ordersCreateWithoutCustomer_subscriptionsInput = {
    id?: bigint | number
    buyer_type: string
    buyer_id: bigint | number
    purchasable_type: string
    purchasable_id: bigint | number
    amount: Decimal | DecimalJsLike | number | string
    status: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
    tracking_code?: string | null
    payments?: paymentsCreateNestedManyWithoutOrdersInput
  }

  export type ordersUncheckedCreateWithoutCustomer_subscriptionsInput = {
    id?: bigint | number
    buyer_type: string
    buyer_id: bigint | number
    purchasable_type: string
    purchasable_id: bigint | number
    amount: Decimal | DecimalJsLike | number | string
    status: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
    tracking_code?: string | null
    payments?: paymentsUncheckedCreateNestedManyWithoutOrdersInput
  }

  export type ordersCreateOrConnectWithoutCustomer_subscriptionsInput = {
    where: ordersWhereUniqueInput
    create: XOR<ordersCreateWithoutCustomer_subscriptionsInput, ordersUncheckedCreateWithoutCustomer_subscriptionsInput>
  }

  export type subscription_plansCreateWithoutCustomer_subscriptionsInput = {
    id?: bigint | number
    title: string
    duration: number
    price: Decimal | DecimalJsLike | number | string
    status?: number
    description?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    subscription_plan_offers?: subscription_plan_offersCreateNestedManyWithoutSubscription_plansInput
  }

  export type subscription_plansUncheckedCreateWithoutCustomer_subscriptionsInput = {
    id?: bigint | number
    title: string
    duration: number
    price: Decimal | DecimalJsLike | number | string
    status?: number
    description?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    subscription_plan_offers?: subscription_plan_offersUncheckedCreateNestedManyWithoutSubscription_plansInput
  }

  export type subscription_plansCreateOrConnectWithoutCustomer_subscriptionsInput = {
    where: subscription_plansWhereUniqueInput
    create: XOR<subscription_plansCreateWithoutCustomer_subscriptionsInput, subscription_plansUncheckedCreateWithoutCustomer_subscriptionsInput>
  }

  export type subscription_usagesCreateWithoutCustomer_subscriptionsInput = {
    id?: bigint | number
    total_amount: string
    status?: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    customers: customersCreateNestedOneWithoutSubscription_usagesInput
    offers: offersCreateNestedOneWithoutSubscription_usagesInput
    provider_agents: provider_agentsCreateNestedOneWithoutSubscription_usagesInput
    providers: providersCreateNestedOneWithoutSubscription_usagesInput
  }

  export type subscription_usagesUncheckedCreateWithoutCustomer_subscriptionsInput = {
    id?: bigint | number
    provider_agent_id: bigint | number
    customer_id: bigint | number
    provider_id: bigint | number
    offer_id: bigint | number
    total_amount: string
    status?: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type subscription_usagesCreateOrConnectWithoutCustomer_subscriptionsInput = {
    where: subscription_usagesWhereUniqueInput
    create: XOR<subscription_usagesCreateWithoutCustomer_subscriptionsInput, subscription_usagesUncheckedCreateWithoutCustomer_subscriptionsInput>
  }

  export type subscription_usagesCreateManyCustomer_subscriptionsInputEnvelope = {
    data: subscription_usagesCreateManyCustomer_subscriptionsInput | subscription_usagesCreateManyCustomer_subscriptionsInput[]
    skipDuplicates?: boolean
  }

  export type customersUpsertWithoutCustomer_subscriptionsInput = {
    update: XOR<customersUpdateWithoutCustomer_subscriptionsInput, customersUncheckedUpdateWithoutCustomer_subscriptionsInput>
    create: XOR<customersCreateWithoutCustomer_subscriptionsInput, customersUncheckedCreateWithoutCustomer_subscriptionsInput>
    where?: customersWhereInput
  }

  export type customersUpdateToOneWithWhereWithoutCustomer_subscriptionsInput = {
    where?: customersWhereInput
    data: XOR<customersUpdateWithoutCustomer_subscriptionsInput, customersUncheckedUpdateWithoutCustomer_subscriptionsInput>
  }

  export type customersUpdateWithoutCustomer_subscriptionsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    mobile_number?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ssn?: NullableStringFieldUpdateOperationsInput | string | null
    otp_secret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: IntFieldUpdateOperationsInput | number
    is_verified?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    subscription_usages?: subscription_usagesUpdateManyWithoutCustomersNestedInput
  }

  export type customersUncheckedUpdateWithoutCustomer_subscriptionsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    mobile_number?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ssn?: NullableStringFieldUpdateOperationsInput | string | null
    otp_secret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: IntFieldUpdateOperationsInput | number
    is_verified?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    subscription_usages?: subscription_usagesUncheckedUpdateManyWithoutCustomersNestedInput
  }

  export type ordersUpsertWithoutCustomer_subscriptionsInput = {
    update: XOR<ordersUpdateWithoutCustomer_subscriptionsInput, ordersUncheckedUpdateWithoutCustomer_subscriptionsInput>
    create: XOR<ordersCreateWithoutCustomer_subscriptionsInput, ordersUncheckedCreateWithoutCustomer_subscriptionsInput>
    where?: ordersWhereInput
  }

  export type ordersUpdateToOneWithWhereWithoutCustomer_subscriptionsInput = {
    where?: ordersWhereInput
    data: XOR<ordersUpdateWithoutCustomer_subscriptionsInput, ordersUncheckedUpdateWithoutCustomer_subscriptionsInput>
  }

  export type ordersUpdateWithoutCustomer_subscriptionsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    buyer_type?: StringFieldUpdateOperationsInput | string
    buyer_id?: BigIntFieldUpdateOperationsInput | bigint | number
    purchasable_type?: StringFieldUpdateOperationsInput | string
    purchasable_id?: BigIntFieldUpdateOperationsInput | bigint | number
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tracking_code?: NullableStringFieldUpdateOperationsInput | string | null
    payments?: paymentsUpdateManyWithoutOrdersNestedInput
  }

  export type ordersUncheckedUpdateWithoutCustomer_subscriptionsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    buyer_type?: StringFieldUpdateOperationsInput | string
    buyer_id?: BigIntFieldUpdateOperationsInput | bigint | number
    purchasable_type?: StringFieldUpdateOperationsInput | string
    purchasable_id?: BigIntFieldUpdateOperationsInput | bigint | number
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tracking_code?: NullableStringFieldUpdateOperationsInput | string | null
    payments?: paymentsUncheckedUpdateManyWithoutOrdersNestedInput
  }

  export type subscription_plansUpsertWithoutCustomer_subscriptionsInput = {
    update: XOR<subscription_plansUpdateWithoutCustomer_subscriptionsInput, subscription_plansUncheckedUpdateWithoutCustomer_subscriptionsInput>
    create: XOR<subscription_plansCreateWithoutCustomer_subscriptionsInput, subscription_plansUncheckedCreateWithoutCustomer_subscriptionsInput>
    where?: subscription_plansWhereInput
  }

  export type subscription_plansUpdateToOneWithWhereWithoutCustomer_subscriptionsInput = {
    where?: subscription_plansWhereInput
    data: XOR<subscription_plansUpdateWithoutCustomer_subscriptionsInput, subscription_plansUncheckedUpdateWithoutCustomer_subscriptionsInput>
  }

  export type subscription_plansUpdateWithoutCustomer_subscriptionsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    duration?: IntFieldUpdateOperationsInput | number
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: IntFieldUpdateOperationsInput | number
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    subscription_plan_offers?: subscription_plan_offersUpdateManyWithoutSubscription_plansNestedInput
  }

  export type subscription_plansUncheckedUpdateWithoutCustomer_subscriptionsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    duration?: IntFieldUpdateOperationsInput | number
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: IntFieldUpdateOperationsInput | number
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    subscription_plan_offers?: subscription_plan_offersUncheckedUpdateManyWithoutSubscription_plansNestedInput
  }

  export type subscription_usagesUpsertWithWhereUniqueWithoutCustomer_subscriptionsInput = {
    where: subscription_usagesWhereUniqueInput
    update: XOR<subscription_usagesUpdateWithoutCustomer_subscriptionsInput, subscription_usagesUncheckedUpdateWithoutCustomer_subscriptionsInput>
    create: XOR<subscription_usagesCreateWithoutCustomer_subscriptionsInput, subscription_usagesUncheckedCreateWithoutCustomer_subscriptionsInput>
  }

  export type subscription_usagesUpdateWithWhereUniqueWithoutCustomer_subscriptionsInput = {
    where: subscription_usagesWhereUniqueInput
    data: XOR<subscription_usagesUpdateWithoutCustomer_subscriptionsInput, subscription_usagesUncheckedUpdateWithoutCustomer_subscriptionsInput>
  }

  export type subscription_usagesUpdateManyWithWhereWithoutCustomer_subscriptionsInput = {
    where: subscription_usagesScalarWhereInput
    data: XOR<subscription_usagesUpdateManyMutationInput, subscription_usagesUncheckedUpdateManyWithoutCustomer_subscriptionsInput>
  }

  export type subscription_usagesScalarWhereInput = {
    AND?: subscription_usagesScalarWhereInput | subscription_usagesScalarWhereInput[]
    OR?: subscription_usagesScalarWhereInput[]
    NOT?: subscription_usagesScalarWhereInput | subscription_usagesScalarWhereInput[]
    id?: BigIntFilter<"subscription_usages"> | bigint | number
    provider_agent_id?: BigIntFilter<"subscription_usages"> | bigint | number
    customer_id?: BigIntFilter<"subscription_usages"> | bigint | number
    customer_subscription_id?: BigIntFilter<"subscription_usages"> | bigint | number
    provider_id?: BigIntFilter<"subscription_usages"> | bigint | number
    offer_id?: BigIntFilter<"subscription_usages"> | bigint | number
    total_amount?: StringFilter<"subscription_usages"> | string
    status?: StringFilter<"subscription_usages"> | string
    created_at?: DateTimeNullableFilter<"subscription_usages"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"subscription_usages"> | Date | string | null
  }

  export type customer_subscriptionsCreateWithoutCustomersInput = {
    id?: bigint | number
    start_date: Date | string
    end_date: Date | string
    status?: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
    orders: ordersCreateNestedOneWithoutCustomer_subscriptionsInput
    subscription_plans: subscription_plansCreateNestedOneWithoutCustomer_subscriptionsInput
    subscription_usages?: subscription_usagesCreateNestedManyWithoutCustomer_subscriptionsInput
  }

  export type customer_subscriptionsUncheckedCreateWithoutCustomersInput = {
    id?: bigint | number
    subscription_plan_id: bigint | number
    order_id: bigint | number
    start_date: Date | string
    end_date: Date | string
    status?: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
    subscription_usages?: subscription_usagesUncheckedCreateNestedManyWithoutCustomer_subscriptionsInput
  }

  export type customer_subscriptionsCreateOrConnectWithoutCustomersInput = {
    where: customer_subscriptionsWhereUniqueInput
    create: XOR<customer_subscriptionsCreateWithoutCustomersInput, customer_subscriptionsUncheckedCreateWithoutCustomersInput>
  }

  export type customer_subscriptionsCreateManyCustomersInputEnvelope = {
    data: customer_subscriptionsCreateManyCustomersInput | customer_subscriptionsCreateManyCustomersInput[]
    skipDuplicates?: boolean
  }

  export type subscription_usagesCreateWithoutCustomersInput = {
    id?: bigint | number
    total_amount: string
    status?: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    customer_subscriptions: customer_subscriptionsCreateNestedOneWithoutSubscription_usagesInput
    offers: offersCreateNestedOneWithoutSubscription_usagesInput
    provider_agents: provider_agentsCreateNestedOneWithoutSubscription_usagesInput
    providers: providersCreateNestedOneWithoutSubscription_usagesInput
  }

  export type subscription_usagesUncheckedCreateWithoutCustomersInput = {
    id?: bigint | number
    provider_agent_id: bigint | number
    customer_subscription_id: bigint | number
    provider_id: bigint | number
    offer_id: bigint | number
    total_amount: string
    status?: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type subscription_usagesCreateOrConnectWithoutCustomersInput = {
    where: subscription_usagesWhereUniqueInput
    create: XOR<subscription_usagesCreateWithoutCustomersInput, subscription_usagesUncheckedCreateWithoutCustomersInput>
  }

  export type subscription_usagesCreateManyCustomersInputEnvelope = {
    data: subscription_usagesCreateManyCustomersInput | subscription_usagesCreateManyCustomersInput[]
    skipDuplicates?: boolean
  }

  export type customer_subscriptionsUpsertWithWhereUniqueWithoutCustomersInput = {
    where: customer_subscriptionsWhereUniqueInput
    update: XOR<customer_subscriptionsUpdateWithoutCustomersInput, customer_subscriptionsUncheckedUpdateWithoutCustomersInput>
    create: XOR<customer_subscriptionsCreateWithoutCustomersInput, customer_subscriptionsUncheckedCreateWithoutCustomersInput>
  }

  export type customer_subscriptionsUpdateWithWhereUniqueWithoutCustomersInput = {
    where: customer_subscriptionsWhereUniqueInput
    data: XOR<customer_subscriptionsUpdateWithoutCustomersInput, customer_subscriptionsUncheckedUpdateWithoutCustomersInput>
  }

  export type customer_subscriptionsUpdateManyWithWhereWithoutCustomersInput = {
    where: customer_subscriptionsScalarWhereInput
    data: XOR<customer_subscriptionsUpdateManyMutationInput, customer_subscriptionsUncheckedUpdateManyWithoutCustomersInput>
  }

  export type customer_subscriptionsScalarWhereInput = {
    AND?: customer_subscriptionsScalarWhereInput | customer_subscriptionsScalarWhereInput[]
    OR?: customer_subscriptionsScalarWhereInput[]
    NOT?: customer_subscriptionsScalarWhereInput | customer_subscriptionsScalarWhereInput[]
    id?: BigIntFilter<"customer_subscriptions"> | bigint | number
    customer_id?: BigIntFilter<"customer_subscriptions"> | bigint | number
    subscription_plan_id?: BigIntFilter<"customer_subscriptions"> | bigint | number
    order_id?: BigIntFilter<"customer_subscriptions"> | bigint | number
    start_date?: DateTimeFilter<"customer_subscriptions"> | Date | string
    end_date?: DateTimeFilter<"customer_subscriptions"> | Date | string
    status?: IntFilter<"customer_subscriptions"> | number
    created_at?: DateTimeNullableFilter<"customer_subscriptions"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"customer_subscriptions"> | Date | string | null
  }

  export type subscription_usagesUpsertWithWhereUniqueWithoutCustomersInput = {
    where: subscription_usagesWhereUniqueInput
    update: XOR<subscription_usagesUpdateWithoutCustomersInput, subscription_usagesUncheckedUpdateWithoutCustomersInput>
    create: XOR<subscription_usagesCreateWithoutCustomersInput, subscription_usagesUncheckedCreateWithoutCustomersInput>
  }

  export type subscription_usagesUpdateWithWhereUniqueWithoutCustomersInput = {
    where: subscription_usagesWhereUniqueInput
    data: XOR<subscription_usagesUpdateWithoutCustomersInput, subscription_usagesUncheckedUpdateWithoutCustomersInput>
  }

  export type subscription_usagesUpdateManyWithWhereWithoutCustomersInput = {
    where: subscription_usagesScalarWhereInput
    data: XOR<subscription_usagesUpdateManyMutationInput, subscription_usagesUncheckedUpdateManyWithoutCustomersInput>
  }

  export type permissionsCreateWithoutModel_has_permissionsInput = {
    id?: bigint | number
    name: string
    guard_name: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    role_has_permissions?: role_has_permissionsCreateNestedManyWithoutPermissionsInput
  }

  export type permissionsUncheckedCreateWithoutModel_has_permissionsInput = {
    id?: bigint | number
    name: string
    guard_name: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    role_has_permissions?: role_has_permissionsUncheckedCreateNestedManyWithoutPermissionsInput
  }

  export type permissionsCreateOrConnectWithoutModel_has_permissionsInput = {
    where: permissionsWhereUniqueInput
    create: XOR<permissionsCreateWithoutModel_has_permissionsInput, permissionsUncheckedCreateWithoutModel_has_permissionsInput>
  }

  export type permissionsUpsertWithoutModel_has_permissionsInput = {
    update: XOR<permissionsUpdateWithoutModel_has_permissionsInput, permissionsUncheckedUpdateWithoutModel_has_permissionsInput>
    create: XOR<permissionsCreateWithoutModel_has_permissionsInput, permissionsUncheckedCreateWithoutModel_has_permissionsInput>
    where?: permissionsWhereInput
  }

  export type permissionsUpdateToOneWithWhereWithoutModel_has_permissionsInput = {
    where?: permissionsWhereInput
    data: XOR<permissionsUpdateWithoutModel_has_permissionsInput, permissionsUncheckedUpdateWithoutModel_has_permissionsInput>
  }

  export type permissionsUpdateWithoutModel_has_permissionsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    guard_name?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role_has_permissions?: role_has_permissionsUpdateManyWithoutPermissionsNestedInput
  }

  export type permissionsUncheckedUpdateWithoutModel_has_permissionsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    guard_name?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role_has_permissions?: role_has_permissionsUncheckedUpdateManyWithoutPermissionsNestedInput
  }

  export type rolesCreateWithoutModel_has_rolesInput = {
    id?: bigint | number
    name: string
    guard_name: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    role_has_permissions?: role_has_permissionsCreateNestedManyWithoutRolesInput
  }

  export type rolesUncheckedCreateWithoutModel_has_rolesInput = {
    id?: bigint | number
    name: string
    guard_name: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    role_has_permissions?: role_has_permissionsUncheckedCreateNestedManyWithoutRolesInput
  }

  export type rolesCreateOrConnectWithoutModel_has_rolesInput = {
    where: rolesWhereUniqueInput
    create: XOR<rolesCreateWithoutModel_has_rolesInput, rolesUncheckedCreateWithoutModel_has_rolesInput>
  }

  export type rolesUpsertWithoutModel_has_rolesInput = {
    update: XOR<rolesUpdateWithoutModel_has_rolesInput, rolesUncheckedUpdateWithoutModel_has_rolesInput>
    create: XOR<rolesCreateWithoutModel_has_rolesInput, rolesUncheckedCreateWithoutModel_has_rolesInput>
    where?: rolesWhereInput
  }

  export type rolesUpdateToOneWithWhereWithoutModel_has_rolesInput = {
    where?: rolesWhereInput
    data: XOR<rolesUpdateWithoutModel_has_rolesInput, rolesUncheckedUpdateWithoutModel_has_rolesInput>
  }

  export type rolesUpdateWithoutModel_has_rolesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    guard_name?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role_has_permissions?: role_has_permissionsUpdateManyWithoutRolesNestedInput
  }

  export type rolesUncheckedUpdateWithoutModel_has_rolesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    guard_name?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role_has_permissions?: role_has_permissionsUncheckedUpdateManyWithoutRolesNestedInput
  }

  export type offersCreateWithoutOffer_categoriesInput = {
    id?: bigint | number
    title: string
    icon?: string | null
    description?: string | null
    price?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    provider_offers?: provider_offersCreateNestedManyWithoutOffersInput
    subscription_plan_offers?: subscription_plan_offersCreateNestedManyWithoutOffersInput
    subscription_usages?: subscription_usagesCreateNestedManyWithoutOffersInput
  }

  export type offersUncheckedCreateWithoutOffer_categoriesInput = {
    id?: bigint | number
    title: string
    icon?: string | null
    description?: string | null
    price?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    provider_offers?: provider_offersUncheckedCreateNestedManyWithoutOffersInput
    subscription_plan_offers?: subscription_plan_offersUncheckedCreateNestedManyWithoutOffersInput
    subscription_usages?: subscription_usagesUncheckedCreateNestedManyWithoutOffersInput
  }

  export type offersCreateOrConnectWithoutOffer_categoriesInput = {
    where: offersWhereUniqueInput
    create: XOR<offersCreateWithoutOffer_categoriesInput, offersUncheckedCreateWithoutOffer_categoriesInput>
  }

  export type offersCreateManyOffer_categoriesInputEnvelope = {
    data: offersCreateManyOffer_categoriesInput | offersCreateManyOffer_categoriesInput[]
    skipDuplicates?: boolean
  }

  export type providersCreateWithoutOffer_categoriesInput = {
    id?: bigint | number
    name: string
    description?: string | null
    address: string
    phone_number: JsonNullValueInput | InputJsonValue
    main_image: string
    slider_images: JsonNullValueInput | InputJsonValue
    latitude: Decimal | DecimalJsLike | number | string
    longitude: Decimal | DecimalJsLike | number | string
    is_verified?: boolean
    status?: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
    provider_agents?: provider_agentsCreateNestedManyWithoutProvidersInput
    provider_menu?: provider_menuCreateNestedOneWithoutProvidersInput
    provider_offers?: provider_offersCreateNestedManyWithoutProvidersInput
    subscription_usages?: subscription_usagesCreateNestedManyWithoutProvidersInput
  }

  export type providersUncheckedCreateWithoutOffer_categoriesInput = {
    id?: bigint | number
    name: string
    description?: string | null
    address: string
    phone_number: JsonNullValueInput | InputJsonValue
    main_image: string
    slider_images: JsonNullValueInput | InputJsonValue
    latitude: Decimal | DecimalJsLike | number | string
    longitude: Decimal | DecimalJsLike | number | string
    is_verified?: boolean
    status?: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
    provider_agents?: provider_agentsUncheckedCreateNestedManyWithoutProvidersInput
    provider_menu?: provider_menuUncheckedCreateNestedOneWithoutProvidersInput
    provider_offers?: provider_offersUncheckedCreateNestedManyWithoutProvidersInput
    subscription_usages?: subscription_usagesUncheckedCreateNestedManyWithoutProvidersInput
  }

  export type providersCreateOrConnectWithoutOffer_categoriesInput = {
    where: providersWhereUniqueInput
    create: XOR<providersCreateWithoutOffer_categoriesInput, providersUncheckedCreateWithoutOffer_categoriesInput>
  }

  export type providersCreateManyOffer_categoriesInputEnvelope = {
    data: providersCreateManyOffer_categoriesInput | providersCreateManyOffer_categoriesInput[]
    skipDuplicates?: boolean
  }

  export type offersUpsertWithWhereUniqueWithoutOffer_categoriesInput = {
    where: offersWhereUniqueInput
    update: XOR<offersUpdateWithoutOffer_categoriesInput, offersUncheckedUpdateWithoutOffer_categoriesInput>
    create: XOR<offersCreateWithoutOffer_categoriesInput, offersUncheckedCreateWithoutOffer_categoriesInput>
  }

  export type offersUpdateWithWhereUniqueWithoutOffer_categoriesInput = {
    where: offersWhereUniqueInput
    data: XOR<offersUpdateWithoutOffer_categoriesInput, offersUncheckedUpdateWithoutOffer_categoriesInput>
  }

  export type offersUpdateManyWithWhereWithoutOffer_categoriesInput = {
    where: offersScalarWhereInput
    data: XOR<offersUpdateManyMutationInput, offersUncheckedUpdateManyWithoutOffer_categoriesInput>
  }

  export type offersScalarWhereInput = {
    AND?: offersScalarWhereInput | offersScalarWhereInput[]
    OR?: offersScalarWhereInput[]
    NOT?: offersScalarWhereInput | offersScalarWhereInput[]
    id?: BigIntFilter<"offers"> | bigint | number
    category_id?: BigIntFilter<"offers"> | bigint | number
    title?: StringFilter<"offers"> | string
    icon?: StringNullableFilter<"offers"> | string | null
    description?: StringNullableFilter<"offers"> | string | null
    price?: DecimalNullableFilter<"offers"> | Decimal | DecimalJsLike | number | string | null
    created_at?: DateTimeNullableFilter<"offers"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"offers"> | Date | string | null
  }

  export type providersUpsertWithWhereUniqueWithoutOffer_categoriesInput = {
    where: providersWhereUniqueInput
    update: XOR<providersUpdateWithoutOffer_categoriesInput, providersUncheckedUpdateWithoutOffer_categoriesInput>
    create: XOR<providersCreateWithoutOffer_categoriesInput, providersUncheckedCreateWithoutOffer_categoriesInput>
  }

  export type providersUpdateWithWhereUniqueWithoutOffer_categoriesInput = {
    where: providersWhereUniqueInput
    data: XOR<providersUpdateWithoutOffer_categoriesInput, providersUncheckedUpdateWithoutOffer_categoriesInput>
  }

  export type providersUpdateManyWithWhereWithoutOffer_categoriesInput = {
    where: providersScalarWhereInput
    data: XOR<providersUpdateManyMutationInput, providersUncheckedUpdateManyWithoutOffer_categoriesInput>
  }

  export type providersScalarWhereInput = {
    AND?: providersScalarWhereInput | providersScalarWhereInput[]
    OR?: providersScalarWhereInput[]
    NOT?: providersScalarWhereInput | providersScalarWhereInput[]
    id?: BigIntFilter<"providers"> | bigint | number
    name?: StringFilter<"providers"> | string
    description?: StringNullableFilter<"providers"> | string | null
    category_id?: BigIntFilter<"providers"> | bigint | number
    address?: StringFilter<"providers"> | string
    phone_number?: JsonFilter<"providers">
    main_image?: StringFilter<"providers"> | string
    slider_images?: JsonFilter<"providers">
    latitude?: DecimalFilter<"providers"> | Decimal | DecimalJsLike | number | string
    longitude?: DecimalFilter<"providers"> | Decimal | DecimalJsLike | number | string
    is_verified?: BoolFilter<"providers"> | boolean
    status?: IntFilter<"providers"> | number
    created_at?: DateTimeNullableFilter<"providers"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"providers"> | Date | string | null
  }

  export type offer_categoriesCreateWithoutOffersInput = {
    id?: bigint | number
    title: string
    icon?: string | null
    description?: string | null
    status?: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
    providers?: providersCreateNestedManyWithoutOffer_categoriesInput
  }

  export type offer_categoriesUncheckedCreateWithoutOffersInput = {
    id?: bigint | number
    title: string
    icon?: string | null
    description?: string | null
    status?: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
    providers?: providersUncheckedCreateNestedManyWithoutOffer_categoriesInput
  }

  export type offer_categoriesCreateOrConnectWithoutOffersInput = {
    where: offer_categoriesWhereUniqueInput
    create: XOR<offer_categoriesCreateWithoutOffersInput, offer_categoriesUncheckedCreateWithoutOffersInput>
  }

  export type provider_offersCreateWithoutOffersInput = {
    id?: bigint | number
    created_at?: Date | string | null
    updated_at?: Date | string | null
    providers: providersCreateNestedOneWithoutProvider_offersInput
  }

  export type provider_offersUncheckedCreateWithoutOffersInput = {
    id?: bigint | number
    provider_id: bigint | number
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type provider_offersCreateOrConnectWithoutOffersInput = {
    where: provider_offersWhereUniqueInput
    create: XOR<provider_offersCreateWithoutOffersInput, provider_offersUncheckedCreateWithoutOffersInput>
  }

  export type provider_offersCreateManyOffersInputEnvelope = {
    data: provider_offersCreateManyOffersInput | provider_offersCreateManyOffersInput[]
    skipDuplicates?: boolean
  }

  export type subscription_plan_offersCreateWithoutOffersInput = {
    id?: bigint | number
    discount_percentage: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
    subscription_plans: subscription_plansCreateNestedOneWithoutSubscription_plan_offersInput
  }

  export type subscription_plan_offersUncheckedCreateWithoutOffersInput = {
    id?: bigint | number
    subscription_plan_id: bigint | number
    discount_percentage: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type subscription_plan_offersCreateOrConnectWithoutOffersInput = {
    where: subscription_plan_offersWhereUniqueInput
    create: XOR<subscription_plan_offersCreateWithoutOffersInput, subscription_plan_offersUncheckedCreateWithoutOffersInput>
  }

  export type subscription_plan_offersCreateManyOffersInputEnvelope = {
    data: subscription_plan_offersCreateManyOffersInput | subscription_plan_offersCreateManyOffersInput[]
    skipDuplicates?: boolean
  }

  export type subscription_usagesCreateWithoutOffersInput = {
    id?: bigint | number
    total_amount: string
    status?: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    customers: customersCreateNestedOneWithoutSubscription_usagesInput
    customer_subscriptions: customer_subscriptionsCreateNestedOneWithoutSubscription_usagesInput
    provider_agents: provider_agentsCreateNestedOneWithoutSubscription_usagesInput
    providers: providersCreateNestedOneWithoutSubscription_usagesInput
  }

  export type subscription_usagesUncheckedCreateWithoutOffersInput = {
    id?: bigint | number
    provider_agent_id: bigint | number
    customer_id: bigint | number
    customer_subscription_id: bigint | number
    provider_id: bigint | number
    total_amount: string
    status?: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type subscription_usagesCreateOrConnectWithoutOffersInput = {
    where: subscription_usagesWhereUniqueInput
    create: XOR<subscription_usagesCreateWithoutOffersInput, subscription_usagesUncheckedCreateWithoutOffersInput>
  }

  export type subscription_usagesCreateManyOffersInputEnvelope = {
    data: subscription_usagesCreateManyOffersInput | subscription_usagesCreateManyOffersInput[]
    skipDuplicates?: boolean
  }

  export type offer_categoriesUpsertWithoutOffersInput = {
    update: XOR<offer_categoriesUpdateWithoutOffersInput, offer_categoriesUncheckedUpdateWithoutOffersInput>
    create: XOR<offer_categoriesCreateWithoutOffersInput, offer_categoriesUncheckedCreateWithoutOffersInput>
    where?: offer_categoriesWhereInput
  }

  export type offer_categoriesUpdateToOneWithWhereWithoutOffersInput = {
    where?: offer_categoriesWhereInput
    data: XOR<offer_categoriesUpdateWithoutOffersInput, offer_categoriesUncheckedUpdateWithoutOffersInput>
  }

  export type offer_categoriesUpdateWithoutOffersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    providers?: providersUpdateManyWithoutOffer_categoriesNestedInput
  }

  export type offer_categoriesUncheckedUpdateWithoutOffersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    providers?: providersUncheckedUpdateManyWithoutOffer_categoriesNestedInput
  }

  export type provider_offersUpsertWithWhereUniqueWithoutOffersInput = {
    where: provider_offersWhereUniqueInput
    update: XOR<provider_offersUpdateWithoutOffersInput, provider_offersUncheckedUpdateWithoutOffersInput>
    create: XOR<provider_offersCreateWithoutOffersInput, provider_offersUncheckedCreateWithoutOffersInput>
  }

  export type provider_offersUpdateWithWhereUniqueWithoutOffersInput = {
    where: provider_offersWhereUniqueInput
    data: XOR<provider_offersUpdateWithoutOffersInput, provider_offersUncheckedUpdateWithoutOffersInput>
  }

  export type provider_offersUpdateManyWithWhereWithoutOffersInput = {
    where: provider_offersScalarWhereInput
    data: XOR<provider_offersUpdateManyMutationInput, provider_offersUncheckedUpdateManyWithoutOffersInput>
  }

  export type provider_offersScalarWhereInput = {
    AND?: provider_offersScalarWhereInput | provider_offersScalarWhereInput[]
    OR?: provider_offersScalarWhereInput[]
    NOT?: provider_offersScalarWhereInput | provider_offersScalarWhereInput[]
    id?: BigIntFilter<"provider_offers"> | bigint | number
    provider_id?: BigIntFilter<"provider_offers"> | bigint | number
    offer_id?: BigIntFilter<"provider_offers"> | bigint | number
    created_at?: DateTimeNullableFilter<"provider_offers"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"provider_offers"> | Date | string | null
  }

  export type subscription_plan_offersUpsertWithWhereUniqueWithoutOffersInput = {
    where: subscription_plan_offersWhereUniqueInput
    update: XOR<subscription_plan_offersUpdateWithoutOffersInput, subscription_plan_offersUncheckedUpdateWithoutOffersInput>
    create: XOR<subscription_plan_offersCreateWithoutOffersInput, subscription_plan_offersUncheckedCreateWithoutOffersInput>
  }

  export type subscription_plan_offersUpdateWithWhereUniqueWithoutOffersInput = {
    where: subscription_plan_offersWhereUniqueInput
    data: XOR<subscription_plan_offersUpdateWithoutOffersInput, subscription_plan_offersUncheckedUpdateWithoutOffersInput>
  }

  export type subscription_plan_offersUpdateManyWithWhereWithoutOffersInput = {
    where: subscription_plan_offersScalarWhereInput
    data: XOR<subscription_plan_offersUpdateManyMutationInput, subscription_plan_offersUncheckedUpdateManyWithoutOffersInput>
  }

  export type subscription_plan_offersScalarWhereInput = {
    AND?: subscription_plan_offersScalarWhereInput | subscription_plan_offersScalarWhereInput[]
    OR?: subscription_plan_offersScalarWhereInput[]
    NOT?: subscription_plan_offersScalarWhereInput | subscription_plan_offersScalarWhereInput[]
    id?: BigIntFilter<"subscription_plan_offers"> | bigint | number
    subscription_plan_id?: BigIntFilter<"subscription_plan_offers"> | bigint | number
    offer_id?: BigIntFilter<"subscription_plan_offers"> | bigint | number
    discount_percentage?: IntFilter<"subscription_plan_offers"> | number
    created_at?: DateTimeNullableFilter<"subscription_plan_offers"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"subscription_plan_offers"> | Date | string | null
  }

  export type subscription_usagesUpsertWithWhereUniqueWithoutOffersInput = {
    where: subscription_usagesWhereUniqueInput
    update: XOR<subscription_usagesUpdateWithoutOffersInput, subscription_usagesUncheckedUpdateWithoutOffersInput>
    create: XOR<subscription_usagesCreateWithoutOffersInput, subscription_usagesUncheckedCreateWithoutOffersInput>
  }

  export type subscription_usagesUpdateWithWhereUniqueWithoutOffersInput = {
    where: subscription_usagesWhereUniqueInput
    data: XOR<subscription_usagesUpdateWithoutOffersInput, subscription_usagesUncheckedUpdateWithoutOffersInput>
  }

  export type subscription_usagesUpdateManyWithWhereWithoutOffersInput = {
    where: subscription_usagesScalarWhereInput
    data: XOR<subscription_usagesUpdateManyMutationInput, subscription_usagesUncheckedUpdateManyWithoutOffersInput>
  }

  export type customer_subscriptionsCreateWithoutOrdersInput = {
    id?: bigint | number
    start_date: Date | string
    end_date: Date | string
    status?: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
    customers: customersCreateNestedOneWithoutCustomer_subscriptionsInput
    subscription_plans: subscription_plansCreateNestedOneWithoutCustomer_subscriptionsInput
    subscription_usages?: subscription_usagesCreateNestedManyWithoutCustomer_subscriptionsInput
  }

  export type customer_subscriptionsUncheckedCreateWithoutOrdersInput = {
    id?: bigint | number
    customer_id: bigint | number
    subscription_plan_id: bigint | number
    start_date: Date | string
    end_date: Date | string
    status?: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
    subscription_usages?: subscription_usagesUncheckedCreateNestedManyWithoutCustomer_subscriptionsInput
  }

  export type customer_subscriptionsCreateOrConnectWithoutOrdersInput = {
    where: customer_subscriptionsWhereUniqueInput
    create: XOR<customer_subscriptionsCreateWithoutOrdersInput, customer_subscriptionsUncheckedCreateWithoutOrdersInput>
  }

  export type paymentsCreateWithoutOrdersInput = {
    id?: bigint | number
    transaction_id: string
    res_num: string
    status?: number
    amount: Decimal | DecimalJsLike | number | string
    payment_method?: string | null
    payment_gateway?: string | null
    paid_at?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    receipt_photo?: string | null
  }

  export type paymentsUncheckedCreateWithoutOrdersInput = {
    id?: bigint | number
    transaction_id: string
    res_num: string
    status?: number
    amount: Decimal | DecimalJsLike | number | string
    payment_method?: string | null
    payment_gateway?: string | null
    paid_at?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    receipt_photo?: string | null
  }

  export type paymentsCreateOrConnectWithoutOrdersInput = {
    where: paymentsWhereUniqueInput
    create: XOR<paymentsCreateWithoutOrdersInput, paymentsUncheckedCreateWithoutOrdersInput>
  }

  export type paymentsCreateManyOrdersInputEnvelope = {
    data: paymentsCreateManyOrdersInput | paymentsCreateManyOrdersInput[]
    skipDuplicates?: boolean
  }

  export type customer_subscriptionsUpsertWithoutOrdersInput = {
    update: XOR<customer_subscriptionsUpdateWithoutOrdersInput, customer_subscriptionsUncheckedUpdateWithoutOrdersInput>
    create: XOR<customer_subscriptionsCreateWithoutOrdersInput, customer_subscriptionsUncheckedCreateWithoutOrdersInput>
    where?: customer_subscriptionsWhereInput
  }

  export type customer_subscriptionsUpdateToOneWithWhereWithoutOrdersInput = {
    where?: customer_subscriptionsWhereInput
    data: XOR<customer_subscriptionsUpdateWithoutOrdersInput, customer_subscriptionsUncheckedUpdateWithoutOrdersInput>
  }

  export type customer_subscriptionsUpdateWithoutOrdersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    customers?: customersUpdateOneRequiredWithoutCustomer_subscriptionsNestedInput
    subscription_plans?: subscription_plansUpdateOneRequiredWithoutCustomer_subscriptionsNestedInput
    subscription_usages?: subscription_usagesUpdateManyWithoutCustomer_subscriptionsNestedInput
  }

  export type customer_subscriptionsUncheckedUpdateWithoutOrdersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    customer_id?: BigIntFieldUpdateOperationsInput | bigint | number
    subscription_plan_id?: BigIntFieldUpdateOperationsInput | bigint | number
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    subscription_usages?: subscription_usagesUncheckedUpdateManyWithoutCustomer_subscriptionsNestedInput
  }

  export type paymentsUpsertWithWhereUniqueWithoutOrdersInput = {
    where: paymentsWhereUniqueInput
    update: XOR<paymentsUpdateWithoutOrdersInput, paymentsUncheckedUpdateWithoutOrdersInput>
    create: XOR<paymentsCreateWithoutOrdersInput, paymentsUncheckedCreateWithoutOrdersInput>
  }

  export type paymentsUpdateWithWhereUniqueWithoutOrdersInput = {
    where: paymentsWhereUniqueInput
    data: XOR<paymentsUpdateWithoutOrdersInput, paymentsUncheckedUpdateWithoutOrdersInput>
  }

  export type paymentsUpdateManyWithWhereWithoutOrdersInput = {
    where: paymentsScalarWhereInput
    data: XOR<paymentsUpdateManyMutationInput, paymentsUncheckedUpdateManyWithoutOrdersInput>
  }

  export type paymentsScalarWhereInput = {
    AND?: paymentsScalarWhereInput | paymentsScalarWhereInput[]
    OR?: paymentsScalarWhereInput[]
    NOT?: paymentsScalarWhereInput | paymentsScalarWhereInput[]
    id?: BigIntFilter<"payments"> | bigint | number
    order_id?: BigIntFilter<"payments"> | bigint | number
    transaction_id?: StringFilter<"payments"> | string
    res_num?: StringFilter<"payments"> | string
    status?: IntFilter<"payments"> | number
    amount?: DecimalFilter<"payments"> | Decimal | DecimalJsLike | number | string
    payment_method?: StringNullableFilter<"payments"> | string | null
    payment_gateway?: StringNullableFilter<"payments"> | string | null
    paid_at?: DateTimeNullableFilter<"payments"> | Date | string | null
    created_at?: DateTimeNullableFilter<"payments"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"payments"> | Date | string | null
    receipt_photo?: StringNullableFilter<"payments"> | string | null
  }

  export type ordersCreateWithoutPaymentsInput = {
    id?: bigint | number
    buyer_type: string
    buyer_id: bigint | number
    purchasable_type: string
    purchasable_id: bigint | number
    amount: Decimal | DecimalJsLike | number | string
    status: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
    tracking_code?: string | null
    customer_subscriptions?: customer_subscriptionsCreateNestedOneWithoutOrdersInput
  }

  export type ordersUncheckedCreateWithoutPaymentsInput = {
    id?: bigint | number
    buyer_type: string
    buyer_id: bigint | number
    purchasable_type: string
    purchasable_id: bigint | number
    amount: Decimal | DecimalJsLike | number | string
    status: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
    tracking_code?: string | null
    customer_subscriptions?: customer_subscriptionsUncheckedCreateNestedOneWithoutOrdersInput
  }

  export type ordersCreateOrConnectWithoutPaymentsInput = {
    where: ordersWhereUniqueInput
    create: XOR<ordersCreateWithoutPaymentsInput, ordersUncheckedCreateWithoutPaymentsInput>
  }

  export type ordersUpsertWithoutPaymentsInput = {
    update: XOR<ordersUpdateWithoutPaymentsInput, ordersUncheckedUpdateWithoutPaymentsInput>
    create: XOR<ordersCreateWithoutPaymentsInput, ordersUncheckedCreateWithoutPaymentsInput>
    where?: ordersWhereInput
  }

  export type ordersUpdateToOneWithWhereWithoutPaymentsInput = {
    where?: ordersWhereInput
    data: XOR<ordersUpdateWithoutPaymentsInput, ordersUncheckedUpdateWithoutPaymentsInput>
  }

  export type ordersUpdateWithoutPaymentsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    buyer_type?: StringFieldUpdateOperationsInput | string
    buyer_id?: BigIntFieldUpdateOperationsInput | bigint | number
    purchasable_type?: StringFieldUpdateOperationsInput | string
    purchasable_id?: BigIntFieldUpdateOperationsInput | bigint | number
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tracking_code?: NullableStringFieldUpdateOperationsInput | string | null
    customer_subscriptions?: customer_subscriptionsUpdateOneWithoutOrdersNestedInput
  }

  export type ordersUncheckedUpdateWithoutPaymentsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    buyer_type?: StringFieldUpdateOperationsInput | string
    buyer_id?: BigIntFieldUpdateOperationsInput | bigint | number
    purchasable_type?: StringFieldUpdateOperationsInput | string
    purchasable_id?: BigIntFieldUpdateOperationsInput | bigint | number
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tracking_code?: NullableStringFieldUpdateOperationsInput | string | null
    customer_subscriptions?: customer_subscriptionsUncheckedUpdateOneWithoutOrdersNestedInput
  }

  export type model_has_permissionsCreateWithoutPermissionsInput = {
    model_type: string
    model_id: bigint | number
  }

  export type model_has_permissionsUncheckedCreateWithoutPermissionsInput = {
    model_type: string
    model_id: bigint | number
  }

  export type model_has_permissionsCreateOrConnectWithoutPermissionsInput = {
    where: model_has_permissionsWhereUniqueInput
    create: XOR<model_has_permissionsCreateWithoutPermissionsInput, model_has_permissionsUncheckedCreateWithoutPermissionsInput>
  }

  export type model_has_permissionsCreateManyPermissionsInputEnvelope = {
    data: model_has_permissionsCreateManyPermissionsInput | model_has_permissionsCreateManyPermissionsInput[]
    skipDuplicates?: boolean
  }

  export type role_has_permissionsCreateWithoutPermissionsInput = {
    roles: rolesCreateNestedOneWithoutRole_has_permissionsInput
  }

  export type role_has_permissionsUncheckedCreateWithoutPermissionsInput = {
    role_id: bigint | number
  }

  export type role_has_permissionsCreateOrConnectWithoutPermissionsInput = {
    where: role_has_permissionsWhereUniqueInput
    create: XOR<role_has_permissionsCreateWithoutPermissionsInput, role_has_permissionsUncheckedCreateWithoutPermissionsInput>
  }

  export type role_has_permissionsCreateManyPermissionsInputEnvelope = {
    data: role_has_permissionsCreateManyPermissionsInput | role_has_permissionsCreateManyPermissionsInput[]
    skipDuplicates?: boolean
  }

  export type model_has_permissionsUpsertWithWhereUniqueWithoutPermissionsInput = {
    where: model_has_permissionsWhereUniqueInput
    update: XOR<model_has_permissionsUpdateWithoutPermissionsInput, model_has_permissionsUncheckedUpdateWithoutPermissionsInput>
    create: XOR<model_has_permissionsCreateWithoutPermissionsInput, model_has_permissionsUncheckedCreateWithoutPermissionsInput>
  }

  export type model_has_permissionsUpdateWithWhereUniqueWithoutPermissionsInput = {
    where: model_has_permissionsWhereUniqueInput
    data: XOR<model_has_permissionsUpdateWithoutPermissionsInput, model_has_permissionsUncheckedUpdateWithoutPermissionsInput>
  }

  export type model_has_permissionsUpdateManyWithWhereWithoutPermissionsInput = {
    where: model_has_permissionsScalarWhereInput
    data: XOR<model_has_permissionsUpdateManyMutationInput, model_has_permissionsUncheckedUpdateManyWithoutPermissionsInput>
  }

  export type model_has_permissionsScalarWhereInput = {
    AND?: model_has_permissionsScalarWhereInput | model_has_permissionsScalarWhereInput[]
    OR?: model_has_permissionsScalarWhereInput[]
    NOT?: model_has_permissionsScalarWhereInput | model_has_permissionsScalarWhereInput[]
    permission_id?: BigIntFilter<"model_has_permissions"> | bigint | number
    model_type?: StringFilter<"model_has_permissions"> | string
    model_id?: BigIntFilter<"model_has_permissions"> | bigint | number
  }

  export type role_has_permissionsUpsertWithWhereUniqueWithoutPermissionsInput = {
    where: role_has_permissionsWhereUniqueInput
    update: XOR<role_has_permissionsUpdateWithoutPermissionsInput, role_has_permissionsUncheckedUpdateWithoutPermissionsInput>
    create: XOR<role_has_permissionsCreateWithoutPermissionsInput, role_has_permissionsUncheckedCreateWithoutPermissionsInput>
  }

  export type role_has_permissionsUpdateWithWhereUniqueWithoutPermissionsInput = {
    where: role_has_permissionsWhereUniqueInput
    data: XOR<role_has_permissionsUpdateWithoutPermissionsInput, role_has_permissionsUncheckedUpdateWithoutPermissionsInput>
  }

  export type role_has_permissionsUpdateManyWithWhereWithoutPermissionsInput = {
    where: role_has_permissionsScalarWhereInput
    data: XOR<role_has_permissionsUpdateManyMutationInput, role_has_permissionsUncheckedUpdateManyWithoutPermissionsInput>
  }

  export type role_has_permissionsScalarWhereInput = {
    AND?: role_has_permissionsScalarWhereInput | role_has_permissionsScalarWhereInput[]
    OR?: role_has_permissionsScalarWhereInput[]
    NOT?: role_has_permissionsScalarWhereInput | role_has_permissionsScalarWhereInput[]
    permission_id?: BigIntFilter<"role_has_permissions"> | bigint | number
    role_id?: BigIntFilter<"role_has_permissions"> | bigint | number
  }

  export type providersCreateWithoutProvider_agentsInput = {
    id?: bigint | number
    name: string
    description?: string | null
    address: string
    phone_number: JsonNullValueInput | InputJsonValue
    main_image: string
    slider_images: JsonNullValueInput | InputJsonValue
    latitude: Decimal | DecimalJsLike | number | string
    longitude: Decimal | DecimalJsLike | number | string
    is_verified?: boolean
    status?: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
    provider_menu?: provider_menuCreateNestedOneWithoutProvidersInput
    provider_offers?: provider_offersCreateNestedManyWithoutProvidersInput
    offer_categories: offer_categoriesCreateNestedOneWithoutProvidersInput
    subscription_usages?: subscription_usagesCreateNestedManyWithoutProvidersInput
  }

  export type providersUncheckedCreateWithoutProvider_agentsInput = {
    id?: bigint | number
    name: string
    description?: string | null
    category_id: bigint | number
    address: string
    phone_number: JsonNullValueInput | InputJsonValue
    main_image: string
    slider_images: JsonNullValueInput | InputJsonValue
    latitude: Decimal | DecimalJsLike | number | string
    longitude: Decimal | DecimalJsLike | number | string
    is_verified?: boolean
    status?: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
    provider_menu?: provider_menuUncheckedCreateNestedOneWithoutProvidersInput
    provider_offers?: provider_offersUncheckedCreateNestedManyWithoutProvidersInput
    subscription_usages?: subscription_usagesUncheckedCreateNestedManyWithoutProvidersInput
  }

  export type providersCreateOrConnectWithoutProvider_agentsInput = {
    where: providersWhereUniqueInput
    create: XOR<providersCreateWithoutProvider_agentsInput, providersUncheckedCreateWithoutProvider_agentsInput>
  }

  export type adminsCreateWithoutProvider_agentsInput = {
    id?: bigint | number
    first_name?: string | null
    last_name?: string | null
    gender?: string | null
    email?: string | null
    mobile_number: string
    password?: string | null
    birthdate?: Date | string | null
    ssn?: string | null
    otp_secret?: string | null
    status?: number
    is_verified?: boolean
    deleted_at?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type adminsUncheckedCreateWithoutProvider_agentsInput = {
    id?: bigint | number
    first_name?: string | null
    last_name?: string | null
    gender?: string | null
    email?: string | null
    mobile_number: string
    password?: string | null
    birthdate?: Date | string | null
    ssn?: string | null
    otp_secret?: string | null
    status?: number
    is_verified?: boolean
    deleted_at?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type adminsCreateOrConnectWithoutProvider_agentsInput = {
    where: adminsWhereUniqueInput
    create: XOR<adminsCreateWithoutProvider_agentsInput, adminsUncheckedCreateWithoutProvider_agentsInput>
  }

  export type subscription_usagesCreateWithoutProvider_agentsInput = {
    id?: bigint | number
    total_amount: string
    status?: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    customers: customersCreateNestedOneWithoutSubscription_usagesInput
    customer_subscriptions: customer_subscriptionsCreateNestedOneWithoutSubscription_usagesInput
    offers: offersCreateNestedOneWithoutSubscription_usagesInput
    providers: providersCreateNestedOneWithoutSubscription_usagesInput
  }

  export type subscription_usagesUncheckedCreateWithoutProvider_agentsInput = {
    id?: bigint | number
    customer_id: bigint | number
    customer_subscription_id: bigint | number
    provider_id: bigint | number
    offer_id: bigint | number
    total_amount: string
    status?: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type subscription_usagesCreateOrConnectWithoutProvider_agentsInput = {
    where: subscription_usagesWhereUniqueInput
    create: XOR<subscription_usagesCreateWithoutProvider_agentsInput, subscription_usagesUncheckedCreateWithoutProvider_agentsInput>
  }

  export type subscription_usagesCreateManyProvider_agentsInputEnvelope = {
    data: subscription_usagesCreateManyProvider_agentsInput | subscription_usagesCreateManyProvider_agentsInput[]
    skipDuplicates?: boolean
  }

  export type providersUpsertWithoutProvider_agentsInput = {
    update: XOR<providersUpdateWithoutProvider_agentsInput, providersUncheckedUpdateWithoutProvider_agentsInput>
    create: XOR<providersCreateWithoutProvider_agentsInput, providersUncheckedCreateWithoutProvider_agentsInput>
    where?: providersWhereInput
  }

  export type providersUpdateToOneWithWhereWithoutProvider_agentsInput = {
    where?: providersWhereInput
    data: XOR<providersUpdateWithoutProvider_agentsInput, providersUncheckedUpdateWithoutProvider_agentsInput>
  }

  export type providersUpdateWithoutProvider_agentsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    phone_number?: JsonNullValueInput | InputJsonValue
    main_image?: StringFieldUpdateOperationsInput | string
    slider_images?: JsonNullValueInput | InputJsonValue
    latitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    longitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    is_verified?: BoolFieldUpdateOperationsInput | boolean
    status?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    provider_menu?: provider_menuUpdateOneWithoutProvidersNestedInput
    provider_offers?: provider_offersUpdateManyWithoutProvidersNestedInput
    offer_categories?: offer_categoriesUpdateOneRequiredWithoutProvidersNestedInput
    subscription_usages?: subscription_usagesUpdateManyWithoutProvidersNestedInput
  }

  export type providersUncheckedUpdateWithoutProvider_agentsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category_id?: BigIntFieldUpdateOperationsInput | bigint | number
    address?: StringFieldUpdateOperationsInput | string
    phone_number?: JsonNullValueInput | InputJsonValue
    main_image?: StringFieldUpdateOperationsInput | string
    slider_images?: JsonNullValueInput | InputJsonValue
    latitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    longitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    is_verified?: BoolFieldUpdateOperationsInput | boolean
    status?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    provider_menu?: provider_menuUncheckedUpdateOneWithoutProvidersNestedInput
    provider_offers?: provider_offersUncheckedUpdateManyWithoutProvidersNestedInput
    subscription_usages?: subscription_usagesUncheckedUpdateManyWithoutProvidersNestedInput
  }

  export type adminsUpsertWithoutProvider_agentsInput = {
    update: XOR<adminsUpdateWithoutProvider_agentsInput, adminsUncheckedUpdateWithoutProvider_agentsInput>
    create: XOR<adminsCreateWithoutProvider_agentsInput, adminsUncheckedCreateWithoutProvider_agentsInput>
    where?: adminsWhereInput
  }

  export type adminsUpdateToOneWithWhereWithoutProvider_agentsInput = {
    where?: adminsWhereInput
    data: XOR<adminsUpdateWithoutProvider_agentsInput, adminsUncheckedUpdateWithoutProvider_agentsInput>
  }

  export type adminsUpdateWithoutProvider_agentsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    mobile_number?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ssn?: NullableStringFieldUpdateOperationsInput | string | null
    otp_secret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: IntFieldUpdateOperationsInput | number
    is_verified?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type adminsUncheckedUpdateWithoutProvider_agentsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    mobile_number?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ssn?: NullableStringFieldUpdateOperationsInput | string | null
    otp_secret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: IntFieldUpdateOperationsInput | number
    is_verified?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type subscription_usagesUpsertWithWhereUniqueWithoutProvider_agentsInput = {
    where: subscription_usagesWhereUniqueInput
    update: XOR<subscription_usagesUpdateWithoutProvider_agentsInput, subscription_usagesUncheckedUpdateWithoutProvider_agentsInput>
    create: XOR<subscription_usagesCreateWithoutProvider_agentsInput, subscription_usagesUncheckedCreateWithoutProvider_agentsInput>
  }

  export type subscription_usagesUpdateWithWhereUniqueWithoutProvider_agentsInput = {
    where: subscription_usagesWhereUniqueInput
    data: XOR<subscription_usagesUpdateWithoutProvider_agentsInput, subscription_usagesUncheckedUpdateWithoutProvider_agentsInput>
  }

  export type subscription_usagesUpdateManyWithWhereWithoutProvider_agentsInput = {
    where: subscription_usagesScalarWhereInput
    data: XOR<subscription_usagesUpdateManyMutationInput, subscription_usagesUncheckedUpdateManyWithoutProvider_agentsInput>
  }

  export type offersCreateWithoutProvider_offersInput = {
    id?: bigint | number
    title: string
    icon?: string | null
    description?: string | null
    price?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    offer_categories: offer_categoriesCreateNestedOneWithoutOffersInput
    subscription_plan_offers?: subscription_plan_offersCreateNestedManyWithoutOffersInput
    subscription_usages?: subscription_usagesCreateNestedManyWithoutOffersInput
  }

  export type offersUncheckedCreateWithoutProvider_offersInput = {
    id?: bigint | number
    category_id: bigint | number
    title: string
    icon?: string | null
    description?: string | null
    price?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    subscription_plan_offers?: subscription_plan_offersUncheckedCreateNestedManyWithoutOffersInput
    subscription_usages?: subscription_usagesUncheckedCreateNestedManyWithoutOffersInput
  }

  export type offersCreateOrConnectWithoutProvider_offersInput = {
    where: offersWhereUniqueInput
    create: XOR<offersCreateWithoutProvider_offersInput, offersUncheckedCreateWithoutProvider_offersInput>
  }

  export type providersCreateWithoutProvider_offersInput = {
    id?: bigint | number
    name: string
    description?: string | null
    address: string
    phone_number: JsonNullValueInput | InputJsonValue
    main_image: string
    slider_images: JsonNullValueInput | InputJsonValue
    latitude: Decimal | DecimalJsLike | number | string
    longitude: Decimal | DecimalJsLike | number | string
    is_verified?: boolean
    status?: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
    provider_agents?: provider_agentsCreateNestedManyWithoutProvidersInput
    provider_menu?: provider_menuCreateNestedOneWithoutProvidersInput
    offer_categories: offer_categoriesCreateNestedOneWithoutProvidersInput
    subscription_usages?: subscription_usagesCreateNestedManyWithoutProvidersInput
  }

  export type providersUncheckedCreateWithoutProvider_offersInput = {
    id?: bigint | number
    name: string
    description?: string | null
    category_id: bigint | number
    address: string
    phone_number: JsonNullValueInput | InputJsonValue
    main_image: string
    slider_images: JsonNullValueInput | InputJsonValue
    latitude: Decimal | DecimalJsLike | number | string
    longitude: Decimal | DecimalJsLike | number | string
    is_verified?: boolean
    status?: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
    provider_agents?: provider_agentsUncheckedCreateNestedManyWithoutProvidersInput
    provider_menu?: provider_menuUncheckedCreateNestedOneWithoutProvidersInput
    subscription_usages?: subscription_usagesUncheckedCreateNestedManyWithoutProvidersInput
  }

  export type providersCreateOrConnectWithoutProvider_offersInput = {
    where: providersWhereUniqueInput
    create: XOR<providersCreateWithoutProvider_offersInput, providersUncheckedCreateWithoutProvider_offersInput>
  }

  export type offersUpsertWithoutProvider_offersInput = {
    update: XOR<offersUpdateWithoutProvider_offersInput, offersUncheckedUpdateWithoutProvider_offersInput>
    create: XOR<offersCreateWithoutProvider_offersInput, offersUncheckedCreateWithoutProvider_offersInput>
    where?: offersWhereInput
  }

  export type offersUpdateToOneWithWhereWithoutProvider_offersInput = {
    where?: offersWhereInput
    data: XOR<offersUpdateWithoutProvider_offersInput, offersUncheckedUpdateWithoutProvider_offersInput>
  }

  export type offersUpdateWithoutProvider_offersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    offer_categories?: offer_categoriesUpdateOneRequiredWithoutOffersNestedInput
    subscription_plan_offers?: subscription_plan_offersUpdateManyWithoutOffersNestedInput
    subscription_usages?: subscription_usagesUpdateManyWithoutOffersNestedInput
  }

  export type offersUncheckedUpdateWithoutProvider_offersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    category_id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    subscription_plan_offers?: subscription_plan_offersUncheckedUpdateManyWithoutOffersNestedInput
    subscription_usages?: subscription_usagesUncheckedUpdateManyWithoutOffersNestedInput
  }

  export type providersUpsertWithoutProvider_offersInput = {
    update: XOR<providersUpdateWithoutProvider_offersInput, providersUncheckedUpdateWithoutProvider_offersInput>
    create: XOR<providersCreateWithoutProvider_offersInput, providersUncheckedCreateWithoutProvider_offersInput>
    where?: providersWhereInput
  }

  export type providersUpdateToOneWithWhereWithoutProvider_offersInput = {
    where?: providersWhereInput
    data: XOR<providersUpdateWithoutProvider_offersInput, providersUncheckedUpdateWithoutProvider_offersInput>
  }

  export type providersUpdateWithoutProvider_offersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    phone_number?: JsonNullValueInput | InputJsonValue
    main_image?: StringFieldUpdateOperationsInput | string
    slider_images?: JsonNullValueInput | InputJsonValue
    latitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    longitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    is_verified?: BoolFieldUpdateOperationsInput | boolean
    status?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    provider_agents?: provider_agentsUpdateManyWithoutProvidersNestedInput
    provider_menu?: provider_menuUpdateOneWithoutProvidersNestedInput
    offer_categories?: offer_categoriesUpdateOneRequiredWithoutProvidersNestedInput
    subscription_usages?: subscription_usagesUpdateManyWithoutProvidersNestedInput
  }

  export type providersUncheckedUpdateWithoutProvider_offersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category_id?: BigIntFieldUpdateOperationsInput | bigint | number
    address?: StringFieldUpdateOperationsInput | string
    phone_number?: JsonNullValueInput | InputJsonValue
    main_image?: StringFieldUpdateOperationsInput | string
    slider_images?: JsonNullValueInput | InputJsonValue
    latitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    longitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    is_verified?: BoolFieldUpdateOperationsInput | boolean
    status?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    provider_agents?: provider_agentsUncheckedUpdateManyWithoutProvidersNestedInput
    provider_menu?: provider_menuUncheckedUpdateOneWithoutProvidersNestedInput
    subscription_usages?: subscription_usagesUncheckedUpdateManyWithoutProvidersNestedInput
  }

  export type provider_agentsCreateWithoutProvidersInput = {
    id?: bigint | number
    role?: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
    admins: adminsCreateNestedOneWithoutProvider_agentsInput
    subscription_usages?: subscription_usagesCreateNestedManyWithoutProvider_agentsInput
  }

  export type provider_agentsUncheckedCreateWithoutProvidersInput = {
    id?: bigint | number
    user_id: bigint | number
    role?: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
    subscription_usages?: subscription_usagesUncheckedCreateNestedManyWithoutProvider_agentsInput
  }

  export type provider_agentsCreateOrConnectWithoutProvidersInput = {
    where: provider_agentsWhereUniqueInput
    create: XOR<provider_agentsCreateWithoutProvidersInput, provider_agentsUncheckedCreateWithoutProvidersInput>
  }

  export type provider_agentsCreateManyProvidersInputEnvelope = {
    data: provider_agentsCreateManyProvidersInput | provider_agentsCreateManyProvidersInput[]
    skipDuplicates?: boolean
  }

  export type provider_menuCreateWithoutProvidersInput = {
    id?: bigint | number
    title?: string | null
    description?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    provider_menu_items?: provider_menu_itemsCreateNestedManyWithoutProvider_menuInput
    provider_menu_categories?: provider_menu_categoriesCreateNestedManyWithoutProvider_menuInput
  }

  export type provider_menuUncheckedCreateWithoutProvidersInput = {
    id?: bigint | number
    title?: string | null
    description?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    provider_menu_items?: provider_menu_itemsUncheckedCreateNestedManyWithoutProvider_menuInput
    provider_menu_categories?: provider_menu_categoriesUncheckedCreateNestedManyWithoutProvider_menuInput
  }

  export type provider_menuCreateOrConnectWithoutProvidersInput = {
    where: provider_menuWhereUniqueInput
    create: XOR<provider_menuCreateWithoutProvidersInput, provider_menuUncheckedCreateWithoutProvidersInput>
  }

  export type provider_offersCreateWithoutProvidersInput = {
    id?: bigint | number
    created_at?: Date | string | null
    updated_at?: Date | string | null
    offers: offersCreateNestedOneWithoutProvider_offersInput
  }

  export type provider_offersUncheckedCreateWithoutProvidersInput = {
    id?: bigint | number
    offer_id: bigint | number
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type provider_offersCreateOrConnectWithoutProvidersInput = {
    where: provider_offersWhereUniqueInput
    create: XOR<provider_offersCreateWithoutProvidersInput, provider_offersUncheckedCreateWithoutProvidersInput>
  }

  export type provider_offersCreateManyProvidersInputEnvelope = {
    data: provider_offersCreateManyProvidersInput | provider_offersCreateManyProvidersInput[]
    skipDuplicates?: boolean
  }

  export type offer_categoriesCreateWithoutProvidersInput = {
    id?: bigint | number
    title: string
    icon?: string | null
    description?: string | null
    status?: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
    offers?: offersCreateNestedManyWithoutOffer_categoriesInput
  }

  export type offer_categoriesUncheckedCreateWithoutProvidersInput = {
    id?: bigint | number
    title: string
    icon?: string | null
    description?: string | null
    status?: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
    offers?: offersUncheckedCreateNestedManyWithoutOffer_categoriesInput
  }

  export type offer_categoriesCreateOrConnectWithoutProvidersInput = {
    where: offer_categoriesWhereUniqueInput
    create: XOR<offer_categoriesCreateWithoutProvidersInput, offer_categoriesUncheckedCreateWithoutProvidersInput>
  }

  export type subscription_usagesCreateWithoutProvidersInput = {
    id?: bigint | number
    total_amount: string
    status?: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    customers: customersCreateNestedOneWithoutSubscription_usagesInput
    customer_subscriptions: customer_subscriptionsCreateNestedOneWithoutSubscription_usagesInput
    offers: offersCreateNestedOneWithoutSubscription_usagesInput
    provider_agents: provider_agentsCreateNestedOneWithoutSubscription_usagesInput
  }

  export type subscription_usagesUncheckedCreateWithoutProvidersInput = {
    id?: bigint | number
    provider_agent_id: bigint | number
    customer_id: bigint | number
    customer_subscription_id: bigint | number
    offer_id: bigint | number
    total_amount: string
    status?: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type subscription_usagesCreateOrConnectWithoutProvidersInput = {
    where: subscription_usagesWhereUniqueInput
    create: XOR<subscription_usagesCreateWithoutProvidersInput, subscription_usagesUncheckedCreateWithoutProvidersInput>
  }

  export type subscription_usagesCreateManyProvidersInputEnvelope = {
    data: subscription_usagesCreateManyProvidersInput | subscription_usagesCreateManyProvidersInput[]
    skipDuplicates?: boolean
  }

  export type provider_agentsUpsertWithWhereUniqueWithoutProvidersInput = {
    where: provider_agentsWhereUniqueInput
    update: XOR<provider_agentsUpdateWithoutProvidersInput, provider_agentsUncheckedUpdateWithoutProvidersInput>
    create: XOR<provider_agentsCreateWithoutProvidersInput, provider_agentsUncheckedCreateWithoutProvidersInput>
  }

  export type provider_agentsUpdateWithWhereUniqueWithoutProvidersInput = {
    where: provider_agentsWhereUniqueInput
    data: XOR<provider_agentsUpdateWithoutProvidersInput, provider_agentsUncheckedUpdateWithoutProvidersInput>
  }

  export type provider_agentsUpdateManyWithWhereWithoutProvidersInput = {
    where: provider_agentsScalarWhereInput
    data: XOR<provider_agentsUpdateManyMutationInput, provider_agentsUncheckedUpdateManyWithoutProvidersInput>
  }

  export type provider_menuUpsertWithoutProvidersInput = {
    update: XOR<provider_menuUpdateWithoutProvidersInput, provider_menuUncheckedUpdateWithoutProvidersInput>
    create: XOR<provider_menuCreateWithoutProvidersInput, provider_menuUncheckedCreateWithoutProvidersInput>
    where?: provider_menuWhereInput
  }

  export type provider_menuUpdateToOneWithWhereWithoutProvidersInput = {
    where?: provider_menuWhereInput
    data: XOR<provider_menuUpdateWithoutProvidersInput, provider_menuUncheckedUpdateWithoutProvidersInput>
  }

  export type provider_menuUpdateWithoutProvidersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    provider_menu_items?: provider_menu_itemsUpdateManyWithoutProvider_menuNestedInput
    provider_menu_categories?: provider_menu_categoriesUpdateManyWithoutProvider_menuNestedInput
  }

  export type provider_menuUncheckedUpdateWithoutProvidersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    provider_menu_items?: provider_menu_itemsUncheckedUpdateManyWithoutProvider_menuNestedInput
    provider_menu_categories?: provider_menu_categoriesUncheckedUpdateManyWithoutProvider_menuNestedInput
  }

  export type provider_offersUpsertWithWhereUniqueWithoutProvidersInput = {
    where: provider_offersWhereUniqueInput
    update: XOR<provider_offersUpdateWithoutProvidersInput, provider_offersUncheckedUpdateWithoutProvidersInput>
    create: XOR<provider_offersCreateWithoutProvidersInput, provider_offersUncheckedCreateWithoutProvidersInput>
  }

  export type provider_offersUpdateWithWhereUniqueWithoutProvidersInput = {
    where: provider_offersWhereUniqueInput
    data: XOR<provider_offersUpdateWithoutProvidersInput, provider_offersUncheckedUpdateWithoutProvidersInput>
  }

  export type provider_offersUpdateManyWithWhereWithoutProvidersInput = {
    where: provider_offersScalarWhereInput
    data: XOR<provider_offersUpdateManyMutationInput, provider_offersUncheckedUpdateManyWithoutProvidersInput>
  }

  export type offer_categoriesUpsertWithoutProvidersInput = {
    update: XOR<offer_categoriesUpdateWithoutProvidersInput, offer_categoriesUncheckedUpdateWithoutProvidersInput>
    create: XOR<offer_categoriesCreateWithoutProvidersInput, offer_categoriesUncheckedCreateWithoutProvidersInput>
    where?: offer_categoriesWhereInput
  }

  export type offer_categoriesUpdateToOneWithWhereWithoutProvidersInput = {
    where?: offer_categoriesWhereInput
    data: XOR<offer_categoriesUpdateWithoutProvidersInput, offer_categoriesUncheckedUpdateWithoutProvidersInput>
  }

  export type offer_categoriesUpdateWithoutProvidersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    offers?: offersUpdateManyWithoutOffer_categoriesNestedInput
  }

  export type offer_categoriesUncheckedUpdateWithoutProvidersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    offers?: offersUncheckedUpdateManyWithoutOffer_categoriesNestedInput
  }

  export type subscription_usagesUpsertWithWhereUniqueWithoutProvidersInput = {
    where: subscription_usagesWhereUniqueInput
    update: XOR<subscription_usagesUpdateWithoutProvidersInput, subscription_usagesUncheckedUpdateWithoutProvidersInput>
    create: XOR<subscription_usagesCreateWithoutProvidersInput, subscription_usagesUncheckedCreateWithoutProvidersInput>
  }

  export type subscription_usagesUpdateWithWhereUniqueWithoutProvidersInput = {
    where: subscription_usagesWhereUniqueInput
    data: XOR<subscription_usagesUpdateWithoutProvidersInput, subscription_usagesUncheckedUpdateWithoutProvidersInput>
  }

  export type subscription_usagesUpdateManyWithWhereWithoutProvidersInput = {
    where: subscription_usagesScalarWhereInput
    data: XOR<subscription_usagesUpdateManyMutationInput, subscription_usagesUncheckedUpdateManyWithoutProvidersInput>
  }

  export type providersCreateWithoutProvider_menuInput = {
    id?: bigint | number
    name: string
    description?: string | null
    address: string
    phone_number: JsonNullValueInput | InputJsonValue
    main_image: string
    slider_images: JsonNullValueInput | InputJsonValue
    latitude: Decimal | DecimalJsLike | number | string
    longitude: Decimal | DecimalJsLike | number | string
    is_verified?: boolean
    status?: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
    provider_agents?: provider_agentsCreateNestedManyWithoutProvidersInput
    provider_offers?: provider_offersCreateNestedManyWithoutProvidersInput
    offer_categories: offer_categoriesCreateNestedOneWithoutProvidersInput
    subscription_usages?: subscription_usagesCreateNestedManyWithoutProvidersInput
  }

  export type providersUncheckedCreateWithoutProvider_menuInput = {
    id?: bigint | number
    name: string
    description?: string | null
    category_id: bigint | number
    address: string
    phone_number: JsonNullValueInput | InputJsonValue
    main_image: string
    slider_images: JsonNullValueInput | InputJsonValue
    latitude: Decimal | DecimalJsLike | number | string
    longitude: Decimal | DecimalJsLike | number | string
    is_verified?: boolean
    status?: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
    provider_agents?: provider_agentsUncheckedCreateNestedManyWithoutProvidersInput
    provider_offers?: provider_offersUncheckedCreateNestedManyWithoutProvidersInput
    subscription_usages?: subscription_usagesUncheckedCreateNestedManyWithoutProvidersInput
  }

  export type providersCreateOrConnectWithoutProvider_menuInput = {
    where: providersWhereUniqueInput
    create: XOR<providersCreateWithoutProvider_menuInput, providersUncheckedCreateWithoutProvider_menuInput>
  }

  export type provider_menu_itemsCreateWithoutProvider_menuInput = {
    id?: bigint | number
    title: string
    description?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    price: Decimal | DecimalJsLike | number | string
    provider_menu_categories: provider_menu_categoriesCreateNestedOneWithoutProvider_menu_itemsInput
  }

  export type provider_menu_itemsUncheckedCreateWithoutProvider_menuInput = {
    id?: bigint | number
    title: string
    description?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    category_id: bigint | number
    price: Decimal | DecimalJsLike | number | string
  }

  export type provider_menu_itemsCreateOrConnectWithoutProvider_menuInput = {
    where: provider_menu_itemsWhereUniqueInput
    create: XOR<provider_menu_itemsCreateWithoutProvider_menuInput, provider_menu_itemsUncheckedCreateWithoutProvider_menuInput>
  }

  export type provider_menu_itemsCreateManyProvider_menuInputEnvelope = {
    data: provider_menu_itemsCreateManyProvider_menuInput | provider_menu_itemsCreateManyProvider_menuInput[]
    skipDuplicates?: boolean
  }

  export type provider_menu_categoriesCreateWithoutProvider_menuInput = {
    id?: bigint | number
    title: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    provider_menu_items?: provider_menu_itemsCreateNestedManyWithoutProvider_menu_categoriesInput
  }

  export type provider_menu_categoriesUncheckedCreateWithoutProvider_menuInput = {
    id?: bigint | number
    title: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    provider_menu_items?: provider_menu_itemsUncheckedCreateNestedManyWithoutProvider_menu_categoriesInput
  }

  export type provider_menu_categoriesCreateOrConnectWithoutProvider_menuInput = {
    where: provider_menu_categoriesWhereUniqueInput
    create: XOR<provider_menu_categoriesCreateWithoutProvider_menuInput, provider_menu_categoriesUncheckedCreateWithoutProvider_menuInput>
  }

  export type provider_menu_categoriesCreateManyProvider_menuInputEnvelope = {
    data: provider_menu_categoriesCreateManyProvider_menuInput | provider_menu_categoriesCreateManyProvider_menuInput[]
    skipDuplicates?: boolean
  }

  export type providersUpsertWithoutProvider_menuInput = {
    update: XOR<providersUpdateWithoutProvider_menuInput, providersUncheckedUpdateWithoutProvider_menuInput>
    create: XOR<providersCreateWithoutProvider_menuInput, providersUncheckedCreateWithoutProvider_menuInput>
    where?: providersWhereInput
  }

  export type providersUpdateToOneWithWhereWithoutProvider_menuInput = {
    where?: providersWhereInput
    data: XOR<providersUpdateWithoutProvider_menuInput, providersUncheckedUpdateWithoutProvider_menuInput>
  }

  export type providersUpdateWithoutProvider_menuInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    phone_number?: JsonNullValueInput | InputJsonValue
    main_image?: StringFieldUpdateOperationsInput | string
    slider_images?: JsonNullValueInput | InputJsonValue
    latitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    longitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    is_verified?: BoolFieldUpdateOperationsInput | boolean
    status?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    provider_agents?: provider_agentsUpdateManyWithoutProvidersNestedInput
    provider_offers?: provider_offersUpdateManyWithoutProvidersNestedInput
    offer_categories?: offer_categoriesUpdateOneRequiredWithoutProvidersNestedInput
    subscription_usages?: subscription_usagesUpdateManyWithoutProvidersNestedInput
  }

  export type providersUncheckedUpdateWithoutProvider_menuInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category_id?: BigIntFieldUpdateOperationsInput | bigint | number
    address?: StringFieldUpdateOperationsInput | string
    phone_number?: JsonNullValueInput | InputJsonValue
    main_image?: StringFieldUpdateOperationsInput | string
    slider_images?: JsonNullValueInput | InputJsonValue
    latitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    longitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    is_verified?: BoolFieldUpdateOperationsInput | boolean
    status?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    provider_agents?: provider_agentsUncheckedUpdateManyWithoutProvidersNestedInput
    provider_offers?: provider_offersUncheckedUpdateManyWithoutProvidersNestedInput
    subscription_usages?: subscription_usagesUncheckedUpdateManyWithoutProvidersNestedInput
  }

  export type provider_menu_itemsUpsertWithWhereUniqueWithoutProvider_menuInput = {
    where: provider_menu_itemsWhereUniqueInput
    update: XOR<provider_menu_itemsUpdateWithoutProvider_menuInput, provider_menu_itemsUncheckedUpdateWithoutProvider_menuInput>
    create: XOR<provider_menu_itemsCreateWithoutProvider_menuInput, provider_menu_itemsUncheckedCreateWithoutProvider_menuInput>
  }

  export type provider_menu_itemsUpdateWithWhereUniqueWithoutProvider_menuInput = {
    where: provider_menu_itemsWhereUniqueInput
    data: XOR<provider_menu_itemsUpdateWithoutProvider_menuInput, provider_menu_itemsUncheckedUpdateWithoutProvider_menuInput>
  }

  export type provider_menu_itemsUpdateManyWithWhereWithoutProvider_menuInput = {
    where: provider_menu_itemsScalarWhereInput
    data: XOR<provider_menu_itemsUpdateManyMutationInput, provider_menu_itemsUncheckedUpdateManyWithoutProvider_menuInput>
  }

  export type provider_menu_itemsScalarWhereInput = {
    AND?: provider_menu_itemsScalarWhereInput | provider_menu_itemsScalarWhereInput[]
    OR?: provider_menu_itemsScalarWhereInput[]
    NOT?: provider_menu_itemsScalarWhereInput | provider_menu_itemsScalarWhereInput[]
    id?: BigIntFilter<"provider_menu_items"> | bigint | number
    menu_id?: BigIntFilter<"provider_menu_items"> | bigint | number
    title?: StringFilter<"provider_menu_items"> | string
    description?: StringNullableFilter<"provider_menu_items"> | string | null
    created_at?: DateTimeNullableFilter<"provider_menu_items"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"provider_menu_items"> | Date | string | null
    category_id?: BigIntFilter<"provider_menu_items"> | bigint | number
    price?: DecimalFilter<"provider_menu_items"> | Decimal | DecimalJsLike | number | string
  }

  export type provider_menu_categoriesUpsertWithWhereUniqueWithoutProvider_menuInput = {
    where: provider_menu_categoriesWhereUniqueInput
    update: XOR<provider_menu_categoriesUpdateWithoutProvider_menuInput, provider_menu_categoriesUncheckedUpdateWithoutProvider_menuInput>
    create: XOR<provider_menu_categoriesCreateWithoutProvider_menuInput, provider_menu_categoriesUncheckedCreateWithoutProvider_menuInput>
  }

  export type provider_menu_categoriesUpdateWithWhereUniqueWithoutProvider_menuInput = {
    where: provider_menu_categoriesWhereUniqueInput
    data: XOR<provider_menu_categoriesUpdateWithoutProvider_menuInput, provider_menu_categoriesUncheckedUpdateWithoutProvider_menuInput>
  }

  export type provider_menu_categoriesUpdateManyWithWhereWithoutProvider_menuInput = {
    where: provider_menu_categoriesScalarWhereInput
    data: XOR<provider_menu_categoriesUpdateManyMutationInput, provider_menu_categoriesUncheckedUpdateManyWithoutProvider_menuInput>
  }

  export type provider_menu_categoriesScalarWhereInput = {
    AND?: provider_menu_categoriesScalarWhereInput | provider_menu_categoriesScalarWhereInput[]
    OR?: provider_menu_categoriesScalarWhereInput[]
    NOT?: provider_menu_categoriesScalarWhereInput | provider_menu_categoriesScalarWhereInput[]
    id?: BigIntFilter<"provider_menu_categories"> | bigint | number
    menu_id?: BigIntFilter<"provider_menu_categories"> | bigint | number
    title?: StringFilter<"provider_menu_categories"> | string
    created_at?: DateTimeNullableFilter<"provider_menu_categories"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"provider_menu_categories"> | Date | string | null
  }

  export type provider_menu_categoriesCreateWithoutProvider_menu_itemsInput = {
    id?: bigint | number
    title: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    provider_menu: provider_menuCreateNestedOneWithoutProvider_menu_categoriesInput
  }

  export type provider_menu_categoriesUncheckedCreateWithoutProvider_menu_itemsInput = {
    id?: bigint | number
    menu_id: bigint | number
    title: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type provider_menu_categoriesCreateOrConnectWithoutProvider_menu_itemsInput = {
    where: provider_menu_categoriesWhereUniqueInput
    create: XOR<provider_menu_categoriesCreateWithoutProvider_menu_itemsInput, provider_menu_categoriesUncheckedCreateWithoutProvider_menu_itemsInput>
  }

  export type provider_menuCreateWithoutProvider_menu_itemsInput = {
    id?: bigint | number
    title?: string | null
    description?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    providers: providersCreateNestedOneWithoutProvider_menuInput
    provider_menu_categories?: provider_menu_categoriesCreateNestedManyWithoutProvider_menuInput
  }

  export type provider_menuUncheckedCreateWithoutProvider_menu_itemsInput = {
    id?: bigint | number
    provider_id: bigint | number
    title?: string | null
    description?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    provider_menu_categories?: provider_menu_categoriesUncheckedCreateNestedManyWithoutProvider_menuInput
  }

  export type provider_menuCreateOrConnectWithoutProvider_menu_itemsInput = {
    where: provider_menuWhereUniqueInput
    create: XOR<provider_menuCreateWithoutProvider_menu_itemsInput, provider_menuUncheckedCreateWithoutProvider_menu_itemsInput>
  }

  export type provider_menu_categoriesUpsertWithoutProvider_menu_itemsInput = {
    update: XOR<provider_menu_categoriesUpdateWithoutProvider_menu_itemsInput, provider_menu_categoriesUncheckedUpdateWithoutProvider_menu_itemsInput>
    create: XOR<provider_menu_categoriesCreateWithoutProvider_menu_itemsInput, provider_menu_categoriesUncheckedCreateWithoutProvider_menu_itemsInput>
    where?: provider_menu_categoriesWhereInput
  }

  export type provider_menu_categoriesUpdateToOneWithWhereWithoutProvider_menu_itemsInput = {
    where?: provider_menu_categoriesWhereInput
    data: XOR<provider_menu_categoriesUpdateWithoutProvider_menu_itemsInput, provider_menu_categoriesUncheckedUpdateWithoutProvider_menu_itemsInput>
  }

  export type provider_menu_categoriesUpdateWithoutProvider_menu_itemsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    provider_menu?: provider_menuUpdateOneRequiredWithoutProvider_menu_categoriesNestedInput
  }

  export type provider_menu_categoriesUncheckedUpdateWithoutProvider_menu_itemsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    menu_id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type provider_menuUpsertWithoutProvider_menu_itemsInput = {
    update: XOR<provider_menuUpdateWithoutProvider_menu_itemsInput, provider_menuUncheckedUpdateWithoutProvider_menu_itemsInput>
    create: XOR<provider_menuCreateWithoutProvider_menu_itemsInput, provider_menuUncheckedCreateWithoutProvider_menu_itemsInput>
    where?: provider_menuWhereInput
  }

  export type provider_menuUpdateToOneWithWhereWithoutProvider_menu_itemsInput = {
    where?: provider_menuWhereInput
    data: XOR<provider_menuUpdateWithoutProvider_menu_itemsInput, provider_menuUncheckedUpdateWithoutProvider_menu_itemsInput>
  }

  export type provider_menuUpdateWithoutProvider_menu_itemsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    providers?: providersUpdateOneRequiredWithoutProvider_menuNestedInput
    provider_menu_categories?: provider_menu_categoriesUpdateManyWithoutProvider_menuNestedInput
  }

  export type provider_menuUncheckedUpdateWithoutProvider_menu_itemsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    provider_id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    provider_menu_categories?: provider_menu_categoriesUncheckedUpdateManyWithoutProvider_menuNestedInput
  }

  export type provider_menuCreateWithoutProvider_menu_categoriesInput = {
    id?: bigint | number
    title?: string | null
    description?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    providers: providersCreateNestedOneWithoutProvider_menuInput
    provider_menu_items?: provider_menu_itemsCreateNestedManyWithoutProvider_menuInput
  }

  export type provider_menuUncheckedCreateWithoutProvider_menu_categoriesInput = {
    id?: bigint | number
    provider_id: bigint | number
    title?: string | null
    description?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    provider_menu_items?: provider_menu_itemsUncheckedCreateNestedManyWithoutProvider_menuInput
  }

  export type provider_menuCreateOrConnectWithoutProvider_menu_categoriesInput = {
    where: provider_menuWhereUniqueInput
    create: XOR<provider_menuCreateWithoutProvider_menu_categoriesInput, provider_menuUncheckedCreateWithoutProvider_menu_categoriesInput>
  }

  export type provider_menu_itemsCreateWithoutProvider_menu_categoriesInput = {
    id?: bigint | number
    title: string
    description?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    price: Decimal | DecimalJsLike | number | string
    provider_menu: provider_menuCreateNestedOneWithoutProvider_menu_itemsInput
  }

  export type provider_menu_itemsUncheckedCreateWithoutProvider_menu_categoriesInput = {
    id?: bigint | number
    menu_id: bigint | number
    title: string
    description?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    price: Decimal | DecimalJsLike | number | string
  }

  export type provider_menu_itemsCreateOrConnectWithoutProvider_menu_categoriesInput = {
    where: provider_menu_itemsWhereUniqueInput
    create: XOR<provider_menu_itemsCreateWithoutProvider_menu_categoriesInput, provider_menu_itemsUncheckedCreateWithoutProvider_menu_categoriesInput>
  }

  export type provider_menu_itemsCreateManyProvider_menu_categoriesInputEnvelope = {
    data: provider_menu_itemsCreateManyProvider_menu_categoriesInput | provider_menu_itemsCreateManyProvider_menu_categoriesInput[]
    skipDuplicates?: boolean
  }

  export type provider_menuUpsertWithoutProvider_menu_categoriesInput = {
    update: XOR<provider_menuUpdateWithoutProvider_menu_categoriesInput, provider_menuUncheckedUpdateWithoutProvider_menu_categoriesInput>
    create: XOR<provider_menuCreateWithoutProvider_menu_categoriesInput, provider_menuUncheckedCreateWithoutProvider_menu_categoriesInput>
    where?: provider_menuWhereInput
  }

  export type provider_menuUpdateToOneWithWhereWithoutProvider_menu_categoriesInput = {
    where?: provider_menuWhereInput
    data: XOR<provider_menuUpdateWithoutProvider_menu_categoriesInput, provider_menuUncheckedUpdateWithoutProvider_menu_categoriesInput>
  }

  export type provider_menuUpdateWithoutProvider_menu_categoriesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    providers?: providersUpdateOneRequiredWithoutProvider_menuNestedInput
    provider_menu_items?: provider_menu_itemsUpdateManyWithoutProvider_menuNestedInput
  }

  export type provider_menuUncheckedUpdateWithoutProvider_menu_categoriesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    provider_id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    provider_menu_items?: provider_menu_itemsUncheckedUpdateManyWithoutProvider_menuNestedInput
  }

  export type provider_menu_itemsUpsertWithWhereUniqueWithoutProvider_menu_categoriesInput = {
    where: provider_menu_itemsWhereUniqueInput
    update: XOR<provider_menu_itemsUpdateWithoutProvider_menu_categoriesInput, provider_menu_itemsUncheckedUpdateWithoutProvider_menu_categoriesInput>
    create: XOR<provider_menu_itemsCreateWithoutProvider_menu_categoriesInput, provider_menu_itemsUncheckedCreateWithoutProvider_menu_categoriesInput>
  }

  export type provider_menu_itemsUpdateWithWhereUniqueWithoutProvider_menu_categoriesInput = {
    where: provider_menu_itemsWhereUniqueInput
    data: XOR<provider_menu_itemsUpdateWithoutProvider_menu_categoriesInput, provider_menu_itemsUncheckedUpdateWithoutProvider_menu_categoriesInput>
  }

  export type provider_menu_itemsUpdateManyWithWhereWithoutProvider_menu_categoriesInput = {
    where: provider_menu_itemsScalarWhereInput
    data: XOR<provider_menu_itemsUpdateManyMutationInput, provider_menu_itemsUncheckedUpdateManyWithoutProvider_menu_categoriesInput>
  }

  export type permissionsCreateWithoutRole_has_permissionsInput = {
    id?: bigint | number
    name: string
    guard_name: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    model_has_permissions?: model_has_permissionsCreateNestedManyWithoutPermissionsInput
  }

  export type permissionsUncheckedCreateWithoutRole_has_permissionsInput = {
    id?: bigint | number
    name: string
    guard_name: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    model_has_permissions?: model_has_permissionsUncheckedCreateNestedManyWithoutPermissionsInput
  }

  export type permissionsCreateOrConnectWithoutRole_has_permissionsInput = {
    where: permissionsWhereUniqueInput
    create: XOR<permissionsCreateWithoutRole_has_permissionsInput, permissionsUncheckedCreateWithoutRole_has_permissionsInput>
  }

  export type rolesCreateWithoutRole_has_permissionsInput = {
    id?: bigint | number
    name: string
    guard_name: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    model_has_roles?: model_has_rolesCreateNestedManyWithoutRolesInput
  }

  export type rolesUncheckedCreateWithoutRole_has_permissionsInput = {
    id?: bigint | number
    name: string
    guard_name: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    model_has_roles?: model_has_rolesUncheckedCreateNestedManyWithoutRolesInput
  }

  export type rolesCreateOrConnectWithoutRole_has_permissionsInput = {
    where: rolesWhereUniqueInput
    create: XOR<rolesCreateWithoutRole_has_permissionsInput, rolesUncheckedCreateWithoutRole_has_permissionsInput>
  }

  export type permissionsUpsertWithoutRole_has_permissionsInput = {
    update: XOR<permissionsUpdateWithoutRole_has_permissionsInput, permissionsUncheckedUpdateWithoutRole_has_permissionsInput>
    create: XOR<permissionsCreateWithoutRole_has_permissionsInput, permissionsUncheckedCreateWithoutRole_has_permissionsInput>
    where?: permissionsWhereInput
  }

  export type permissionsUpdateToOneWithWhereWithoutRole_has_permissionsInput = {
    where?: permissionsWhereInput
    data: XOR<permissionsUpdateWithoutRole_has_permissionsInput, permissionsUncheckedUpdateWithoutRole_has_permissionsInput>
  }

  export type permissionsUpdateWithoutRole_has_permissionsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    guard_name?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    model_has_permissions?: model_has_permissionsUpdateManyWithoutPermissionsNestedInput
  }

  export type permissionsUncheckedUpdateWithoutRole_has_permissionsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    guard_name?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    model_has_permissions?: model_has_permissionsUncheckedUpdateManyWithoutPermissionsNestedInput
  }

  export type rolesUpsertWithoutRole_has_permissionsInput = {
    update: XOR<rolesUpdateWithoutRole_has_permissionsInput, rolesUncheckedUpdateWithoutRole_has_permissionsInput>
    create: XOR<rolesCreateWithoutRole_has_permissionsInput, rolesUncheckedCreateWithoutRole_has_permissionsInput>
    where?: rolesWhereInput
  }

  export type rolesUpdateToOneWithWhereWithoutRole_has_permissionsInput = {
    where?: rolesWhereInput
    data: XOR<rolesUpdateWithoutRole_has_permissionsInput, rolesUncheckedUpdateWithoutRole_has_permissionsInput>
  }

  export type rolesUpdateWithoutRole_has_permissionsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    guard_name?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    model_has_roles?: model_has_rolesUpdateManyWithoutRolesNestedInput
  }

  export type rolesUncheckedUpdateWithoutRole_has_permissionsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    guard_name?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    model_has_roles?: model_has_rolesUncheckedUpdateManyWithoutRolesNestedInput
  }

  export type model_has_rolesCreateWithoutRolesInput = {
    model_type: string
    model_id: bigint | number
  }

  export type model_has_rolesUncheckedCreateWithoutRolesInput = {
    model_type: string
    model_id: bigint | number
  }

  export type model_has_rolesCreateOrConnectWithoutRolesInput = {
    where: model_has_rolesWhereUniqueInput
    create: XOR<model_has_rolesCreateWithoutRolesInput, model_has_rolesUncheckedCreateWithoutRolesInput>
  }

  export type model_has_rolesCreateManyRolesInputEnvelope = {
    data: model_has_rolesCreateManyRolesInput | model_has_rolesCreateManyRolesInput[]
    skipDuplicates?: boolean
  }

  export type role_has_permissionsCreateWithoutRolesInput = {
    permissions: permissionsCreateNestedOneWithoutRole_has_permissionsInput
  }

  export type role_has_permissionsUncheckedCreateWithoutRolesInput = {
    permission_id: bigint | number
  }

  export type role_has_permissionsCreateOrConnectWithoutRolesInput = {
    where: role_has_permissionsWhereUniqueInput
    create: XOR<role_has_permissionsCreateWithoutRolesInput, role_has_permissionsUncheckedCreateWithoutRolesInput>
  }

  export type role_has_permissionsCreateManyRolesInputEnvelope = {
    data: role_has_permissionsCreateManyRolesInput | role_has_permissionsCreateManyRolesInput[]
    skipDuplicates?: boolean
  }

  export type model_has_rolesUpsertWithWhereUniqueWithoutRolesInput = {
    where: model_has_rolesWhereUniqueInput
    update: XOR<model_has_rolesUpdateWithoutRolesInput, model_has_rolesUncheckedUpdateWithoutRolesInput>
    create: XOR<model_has_rolesCreateWithoutRolesInput, model_has_rolesUncheckedCreateWithoutRolesInput>
  }

  export type model_has_rolesUpdateWithWhereUniqueWithoutRolesInput = {
    where: model_has_rolesWhereUniqueInput
    data: XOR<model_has_rolesUpdateWithoutRolesInput, model_has_rolesUncheckedUpdateWithoutRolesInput>
  }

  export type model_has_rolesUpdateManyWithWhereWithoutRolesInput = {
    where: model_has_rolesScalarWhereInput
    data: XOR<model_has_rolesUpdateManyMutationInput, model_has_rolesUncheckedUpdateManyWithoutRolesInput>
  }

  export type model_has_rolesScalarWhereInput = {
    AND?: model_has_rolesScalarWhereInput | model_has_rolesScalarWhereInput[]
    OR?: model_has_rolesScalarWhereInput[]
    NOT?: model_has_rolesScalarWhereInput | model_has_rolesScalarWhereInput[]
    role_id?: BigIntFilter<"model_has_roles"> | bigint | number
    model_type?: StringFilter<"model_has_roles"> | string
    model_id?: BigIntFilter<"model_has_roles"> | bigint | number
  }

  export type role_has_permissionsUpsertWithWhereUniqueWithoutRolesInput = {
    where: role_has_permissionsWhereUniqueInput
    update: XOR<role_has_permissionsUpdateWithoutRolesInput, role_has_permissionsUncheckedUpdateWithoutRolesInput>
    create: XOR<role_has_permissionsCreateWithoutRolesInput, role_has_permissionsUncheckedCreateWithoutRolesInput>
  }

  export type role_has_permissionsUpdateWithWhereUniqueWithoutRolesInput = {
    where: role_has_permissionsWhereUniqueInput
    data: XOR<role_has_permissionsUpdateWithoutRolesInput, role_has_permissionsUncheckedUpdateWithoutRolesInput>
  }

  export type role_has_permissionsUpdateManyWithWhereWithoutRolesInput = {
    where: role_has_permissionsScalarWhereInput
    data: XOR<role_has_permissionsUpdateManyMutationInput, role_has_permissionsUncheckedUpdateManyWithoutRolesInput>
  }

  export type offersCreateWithoutSubscription_plan_offersInput = {
    id?: bigint | number
    title: string
    icon?: string | null
    description?: string | null
    price?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    offer_categories: offer_categoriesCreateNestedOneWithoutOffersInput
    provider_offers?: provider_offersCreateNestedManyWithoutOffersInput
    subscription_usages?: subscription_usagesCreateNestedManyWithoutOffersInput
  }

  export type offersUncheckedCreateWithoutSubscription_plan_offersInput = {
    id?: bigint | number
    category_id: bigint | number
    title: string
    icon?: string | null
    description?: string | null
    price?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    provider_offers?: provider_offersUncheckedCreateNestedManyWithoutOffersInput
    subscription_usages?: subscription_usagesUncheckedCreateNestedManyWithoutOffersInput
  }

  export type offersCreateOrConnectWithoutSubscription_plan_offersInput = {
    where: offersWhereUniqueInput
    create: XOR<offersCreateWithoutSubscription_plan_offersInput, offersUncheckedCreateWithoutSubscription_plan_offersInput>
  }

  export type subscription_plansCreateWithoutSubscription_plan_offersInput = {
    id?: bigint | number
    title: string
    duration: number
    price: Decimal | DecimalJsLike | number | string
    status?: number
    description?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    customer_subscriptions?: customer_subscriptionsCreateNestedManyWithoutSubscription_plansInput
  }

  export type subscription_plansUncheckedCreateWithoutSubscription_plan_offersInput = {
    id?: bigint | number
    title: string
    duration: number
    price: Decimal | DecimalJsLike | number | string
    status?: number
    description?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    customer_subscriptions?: customer_subscriptionsUncheckedCreateNestedManyWithoutSubscription_plansInput
  }

  export type subscription_plansCreateOrConnectWithoutSubscription_plan_offersInput = {
    where: subscription_plansWhereUniqueInput
    create: XOR<subscription_plansCreateWithoutSubscription_plan_offersInput, subscription_plansUncheckedCreateWithoutSubscription_plan_offersInput>
  }

  export type offersUpsertWithoutSubscription_plan_offersInput = {
    update: XOR<offersUpdateWithoutSubscription_plan_offersInput, offersUncheckedUpdateWithoutSubscription_plan_offersInput>
    create: XOR<offersCreateWithoutSubscription_plan_offersInput, offersUncheckedCreateWithoutSubscription_plan_offersInput>
    where?: offersWhereInput
  }

  export type offersUpdateToOneWithWhereWithoutSubscription_plan_offersInput = {
    where?: offersWhereInput
    data: XOR<offersUpdateWithoutSubscription_plan_offersInput, offersUncheckedUpdateWithoutSubscription_plan_offersInput>
  }

  export type offersUpdateWithoutSubscription_plan_offersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    offer_categories?: offer_categoriesUpdateOneRequiredWithoutOffersNestedInput
    provider_offers?: provider_offersUpdateManyWithoutOffersNestedInput
    subscription_usages?: subscription_usagesUpdateManyWithoutOffersNestedInput
  }

  export type offersUncheckedUpdateWithoutSubscription_plan_offersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    category_id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    provider_offers?: provider_offersUncheckedUpdateManyWithoutOffersNestedInput
    subscription_usages?: subscription_usagesUncheckedUpdateManyWithoutOffersNestedInput
  }

  export type subscription_plansUpsertWithoutSubscription_plan_offersInput = {
    update: XOR<subscription_plansUpdateWithoutSubscription_plan_offersInput, subscription_plansUncheckedUpdateWithoutSubscription_plan_offersInput>
    create: XOR<subscription_plansCreateWithoutSubscription_plan_offersInput, subscription_plansUncheckedCreateWithoutSubscription_plan_offersInput>
    where?: subscription_plansWhereInput
  }

  export type subscription_plansUpdateToOneWithWhereWithoutSubscription_plan_offersInput = {
    where?: subscription_plansWhereInput
    data: XOR<subscription_plansUpdateWithoutSubscription_plan_offersInput, subscription_plansUncheckedUpdateWithoutSubscription_plan_offersInput>
  }

  export type subscription_plansUpdateWithoutSubscription_plan_offersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    duration?: IntFieldUpdateOperationsInput | number
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: IntFieldUpdateOperationsInput | number
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    customer_subscriptions?: customer_subscriptionsUpdateManyWithoutSubscription_plansNestedInput
  }

  export type subscription_plansUncheckedUpdateWithoutSubscription_plan_offersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    duration?: IntFieldUpdateOperationsInput | number
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: IntFieldUpdateOperationsInput | number
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    customer_subscriptions?: customer_subscriptionsUncheckedUpdateManyWithoutSubscription_plansNestedInput
  }

  export type customer_subscriptionsCreateWithoutSubscription_plansInput = {
    id?: bigint | number
    start_date: Date | string
    end_date: Date | string
    status?: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
    customers: customersCreateNestedOneWithoutCustomer_subscriptionsInput
    orders: ordersCreateNestedOneWithoutCustomer_subscriptionsInput
    subscription_usages?: subscription_usagesCreateNestedManyWithoutCustomer_subscriptionsInput
  }

  export type customer_subscriptionsUncheckedCreateWithoutSubscription_plansInput = {
    id?: bigint | number
    customer_id: bigint | number
    order_id: bigint | number
    start_date: Date | string
    end_date: Date | string
    status?: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
    subscription_usages?: subscription_usagesUncheckedCreateNestedManyWithoutCustomer_subscriptionsInput
  }

  export type customer_subscriptionsCreateOrConnectWithoutSubscription_plansInput = {
    where: customer_subscriptionsWhereUniqueInput
    create: XOR<customer_subscriptionsCreateWithoutSubscription_plansInput, customer_subscriptionsUncheckedCreateWithoutSubscription_plansInput>
  }

  export type customer_subscriptionsCreateManySubscription_plansInputEnvelope = {
    data: customer_subscriptionsCreateManySubscription_plansInput | customer_subscriptionsCreateManySubscription_plansInput[]
    skipDuplicates?: boolean
  }

  export type subscription_plan_offersCreateWithoutSubscription_plansInput = {
    id?: bigint | number
    discount_percentage: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
    offers: offersCreateNestedOneWithoutSubscription_plan_offersInput
  }

  export type subscription_plan_offersUncheckedCreateWithoutSubscription_plansInput = {
    id?: bigint | number
    offer_id: bigint | number
    discount_percentage: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type subscription_plan_offersCreateOrConnectWithoutSubscription_plansInput = {
    where: subscription_plan_offersWhereUniqueInput
    create: XOR<subscription_plan_offersCreateWithoutSubscription_plansInput, subscription_plan_offersUncheckedCreateWithoutSubscription_plansInput>
  }

  export type subscription_plan_offersCreateManySubscription_plansInputEnvelope = {
    data: subscription_plan_offersCreateManySubscription_plansInput | subscription_plan_offersCreateManySubscription_plansInput[]
    skipDuplicates?: boolean
  }

  export type customer_subscriptionsUpsertWithWhereUniqueWithoutSubscription_plansInput = {
    where: customer_subscriptionsWhereUniqueInput
    update: XOR<customer_subscriptionsUpdateWithoutSubscription_plansInput, customer_subscriptionsUncheckedUpdateWithoutSubscription_plansInput>
    create: XOR<customer_subscriptionsCreateWithoutSubscription_plansInput, customer_subscriptionsUncheckedCreateWithoutSubscription_plansInput>
  }

  export type customer_subscriptionsUpdateWithWhereUniqueWithoutSubscription_plansInput = {
    where: customer_subscriptionsWhereUniqueInput
    data: XOR<customer_subscriptionsUpdateWithoutSubscription_plansInput, customer_subscriptionsUncheckedUpdateWithoutSubscription_plansInput>
  }

  export type customer_subscriptionsUpdateManyWithWhereWithoutSubscription_plansInput = {
    where: customer_subscriptionsScalarWhereInput
    data: XOR<customer_subscriptionsUpdateManyMutationInput, customer_subscriptionsUncheckedUpdateManyWithoutSubscription_plansInput>
  }

  export type subscription_plan_offersUpsertWithWhereUniqueWithoutSubscription_plansInput = {
    where: subscription_plan_offersWhereUniqueInput
    update: XOR<subscription_plan_offersUpdateWithoutSubscription_plansInput, subscription_plan_offersUncheckedUpdateWithoutSubscription_plansInput>
    create: XOR<subscription_plan_offersCreateWithoutSubscription_plansInput, subscription_plan_offersUncheckedCreateWithoutSubscription_plansInput>
  }

  export type subscription_plan_offersUpdateWithWhereUniqueWithoutSubscription_plansInput = {
    where: subscription_plan_offersWhereUniqueInput
    data: XOR<subscription_plan_offersUpdateWithoutSubscription_plansInput, subscription_plan_offersUncheckedUpdateWithoutSubscription_plansInput>
  }

  export type subscription_plan_offersUpdateManyWithWhereWithoutSubscription_plansInput = {
    where: subscription_plan_offersScalarWhereInput
    data: XOR<subscription_plan_offersUpdateManyMutationInput, subscription_plan_offersUncheckedUpdateManyWithoutSubscription_plansInput>
  }

  export type customersCreateWithoutSubscription_usagesInput = {
    id?: bigint | number
    first_name?: string | null
    last_name?: string | null
    gender?: string | null
    email?: string | null
    mobile_number: string
    password?: string | null
    birthdate?: Date | string | null
    ssn?: string | null
    otp_secret?: string | null
    status?: number
    is_verified?: boolean
    deleted_at?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    customer_subscriptions?: customer_subscriptionsCreateNestedManyWithoutCustomersInput
  }

  export type customersUncheckedCreateWithoutSubscription_usagesInput = {
    id?: bigint | number
    first_name?: string | null
    last_name?: string | null
    gender?: string | null
    email?: string | null
    mobile_number: string
    password?: string | null
    birthdate?: Date | string | null
    ssn?: string | null
    otp_secret?: string | null
    status?: number
    is_verified?: boolean
    deleted_at?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    customer_subscriptions?: customer_subscriptionsUncheckedCreateNestedManyWithoutCustomersInput
  }

  export type customersCreateOrConnectWithoutSubscription_usagesInput = {
    where: customersWhereUniqueInput
    create: XOR<customersCreateWithoutSubscription_usagesInput, customersUncheckedCreateWithoutSubscription_usagesInput>
  }

  export type customer_subscriptionsCreateWithoutSubscription_usagesInput = {
    id?: bigint | number
    start_date: Date | string
    end_date: Date | string
    status?: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
    customers: customersCreateNestedOneWithoutCustomer_subscriptionsInput
    orders: ordersCreateNestedOneWithoutCustomer_subscriptionsInput
    subscription_plans: subscription_plansCreateNestedOneWithoutCustomer_subscriptionsInput
  }

  export type customer_subscriptionsUncheckedCreateWithoutSubscription_usagesInput = {
    id?: bigint | number
    customer_id: bigint | number
    subscription_plan_id: bigint | number
    order_id: bigint | number
    start_date: Date | string
    end_date: Date | string
    status?: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type customer_subscriptionsCreateOrConnectWithoutSubscription_usagesInput = {
    where: customer_subscriptionsWhereUniqueInput
    create: XOR<customer_subscriptionsCreateWithoutSubscription_usagesInput, customer_subscriptionsUncheckedCreateWithoutSubscription_usagesInput>
  }

  export type offersCreateWithoutSubscription_usagesInput = {
    id?: bigint | number
    title: string
    icon?: string | null
    description?: string | null
    price?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    offer_categories: offer_categoriesCreateNestedOneWithoutOffersInput
    provider_offers?: provider_offersCreateNestedManyWithoutOffersInput
    subscription_plan_offers?: subscription_plan_offersCreateNestedManyWithoutOffersInput
  }

  export type offersUncheckedCreateWithoutSubscription_usagesInput = {
    id?: bigint | number
    category_id: bigint | number
    title: string
    icon?: string | null
    description?: string | null
    price?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    provider_offers?: provider_offersUncheckedCreateNestedManyWithoutOffersInput
    subscription_plan_offers?: subscription_plan_offersUncheckedCreateNestedManyWithoutOffersInput
  }

  export type offersCreateOrConnectWithoutSubscription_usagesInput = {
    where: offersWhereUniqueInput
    create: XOR<offersCreateWithoutSubscription_usagesInput, offersUncheckedCreateWithoutSubscription_usagesInput>
  }

  export type provider_agentsCreateWithoutSubscription_usagesInput = {
    id?: bigint | number
    role?: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
    providers: providersCreateNestedOneWithoutProvider_agentsInput
    admins: adminsCreateNestedOneWithoutProvider_agentsInput
  }

  export type provider_agentsUncheckedCreateWithoutSubscription_usagesInput = {
    id?: bigint | number
    provider_id: bigint | number
    user_id: bigint | number
    role?: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type provider_agentsCreateOrConnectWithoutSubscription_usagesInput = {
    where: provider_agentsWhereUniqueInput
    create: XOR<provider_agentsCreateWithoutSubscription_usagesInput, provider_agentsUncheckedCreateWithoutSubscription_usagesInput>
  }

  export type providersCreateWithoutSubscription_usagesInput = {
    id?: bigint | number
    name: string
    description?: string | null
    address: string
    phone_number: JsonNullValueInput | InputJsonValue
    main_image: string
    slider_images: JsonNullValueInput | InputJsonValue
    latitude: Decimal | DecimalJsLike | number | string
    longitude: Decimal | DecimalJsLike | number | string
    is_verified?: boolean
    status?: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
    provider_agents?: provider_agentsCreateNestedManyWithoutProvidersInput
    provider_menu?: provider_menuCreateNestedOneWithoutProvidersInput
    provider_offers?: provider_offersCreateNestedManyWithoutProvidersInput
    offer_categories: offer_categoriesCreateNestedOneWithoutProvidersInput
  }

  export type providersUncheckedCreateWithoutSubscription_usagesInput = {
    id?: bigint | number
    name: string
    description?: string | null
    category_id: bigint | number
    address: string
    phone_number: JsonNullValueInput | InputJsonValue
    main_image: string
    slider_images: JsonNullValueInput | InputJsonValue
    latitude: Decimal | DecimalJsLike | number | string
    longitude: Decimal | DecimalJsLike | number | string
    is_verified?: boolean
    status?: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
    provider_agents?: provider_agentsUncheckedCreateNestedManyWithoutProvidersInput
    provider_menu?: provider_menuUncheckedCreateNestedOneWithoutProvidersInput
    provider_offers?: provider_offersUncheckedCreateNestedManyWithoutProvidersInput
  }

  export type providersCreateOrConnectWithoutSubscription_usagesInput = {
    where: providersWhereUniqueInput
    create: XOR<providersCreateWithoutSubscription_usagesInput, providersUncheckedCreateWithoutSubscription_usagesInput>
  }

  export type customersUpsertWithoutSubscription_usagesInput = {
    update: XOR<customersUpdateWithoutSubscription_usagesInput, customersUncheckedUpdateWithoutSubscription_usagesInput>
    create: XOR<customersCreateWithoutSubscription_usagesInput, customersUncheckedCreateWithoutSubscription_usagesInput>
    where?: customersWhereInput
  }

  export type customersUpdateToOneWithWhereWithoutSubscription_usagesInput = {
    where?: customersWhereInput
    data: XOR<customersUpdateWithoutSubscription_usagesInput, customersUncheckedUpdateWithoutSubscription_usagesInput>
  }

  export type customersUpdateWithoutSubscription_usagesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    mobile_number?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ssn?: NullableStringFieldUpdateOperationsInput | string | null
    otp_secret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: IntFieldUpdateOperationsInput | number
    is_verified?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    customer_subscriptions?: customer_subscriptionsUpdateManyWithoutCustomersNestedInput
  }

  export type customersUncheckedUpdateWithoutSubscription_usagesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    mobile_number?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ssn?: NullableStringFieldUpdateOperationsInput | string | null
    otp_secret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: IntFieldUpdateOperationsInput | number
    is_verified?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    customer_subscriptions?: customer_subscriptionsUncheckedUpdateManyWithoutCustomersNestedInput
  }

  export type customer_subscriptionsUpsertWithoutSubscription_usagesInput = {
    update: XOR<customer_subscriptionsUpdateWithoutSubscription_usagesInput, customer_subscriptionsUncheckedUpdateWithoutSubscription_usagesInput>
    create: XOR<customer_subscriptionsCreateWithoutSubscription_usagesInput, customer_subscriptionsUncheckedCreateWithoutSubscription_usagesInput>
    where?: customer_subscriptionsWhereInput
  }

  export type customer_subscriptionsUpdateToOneWithWhereWithoutSubscription_usagesInput = {
    where?: customer_subscriptionsWhereInput
    data: XOR<customer_subscriptionsUpdateWithoutSubscription_usagesInput, customer_subscriptionsUncheckedUpdateWithoutSubscription_usagesInput>
  }

  export type customer_subscriptionsUpdateWithoutSubscription_usagesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    customers?: customersUpdateOneRequiredWithoutCustomer_subscriptionsNestedInput
    orders?: ordersUpdateOneRequiredWithoutCustomer_subscriptionsNestedInput
    subscription_plans?: subscription_plansUpdateOneRequiredWithoutCustomer_subscriptionsNestedInput
  }

  export type customer_subscriptionsUncheckedUpdateWithoutSubscription_usagesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    customer_id?: BigIntFieldUpdateOperationsInput | bigint | number
    subscription_plan_id?: BigIntFieldUpdateOperationsInput | bigint | number
    order_id?: BigIntFieldUpdateOperationsInput | bigint | number
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type offersUpsertWithoutSubscription_usagesInput = {
    update: XOR<offersUpdateWithoutSubscription_usagesInput, offersUncheckedUpdateWithoutSubscription_usagesInput>
    create: XOR<offersCreateWithoutSubscription_usagesInput, offersUncheckedCreateWithoutSubscription_usagesInput>
    where?: offersWhereInput
  }

  export type offersUpdateToOneWithWhereWithoutSubscription_usagesInput = {
    where?: offersWhereInput
    data: XOR<offersUpdateWithoutSubscription_usagesInput, offersUncheckedUpdateWithoutSubscription_usagesInput>
  }

  export type offersUpdateWithoutSubscription_usagesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    offer_categories?: offer_categoriesUpdateOneRequiredWithoutOffersNestedInput
    provider_offers?: provider_offersUpdateManyWithoutOffersNestedInput
    subscription_plan_offers?: subscription_plan_offersUpdateManyWithoutOffersNestedInput
  }

  export type offersUncheckedUpdateWithoutSubscription_usagesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    category_id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    provider_offers?: provider_offersUncheckedUpdateManyWithoutOffersNestedInput
    subscription_plan_offers?: subscription_plan_offersUncheckedUpdateManyWithoutOffersNestedInput
  }

  export type provider_agentsUpsertWithoutSubscription_usagesInput = {
    update: XOR<provider_agentsUpdateWithoutSubscription_usagesInput, provider_agentsUncheckedUpdateWithoutSubscription_usagesInput>
    create: XOR<provider_agentsCreateWithoutSubscription_usagesInput, provider_agentsUncheckedCreateWithoutSubscription_usagesInput>
    where?: provider_agentsWhereInput
  }

  export type provider_agentsUpdateToOneWithWhereWithoutSubscription_usagesInput = {
    where?: provider_agentsWhereInput
    data: XOR<provider_agentsUpdateWithoutSubscription_usagesInput, provider_agentsUncheckedUpdateWithoutSubscription_usagesInput>
  }

  export type provider_agentsUpdateWithoutSubscription_usagesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    role?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    providers?: providersUpdateOneRequiredWithoutProvider_agentsNestedInput
    admins?: adminsUpdateOneRequiredWithoutProvider_agentsNestedInput
  }

  export type provider_agentsUncheckedUpdateWithoutSubscription_usagesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    provider_id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    role?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type providersUpsertWithoutSubscription_usagesInput = {
    update: XOR<providersUpdateWithoutSubscription_usagesInput, providersUncheckedUpdateWithoutSubscription_usagesInput>
    create: XOR<providersCreateWithoutSubscription_usagesInput, providersUncheckedCreateWithoutSubscription_usagesInput>
    where?: providersWhereInput
  }

  export type providersUpdateToOneWithWhereWithoutSubscription_usagesInput = {
    where?: providersWhereInput
    data: XOR<providersUpdateWithoutSubscription_usagesInput, providersUncheckedUpdateWithoutSubscription_usagesInput>
  }

  export type providersUpdateWithoutSubscription_usagesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    phone_number?: JsonNullValueInput | InputJsonValue
    main_image?: StringFieldUpdateOperationsInput | string
    slider_images?: JsonNullValueInput | InputJsonValue
    latitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    longitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    is_verified?: BoolFieldUpdateOperationsInput | boolean
    status?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    provider_agents?: provider_agentsUpdateManyWithoutProvidersNestedInput
    provider_menu?: provider_menuUpdateOneWithoutProvidersNestedInput
    provider_offers?: provider_offersUpdateManyWithoutProvidersNestedInput
    offer_categories?: offer_categoriesUpdateOneRequiredWithoutProvidersNestedInput
  }

  export type providersUncheckedUpdateWithoutSubscription_usagesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category_id?: BigIntFieldUpdateOperationsInput | bigint | number
    address?: StringFieldUpdateOperationsInput | string
    phone_number?: JsonNullValueInput | InputJsonValue
    main_image?: StringFieldUpdateOperationsInput | string
    slider_images?: JsonNullValueInput | InputJsonValue
    latitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    longitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    is_verified?: BoolFieldUpdateOperationsInput | boolean
    status?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    provider_agents?: provider_agentsUncheckedUpdateManyWithoutProvidersNestedInput
    provider_menu?: provider_menuUncheckedUpdateOneWithoutProvidersNestedInput
    provider_offers?: provider_offersUncheckedUpdateManyWithoutProvidersNestedInput
  }

  export type provider_agentsCreateManyAdminsInput = {
    id?: bigint | number
    provider_id: bigint | number
    role?: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type provider_agentsUpdateWithoutAdminsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    role?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    providers?: providersUpdateOneRequiredWithoutProvider_agentsNestedInput
    subscription_usages?: subscription_usagesUpdateManyWithoutProvider_agentsNestedInput
  }

  export type provider_agentsUncheckedUpdateWithoutAdminsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    provider_id?: BigIntFieldUpdateOperationsInput | bigint | number
    role?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    subscription_usages?: subscription_usagesUncheckedUpdateManyWithoutProvider_agentsNestedInput
  }

  export type provider_agentsUncheckedUpdateManyWithoutAdminsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    provider_id?: BigIntFieldUpdateOperationsInput | bigint | number
    role?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type subscription_usagesCreateManyCustomer_subscriptionsInput = {
    id?: bigint | number
    provider_agent_id: bigint | number
    customer_id: bigint | number
    provider_id: bigint | number
    offer_id: bigint | number
    total_amount: string
    status?: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type subscription_usagesUpdateWithoutCustomer_subscriptionsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    total_amount?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    customers?: customersUpdateOneRequiredWithoutSubscription_usagesNestedInput
    offers?: offersUpdateOneRequiredWithoutSubscription_usagesNestedInput
    provider_agents?: provider_agentsUpdateOneRequiredWithoutSubscription_usagesNestedInput
    providers?: providersUpdateOneRequiredWithoutSubscription_usagesNestedInput
  }

  export type subscription_usagesUncheckedUpdateWithoutCustomer_subscriptionsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    provider_agent_id?: BigIntFieldUpdateOperationsInput | bigint | number
    customer_id?: BigIntFieldUpdateOperationsInput | bigint | number
    provider_id?: BigIntFieldUpdateOperationsInput | bigint | number
    offer_id?: BigIntFieldUpdateOperationsInput | bigint | number
    total_amount?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type subscription_usagesUncheckedUpdateManyWithoutCustomer_subscriptionsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    provider_agent_id?: BigIntFieldUpdateOperationsInput | bigint | number
    customer_id?: BigIntFieldUpdateOperationsInput | bigint | number
    provider_id?: BigIntFieldUpdateOperationsInput | bigint | number
    offer_id?: BigIntFieldUpdateOperationsInput | bigint | number
    total_amount?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type customer_subscriptionsCreateManyCustomersInput = {
    id?: bigint | number
    subscription_plan_id: bigint | number
    order_id: bigint | number
    start_date: Date | string
    end_date: Date | string
    status?: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type subscription_usagesCreateManyCustomersInput = {
    id?: bigint | number
    provider_agent_id: bigint | number
    customer_subscription_id: bigint | number
    provider_id: bigint | number
    offer_id: bigint | number
    total_amount: string
    status?: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type customer_subscriptionsUpdateWithoutCustomersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    orders?: ordersUpdateOneRequiredWithoutCustomer_subscriptionsNestedInput
    subscription_plans?: subscription_plansUpdateOneRequiredWithoutCustomer_subscriptionsNestedInput
    subscription_usages?: subscription_usagesUpdateManyWithoutCustomer_subscriptionsNestedInput
  }

  export type customer_subscriptionsUncheckedUpdateWithoutCustomersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    subscription_plan_id?: BigIntFieldUpdateOperationsInput | bigint | number
    order_id?: BigIntFieldUpdateOperationsInput | bigint | number
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    subscription_usages?: subscription_usagesUncheckedUpdateManyWithoutCustomer_subscriptionsNestedInput
  }

  export type customer_subscriptionsUncheckedUpdateManyWithoutCustomersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    subscription_plan_id?: BigIntFieldUpdateOperationsInput | bigint | number
    order_id?: BigIntFieldUpdateOperationsInput | bigint | number
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type subscription_usagesUpdateWithoutCustomersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    total_amount?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    customer_subscriptions?: customer_subscriptionsUpdateOneRequiredWithoutSubscription_usagesNestedInput
    offers?: offersUpdateOneRequiredWithoutSubscription_usagesNestedInput
    provider_agents?: provider_agentsUpdateOneRequiredWithoutSubscription_usagesNestedInput
    providers?: providersUpdateOneRequiredWithoutSubscription_usagesNestedInput
  }

  export type subscription_usagesUncheckedUpdateWithoutCustomersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    provider_agent_id?: BigIntFieldUpdateOperationsInput | bigint | number
    customer_subscription_id?: BigIntFieldUpdateOperationsInput | bigint | number
    provider_id?: BigIntFieldUpdateOperationsInput | bigint | number
    offer_id?: BigIntFieldUpdateOperationsInput | bigint | number
    total_amount?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type subscription_usagesUncheckedUpdateManyWithoutCustomersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    provider_agent_id?: BigIntFieldUpdateOperationsInput | bigint | number
    customer_subscription_id?: BigIntFieldUpdateOperationsInput | bigint | number
    provider_id?: BigIntFieldUpdateOperationsInput | bigint | number
    offer_id?: BigIntFieldUpdateOperationsInput | bigint | number
    total_amount?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type offersCreateManyOffer_categoriesInput = {
    id?: bigint | number
    title: string
    icon?: string | null
    description?: string | null
    price?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type providersCreateManyOffer_categoriesInput = {
    id?: bigint | number
    name: string
    description?: string | null
    address: string
    phone_number: JsonNullValueInput | InputJsonValue
    main_image: string
    slider_images: JsonNullValueInput | InputJsonValue
    latitude: Decimal | DecimalJsLike | number | string
    longitude: Decimal | DecimalJsLike | number | string
    is_verified?: boolean
    status?: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type offersUpdateWithoutOffer_categoriesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    provider_offers?: provider_offersUpdateManyWithoutOffersNestedInput
    subscription_plan_offers?: subscription_plan_offersUpdateManyWithoutOffersNestedInput
    subscription_usages?: subscription_usagesUpdateManyWithoutOffersNestedInput
  }

  export type offersUncheckedUpdateWithoutOffer_categoriesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    provider_offers?: provider_offersUncheckedUpdateManyWithoutOffersNestedInput
    subscription_plan_offers?: subscription_plan_offersUncheckedUpdateManyWithoutOffersNestedInput
    subscription_usages?: subscription_usagesUncheckedUpdateManyWithoutOffersNestedInput
  }

  export type offersUncheckedUpdateManyWithoutOffer_categoriesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type providersUpdateWithoutOffer_categoriesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    phone_number?: JsonNullValueInput | InputJsonValue
    main_image?: StringFieldUpdateOperationsInput | string
    slider_images?: JsonNullValueInput | InputJsonValue
    latitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    longitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    is_verified?: BoolFieldUpdateOperationsInput | boolean
    status?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    provider_agents?: provider_agentsUpdateManyWithoutProvidersNestedInput
    provider_menu?: provider_menuUpdateOneWithoutProvidersNestedInput
    provider_offers?: provider_offersUpdateManyWithoutProvidersNestedInput
    subscription_usages?: subscription_usagesUpdateManyWithoutProvidersNestedInput
  }

  export type providersUncheckedUpdateWithoutOffer_categoriesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    phone_number?: JsonNullValueInput | InputJsonValue
    main_image?: StringFieldUpdateOperationsInput | string
    slider_images?: JsonNullValueInput | InputJsonValue
    latitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    longitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    is_verified?: BoolFieldUpdateOperationsInput | boolean
    status?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    provider_agents?: provider_agentsUncheckedUpdateManyWithoutProvidersNestedInput
    provider_menu?: provider_menuUncheckedUpdateOneWithoutProvidersNestedInput
    provider_offers?: provider_offersUncheckedUpdateManyWithoutProvidersNestedInput
    subscription_usages?: subscription_usagesUncheckedUpdateManyWithoutProvidersNestedInput
  }

  export type providersUncheckedUpdateManyWithoutOffer_categoriesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    phone_number?: JsonNullValueInput | InputJsonValue
    main_image?: StringFieldUpdateOperationsInput | string
    slider_images?: JsonNullValueInput | InputJsonValue
    latitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    longitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    is_verified?: BoolFieldUpdateOperationsInput | boolean
    status?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type provider_offersCreateManyOffersInput = {
    id?: bigint | number
    provider_id: bigint | number
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type subscription_plan_offersCreateManyOffersInput = {
    id?: bigint | number
    subscription_plan_id: bigint | number
    discount_percentage: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type subscription_usagesCreateManyOffersInput = {
    id?: bigint | number
    provider_agent_id: bigint | number
    customer_id: bigint | number
    customer_subscription_id: bigint | number
    provider_id: bigint | number
    total_amount: string
    status?: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type provider_offersUpdateWithoutOffersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    providers?: providersUpdateOneRequiredWithoutProvider_offersNestedInput
  }

  export type provider_offersUncheckedUpdateWithoutOffersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    provider_id?: BigIntFieldUpdateOperationsInput | bigint | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type provider_offersUncheckedUpdateManyWithoutOffersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    provider_id?: BigIntFieldUpdateOperationsInput | bigint | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type subscription_plan_offersUpdateWithoutOffersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    discount_percentage?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    subscription_plans?: subscription_plansUpdateOneRequiredWithoutSubscription_plan_offersNestedInput
  }

  export type subscription_plan_offersUncheckedUpdateWithoutOffersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    subscription_plan_id?: BigIntFieldUpdateOperationsInput | bigint | number
    discount_percentage?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type subscription_plan_offersUncheckedUpdateManyWithoutOffersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    subscription_plan_id?: BigIntFieldUpdateOperationsInput | bigint | number
    discount_percentage?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type subscription_usagesUpdateWithoutOffersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    total_amount?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    customers?: customersUpdateOneRequiredWithoutSubscription_usagesNestedInput
    customer_subscriptions?: customer_subscriptionsUpdateOneRequiredWithoutSubscription_usagesNestedInput
    provider_agents?: provider_agentsUpdateOneRequiredWithoutSubscription_usagesNestedInput
    providers?: providersUpdateOneRequiredWithoutSubscription_usagesNestedInput
  }

  export type subscription_usagesUncheckedUpdateWithoutOffersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    provider_agent_id?: BigIntFieldUpdateOperationsInput | bigint | number
    customer_id?: BigIntFieldUpdateOperationsInput | bigint | number
    customer_subscription_id?: BigIntFieldUpdateOperationsInput | bigint | number
    provider_id?: BigIntFieldUpdateOperationsInput | bigint | number
    total_amount?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type subscription_usagesUncheckedUpdateManyWithoutOffersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    provider_agent_id?: BigIntFieldUpdateOperationsInput | bigint | number
    customer_id?: BigIntFieldUpdateOperationsInput | bigint | number
    customer_subscription_id?: BigIntFieldUpdateOperationsInput | bigint | number
    provider_id?: BigIntFieldUpdateOperationsInput | bigint | number
    total_amount?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type paymentsCreateManyOrdersInput = {
    id?: bigint | number
    transaction_id: string
    res_num: string
    status?: number
    amount: Decimal | DecimalJsLike | number | string
    payment_method?: string | null
    payment_gateway?: string | null
    paid_at?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    receipt_photo?: string | null
  }

  export type paymentsUpdateWithoutOrdersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    transaction_id?: StringFieldUpdateOperationsInput | string
    res_num?: StringFieldUpdateOperationsInput | string
    status?: IntFieldUpdateOperationsInput | number
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    payment_method?: NullableStringFieldUpdateOperationsInput | string | null
    payment_gateway?: NullableStringFieldUpdateOperationsInput | string | null
    paid_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    receipt_photo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type paymentsUncheckedUpdateWithoutOrdersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    transaction_id?: StringFieldUpdateOperationsInput | string
    res_num?: StringFieldUpdateOperationsInput | string
    status?: IntFieldUpdateOperationsInput | number
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    payment_method?: NullableStringFieldUpdateOperationsInput | string | null
    payment_gateway?: NullableStringFieldUpdateOperationsInput | string | null
    paid_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    receipt_photo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type paymentsUncheckedUpdateManyWithoutOrdersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    transaction_id?: StringFieldUpdateOperationsInput | string
    res_num?: StringFieldUpdateOperationsInput | string
    status?: IntFieldUpdateOperationsInput | number
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    payment_method?: NullableStringFieldUpdateOperationsInput | string | null
    payment_gateway?: NullableStringFieldUpdateOperationsInput | string | null
    paid_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    receipt_photo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type model_has_permissionsCreateManyPermissionsInput = {
    model_type: string
    model_id: bigint | number
  }

  export type role_has_permissionsCreateManyPermissionsInput = {
    role_id: bigint | number
  }

  export type model_has_permissionsUpdateWithoutPermissionsInput = {
    model_type?: StringFieldUpdateOperationsInput | string
    model_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type model_has_permissionsUncheckedUpdateWithoutPermissionsInput = {
    model_type?: StringFieldUpdateOperationsInput | string
    model_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type model_has_permissionsUncheckedUpdateManyWithoutPermissionsInput = {
    model_type?: StringFieldUpdateOperationsInput | string
    model_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type role_has_permissionsUpdateWithoutPermissionsInput = {
    roles?: rolesUpdateOneRequiredWithoutRole_has_permissionsNestedInput
  }

  export type role_has_permissionsUncheckedUpdateWithoutPermissionsInput = {
    role_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type role_has_permissionsUncheckedUpdateManyWithoutPermissionsInput = {
    role_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type subscription_usagesCreateManyProvider_agentsInput = {
    id?: bigint | number
    customer_id: bigint | number
    customer_subscription_id: bigint | number
    provider_id: bigint | number
    offer_id: bigint | number
    total_amount: string
    status?: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type subscription_usagesUpdateWithoutProvider_agentsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    total_amount?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    customers?: customersUpdateOneRequiredWithoutSubscription_usagesNestedInput
    customer_subscriptions?: customer_subscriptionsUpdateOneRequiredWithoutSubscription_usagesNestedInput
    offers?: offersUpdateOneRequiredWithoutSubscription_usagesNestedInput
    providers?: providersUpdateOneRequiredWithoutSubscription_usagesNestedInput
  }

  export type subscription_usagesUncheckedUpdateWithoutProvider_agentsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    customer_id?: BigIntFieldUpdateOperationsInput | bigint | number
    customer_subscription_id?: BigIntFieldUpdateOperationsInput | bigint | number
    provider_id?: BigIntFieldUpdateOperationsInput | bigint | number
    offer_id?: BigIntFieldUpdateOperationsInput | bigint | number
    total_amount?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type subscription_usagesUncheckedUpdateManyWithoutProvider_agentsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    customer_id?: BigIntFieldUpdateOperationsInput | bigint | number
    customer_subscription_id?: BigIntFieldUpdateOperationsInput | bigint | number
    provider_id?: BigIntFieldUpdateOperationsInput | bigint | number
    offer_id?: BigIntFieldUpdateOperationsInput | bigint | number
    total_amount?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type provider_agentsCreateManyProvidersInput = {
    id?: bigint | number
    user_id: bigint | number
    role?: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type provider_offersCreateManyProvidersInput = {
    id?: bigint | number
    offer_id: bigint | number
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type subscription_usagesCreateManyProvidersInput = {
    id?: bigint | number
    provider_agent_id: bigint | number
    customer_id: bigint | number
    customer_subscription_id: bigint | number
    offer_id: bigint | number
    total_amount: string
    status?: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type provider_agentsUpdateWithoutProvidersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    role?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    admins?: adminsUpdateOneRequiredWithoutProvider_agentsNestedInput
    subscription_usages?: subscription_usagesUpdateManyWithoutProvider_agentsNestedInput
  }

  export type provider_agentsUncheckedUpdateWithoutProvidersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    role?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    subscription_usages?: subscription_usagesUncheckedUpdateManyWithoutProvider_agentsNestedInput
  }

  export type provider_agentsUncheckedUpdateManyWithoutProvidersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    role?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type provider_offersUpdateWithoutProvidersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    offers?: offersUpdateOneRequiredWithoutProvider_offersNestedInput
  }

  export type provider_offersUncheckedUpdateWithoutProvidersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    offer_id?: BigIntFieldUpdateOperationsInput | bigint | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type provider_offersUncheckedUpdateManyWithoutProvidersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    offer_id?: BigIntFieldUpdateOperationsInput | bigint | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type subscription_usagesUpdateWithoutProvidersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    total_amount?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    customers?: customersUpdateOneRequiredWithoutSubscription_usagesNestedInput
    customer_subscriptions?: customer_subscriptionsUpdateOneRequiredWithoutSubscription_usagesNestedInput
    offers?: offersUpdateOneRequiredWithoutSubscription_usagesNestedInput
    provider_agents?: provider_agentsUpdateOneRequiredWithoutSubscription_usagesNestedInput
  }

  export type subscription_usagesUncheckedUpdateWithoutProvidersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    provider_agent_id?: BigIntFieldUpdateOperationsInput | bigint | number
    customer_id?: BigIntFieldUpdateOperationsInput | bigint | number
    customer_subscription_id?: BigIntFieldUpdateOperationsInput | bigint | number
    offer_id?: BigIntFieldUpdateOperationsInput | bigint | number
    total_amount?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type subscription_usagesUncheckedUpdateManyWithoutProvidersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    provider_agent_id?: BigIntFieldUpdateOperationsInput | bigint | number
    customer_id?: BigIntFieldUpdateOperationsInput | bigint | number
    customer_subscription_id?: BigIntFieldUpdateOperationsInput | bigint | number
    offer_id?: BigIntFieldUpdateOperationsInput | bigint | number
    total_amount?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type provider_menu_itemsCreateManyProvider_menuInput = {
    id?: bigint | number
    title: string
    description?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    category_id: bigint | number
    price: Decimal | DecimalJsLike | number | string
  }

  export type provider_menu_categoriesCreateManyProvider_menuInput = {
    id?: bigint | number
    title: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type provider_menu_itemsUpdateWithoutProvider_menuInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    provider_menu_categories?: provider_menu_categoriesUpdateOneRequiredWithoutProvider_menu_itemsNestedInput
  }

  export type provider_menu_itemsUncheckedUpdateWithoutProvider_menuInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    category_id?: BigIntFieldUpdateOperationsInput | bigint | number
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type provider_menu_itemsUncheckedUpdateManyWithoutProvider_menuInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    category_id?: BigIntFieldUpdateOperationsInput | bigint | number
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type provider_menu_categoriesUpdateWithoutProvider_menuInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    provider_menu_items?: provider_menu_itemsUpdateManyWithoutProvider_menu_categoriesNestedInput
  }

  export type provider_menu_categoriesUncheckedUpdateWithoutProvider_menuInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    provider_menu_items?: provider_menu_itemsUncheckedUpdateManyWithoutProvider_menu_categoriesNestedInput
  }

  export type provider_menu_categoriesUncheckedUpdateManyWithoutProvider_menuInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type provider_menu_itemsCreateManyProvider_menu_categoriesInput = {
    id?: bigint | number
    menu_id: bigint | number
    title: string
    description?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    price: Decimal | DecimalJsLike | number | string
  }

  export type provider_menu_itemsUpdateWithoutProvider_menu_categoriesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    provider_menu?: provider_menuUpdateOneRequiredWithoutProvider_menu_itemsNestedInput
  }

  export type provider_menu_itemsUncheckedUpdateWithoutProvider_menu_categoriesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    menu_id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type provider_menu_itemsUncheckedUpdateManyWithoutProvider_menu_categoriesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    menu_id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
  }

  export type model_has_rolesCreateManyRolesInput = {
    model_type: string
    model_id: bigint | number
  }

  export type role_has_permissionsCreateManyRolesInput = {
    permission_id: bigint | number
  }

  export type model_has_rolesUpdateWithoutRolesInput = {
    model_type?: StringFieldUpdateOperationsInput | string
    model_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type model_has_rolesUncheckedUpdateWithoutRolesInput = {
    model_type?: StringFieldUpdateOperationsInput | string
    model_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type model_has_rolesUncheckedUpdateManyWithoutRolesInput = {
    model_type?: StringFieldUpdateOperationsInput | string
    model_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type role_has_permissionsUpdateWithoutRolesInput = {
    permissions?: permissionsUpdateOneRequiredWithoutRole_has_permissionsNestedInput
  }

  export type role_has_permissionsUncheckedUpdateWithoutRolesInput = {
    permission_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type role_has_permissionsUncheckedUpdateManyWithoutRolesInput = {
    permission_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type customer_subscriptionsCreateManySubscription_plansInput = {
    id?: bigint | number
    customer_id: bigint | number
    order_id: bigint | number
    start_date: Date | string
    end_date: Date | string
    status?: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type subscription_plan_offersCreateManySubscription_plansInput = {
    id?: bigint | number
    offer_id: bigint | number
    discount_percentage: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type customer_subscriptionsUpdateWithoutSubscription_plansInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    customers?: customersUpdateOneRequiredWithoutCustomer_subscriptionsNestedInput
    orders?: ordersUpdateOneRequiredWithoutCustomer_subscriptionsNestedInput
    subscription_usages?: subscription_usagesUpdateManyWithoutCustomer_subscriptionsNestedInput
  }

  export type customer_subscriptionsUncheckedUpdateWithoutSubscription_plansInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    customer_id?: BigIntFieldUpdateOperationsInput | bigint | number
    order_id?: BigIntFieldUpdateOperationsInput | bigint | number
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    subscription_usages?: subscription_usagesUncheckedUpdateManyWithoutCustomer_subscriptionsNestedInput
  }

  export type customer_subscriptionsUncheckedUpdateManyWithoutSubscription_plansInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    customer_id?: BigIntFieldUpdateOperationsInput | bigint | number
    order_id?: BigIntFieldUpdateOperationsInput | bigint | number
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type subscription_plan_offersUpdateWithoutSubscription_plansInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    discount_percentage?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    offers?: offersUpdateOneRequiredWithoutSubscription_plan_offersNestedInput
  }

  export type subscription_plan_offersUncheckedUpdateWithoutSubscription_plansInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    offer_id?: BigIntFieldUpdateOperationsInput | bigint | number
    discount_percentage?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type subscription_plan_offersUncheckedUpdateManyWithoutSubscription_plansInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    offer_id?: BigIntFieldUpdateOperationsInput | bigint | number
    discount_percentage?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}